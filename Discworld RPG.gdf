Encoding=UTF-8
Version=3
* The version information above MUST be the first line of the data file
Program=4.0.408
Description=01/02/2017. This data file contains information taken from the GURPS Basic Set: Characters sourcebook. GURPS Basic Set: _
		Characters is Copyright © 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1996, 1998, 1999, 2002, 2004 by _
		Steve Jackson Games Incorporated. All rights reserved. _
Taboo="GURPS Basic Set 4th Ed.--Characters.gdf", "GURPS Lite 4th Ed.gdf", "GURPS Basic Set 3rd Ed. Revised.gdf"

[AUTHOR]
************************************************************************************************************************
*
* GURPS(R) Character Assistant
* Filename: Discworld RPG.gdf
* Created:  January 27, 2017
* Requires GCA v4 or later!
*
* This data file contains information taken from the GURPS Basic Set: Characters sourcebook and the Discworld RPG. GURPS 
* Basic Set: Characters is Copyright © 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1996, 1998, 1999, 2002, 2004 by
* Steve Jackson Games Incorporated. The Discworld RPG is Copyright © xxxxxxxx by xxxxxxxxxxxxx. All rights reserved.
*
* Information in this file includes:
*	Attributes
*	Advantages, Disadvantagess, Quirks, Including Bonuses and Penalties.
*	Skills, Including Bonuses, Classes, Needs and Prereqs.
*	Equipment
*	Templates
*
************************************************************************************************************************
*
* Based on the GURPS Basic Set GDF - creators:
* David L. Watkins - Major work
* Armin D. Sykes   - Changes, Updates, Packages/Templates
* Craig Roth	- Equipment
* Eric B. Smith	- GURPS Data File Coordinator, Equipment, Updates, Corrections, Skill Categories
*
* Discworld RPG Adaptation:
* Phil Masters - Major work
* Roger Bell_West - Project organisation
* xxxxxxxxxxx
*
* If you find any errors or omissions in this file please contact the Data File Coordinator at:
* ericbsmith42@gmail.com
*
* Or drop a message in the GCA4 forum at:
* http://forums.sjgames.com
*
************************************************************************************************************************
*
* GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
* Games. All rights reserved.
*
* The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
* copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
* rights reserved by Steve Jackson Games Incorporated.
*
************************************************************************************************************************

[Settings]
ModMaxNegPercentLimit = -80
NeedsDefaultSkillTag = baseapppoints
NeedsDefaultSkillValue = 1
NeedsDefaultSpellTag = baseapppoints
NeedsDefaultSpellValue = 1
RuleOf = 20

//NeedsDefaultSkillTag = points
//NeedsDefaultSkillValue = 1
//NeedsDefaultSpellTag = points
//NeedsDefaultSpellValue = 1

************************************************************************************************************************
[SKILLTYPES]
************************************************************************************************************************
N/A, cost(0/1), base(0), defaultstat(0), relname()
N|A, cost(0/1), base(0), defaultstat(%default), relname(def), subzero(yes)

DX/E, cost(1/2/4/8), base(-1), defaultstat(ST:DX), relname(DX)
DX/A, cost(1/2/4/8), base(-2), defaultstat(ST:DX), relname(DX)
DX/H, cost(1/2/4/8), base(-3), defaultstat(ST:DX), relname(DX)
DX/VH, cost(1/2/4/8), base(-4), defaultstat(ST:DX), relname(DX)
DX/WC, cost(3/6/12/24), base(-4), defaultstat(ST:DX), relname(DX)

IQ/E, cost(1/2/4/8), base(-1), defaultstat(ST:IQ), relname(IQ)
IQ/A, cost(1/2/4/8), base(-2), defaultstat(ST:IQ), relname(IQ)
IQ/H, cost(1/2/4/8), base(-3), defaultstat(ST:IQ), relname(IQ)
IQ/VH, cost(1/2/4/8), base(-4), defaultstat(ST:IQ), relname(IQ)
IQ/WC, cost(3/6/12/24), base(-4), defaultstat(ST:IQ), relname(IQ)

HT/E, cost(1/2/4/8), base(-1), defaultstat(ST:HT), relname(HT)
HT/A, cost(1/2/4/8), base(-2), defaultstat(ST:HT), relname(HT)
HT/H, cost(1/2/4/8), base(-3), defaultstat(ST:HT), relname(HT)
HT/VH, cost(1/2/4/8), base(-4), defaultstat(ST:HT), relname(HT)
HT/WC, cost(3/6/12/24), base(-4), defaultstat(ST:HT), relname(HT)

Will/E, cost(1/2/4/8), base(-1), defaultstat(ST:Will), relname(Will)
Will/A, cost(1/2/4/8), base(-2), defaultstat(ST:Will), relname(Will)
Will/H, cost(1/2/4/8), base(-3), defaultstat(ST:Will), relname(Will)
Will/VH, cost(1/2/4/8), base(-4), defaultstat(ST:Will), relname(Will)
Will/WC, cost(3/6/12/24), base(-4), defaultstat(ST:Will), relname(Will)

Per/E, cost(1/2/4/8), base(-1), defaultstat(ST:Perception), relname(Per)
Per/A, cost(1/2/4/8), base(-2), defaultstat(ST:Perception), relname(Per)
Per/H, cost(1/2/4/8), base(-3), defaultstat(ST:Perception), relname(Per)
Per/VH, cost(1/2/4/8), base(-4), defaultstat(ST:Perception), relname(Per)
Per/WC, cost(3/6/12/24), base(-4), defaultstat(ST:Perception), relname(Per)

Tech/A, cost(1/2/3), base(0), defaultstat(%default), relname(def), subzero(yes)
Tech/H, cost(2/3/4), base(0), defaultstat(%default), relname(def), subzero(yes)

Combo/2, cost(4/5), base(-6), defaultstat(%combo), relname(def), subzero(yes), zeropointsokay(yes)
Combo/3, cost(5/6), base(-12), defaultstat(%combo), relname(def), subzero(yes), zeropointsokay(yes)

************************************************************************************************************************
[BASICDAMAGE]
************************************************************************************************************************

* Starting this section will clear any existing 
* basic damage items.
*
* You must list the following items in order, because
* GCA will not sort them, but it does search through
* them in order.
*
* st() is the score that Damage Base must be <= 
* thr() is the basic thrust damage
* sw() is the basic swing damage

st(1), thr(1d-6), sw(1d-5)
st(2), thr(1d-6), sw(1d-5)
st(3), thr(1d-5), sw(1d-4)
st(4), thr(1d-5), sw(1d-4)
st(5), thr(1d-4), sw(1d-3)

st(6), thr(1d-4), sw(1d-3)
st(7), thr(1d-3), sw(1d-2)
st(8), thr(1d-3), sw(1d-2)
st(9), thr(1d-2), sw(1d-1)
st(10), thr(1d-2), sw(1d)

st(11), thr(1d-1), sw(1d+1)
st(12), thr(1d-1), sw(1d+2)
st(13), thr(1d), sw(2d-1)
st(14), thr(1d), sw(2d)
st(15), thr(1d+1), sw(2d+1)

st(16), thr(1d+1), sw(2d+2)
st(17), thr(1d+2), sw(3d-1)
st(18), thr(1d+2), sw(3d)
st(19), thr(2d-1), sw(3d+1)
st(20), thr(2d-1), sw(3d+2)

st(21), thr(2d), sw(4d-1)
st(22), thr(2d), sw(4d)
st(23), thr(2d+1), sw(4d+1)
st(24), thr(2d+1), sw(4d+2)
st(25), thr(2d+2), sw(5d-1)

st(26), thr(2d+2), sw(5d)
st(27), thr(3d-1), sw(5d+1)
st(28), thr(3d-1), sw(5d+2)
st(29), thr(3d), sw(6d-1)
st(30), thr(3d), sw(6d)

st(31), thr(3d+1), sw(6d+1)
st(32), thr(3d+1), sw(6d+2)
st(33), thr(3d+2), sw(7d-1)
st(34), thr(3d+2), sw(7d)
st(35), thr(4d-1), sw(7d+1)

st(36), thr(4d-1), sw(7d+2)
st(37), thr(4d), sw(8d-1)
st(38), thr(4d), sw(8d)
st(39), thr(4d+1), sw(8d+1)

st(40), thr(4d+1), sw(8d+2)
st(41), thr(4d+2), sw(9d-1)
st(42), thr(4d+2), sw(9d)
st(43), thr(5d-1), sw(9d+1)
st(44), thr(5d-1), sw(9d+2)
st(45), thr(5d), sw(10d-1)
st(46), thr(5d), sw(10d)
st(47), thr(5d+1), sw(10d+1)
st(48), thr(5d+1), sw(10d+2)
st(49), thr(5d+2), sw(11d-1)

st(50), thr(5d+2), sw(11d)
st(51), thr(6d-1), sw(11d+1)
st(52), thr(6d-1), sw(11d+2)
st(53), thr(6d), sw(12d-1)
st(54), thr(6d), sw(12d)
st(55), thr(6d+1), sw(12d+1)
st(60), thr(7d-1), sw(13d+2)
st(65), thr(7d+2), sw(15d-1)
st(70), thr(8d), sw(16d)
st(75), thr(9d-1), sw(17d+1)

st(80), thr(9d+1), sw(18d+2)
st(85), thr(10d), sw(20d-1)
st(90), thr(10d+2), sw(21d)
st(95), thr(11d+1), sw(22d+1)
st(100), thr(12d-1), sw(23d+2)
st(108), thr(13d-1), sw(25d+2)
st(116), thr(14d-1), sw(26d+2)

* The LAST item in the list is always the item that is to be used
* for anything that didn't fall under the preceding items.

st(0), thr((@int(ST:ST/10)+1)d), sw((@int(ST:ST/10)+3)d)

* you must use the extra set of parens to separate the math part
* from the 'd' for the dice.

************************************************************************************************************************
[CONVERTDICE]
************************************************************************************************************************

* Convert damage bonus into extra dice, as per the Optional Rule: Modifying Dice + Adds on p. B269.
*
* Starting this section will clear any existing
* convert dice items
*
* break()'if the bonus is this Value or more ...
* adddice()   '... add this Value to the damage dice ...
* subtract()  '... then subtract this amount from the bonus
*
* you need to start with the biggest break you want to deal with,
* and work down to the smallest, because GCA doesn't sort these either
* 

break(7), adddice(2), subtract(7)
break(4), adddice(1), subtract(4)

************************************************************************************************************************
[BODY]
************************************************************************************************************************
//All entries within a group() tag are in descending order. That is, the most all encompassing group comes first in the list, followed
//by the next most encompassing, down to the least encompassing group. This means that if there's a question as to which
//DR value should be used you can start with the rightmost group and work your way left, the first with a unique DR value
//is the one that takes precedence.
//  e.g. armour that has DR 30 on the Front Chest, DR 20 on the rest of the Torso, and DR 12 from the neck down
//		location(Full Suit, Torso, Front Chest),
//		basedr(12, 20, 30)
//
// We can further expand this; lets say the same armour provides a uniform DR 3 against Burning attacks and half DR against crushing:
//		location(Full Suit, Torso, Front Chest),
//		basedr(12, 20, 30), burningdr(3), crushingdr(6, 10, 15)
//
//	useful tags here include:
//		basedr(), cuttingdr(), crushingdr(), impalingdr(), piercingdr(), burningdr()
//	other's to condier, but which may not be necessary are:
//		corrosiondr(), fatiguedr(), toxicdr(), otherdr()
//		with otherdr() being a catch-all for other types of DR that may not fit into the regular categories.

<Humanoid>
name(Head), group(Head, All)
name(Eyes), group(Head, Eyes, All), display(-1), expanded(-1), posx(6), posy(0)
name(LeftEye), group(Head, LeftEye, Eyes, All)
name(RightEye), group(Head, RightEye, Eyes, All)
name(Neck), group(Neck, Body, Full Suit, All), display(-1), expanded(-1), posx(6), posy(50)
name(Skull), group(Head, Skull, All), basedr(2), dr(2), display(-1), expanded(-1), posx(155), posy(0)
name(Face), group(Head, Face, All), display(-1), expanded(-1), posx(155), posy(50)
name(Torso), group(Torso, Body, Full Suit, All), display(-1), expanded(-1), posx(4), posy(110)
name(Groin), group(Groin, Body, Full Suit, All), display(-1), expanded(-1), posx(195), posy(275)
name(Arms), group(Arms, Limbs, Full Suit, All), display(-1), expanded(-1), posx(200), posy(130)
name(LeftArm), group(LeftArm, Arms, Limbs, Full Suit, All)
name(RightArm), group(RightArm, Arms, Limbs, Full Suit, All)
name(Hands), group(Hands, Full Suit, All), display(-1), expanded(-1), posx(210), posy(180)
name(LeftHand), group(LeftHand, Hands, Full Suit, All)
name(RightHand), group(RightHand, Hands, Full Suit, All)
name(Legs), group(Legs, Limbs, Full Suit, All), display(-1), expanded(-1), posx(168), posy(340)
name(LeftLeg), group(LeftLeg, Legs, Limbs, Full Suit, All)
name(RightLeg), group(RightLeg, Legs, Limbs, Full Suit, All)
name(Feet), group(Feet, Full Suit, All), display(-1), expanded(-1), posx(168), posy(392)
name(LeftFoot), group(LeftFoot, Feet, Full Suit, All)
name(RightFoot), group(RightFoot, Feet, Full Suit, All)
name(Body), group(Body, Full Suit, All)
name(Full Suit), group(Full Suit, All)
name(All), group(All)

************************************************************************************************************************
[ATTRIBUTES]
************************************************************************************************************************
* mainwin() positions:
*  1 ST
*  2 DX
*  3 IQ
*  4 HT
*  5 Hit Points
*  6 Will
*  7 Perception
*  8 Fatigue Points
*  9 Basic Speed
* 10 Basic Move
* 11 Reserved for movement attributes activated by taking advantages or disadvantages
*	(e.g. Flight)
* 12 Size Modifier
* 13 --------------------
* 14 Tech Level
* 15 Money
* 16 Status
* 17 Monthly Pay
* 18 Cost of Living

* Basic Attributes
************************************************************************************************************************
ST, symbol(ST), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), 
	up(10), down(-10), mainwin(1), mods(Quadruped, Size), 
	disadat(-1), display(no),
	initmods( Size, -10%, group(Size ST), 
			formula(-@if(ST:Size Modifier > 0 & owner::level > 0 THEN ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		| Quadruped, -40%, group(Quadruped Stat),
			formula(-@if(ST:Quadruped > 0 & owner::level > 0 then 40 else 0)), 
			forceformula(yes) _
		)

DX, symbol(DX), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), 
	up(20), down(-20), mainwin(2), mods(Quadruped Stat), 
	disadat(-1), display(no),
	parryat(@int(me::score/2)+3), blockat(@int(me::score/2)+1),
	initmods(Quadruped, -0%, formula(-@if(ST:Quadruped > 0 & owner::level > 0 then 40 else 0)),
	forceformula(yes), group(Quadruped Stat), page(96))

IQ, symbol(IQ), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(20), down(-20), mainwin(3), disadat(-1), display(no)
HT, symbol(HT), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(10), down(-10), mainwin(4), disadat(-1), display(no)

* Secondary Characteristics
************************************************************************************************************************
Basic Lift, basevalue(@int(100 * ST:Lifting ST * ST:Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))/100), maxscore(1000000), minscore(0), symbol(BL), round(@if(ST:Lifting ST::score <= 7 then 0 else 1))

Hit Points, basevalue(ST:ST), step(1), maxscore(1000000), minscore(0 - me::syslevels), 
	up(2), down(-2), symbol(HP), mods(Size HP), mainwin(5),
	display(no), disadat(-1),
	initmods( Size, -10%, group(Size HP), 
			formula(-@if(ST:Size Modifier > 0 & ST:Hit Points::level > 0 then ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		)

Will, basevalue(ST:IQ), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), mainwin(6), disadat(-1)
Perception, basevalue(ST:IQ), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), symbol(Per), mainwin(7), disadat(-1)
Fatigue Points, basevalue(ST:HT), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(3), down(-3), symbol(FP), display(No), mainwin(8), disadat(-1)
Basic Speed, basevalue((ST:HT + ST:DX) / 4), step(0.25), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), display(No), mainwin(9), disadat(-1)
Basic Move, basevalue(ST:Basic Speed), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), round(-1), display(No), mainwin(10), disadat(-1)

Lifting ST, basevalue(ST:ST), step(1), maxscore(1000000), minscore(ST:ST), up(3), down(0), round(-1), display(No),
	initmods( Size, -10%, group(Size), 
			formula(-@if(ST:Size Modifier > 0 & ST:Lifting ST::level > 0 then ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		)

Size Modifier, symbol(SM), basevalue(0), maxscore(1000000), minscore(-100), round(-1), up(0), down(0), step(1), mainwin(12)

Vision, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Hearing, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Taste/Smell, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Touch, basevalue(ST:Perception), maxscore(1000000), minscore(0)

Dodge, basevalue(ST:Basic Speed + 3), maxscore(1000000), minscore(0), round(-1), display(No)
Parry, basevalue(0), maxscore(1000000), minscore(0), display(No)
Block, basevalue(0), maxscore(1000000), minscore(0), display(No)
DB, basevalue(0), maxscore(1000000), minscore(0), display(No)

Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Arm Reach)

Leg SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Leg Reach)

Neck SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Neck Reach)

Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Leg Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Neck Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)

Fright Check, basevalue(ST:Will)
Consciousness Check, basevalue(ST:HT::score), maxscore(1000000), minscore(0), display(yes)
Death Check, basevalue(ST:HT::score), maxscore(1000000), minscore(0), display(yes)
DR, symbol(DR), round(-1), display(no)
Damage Base, symbol(DamageBase), basevalue(ST:ST), display(no)

* Encumbrance
************************************************************************************************************************
No Encumbrance, basevalue(ST:Basic Lift), maxscore(10000000), minscore(0), symbol(NEnc), round(0), display(No)
Light Encumbrance, basevalue(2 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(LEnc), round(0), display(No)
Medium Encumbrance, basevalue(3 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(MEnc), round(0), display(No)
Heavy Encumbrance, basevalue(6 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(HEnc), round(0), display(No)
X-Heavy Encumbrance, basevalue(10 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(XEnc), round(0), display(No)

No Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), ST:Ground Move)), maxscore(10000000), minscore(0), symbol(NEncMove), round(-1), display(No)
Light Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.8 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(LEncMove), round(-1), display(No)
Medium Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.6 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(MEncMove), round(-1), display(No)
Heavy Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.4 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(HEncMove), round(-1), display(No)
X-Heavy Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.2 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(XEncMove), round(-1), display(No)

* Arm ST/Physical Feats
************************************************************************************************************************
One Arm Lifting ST, basevalue(ST:Lifting ST), maxscore(1000000), minscore(0), round(-1)
One Arm Striking ST, basevalue(ST:ST), maxscore(1000000), minscore(0), round(-1)
Two Arm Lifting ST, basevalue(ST:Lifting ST), maxscore(1000000), minscore(0), round(-1)
Two Arm Striking ST, basevalue(ST:ST), maxscore(1000000), minscore(0), round(-1)

One-Handed Lift, basevalue(2 * @if(ST:One Arm Lifting ST::score <= 7 then ST:One Arm Lifting ST * ST:One Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5) else @int((ST:One Arm Lifting ST * ST:One Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))+0.5))), maxscore(1000000), minscore(0), round(1), page(168), units(lb|kg)
Two-Handed Lift, basevalue(8 * @if(ST:Two Arm Lifting ST::score <= 7 then ST:Two Arm Lifting ST * ST:Two Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5) else @int((ST:Two Arm Lifting ST * ST:Two Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))+0.5))), maxscore(1000000), minscore(0), round(1), page(168), units(lb|kg)

High Jump, basevalue((((6 * @max(ST:Basic Ground Move, SK:Jumping::level / 2)) - 10) * @if(ST:Metric = 1 THEN 2.5 ELSE 1))), maxscore(1000000), minscore(0), page(168), units(in|cm)
Broad Jump, basevalue((((2 * @max(ST:Basic Ground Move, SK:Jumping::level / 2)) - 3) / @if(ST:Metric = 1 THEN 3 ELSE 1))), maxscore(1000000), minscore(0), page(168), units(ft|m)

Shove/Knock Over, basevalue(12 * ST:Basic Lift), maxscore(1000000), minscore(0), page(168), units(lb|kg)
Carry on Back, basevalue(15 * ST:Basic Lift), maxscore(1000000), minscore(0), page(168), units(lb|kg)
Shift Slightly, basevalue(50 * ST:Basic Lift), maxscore(1000000), minscore(0), page(168), units(lb|kg)

* Movement
************************************************************************************************************************
Ground Move, basevalue(ST:Basic Ground Move), maxscore(1000000), minscore(0), round(-1)
Water Move, basevalue(ST:Basic Water Move), step(1), maxscore(1000000), minscore(0), hide(yes), display(no), round(-1)
Air Move, basevalue(ST:Basic Air Move), maxscore(1000000), minscore(0), hide(yes), display(no), up(2), down(-2), step(1), round(-1)
Brachiation Move, basevalue(ST:Basic Brachiation Move), maxscore(1000000), minscore(0), hide(yes), display(no), round(-1)
Jump Move, basevalue(@max(ST:Ground Move, @round((ST:Broad Jump/15)+0.49999, 0))), maxscore(1000000), minscore(0), hide(yes), display(no)

* Social Background
************************************************************************************************************************
--------------------, basevalue(0), mainwin(13), display(no)
Tech Level, basevalue(0), step(1), maxscore(12), minscore(0), up(5), down(-5), symbol(TL), round(1), mainwin(14), mods(Tech Level)
Money, basevalue((ST:Starting Wealth * @max(_
								@if(@hasmod(5% of Starting Wealth) THEN 0.05),
								@if(@hasmod(10% of Starting Wealth) THEN 0.1),
								@if(@hasmod(15% of Starting Wealth) THEN 0.15),
								@if(@hasmod(20% of Starting Wealth) THEN 0.2),
								@if(@hasmod(30% of Starting Wealth) THEN 0.3),
								@if(@hasmod(40% of Starting Wealth) THEN 0.4),
								@if(@hasmod(50% of Starting Wealth) THEN 0.5),
								@if(@hasmod(60% of Starting Wealth) THEN 0.6),
								@if(@hasmod(70% of Starting Wealth) THEN 0.7),
								@if(@hasmod(80% of Starting Wealth) THEN 0.8),
								@if(@hasmod(90% of Starting Wealth) THEN 0.9),
								@if(@hasmod(100% of Starting Wealth) THEN 1) _
								) _
				) - char::equipmentcost),
	step(0), minscore(0), display(No), round(1), mainwin(15), initmods(20% of Starting Wealth, +0), mods(Money)

//^^^^ Revisit p. 517
Monthly Pay, basevalue(_
					@indexedvalue(3 + AD:Wealth::level - DI:Wealth::level, 0.2, 0.5, 1, 2, 5, 20, 100, 1000, 10000, 100000, 1000000) * _
					@indexedvalue(1 + ST:Tech Level::basevalue, 625, 650, 675, 700, 800, 1100, 1600, 2100, 2600, 3600, 5600, 8100, 10600) _
					),
	step(0), minscore(0), display(No), round(1), mainwin(17),
	description(The /typical/ Monthly Pay for a job of the character's selected Wealth Level and the campaign's set Tech Level, as calculated based on the tables on p. B516-517)


Cost of Living, basevalue(_
							@indexedvalue(ST:Status::score + 3, 5, 15, 30, 60, 150, 600, 3000, 30000, 300000, 3000000, 30000000)_
							),
	step(0), minscore(0), display(No), round(1), mainwin(18),
	description(The /typical/ Cost of Living for the character's selected Status Level, as calculated from the 'Cost of Living' table on p. B265, converted to Ankh-Morpork dollars)

Starting Wealth, basevalue(ST:Wealth Modifier * @indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000)), step(1), minscore(0), display(No), round(1)
Remaining Funds, basevalue(ST:Starting Wealth - char::equipmentcost), step(0), minscore(0), display(No), round(1)
Wealth Modifier, basevalue(10), step(1), minscore(0), display(No), round(-1)

* Melee Weapon Table listings
************************************************************************************************************************
Punch, display(no), mode(Punch), mods(Combat Table, Punch/Kick), damage(_
		thr-1 + _
			@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else @if("PE:Striking Surface::level" = 1 then 1 else 0))) + _
			@max(_
				@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
				@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
				@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
			) _
		), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate),
	damagebasedon(ST:Punch), reachbasedon(ST:Arm Reach), basevalue(ST:One Arm Striking ST)

Kick, display(no), mode(Kick), mods(Combat Table, Punch/Kick),
	damage(_
		thr+ _
		@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else @if("PE:Striking Surface::level" = 1 then 1 else 0)))) + _
		@if(ST:Quadruped > 0 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Kick) else 0),
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Kick) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Kick) else 0)) _
			) _
			), damtype(_
				$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(ST:DX-2, SK:Brawling-2, SK:Karate-2, SK:Kicking (Karate), SK:Kicking (Brawling)),
	damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach), basevalue(ST:ST)

Bite, display(no), mode(Bite), mods(Combat Table),
	damage(_
		thr-1 + _
		@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Bite) else 0) + _
		-@if("DI:Weak Bite::level" = 1 then 2 * @basethdice(ST:Bite) else 0)_
		),
	damtype($if("AD:Teeth (Sharp Teeth)::level" = 1 THEN "cut" ELSE $if("AD:Teeth (Sharp Beak)::level" = 1 THEN "pi+" ELSE $if("AD:Teeth (Fangs)::level" = 1 THEN "imp" ELSE "cr")))), reach(C), parry(No), skillused(ST:DX, SK:Brawling),
	damagebasedon(ST:Bite), reachbasedon(ST:Neck Reach), basevalue(ST:ST)

* Helper stats
************************************************************************************************************************
Metric, basevalue(0), up(0), down(0), step(1), maxscore(1), minscore(0), display(no), hide(yes)
Enhanced Ground Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Ground Move::basescore - ST:Ground Move::basescore _
		to ST:Ground Move _
		)
Enhanced Air Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Air Move::basescore - ST:Air Move::basescore _
		to ST:Air Move _
		)
Enhanced Water Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Water Move::basescore - ST:Water Move::basescore _
		to ST:Water Move _
		)

Basic Ground Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(@if("DI:No Legs (Aerial)" THEN 0 ELSE @if("AD:Swarm Body" THEN 0 ELSE ST:Basic Move)))
Basic Water Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(ST:Basic Move / 5)
Basic Air Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(_
				@if(AD:Flight THEN 2 * ST:Basic Speed ELSE @if("AD:Swarm Body" THEN 2 * ST:Basic Speed ELSE 0))
				)
Basic Brachiation Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(_
				@if(AD:Brachiator THEN ST:Basic Move / 2 ELSE 0)_
				)

Native Languages, basevalue(0), display(no), hide(yes)
Native Cultural Familiarities, basevalue(0), display(no), hide(yes)
Quadruped, basevalue(0), display(no), hide(yes)
MagicSkill, basevalue(0), display(no), hide(yes)
MagicDefaultBase, basevalue(0), display(no), hide(yes)
VoCBonus, basevalue(ST:IQ), display(no), hide(yes)

* Magery Prerequisite Work-around Stats
************************************************************************************************************************
Magery, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes)

* Reaction
************************************************************************************************************************
Appealing, basevalue(0), display(no)
Unappealing, basevalue(0), display(no)
Reaction, basevalue(0), display(no)
Status, basevalue(0), minscore(-2), maxscore(8 limitingtotal), up(5), down(-5), step(1), display(no), round(-1), mainwin(16)

************************************************************************************************************************
[ADVANTAGES]
************************************************************************************************************************
<Attributes>
Extra ST, 10/20, page(26), mods(Extra ST, Size, Quadruped), cat(Racial),
	initmods(Affects displayed ST score, +0%, shortname(Affects ST), gives(+Owner::Level to ST:ST), group(Extra ST),
	description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra ST advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra DX, 20/40, page(26), mods(Extra DX, Quadruped), initmods(Affects displayed DX score, +0%, shortname(Affects DX), gives(+Owner::Level to ST:DX), group(Extra DX), description(This modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra DX advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra IQ, 20/40, page(27), mods(Extra IQ), cat(Racial),
	initmods(Affects displayed IQ score, +0%, shortname(Affects IQ), gives(+Owner::Level to ST:IQ), group(Extra IQ),
	description(This modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra IQ advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra HT, 10/20, page(27), mods(Extra HT), cat(Racial),
	initmods(Affects displayed HT score, +0%, shortname(Affects HT),
	gives(+Owner::Level to ST:HT), group(Extra HT),
	description(This modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra HT advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Will, 5/10, page(27), mods(Extra Will), cat(Racial),
	initmods(Affects displayed Will score, +0%, shortname(Affects Will),
	gives(+Owner::Level to ST:Will), group(Extra Will), description(This modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Will advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Perception, 5/10, page(27), mods(Extra Perception), cat(Racial),
	initmods(Affects displayed Per score, +0%, shortname(Affects Per), gives(+Owner::Level to ST:Perception),
	group(Extra Perception), description(This modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Perception advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Hit Points, 2/4, page(27), mods(Extra Hit Points, Size), cat(Racial),
	initmods(Affects displayed HP score, +0%, shortname(Affects HP),
	gives(+Owner::Level to ST:Hit Points), group(Extra Hit Points),
	description(This modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Hit Points advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Fatigue Points, 3/6, page(27), mods(Extra Fatigue Points), cat(Racial),
	initmods(Affects displayed FP score, +0%, shortname(Affects FP),
	gives(+Owner::Level to ST:Fatigue Points), group(Extra Fatigue Points),
	description(This modifier causes the Extra Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Fatigue advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Fatigue advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Basic Move, 5/10, page(28), mods(Extra Basic Move), cat(Racial),
	initmods(Affects displayed Basic Move score, +0%, shortname(Affects Move),
	gives(+Owner::Level to ST:Basic Move), group(Extra Basic Move),
	description(This modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Basic Move advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Basic Speed, 5/10, page(28), mods(Extra Basic Speed), upto(80), cat(Racial),
	initmods(Affects displayed Basic Speed score, +0%, shortname(Affects Speed),
	gives(+(Owner::Level/4) to ST:Basic Speed), group(Extra Basic Speed),
	description(This modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Basic Speed advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.),
	levelnames(_
			+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10,
			+10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 _
			)
Extra Air Move, 2/4, page(89), mods(Extra Air Move), cat(Racial),
	initmods(Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(+Owner::Level to ST:Basic Air Move),
	group(Extra Air Move), description(This modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Air Move advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

High TL, 5/10, page(31), gives(+1 to ST:Tech Level), cat(Mundane, Social, Mundane Social),
	upto(5 - ST:Tech Level::basevalue)
Increased SM, 0/0, gives(+1 to ST:Size Modifier), cat(Racial), page(27)				

<General>
_New Advantage, [cost], displaycost(varies), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Advantage:" , name, ,"New Advantage"),
	#InputReplace("Please enter the Cost of this advantage:", "[cost]", , "New Advantage"),
	#edit_
		)
_New Leveled Advantage, %Costaliaslist%, displaycost(varies), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Advantage:" , name, ,"New Advantage"),
	#ChoiceList(_
			name(Cost),
			title(New Leveled Advantage: Cost),
			text(Choose the point cost for this advantage),
			picksallowed(1),
			method(bynumber),
			list(_
				"  0/level",
				"  1/level",
				"  2/level",
				"  3/level",
				"  4/level",
				"  5/level",
				" 10/level",
				" 15/level",
				" 20/level",
				" 25/level",
				" 30/level",
				" 35/level",

				" 40/level",
				" 45/level",
				" 50/level",
				" 75/level",
				"100/level"_
				), 
			aliaslist(_
					0/0,
					1/2,
					2/4,
					3/6,
					4/8,
					5/10,
					10/20,
					15/30,
					20/40,
					25/50,
					30/60,
					35/70,
					40/80,
					45/90,
					50/100,
					75/150,
					100/200_
				)_
			)_
	#edit_
		)

_New Parent Item, 0, isparent(yes),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, ,"New Parent Item"))

<Exotic Physical>
Racial Skill Point Bonus ([skill]), 1/2, page(99),
	cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial),
	gives(+1pts to SK:[skill]), noresync(yes),
	x(#InputReplace("Please enter the name of the skill:", "[skill]", , "Racial Skill Point Bonus"))
					
Racial Skill Point Bonus (%skillslist%), 1/2, page(99),
	cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial),
	gives(+1pts to SK:%skillslist%), noresync(yes),
	x(#ChoiceList(_
			name(skills),
			title(Racial Skill Bonus: Choose a Skill),
			text(Choose which skill the Racial Skill Bonus is for:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				)_
			)_
		)
					
Brachiator, 5, gives(+2 To SK:Climbing), page(87), cat(Exotic, Physical, Racial),
	replacetags(in "ST:Brachiation Move" with "hide(), display(yes), mainwin(11), noresync(yes)")
Cast-Iron Stomach, 3, page(87), cat(Exotic, Physical, Racial),
	taboo(AD:Doesn't Eat or Drink)
Catfall, 10, page(87), cat(Exotic, Physical, Racial),
	skillused(ST:DX), mode(halve damage from a fall)
Claws (Blunt Claws), 3, page(88), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Claws (Hooves)", "AD:Claws(Sharp Claws)", "AD:Claws (Talons)", "AD:Claws (Long Talons)")
Claws (Hooves), 3, page(88), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Claws (Blunt Claws)", "AD:Claws(Sharp Claws)", "AD:Claws (Talons)", "AD:Claws (Long Talons)")
Claws (Sharp Claws), 5, page(88), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Claws (Blunt Claws)", "AD:Claws (Hooves)", "AD:Claws (Talons)", "AD:Claws (Long Talons)")
Claws (Talons), 8, page(88), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Claws (Blunt Claws)", "AD:Claws (Hooves)", "AD:Claws(Sharp Claws)", "AD:Claws (Long Talons)")
Claws (Long Talons), 11, page(88), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Claws (Blunt Claws)", "AD:Claws (Hooves)", "AD:Claws(Sharp Claws)", "AD:Claws (Talons)")
Damage Resistance, 5/10, gives(+1 To ST:DR), mods(Damage Resistance),
	page(88), cat(Exotic, Physical, Racial)
Dimension Shift, 80, page(88), cat(Exotic, Physical, Racial),
	x(#InputToTagReplace("Specify the dimension to which you shift:", nameext, , "Dimension Shift")),
	skillused(ST:IQ), mode(shift dimensions)
Discriminatory Smell, 15, conditional(+4 to SK:Tracking when "scent is a factor", +4 to ST:Taste/Smell when "it involves Smell"),
	mods(Discriminatory Smell), page(88), cat(Exotic, Lycanthropic, Physical, Racial, Vampire), taboo("DI:No Sense of Smell/Taste"),
	skillused(ST:IQ|ST:Taste/Smell+4), mode(memorize a scent|Smell)
Doesn't Breathe, 20, mods(Doesn't Breathe), page(88), cat(Exotic, Physical, Racial)
Doesn't Eat or Drink, 10, page(88), cat(Exotic, Physical, Racial),
	taboo(AD:Cast-Iron Stomach, DI:Gluttony)
Doesn't Sleep, 20, page(88), cat(Exotic, Physical, Racial), taboo(AD:Deep Sleeper, DI:Less Sleep)

Enhanced Move (Ground), 10/20, gives(+0.5 To ST:Enhanced Ground Move),
	mods(Enhanced Move), page(89), cat(Exotic, Physical, Racial),
	replacetags(in ST:Ground Move with "mainwin(11), noresync(yes)"),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)

Enhanced Move (Air), 10/20, gives(+0.5 To ST:Enhanced Air Move),
	mods(Enhanced Move), page(89), cat(Exotic, Physical, Racial),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)

Enhanced Move (Water), 10/20, gives(+0.5 To ST:Enhanced Water Move),
	mods(Enhanced Move), page(89), cat(Exotic, Physical, Racial),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)

Flight (Levitation), 40, page(89), cat(Exotic, Physical, Racial, Vampire),
	replacetags(in "ST:Air Move" with "hide(), display(yes), mainwin(11), noresync(yes)")
Flight (Winged, Can Hover), 30, page(89), cat(Exotic, Physical, Racial, Vampire),
	replacetags(in "ST:Air Move" with "hide(), display(yes), mainwin(11), noresync(yes)")
Flight (Winged, Cannot Hover), 24, page(89), cat(Exotic, Physical, Racial),
	replacetags(in "ST:Air Move" with "hide(), display(yes), mainwin(11), noresync(yes)")

Foot Manipulators, 4, page(89), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:No Legs)
Injury Tolerance, 0, displaycost(variable), mods(Injury Tolerance), page(89), cat(Exotic, Physical), x(#buildit)
Swarm Body, 135, page(91), cat(Exotic, Physical, Racial, Vampire),
	taboo(AD:Flight, AD:Foot Manipulators, AD:High Manual Dexterity, DI:Aerial,
		"DI:Ham-Fisted", DI:Lame, DI:No Legs, DI:One Arm, DI:One Eye, "DI:Semi-Upright"),
	replacetags(in "ST:Air Move" with "hide(), display(yes), mainwin(11), noresync(yes)"),
	replacetags(in "ST:Ground Move" with "mainwin(11), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)

************************************************************************************************************************
* INNATE ATTACKS
************************************************************************************************************************
*respond 1 for Based On gives _None of these
*respond 2 for Based On gives Will
*respond 3 for Based On gives DX, Brawling
*respond 4 for Based On gives Innate Attack (Beam)
*respond 5 for Based On gives Innate Attack (Breath)
*respond 6 for Based On gives Innate Attack (Gaze)
*respond 7 for Based On gives Innate Attack (Projectile)
					

Burning Attack (Short-Range Flame), 4/8, page(87), cat(Exotic, Physical, Innate Attack, Natural Attacks, Racial),
	damage((%level)d), damtype(bu), acc(), rangehalfdam(), rangemax(), rof(), shots(), rcl(), reach(C,1), parry(),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Burning Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"SK:Innate Attack (Beam), ST:DX-4", 
				"SK:Innate Attack (Breath), ST:DX-4", 
				"SK:Innate Attack (Gaze), ST:DX-4", 
				"SK:Innate Attack (Projectile), ST:DX-4" _
				)_
			)_
	), noresync(yes)					

Burning Attack (Flame Jet), 5/10, page(87), cat(Exotic, Physical, Innate Attack, Natural Attacks, Racial),
	damage((%level)d), damtype(bu), acc(), rangehalfdam(5), rangemax(10), rof(), shots(), rcl(), reach(), parry(),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Burning Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"SK:Innate Attack (Beam), ST:DX-4", 
				"SK:Innate Attack (Breath), ST:DX-4", 
				"SK:Innate Attack (Gaze), ST:DX-4", 
				"SK:Innate Attack (Projectile), ST:DX-4" _
				)_
			)_
	), noresync(yes)					

Burning Attack (Lightning Bolt), 10/20, page(87), cat(Exotic, Physical, Innate Attack, Natural Attacks, Racial),
	damage((%level)d), damtype(bu), acc(4), rangehalfdam(100), rangemax(100), rof(1), shots(), rcl(), reach(), parry(),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Burning Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"SK:Innate Attack (Beam), ST:DX-4", 
				"SK:Innate Attack (Breath), ST:DX-4", 
				"SK:Innate Attack (Gaze), ST:DX-4", 
				"SK:Innate Attack (Projectile), ST:DX-4" _
				)_
			)_
	), noresync(yes)					

Lifting ST, 3/6, gives(+1 to ST:Lifting ST), conditional(+1 to ST:ST),
	mods(Lifting ST, Quadruped, Size), page(43), cat(Exotic, Non-Racial, Physical, Racial)

Pressure-Proof, 15, page(90), cat(Exotic, Physical, Racial)
Protected Eyes, 1/2, page(90), cat(Exotic, Physical, Racial)

Regeneration, 10/25/50/100, mods(Regeneration),
	levelnames(Slow: 1HP/12Hr, Regular: 1HP/Hr, Fast: 1HP/Min, Very Fast: 1HP/Sec),
	page(90), upto(4), cat(Exotic, Physical, Racial, Supernatural),
	taboo(AD:Rapid Healing, AD:Repairable, DI:Unhealing)
Regrowth, 40, page(90), cat(Exotic, Physical, Racial, Supernatural),
	taboo(DI:One Eye::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:One Arm::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:No Legs::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:One Hand::level > @if(@hasmod(Minor) THEN 1 ELSE 0) _
		)
Repairable, 50, page(90), cat(Exotic, Physical, Racial, Supernatural),
	x(#InputToTag("Specify the skill used to repair you:", nameext, , "Repairable")),
	taboo(AD:Rapid Healing, AD:Regeneration, AD:Regrowth, DI:Unhealing)
Sonar, 20, page(91), cat(Exotic, Physical, Racial),
	skillused(ST:Perception), mode(''See'')
See Invisible (Magical), 15, page(46), cat(Exotic, Non-Racial, Physical, Supernatural)
See Invisible (Spirit), 15, page(46), cat(Exotic, Non-Racial, Physical, Supernatural)

Alternate Form, 15/30, mods(Alternate Form), page(85), cat(Exotic, Lycanthropic, Physical, Racial, Vampire),
	levelnames(,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100),
	x(_
		#InputToTagReplace("Please specify the form or forms you can change into:", nameext, , "Alternate Form"),
		#buildit_
	)

Silence, 5/10, page(46), cat(Exotic, Non-Racial, Physical, Racial),
	conditional(+1 to SK:Stealth when "moving, vs. hearing only", +2 to SK:Stealth when "standing still, vs. hearing only")
Super Climbing, 6, page(91), cat(Exotic, Physical, Racial)
Teeth (Blunt Teeth), 0, page(92), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Teeth (Sharp Teeth)", "AD:Teeth (Sharp Beak)", "AD:Teeth (Fangs)")
Teeth (Sharp Teeth), 1, page(92), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Teeth (Blunt Teeth)", "AD:Teeth (Sharp Beak)", "AD:Teeth (Fangs)")
Teeth (Sharp Beak), 1, page(92), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Teeth (Blunt Teeth)", "AD:Teeth (Sharp Teeth)", "AD:Teeth (Fangs)")
Teeth (Fangs), 2, page(92), cat(Exotic, Physical, Natural Attacks, Racial),
	taboo("AD:Teeth (Blunt Teeth)", "AD:Teeth (Sharp Teeth)", "AD:Teeth (Sharp Beak)")
Ultrahearing, 5, page(92), cat(Canine, Exotic, Feline, Lycanthropic, Physical, Racial, Vampire),
	taboo(DI:Deafness), skillused(ST:Perception, ST:Hearing), mode(Hear)

Unkillable, 50/100, mods(Unkillable), page(92), upto(2),
	cat(Exotic, Physical, Racial, Vampire), taboo(DI:Unnaturally Fragile),
	conditional(=-ST:Death Check to ST:Death Check when "you automatically succeed at all Death Checks")

<Exotic Mental>
Extra Life, 25/50, page(43), cat(Exotic, Mental, Non-Racial, Pawn of the Lady, Vampire)
Insubstantiality, 80, mods(Insubstantiality), page(89),
	cat(Exotic Physical, Exotic, Mental, Physical, Racial, Vampire)
Invisibility, 40, mods(Invisibility), page(90), cat(Exotic, Mental, Racial),
	conditional(+9 to SK:Stealth when "being seen would matter")
Mind Shield, 4/8, page(45), cat(Exotic, Mental)
Speak With Animals, 5/10/13/15/25, page(46), upto(5), cat(Exotic, Mental, Non-Racial, Racial, Vampire),
	levelnames("One Species", "One Family", "One Class", "All Land OR All Aquatic", "All Animals")
Tracker Golem, 15, page(106), cat(Exotic, Mental, Racial),
	skillused(ST:IQ)

<Supernatural Physical>
Supernatural Durability (Vulnerable to [vulnerability]), 150, page(91),
	cat(Supernatural, Physical, Racial, Vampire),
	taboo(DI:Low Pain Threshold, AD:High Pain Threshold),
	skillused(ST:Will+3), mode(ignore pain),
	x(#InputReplace("Specify the one thing that can kill you:", "[vulnerability]", , "Supernatural Durability"))
Voice of Command, 90, mods(Voice of Command), page(49), cat(Supernatural, Non-Racial, Physical),
	taboo(DI:Cannot Speak, DI:Mute), skillused(ST:VoCBonus)
Voice of Command IQ Bonus (+2 per level), 5/10, page(49), cat(Supernatural, Non-Racial, Physical),
	needs(AD:Voice of Command), gives(+2 to ST:VoCBonus)

<Supernatural Mental>
Channelling, 10, page(42), cat(Supernatural, Mental, Non-Racial)

Magery 0, 5, page(44), cat(Supernatural, Mental, Non-Racial),
	gives(+AD:Magery::level to me::skillscore),
	taboo(AD:Magery 0 (No Spellcasting), AD:Magery 0 (Engineering Only), AD:Magery 0 (Non-Improvisational)),
	skillused(ST:Perception), mode(detect Magic Items with Mage Sense),
	description(Magery 0 is included as a separate item from the normal Magery advantage, due to the fact that many kinds of enhancements and limitations are meant to only affect the levels above 0, not the base 5 points from Magery 0. The Magery advantage is set to have Magery 0 as a pre-req.)
Magery, 10/20, gives(+1 to ST:Magery, +1 to SK:Thaumatology, +1 to SK:Magic, +1 to SK:Magical Form, +1 to Spells), mods(Magery), needs(AD:Magery 0), page(44), cat(Supernatural, Mental, Non-Racial, Talents),
	taboo(AD:Magery 0 (No Spellcasting), AD:Magery 0 (Engineering Only), AD:Magery 0 (Non-Improvisational)),
	description(WARNING: Always use the Magery modifiers with Magery and the Magery 0 modifiers with Magery 0. Using the Magery modifiers with any other trait can cause your spells to be miscalculated.)
					
Magery 0 (No Spellcasting), 1, mods(Magery 0), page(44), cat(Supernatural, Mental, Non-Racial),
	gives(+AD:Magery (No Spellcasting)::level to me::skillscore),
	taboo(AD:Magery 0 (Engineering Only), AD:Magery 0 (Non-Improvisational)),
	skillused(ST:Perception), mode(detect Magic Items with Mage Sense),
	description(Magery 0 is included as a separate item from the normal Magery advantage, due to the fact that many kinds of enhancements and limitations are meant to only affect the levels above 0, not the base 5 points from Magery 0. The Magery advantage is set to have Magery 0 as a pre-req.)
Magery (No Spellcasting), 2/4, mods(Magery),
	needs(AD:Magery 0 (No Spellcasting)), page(44), cat(Supernatural, Mental, Non-Racial, Talents)

Magery 0 (Engineering Only), 4, mods(Magery 0), page(44), cat(Supernatural, Mental, Non-Racial),
	gives(+AD:Magery (Engineering Only)::level to me::skillscore),
	taboo(AD:Magery 0 (No Spellcasting), AD:Magery 0 (Non-Improvisational)),
	skillused(ST:Perception), mode(detect Magic Items with touch-only Mage Sense),
	description(Magery 0 is included as a separate item from the normal Magery advantage, due to the fact that many kinds of enhancements and limitations are meant to only affect the levels above 0, not the base 5 points from Magery 0. The Magery advantage is set to have Magery 0 as a pre-req.)
Magery (Engineering Only), 6/12, mods(Magery),
	needs(AD:Magery 0 (Engineering Only)), page(44), cat(Supernatural, Mental, Non-Racial, Talents),
	conditional(+1 to SK:Magic when "for engineering purposes",
			+1 to SK:Magical Form when "for engineering purposes",
			+1 to Spells when "for engineering purposes")
					
Magery 0 (Non-Improvisational), 4, mods(Magery 0), page(45), cat(Supernatural, Mental, Non-Racial),
	gives(+AD:Magery (Non-Improvisational)::level to me::skillscore),
	taboo(AD:Magery 0 (No Spellcasting), AD:Magery 0 (Engineering Only)),
	skillused(ST:Perception), mode(detect Magic Items with Mage Sense),
	description(Magery 0 is included as a separate item from the normal Magery advantage, due to the fact that many kinds of enhancements and limitations are meant to only affect the levels above 0, not the base 5 points from Magery 0. The Magery advantage is set to have Magery 0 as a pre-req.)
Magery (Non-Improvisational), 7/14, gives(+1 to ST:Magery, +1 to SK:Thaumatology, +1 to SK:Magic, +1 to SK:Magical Form,
	+1 to Spells), mods(Magery), needs(AD:Magery 0 (Non-Improvisational)),
	page(45), cat(Supernatural, Mental, Non-Racial, Talents)

Medium, 10, page(45), cat(Supernatural, Mental, Non-Racial)
Spirit Empathy (Full), 10, page(42), cat(Empathic Abilities, Supernatural, Mental, Non-Racial),
	taboo(AD:Spirit Empathy), skillused(ST:IQ), mode(empathize)
Spirit Empathy (Specialised: [specify]), 5, page(42), cat(Empathic Abilities, Supernatural, Mental, Non-Racial),
	taboo(AD:Spirit Empathy (Full)), skillused(ST:IQ), mode(empathize),
	x( #InputReplace("Specify the class of spirits:", "[specify]", , "Class of Spirits") )
True Faith, 15, page(48), cat(Supernatural, Mental, Non-Racial)

Superior Staff, 5/10, upto(3), needs(SK:Magic (Wizardry)), page(47), cat(Supernatural, Non-Racial),
	description(Gives +1 MP/level to points stored in staff.), taboo(QU:No Staff),
	conditional(+1 to SK:Magic when "holding staff", +1 to SK:Magical Form when "holding staff",
			+1 to Spells when "holding staff")
Sapient Pearwood Staff, 10, needs(AD:Superior Staff = 3), page(47), cat(Supernatural, Non-Racial),
	conditional(+2 to ST:Reaction when "admiring wizards", -2 to ST:Reaction when "jealous wizards")

<Mundane Physical>
Appearance, 4/12/12/16/16, mods(Attractive, Appearance), upto(5), page(29),
	levelnames([Average], Attractive, Beautiful, Handsome, Very Beautiful, Very Handsome),
	cat(Mundane, Physical, Physical Appearance), taboo(DI:Appearance),
	gives(@indexedvalue(%level, 1, 2, 2, 2, 2) to ST:Unappealing,
		@indexedvalue(%level, 1, 4, 4, 6, 6) to ST:Appealing,
		@indexedvalue(%level, 1, 4, 4, 6, 6) to SK:Sex Appeal)
					

Absolute Direction, 5, displaycost(5), gives(=+3 To GR:Absolute Direction), page(45),
	cat(Mundane Mental, Mundane, Physical, Mental, Non-Racial, Racial)

Acute Hearing, 2/4, gives(+1 To ST:Hearing), skillused(ST:Hearing), mode(hear), page(41),
	cat(Mundane, Physical, Non-Racial, Racial, Vampire), taboo(DI:Deafness)
Acute Taste and Smell, 2/4, gives(+1 To ST:Taste/Smell), skillused(ST:Taste/Smell), mode(taste/smell), page(41),
	cat(Mundane, Physical, Non-Racial, Racial, Vampire)
Acute Touch, 2/4, gives(+1 To ST:Touch), skillused(ST:Touch), mode(feel), page(41),
	cat(Mundane, Physical, Non-Racial, Racial)
Acute Vision, 2/4, gives(+1 To ST:Vision), skillused(ST:Vision), mode(see), page(41),
	cat(Mundane, Physical, Non-Racial, Racial), taboo(DI:Blindness)

Ambidexterity, 5, page(41), cat(Mundane, Physical, Non-Racial), taboo(DI:One Arm, DI:One Hand)
Extra Attack, 25/50, page(42), cat(Mundane, Physical, Non-Racial, Racial, Vampire)

Flexibility, 5/15, displaycost(5), upto(2), levelnames(,Double-Jointed),
	conditional(=@indexedvalue(me::level, 3, 5) To ST:DX when "ignoring penalties for working in close quarters",
		=@indexedvalue(me::level, 3, 0) To SK:Escape when "getting free of ropes, handcuffs, etc.",
		=@indexedvalue(me::level, 0, 5) To "all attempts to break free of restraints"),
	gives(=@indexedvalue(me::level, 3, 5) To SK:Climbing, =@indexedvalue(me::level, 0, 5) To SK:Escape),
	page(43), cat(Mundane, Physical, Non-Racial, Racial), taboo(AD:Double-Jointed)
Double-Jointed, 15, conditional(+5 To ST:DX when "ignoring penalties for working in close quarters",
		+5 To "all attempts to break free of restraints"),
	gives(+5 To SK:Climbing, +5 To SK:Escape),
	page(43), cat(Mundane, Physical, Non-Racial, Racial), taboo(AD:Flexibility)
High Manual Dexterity, 5/10, upto(4), page(43), cat(Mundane, Physical, Non-Racial, Racial),
	taboo("DI:Ham-Fisted", DI:Quadruped),
	conditional(_
			+1 to GR:High Manual Dexterity when "performing DX-based tasks",
			+1 to SK:Mechanic when "performing fine DX-based tasks" _
			)
High Pain Threshold, 10, page(43), cat(Mundane, Physical, Non-Racial, Racial),
	taboo(DI:Low Pain Threshold, AD:Supernatural Durability),
	skillused(ST:Will+3), mode(ignore pain)
Less Sleep, 2/4, page(43), upto(4), cat(Mundane, Physical, Non-Racial, Racial), taboo(AD:Doesn't Sleep)
Night Vision, 1/2, page(45), upto(9), cat(Mundane, Non-Racial, Physical), taboo(DI:Blindness)
Perfect Balance, 15, gives(+1 To GR:Perfect Balance), page(46), cat(Mundane, Physical, Non-Racial, Racial)
Rapid Healing, 5/15, displaycost(5), upto(2),
	levelnames(,Very Rapid Healing), needs(ST:HT = 10), page(46),
	cat(Mundane, Non-Racial, Physical),
	taboo(AD:Very Rapid Healing, AD:Regeneration, AD:Repairable, DI:Unhealing)
Very Rapid Healing, 15, needs(ST:HT = 12), page(46),
	cat(Mundane, Non-Racial, Physical),
	taboo(AD:Rapid Healing, AD:Regeneration, AD:Repairable, DI:Unhealing)

Resistant, 5/10/15/30, mods(Resistant), levelnames(Rare, Occasional, Common, Very Common),
	page(46), upto(4), cat(Mundane, Non-Racial, Physical, Racial),
	initmods( Degree: Immunity, *1, shortname(Immunity), group(Resistant) ),
	x(_
		#InputToTagReplace("Please specify the thing you are Resistant or Immune to:" , nameext, , "Resistant"),
		#buildit _
	)

Temperature Tolerance (Cold), 1/3/6, upto(3), page(92), cat(Mundane, Physical, Racial)
Temperature Tolerance (Heat), 1/3/6, upto(3), page(92), cat(Mundane, Physical, Racial)

Voice, 10, gives(+2 To GR:VocalFeatures), page(30), cat(Mundane, Physical), taboo(DI:Cannot Speak, DI:Mute, DI:Disturbing Voice),
	conditional(+2 to ST:Reaction when "your voice can be heard")

<Mundane Mental>
Animal Empathy, 5, page(42), cat(Empathic Abilities, Mundane, Mental, Non-Racial), taboo(DI:Frightens Animals),
	skillused(ST:IQ), mode(empathize)
Charisma, 5/10, gives(+1 to ST:Reaction, +1 To GR:Charisma), cat(Mundane, Mental, Non-Racial, Racial),
	conditional(+1 to GR:Influence Skills when "making Influence rolls"), page(29)
Combat Reflexes, 15, displaycost(15), gives(=+1 To GR:Combat Reflexes, =+2 To Fright Check),
	page(42), cat(Mundane, Mental, Non-Racial, Racial), taboo(DI:Combat Paralysis)
Danger Sense, 15, mods(Danger Sense), page(42), cat(Mundane, Mental, Non-Racial),
	skillused(ST:Perception), mode(sense danger)
Daredevil, 15, page(43), cat(Mundane, Mental, Non-Racial, Luck Advantages, Pawn of the Lady)
Eidetic Memory, 5/10, displaycost(5), levelnames(,"Photographic"), upto(2),
	page(45), cat(Mundane, Mental, Non-Racial, Racial), taboo(AD:Photographic Memory),
	skillused(ST:IQ), mode(recall)
Empathy, 15, gives(+3 To GR:Empathy), conditional(+3 to SK:Psychology when "you can converse with the subject"),
	page(42), cat(Empathic Abilities, Mundane, Mental, Non-Racial), taboo(AD:Sensitive, DI:Low Empathy),
	skillused(ST:IQ), mode(empathize)
Photographic Memory, 10, page(45), cat(Mundane, Mental, Non-Racial, Racial), taboo(AD:Eidetic Memory),
	skillused(ST:IQ), mode(recall)
Sensitive, 5, gives(+1 To GR:Empathy),
	conditional(+1 to SK:Psychology when "you can converse with the subject"),
	page(42), cat(Empathic Abilities, Mundane, Mental, Non-Racial), taboo(AD:Empathy, DI:Low Empathy),
	skillused(ST:IQ), mode(empathize)
Enhanced Block, 5, gives(+1 To Block), page(42), cat(Enhanced Defences, Mundane, Mental, Attributes, Non-Racial)
Enhanced Dodge, 15, gives(+1 To Dodge), page(42), cat(Enhanced Defences, Mundane, Mental, Attributes, Non-Racial)
Enhanced Parry (bare hands), 5, page(42), cat(Enhanced Defences, Mundane, Mental, Attributes, Non-Racial),
	gives(_
		+1 to ST:DX::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Judo::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Wrestling::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Boxing::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Brawling::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Karate::parryat listAs "Enhanced Parry (bare hands)" _
		)
Enhanced Parry (%Melee Weapon SkillList%), 5, page(42), cat(Enhanced Defences, Mundane, Mental, Attributes, Non-Racial),
	gives(+1 to "SK:%Melee Weapon SkillList%::parryat" listAs "Enhanced Parry (%Melee Weapon SkillList%)"),
	x(#ChoiceList(_
			name(Melee Weapon Skill),
			title(Enhanced Parry: Choose a Melee Weapon),
			text(Choose a Melee Weapon skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Axe/Mace",
				"Broadsword",
				"Flail",
				"Knife",
				"Polearm",
				"Rapier",
				"Shortsword",
				"Smallsword",
				"Spear",
				"Staff",
				"Two-Handed Axe/Mace",
				"Two-Handed Sword" _
			)_
			)_
	), noresync(yes)
Enhanced Parry (all parries), 10, gives(+1 To Parry), page(42), cat(Attributes, Enhanced Defences, Mundane, Mental, Non-Racial)

Fearlessness, 2/4, gives(+1 To ST:Fright Check), page(43), cat(Mundane, Mental, Non-Racial, Racial),
	taboo(DI:Fearfulness, DI:Cowardice, AD:Unfazeable)
Gadgeteer, 25, page(43), cat(Mundane, Mental, Non-Racial)
Indomitable, 15, page(43), cat(Mundane, Mental, Non-Racial, Racial)
Language Talent, 10, gives(+1 To CA:Language), page(32), cat(Mundane, Mental, Non-Racial, Talents)
Lightning Calculator, 2, page(45), cat(Mundane, Mental, Non-Racial, Racial), taboo(DI:Innumerate)
Luck, 15/30/60, levelnames( , Extraordinary, Ridiculous), page(44), upto(3),
	cat(Mundane, Mental, Non-Racial, Luck Advantages, Pawn of the Lady)
Mad Medicine, 15, needs(AD:Gadgeteer, ((ST:Tech Level = 5) | (PE:Cutting-Edge Training (Physician and Surgery)))),
	page(44), cat(Mundane, Mental, Non-Racial)
Serendipity, 15/30, page(44), cat(Mundane, Mental, Non-Racial, Luck Advantages, Pawn of the Lady)
Single-Minded, 5, page(46), cat(Mundane, Mental, Non-Racial), taboo(DI:Short Attention Span)

* Talents
Animal Friend, 5/10, gives(+1 To GR:Animal Friend), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with animals"),
	description(Animal Handling, Falconry, Packing, Riding, Teamster, Veterinary)
Artificer, 10/20, gives(+1 To GR:Artificer), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with customers"),
	description(Armoury, Carpentry, Engineer, Masonry, Mechanic, Smith)
Born to Hang, 10/20, gives(+1 To GR:Born to Hang), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with other crooks who acknowledge skill"),
	description(Larcenous Skills, Disguise, Fast-Talk, Fortune-Telling, Sleight of Hand)
Born War-Leader, 5/10, gives(+1 To GR:Born War-Leader), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with other veteran soldiers and warriors"),
	description(Officer Skills, Leadership, Savoir-Faire (Military))
Gifted Artist, 5/10, gives(+1 To GR:Gifted Artist), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with critics and connoisseurs"),
	description(Artist, Jeweller, Leatherworking, Photography, Sewing)
Healer, 10/20, gives(+1 To GR:Healer), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with patients (NOT doctors)"),
	description(Diagnosis, First Aid, Herbalism, Midwifery, Physician, Psychology, Surgery, Veterinary)
Mathematical Ability, 10/20, gives(+1 To GR:Mathematical Ability), page(47), upto(4),
	cat(Mundane, Mental, Non-Racial, Talents), taboo(DI:Innumerate),
	conditional(+1 to ST:Reaction when "dealing with mathematically-inclined wizards and philosophers, and creative accountants", +1 to SK:Philosophy when "performing mathematical-philosophical analysis", +1 to SK:Thaumatology when "conducting highly mathematical research"),
	description(Accounting, Astronomy, Cryptography, Engineer, Finance, Mathematics)
Metalwork, 10/20, gives(+1 To GR:Metalwork), page(47), upto(4),
	cat(Mundane, Mental, Non-Racial, Racial, Talents),
	conditional(+1 to ST:Reaction when "dealing with other skilled metalworkers"),
	description(Armoury, Most Versions of Engineer, Jeweller, Mechanic, Metallurgy, Prospecting, Smith)
Musical Ability, 5/10, gives(+1 To GR:Musical Ability), page(47), upto(4), cat(Mundane, Mental, Non-Racial, Talents),
	conditional(+1 to ST:Reaction when "heard by people who like music"),
	description(Conducting, Musical Composition, Musical Instrument, Singing)
Outdoorsman, 10/20, gives(+1 To GR:Outdoorsman), page(47), upto(4), cat(Mundane, Mental, Talents),
	conditional(+1 to ST:Reaction when "working with other outdoors types"),
	description(Camouflage, Fishing, Mimicry, Naturalist, Navigation, Survival, Tracking)
Sense of the City ([whichcity]), 10/20, page(47), upto(4), cat(Mundane, Mental, Talents),
	gives(+1 To SK:Area Knowledge ([whichcity]), +1 To SK:Current Affairs(Regional: [whichcity]), +1 To SK:Hidden Lore(Secrets of the City: [whichcity]), +1 To SK:History([whichcity])), 
	conditional(+1 to ST:Reaction when "observed by watchmen, tour guides, and amateur historians in [whichcity]", +1 to SK:Urban Survival when "in [whichcity]"),
	description(Area Knowledge ([whichcity]), Current Affairs(Regional: [whichcity]), Hidden Lore(Secrets of the City: [whichcity]), History([whichcity])),
	x(#InputReplace("Specify the city:", "[whichcity]", , "Sense of the City")),
Smooth Operator, 15/30, gives(+1 To GR:Smooth Operator), page(47), upto(4), cat(Mundane, Mental, Talents),
	conditional(+1 to ST:Reaction when "dealing NON-MANIPULATIVELY with other social operators"),
	description(Acting, Carousing, Detect Lies, Diplomacy, Fast-Talk, Intimidation, Leadership, Panhandling, Politics, Public Speaking, Savoir-Faire, Sex Appeal, Streetwise)

_New Talent, %Costaliaslist%, displaycost(varies), page(47), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	gives(%skillsaliaslist%), conditional(+1 to ST:Reaction when "[bonus]"), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Talent here:" , name, , "New Talent"),
	#InputReplace("Please describe when the reaction bonus for this talent applies. e.g. if you type in ''recognized by an Engineer'' the bonus will be listed as ''+1 from Engineering Talent when recognized by an Engineer'':", "[bonus]", "talent matters", "New Talent"),
	#ChoiceList(_
			name(Cost),
			title(New Talent: Cost),
			text(Choose the point cost and number of affected skills for this talent.),
			picksallowed(1),
			method(bynumber),
			list(_
				" 5/level (6 or fewer related skills)"=6,
				"10/level (7 to 12 related skills)"=12,
				"15/level (13 or more related skills)"=100 _
				), 
			aliaslist(_
					5/10,
					10/20,
					15/30_
				)_
			),
	#ChoiceList(_
			name(skills),
			title(New Talent: Choose Skills),
			text(Choose which skills will receive a bonus from this Talent. NOTE: Additional skill specialties may be specified later by adding the appropriate modifier to this Talent.),
			picksallowed(atleast 1, upto %Costcostlist%),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				), 

			aliaslist(_
				#grouplist(GR:AllSkills, prepend(+1 to "), append("))_
					)_
			),
	#edit)
	
Versatile, 5, page(49), cat(Mundane, Mental, Non-Racial), taboo(AD:Versatile (Inspiration Magnet))
Versatile (Inspiration Magnet), 5, page(49), cat(Mundane, Mental, Non-Racial)

<Mundane Social>
Pitiable, 5, page(29), cat(Mundane, Non-Racial, Other Physical Features, Social),
	conditional(+3 to ST:Reaction when "you appear to be in a position of helplessness, weakness, or need")				

Cultural Familiarity, 1, page(32), mods(Cultural Familiarity),
	cat(Mundane, Non-Racial, Social, Cultural Familiarity, Social Background),
	taboo(Native Cultural Familiarities > 1),
	x(#InputToTagReplace("Specify the culture you're familiar with here:", name, , "Cultural Familiarity"))
Cultural Familiarity (Native), 0, page(32), cat(Mundane, Non-Racial, Social, Cultural Familiarity, Social Background),
	gives(+1 to ST:Native Cultural Familiarities), taboo(Native Cultural Familiarities > 1),
	x(#InputToTagReplace("Specify your native culture:", name, "Sto Plains/Uberwald", "Cultural Familiarity (Native)"))

Language, 2/4, page(31), upto(3 LimitingTotal), levelnames([None], Broken, Accented, Native),
	cat(Mundane, Non-Racial, Social, Language, Language Spoken, Language Written, Racial, Social Background),
	taboo(Native Languages > 1), x(#InputToTagReplace("Specify the language here:", name, , "Language"))
Language (Spoken), 1/2, page(31), upto(3 LimitingTotal),
	levelnames([None], Broken, Accented, Native), taboo(Native Languages > 1),
	cat(Mundane, Non-Racial, Social, Language, Language Spoken, Racial, Social Background),
	x(#InputToTagReplace("Specify the language here:", name, , "Language (Spoken)"))
Language (Written), 1/2, page(31), upto(3 LimitingTotal),
	levelnames([Illiterate], Semi-Literate, Literate, Native), taboo(Native Languages > 1),
	cat(Mundane, Non-Racial, Social, Language, Language Written, Racial, Social Background),
	x(#InputToTagReplace("Specify the language here:", name, , "Language (Written)"))

Language - Native, 2/4, displaycost(0/-2/+), init(3), page(31), upto(3),
	mods(Native Language), levelnames([None], Broken, Accented, Native), taboo(Native Languages > 1),
	cat(Mundane, Non-Racial, Social, Language, Language Spoken, Language Written, Racial, Social Background),
	x(#InputToTagReplace("Specify the language here:", name, "Morporkian", "Language - Native")),
	initmods(Native Language, -6, gives(=+1 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level),
	group(Native Language), page(31))
Language - Native (Spoken), 1/2, displaycost(0/-1/+), init(3), page(31), upto(3), mods(Native Language),
	levelnames([None], Broken, Accented, Native), taboo(Native Languages > 1),
	cat(Mundane, Non-Racial, Social, Language, Language Spoken, Racial, Social Background),
	x(#InputToTagReplace("Specify the language here:", name, "Morporkian", "Language - Native (Spoken)")),
	initmods(Native Speaker, -3, gives(=+0.5 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level),
	group(Native Language), page(31))
Language - Native (Written), 1/2, displaycost(-3/-2/+), init(0), page(31), upto(3), mods(Native Language),
	levelnames([Illiterate], Semi-Literate, Literate, Native), taboo(Native Languages > 1),
	cat(Mundane, Non-Racial, Social, Language, Language Written, Racial, Social Background),
	x(#InputToTagReplace("Specify the language here:", name, "Morporkian", "Language - Native (Written)")),
	initmods(Native Writer, -3, gives(=+0.5 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level), group(Native Language), page(31))

Wealth, 10/20/30/50/75, upto(10), page(33), mods(Wealth),
	levelnames([Average], Comfortable, Wealthy, Very Wealthy, Filthy Rich, Multimillionaire 1, Multimillionaire 2, Multimillionaire 3, Multimillionaire 4, Multimillionaire 5, Multimillionaire 6),
	taboo(DI:Wealth, AD:Wealth > me::level, AD:Wealth < me::level), cat(Mundane, Non-Racial, Social, Wealth),
	gives(_
			=@indexedvalue(%level, 10, 40, 190, @power(10, (me::level-1))-10) To ST:Wealth Modifier,
			=@if(AD:Status::level = 0 THEN @if(DI:Status::baselevel = 0 THEN @indexedvalue(%level, 0, 1, 1, 1, 2, 3) ELSE 0) ELSE 0) To ST:Status,
			=@if(AD:Status::level > 0 THEN @indexedvalue(%level, 0, 1, 1, 1, 2, 3) ELSE 0) To AD:Status,
			=@if(AD:Status::level = 0 THEN -@indexedvalue(%level, 0, 1, 1, 1, 2, 3) ELSE 0) To DI:Status_
		)

Reputation, 5/10, mods(Reputation Advantage), page(34), upto(4), cat(Influence, Mundane, Non-Racial, Social),
	initmods(_
			People Affected: Almost everyone on the Disc, *1, shortname(Almost everyone), group(Reputation) _
			| Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation) _
			),
	conditional(+1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you"),
	x(#InputToTag("Please describe the reason for your reputation:", nameext, , "Reputation"))

Status, 5/10, page(36), upto(8 limitingtotal), gives(+1 to ST:Status),
	cat(Mundane, Non-Racial, Social, Influence), mods(Status), taboo(DI:Status),
	levelnames(+1, +2, +3, +4, +5, +6, +7, +8)

Rank, 5/10, mods(Rank), page(35), upto(8), cat(Mundane, Non-Racial, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to AD:Status),
	x(#InputToTagReplace("Please describe the nature of the Rank:", name, " Rank", "Rank"))

Administrative Rank, 5/10, mods(Rank), page(35), upto(8), cat(Mundane, Non-Racial, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to AD:Status)

Military Rank, 5/10, mods(Rank), page(35), upto(8), cat(Mundane, Non-Racial, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to AD:Status)

Religious Rank, 5/10, mods(Rank), page(35), upto(8), cat(Mundane, Non-Racial, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to AD:Status)

Watch Rank, 5/10, mods(Rank), page(35), upto(8), cat(Mundane, Non-Racial, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int((%level/3))) ELSE 0) to AD:Status)

Clerical Investment, 5, page(34), cat(Mundane, Non-Racial, Social),
	conditional(+1 to ST:Reaction when "people respect your religion")
Congregation, 10/12/15, upto(3), levelnames(Up to 20, Up to 50, Up to 100),
	cat(Mundane, Non-Racial, Racial, Social, Vampire), page(38)

Contact, 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),
	x(#InputToTag("Please describe the nature of the Contact:", nameext, , "Contact")),
	upto(4), cat(Mundane, Non-Racial, Social), mods(Contact, Frequency of Appearance, Reliability), page(39),
	initmods(_
			Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
			| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			)

Legal Enforcement Powers, 5/10, page(35), upto(3),
	levelnames(Local Powers, National OR Broad Powers, Broad Provileges AND Discretion),
	cat(Mundane, Non-Racial, Social)

Legal Immunity, 5/10, page(35), upto(3),
	levelnames(Different but equally strict rules, Less strict rules, Very few rules),
	cat(Mundane, Non-Racial, Social)
Igor Immunity, 5, page(35), upto(3),
	cat(Mundane, Non-Racial, Social)

Patrons, 10/15/20/25/30, mods(Frequency of Appearance, Patron, Favor), page(41), cat(Mundane, Non-Racial, Social), upto(5),
	levelnames(Powerful, Extremely Powerful, Ultra-Powerful, City-State Level, Major Nation Level), init(%PatronAliasList%),
	x(_
		#InputToTag("Please describe the nature of the Patron:", nameext, , "Patrons"),
		#ChoiceList(_
				name(Patron),
				title(Patron Power),
				text(Select the power level of your Patron:),
				picksallowed(1),
				method(bynumber),
				list(_
					"[10] A powerful individual (usually built on at least 150% of the PC's starting points)",
					"[10] Fairly powerful organization (assets of at least 1,000 times starting wealth for the world)",
					"[15] An extremely powerful individual (built on at least twice the PC's starting points)",
					"[15] A powerful organization (assets of at least 10,000 times starting wealth)",
					"[20] An ultra-powerful individual (based on as many points as the GM wants!)",
					"[20] A very powerful organization (assets of at least 100,000 times starting wealth)",
					"[25] A city-state or other small nation",
					"[30] A large nation or empire"_
				),
			aliaslist(_
					"1",
					"1",
					"2",
					"2",
					"3",
					"3",
					"4",
					"5",
					"5",
					)_
				)_
			),
	initmods(_
		Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
		),
	description(_
			A powerful individual (usually built on at least 150% of the PC's starting points) or a fairly powerful organization (assets of at least 1,000 times starting wealth for the world): 10 POINTS _
			\par An extremely powerful individual (built on at least twice the PC's starting points) or a powerful organization (assets of at least 10,000 times starting wealth): 15 POINTS _
			\par An ultra-powerful individual (based on as many points as the GM wants!) or a very powerful organization (assets of at least 100,000 times starting wealth): 20 POINTS _
			\par A city-state or other small nation: 25 POINTS _
			\par A large nation or empire: 30 POINTS _
			)

Social Regard, 5/10, gives(+1 to ST:Reaction), page(35), upto(4), cat(Mundane, Non-Racial, Social),
	x(#InputToTag("Please describe the nature of the Social Regard:", nameext, , "Social Regard"))
Social Regard (Feared), 5/10, gives(+1 to ST:Reaction), page(35), upto(4), cat(Mundane, Non-Racial, Social)
Social Regard (Respected), 5/10, gives(+1 to ST:Reaction), page(35), upto(4), cat(Mundane, Non-Racial, Social)
Social Regard (Venerated), 5/10, gives(+1 to ST:Reaction), page(35), upto(4), cat(Mundane, Non-Racial, Social)
Tenure, 5, page(48), cat(Mundane, Non-Racial, Social),
	x(#InputToTag("Please describe the nature of the Tenure:", nameext, , "Tenure"))
					
************************************************************************************************************************
[PERKS]
************************************************************************************************************************
<Perks>
_New Perk, 1, noresync(yes), x(#InputToTagReplace("Please enter the name of this Perk:" , name, , "New Perk")), x(#edit)
Alcohol Tolerance, 1, page(50), cat(Non-Racial)
Archaic Training, 1/2, page(50), cat(Non-Racial, Skill Perks),
	x(#InputToTagReplace("Specify TL-based skill", nameext, , "TL-based skill needed"))
Assassin in Good Standing, 1, page(50), cat(Non-Racial)
Autotrance, 1, page(50), cat(Magical, Non-Racial, Priestly)
Blade-Proof Bare-Chestedness, 1, page(50),
	needs(DI:Compulsive Barbarian Heroism | DI:Odious Personal Habit (Barbarian Heroism)), cat(Non-Racial)
Boredom Immunity, 1, page(93), cat(Racial)
Check the Exits, 1, page(50), cat(Non-Racial)
Climatic Emphasis, 1, page(50), cat(Non-Racial, Racial, Vampiric)
Cobblestone Sense ([whichcity]), 1, page(50), needs(SK:Area Knowledge([whichcity])), cat(Non-Racial),
	x(#InputReplace("Specify the city which you know by touch:", "[whichcity]", , "Cobblestone Sense"))
Cold Resistance, 1, page(50), cat(Non-Racial), taboo(AD:Temperature Tolerance (Cold))
Controllable Disadvantage, 1, page(51), cat(Non-Racial),
	x(#InputToTagReplace("Specify which Disadvantage you can induce in yourself:", nameext, , "Controllable Disadvantage"))
Crossbow Safety, 1, page(51), cat(Non-Racial)
Cutting-Edge Training, 1/2, page(51), cat(Non-Racial, Skill Perks),
	x(#InputToTagReplace("Specify TL-based skill", nameext, , "TL-based skill needed"))
Deep Sleeper, 1, page(51), taboo(AD:Doesn't Sleep), cat(Non-Racial)
Divine News-Feed, 1, page(51), cat(Non-Racial, Priestly)
Dual Ready, 1, page(51), cat(Non-Racial),
	x(#InputToTagReplace("Specify the two weapons you can draw simultaneously:", nameext, , "Dual Ready"))
Fearsome Stare, 1, page(52), cat(Non-Racial, Wordless Influence),
	description(Allows use of Intimidation skill without talking.)
Feathers, 1, page(93), cat(Racial)
Forgettable Face, 1, page(51), cat(Non-Racial)
Fully-Dressed Resurrection, 1, page(93), needs(AD:Unkillable = 2),
	cat(Racial, Vampiric)
Fur, 1, page(93), cat(Racial)
Good with (Animal), 1, page(51),
	x(#InputToTagReplace("Specify the Animal you're good with:", nameext, , "Good with (Animal)")),
	cat(Non-Racial, Racial, Vampiric)
Good with (Social Group), 1, page(51),
	x(#InputToTagReplace("Specify the Social Group you're good with:", nameext, , "Good with (Social Group)")),
	cat(Non-Racial)
Haughty Sneer, 1, page(52), cat(Non-Racial, Wordless Influence),
	description(Allows use of Savoir-Faire (High Society) skill without talking.)
Heartbeat Counter, 1, page(94), needs(ST:Hearing = 18),
	cat(Racial, Vampiric)
Heat Resistance, 1, page(50), cat(Non-Racial), taboo(AD:Temperature Tolerance (Heat))
High-Heeled Heroine, 1, page(51), cat(Non-Racial)
Honest Face, 1, page(51), cat(Non-Racial)
Hyper-Specialisation, 1, page(51), cat(Non-Racial, Skill Perks),
	x(#InputToTagReplace("Specify the skill and the thing you're insanely specialised in:", nameext, , "Hyper-Specialisation"))
Improvised Weapons, 1, page(52), cat(Non-Racial, Skill Perks),
	x(#InputToTagReplace("Please enter the weapon skill you can use Improvised Weapons with:" , nameext, ,"Improvised Weapons"))
Limited Camouflage, 1, page(94), cat(Racial),
	conditional(+2 to SK:Camouflage when "stationary and unclad in a specific environment",_
	+2 to SK:Stealth when "stationary and unclad in a specific environment"),
	x(#InputToTagReplace("Specify the environment where you get a hiding bonus:", nameext, , "Limited Camouflage"))
Limited Camouflage (Stone), 1, page(94), cat(Gargoyle, Racial),
	conditional(+2 to SK:Camouflage when "stationary and unclad against a stone background",_
	+2 to SK:Stealth when "stationary and unclad against a stone background")
Longevity, 1, page(52), cat(Non-Racial, Racial)
Name Hearing, 1, page(94), cat(Racial, Godly)
No Hangover, 1, page(52), cat(Non-Racial)
Off-Hand Training, 1, page(52), cat(Non-Racial, Skill Perks),
	x(#InputToTagReplace("Specify the skill you can perform unpenalised with your off hand:", nameext, , "Off-Hand Training"))
Oggham Reader, 1, page(52), needs(1 CA:Language Written = 2), cat(Non-Racial)
One Spell Doesn't Need Preparation, 1, page(45), needs(AD:Magery 0 (Non-Improvisational)), cat(Magical, Non-Racial),
	x(#InputToTagReplace("Please name the One Spell:", nameext, , "Shtick"))
Penetrating Voice, 1, page(52), taboo(DI:Mute), cat(Non-Racial, Racial),
	conditional(+1 to SK:Intimidation when "surprising someone by yelling or roaring")
Recognised Divinity, 1, page(94), cat(Racial, Godly)
Scales, 1, page(93), cat(Racial)
Sea Legs (+3 Resistance to motion sickness), 1, page(46), cat(Non-Racial)
Secret Name, 1, page(52), needs(AD:Magery 0 | Magery 0 (Non-Improvisational)), cat(Magical, Non-Racial)
Self-Styling Hair, 1, page(52), cat(Magical, Non-Racial)
Sordid Claws, 1, page(94), needs(AD:Claws), cat(Racial)
Statuesque, 1, page(52), cat(Non-Racial),
	taboo(DI:Skinny, DI:Overweight, DI:Fat, DI:Very Fat, DI:Dwarfism, DI:Gigantism)
Street Swagger, 1, page(52), cat(Non-Racial, Wordless Influence),
	description(Allows use of Streetwise skill without talking.)
Striking Surface, 1, page(94), needs(AD:Damage Resistance::level=3), cat(Racial)
There on Call, 1, page(52), needs(SK:Savoir-Faire (Servant), SK:Stealth, SK:Traps), cat(Non-Racial)
Understands the Librarian, 1, page(53), cat(Non-Racial)
Unfazed by Size, 1, page(94), cat(Racial), needs(ST:Size Modifier < 0)

************************************************************************************************************************
[DISADVANTAGES]
************************************************************************************************************************
<Attributes>
Reduced ST, -10/-20, page(26), mods(Reduced ST, Size, Quadruped),
	initmods(Affects displayed ST score, +0%, shortname(Affects ST), gives(-owner::Level to ST:ST), group(Reduced ST), description(This modifier causes the Reduced ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced ST disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced DX, -20/-40, page(26), mods(Reduced DX, Quadruped),
	initmods(Affects displayed DX score, +0%, shortname(Affects DX), gives(-owner::Level to ST:DX), group(Reduced DX), description(This modifier causes the Reduced DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced DX disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced IQ, -20/-40, page(27), mods(Reduced IQ),
	initmods(Affects displayed IQ score, +0%, shortname(Affects IQ), gives(-owner::Level to ST:IQ), group(Reduced IQ), description(This modifier causes the Reduced IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced IQ disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced HT, -10/-20, page(27), mods(Reduced HT),
	initmods(Affects displayed HT score, +0%, shortname(Affects HT), gives(-owner::Level to ST:HT), group(Reduced HT), description(This modifier causes the Reduced HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced HT disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Will, -5/-10, page(27), mods(Reduced Will),
	initmods(Affects displayed Will score, +0%, shortname(Affects Will), gives(-owner::Level to ST:Will), group(Reduced Will), description(This modifier causes the Reduced Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Will disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Perception, -5/-10, page(27), mods(Reduced Perception),
	initmods(Affects displayed Per score, +0%, shortname(Affects Per), gives(-owner::Level to ST:Perception), group(Reduced Perception), description(This modifier causes the Reduced Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Perception disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Hit Points, -2/-4, page(27), mods(Reduced Hit Points, Size),
	initmods(Affects displayed HP score, +0%, shortname(Affects HP), gives(-owner::Level to ST:Hit Points), group(Reduced Hit Points), description(This modifier causes the Reduced Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Hit Points disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Fatigue Points, -3/-6, page(27), mods(Reduced Fatigue Points),
	initmods(Affects displayed FP score, +0%, shortname(Affects FP), gives(-owner::Level to ST:Fatigue Points), group(Reduced Fatigue Points), description(This modifier causes the Reduced Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Fatigue disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Fatigue advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Basic Move, -5/-10, page(28), mods(Reduced Basic Move),
	initmods(Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(-owner::Level to ST:Basic Move), group(Reduced Basic Move), description(This modifier causes the Reduced Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Basic Move disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Basic Speed, -5/-10, page(28), mods(Reduced Basic Speed), upto(80),
	initmods(Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(-(Owner::Level/4) to ST:Basic Speed), group(Reduced Basic Speed), description(This modifier causes the Reduced Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Basic Speed disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.),
	levelnames(_
			-0.25, -0.5, -0.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -4, -4.25, -4.5, -4.75, -5, -5.25, -5.5, -5.75, -6, -6.25, -6.5, -6.75, -7, -7.25, -7.5, -7.75, -8, -8.25, -8.5, -8.75, -9, -9.25, -9.5, -9.75, -10,
			-10.25, -10.5, -10.75, -11, -11.25, -11.5, -11.75, -12, -12.25, -12.5, -12.75, -13, -13.25, -13.5, -13.75, -14, -14.25, -14.5, -14.75, -15, -15.25, -15.5, -15.75, -16, -16.25, -16.5, -16.75, -17, -17.25, -17.5, -17.75, -18, -18.25, -18.5, -18.75, -19, -19.25, -19.5, -19.75, -20 _
			)

Reduced Air Move, -2/-4, page(89), mods(Reduced Air Move),
	initmods(Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(-owner::Level to ST:Basic Air Move), group(Reduced Air Move), description(This modifier causes the Reduced Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Air Move disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Low TL, -5/-10, page(31), gives(-1 to ST:Tech Level), cat(Mundane, Social, Mundane Social)
Reduced SM, 0/0, gives(-1 to ST:Size Modifier), page(27)
Reduced Ground Move, 0/0, page(28), gives(-1 to ST:Ground Move),
	replacetags(in "ST:Ground Move" with "hide(), display(yes), mainwin(11), noresync(yes)")

<General>
_New Disadvantage, [cost], displaycost(varies), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Advantage:" , name, ,"New Advantage"),
	#InputReplace("Please enter the Cost of this disadvantage:", "[cost]", , "New Disadvantage"),
	#edit_
		)

_New Parent Item, 0, isparent(yes),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, , "New Parent Item"))

<Exotic Physical>
Aerial, 0, page(94), needs(AD:Flight), cat(Exotic, Physical, Racial),
	replacetags(in "ST:Ground Move" with "mainwin(11), noresync(yes)"),
	taboo(AD:Swarm Body), gives(=nobase to ST:Kick::reach$)

Quadruped, -35, gives(+1 to ST:Quadruped), page(96), cat(Exotic, Physical, Racial),
	taboo(AD:High Manual Dexterity, DI:Bad Grip, "DI:Ham-Fisted", DI:One Arm, "DI:Semi-Upright"),
	mods(Extra Legs)
Semi-Upright, -5, page(96), cat(Exotic, Physical, Racial), taboo(DI:Quadruped)
Short Arms (1 Arm), -5, page(96), cat(Exotic, Physical, Racial), needs(DI:One Arm), taboo(DI:Short Arms (2 Arms))
Short Arms (2 Arms), -10, page(96), cat(Exotic, Physical, Racial), taboo(DI:Short Arms (1 Arm), DI:One Arm)
Short Legs, -2, page(96), cat(Exotic, Physical, Racial), needs(DI:Quadruped)

Total Vampire Nocturnalism, -20, page(112), cat(Exotic, Physical, Racial, Vampire)
Troll Brain, -10, page(97), cat(Exotic, Gargoyle, Physical, Racial, Troll)
Troll Nocturnalism, -20, page(97), mods(Troll Nocturnalism), cat(Exotic, Physical, Racial, Troll)

Unhealing, -20/-30, levelnames(Partial, Total), page(98), upto(2),
	cat(Exotic, Physical, Racial), taboo(AD:Regeneration, AD:Repairable)

Unnaturally Fragile, -50, page(98), cat(Exotic, Physical, Racial), taboo(AD:Unkillable),
	conditional(-ST:Death Check to ST:Death Check when "you automatically fail all Death Checks")

Vulnerability, -10/-20/-30/-40, displaycost(variable), upto(4), 
	levelnames(Rare, Occasional, Common, Very Common), mods(Vulnerability), 
	page(98), cat(Exotic, Physical, Racial),
	x(_
		#InputToTag("Specify the type of attack you take extra damage from:", nameext, , "Vulnerability"),
		#buildit _
		)

Weak Bite, -2, page(98), cat(Exotic, Physical, Racial)

Weakness, -20/-40, upto(12), mods(Weakness), page(98), cat(Exotic, Physical, Racial, Vampire),
	levelnames("1d/minute damage", "2d/minute damage", "3d/minute damage", "4d/minute damage", "5d/minute damage", "6d/minute damage", "7d/minute damage", "8d/minute damage", "9d/minute damage", "10d/minute damage", "11d/minute damage", "12d/minute damage"),
	initmods(_
			Rarity: Occasional, *1, shortname(Occasional), group(Weakness) _
			)

<Exotic Mental>
Bestial, -10/-15, page(95), levelnames(, Really Unpleasant), cat(Exotic, Mental, Racial)

<Supernatural Physical>
Native Soil Bed, -30, page(112), cat(Supernatural, Physical, Racial, Vampire)
Supernatural Feature (Mostly Concealed: [Feature]), -5, page(97), cat(Supernatural, Physical, Racial, Vampire),
	conditional(-1 to ST:Reaction when "noticed"),
	x(#InputReplace("Describe the Feature:", "[Feature]", , "Supernatural Feature"))
Supernatural Feature (Blatantly Unnatural: [Feature]), -10, page(97), cat(Supernatural, Physical, Racial),
	conditional(-2 to ST:Reaction when "noticed"),
	x(#InputReplace("Describe the Feature:", "[Feature]", , "Supernatural Feature"))
Supernatural Feature (Mostly Concealed: No Body Heat), -5, page(97), cat(Supernatural, Physical, Racial),
	conditional(-1 to ST:Reaction when "noticed")
Supernatural Feature (Blatantly Unnatural: No Reflection), -10, page(97), cat(Supernatural, Physical, Racial),
	conditional(-2 to ST:Reaction when "noticed")
Supernatural Feature (Blatantly Unnatural: No Shadow), -10, page(97), cat(Supernatural, Physical, Racial),
	conditional(-2 to ST:Reaction when "noticed")
Supernatural Feature (Blatantly Unnatural: Deathly Pallor), -10, page(97), cat(Supernatural, Physical, Racial),
	conditional(-2 to ST:Reaction when "noticed")

<Supernatural Mental>
Dread, -10, mods(Dread), page(95), cat(Supernatural, Mental, Racial, Vampire),
	initmods(_
			Rarity: Occasional, *1, shortname(Occasional), group(Dread) _
			),
	x(#InputToTag("Specify the what it is you Dread:", nameext, , "Dread"))
Fixation, -10, mods(Dread), page(95), cat(Supernatural, Mental, Racial, Vampire),
	initmods(_
			Rarity: Occasional, *1, shortname(Occasional), group(Dread) _
			),
	x(#InputToTag("Specify what you Fixate on:", nameext, , "Fixation"))
Frightens Animals, -10, page(96), cat(Supernatural, Mental, Racial, Vampire), taboo(AD:Animal Empathy),
	conditional(-4 to ST:Reaction when "animal is reacting", -1 to ST:Reaction when "someone sees how animals react to you, or has Animal Empathy")

Uncontrollable Appetite, -15, mods(Self-Control, Uncontrollable Appetite),
	page(98), cat(Supernatural, Mental, Racial, Vampire),
	initmods(_
			You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53) _
			),
	x(#InputToTag("Specify the substance you must consume:", nameext, , "Uncontrollable Appetite"))

<Mundane Physical>
Skinny, -5, gives(-2 To SK:Disguise), 
	conditional(-2 to ST:ST when "you resist knockback", -2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	needs(HT < 15), page(29), cat(Mundane, Non-Racial, Physical, Build), taboo(DI:Overweight, DI:Fat, DI:Very Fat)
Overweight, -1, gives(-1 To SK:Disguise, +1 To SK:Swimming), 
	conditional(+1 to ST:ST when "you resist knockback", -1 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	page(29), cat(Mundane, Non-Racial, Physical, Build), taboo(DI:Skinny, DI:Fat, DI:Very Fat)
Fat, -3, gives(-2 To SK:Disguise, +3 To SK:Swimming), 
	conditional(+2 to ST:ST when "you resist knockback", -2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	needs(HT < 16), page(29), cat(Mundane, Non-Racial, Physical, Build), taboo(DI:Skinny, DI:Overweight, DI:Very Fat)
Very Fat, -5, gives(-3 To SK:Disguise, +5 To SK:Swimming), 
	conditional(+3 to ST:ST when "you resist knockback", -3 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	needs(HT < 14), page(29), cat(Mundane, Non-Racial, Physical, Build), taboo(DI:Skinny, DI:Overweight, DI:Fat)
Dwarfism, -15, gives(-1 To ST:Basic Move, -2 To SK:Disguise, -1 To ST:Size Modifier), 
	conditional(-2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	page(29), cat(Mundane, Non-Racial, Physical, Build, Size Modifier), taboo(DI:Gigantism)
Gigantism, 0, gives(-2 To SK:Disguise, +1 to ST:Size Modifier, +1 to ST:Basic Move), 
	conditional(-2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	page(29), cat(Mundane, Non-Racial, Physical, Build, Size Modifier), taboo(DI:Dwarfism)
Appearance, -4/-8/-16, mods(Appearance), upto(3), page(28),
	levelnames([Average], Unattractive, Ugly, Hideous), 
 	cat(Mundane, Non-Racial, Physical, Physical Appearance, Racial), taboo(AD:Appearance),
	gives(_
		=@indexedvalue(%level, 0, 0, +2) to SK:Intimidation,
		=@indexedvalue(%level, -1, -2, -4) To GR:Appeal,
		=@indexedvalue(%level, -2, -4, -8) To SK:Sex Appeal _
		)
Unnatural Features, -1/-2, upto(5), gives(-1 To SK:Disguise, -1 To SK:Shadowing), page(30),
	cat(Mundane, Non-Racial, Physical, Other Physical Features),
	x(#InputToTagReplace("Please describe the features:", nameext, , "Unnatural Features"))

Addiction ([Physiological]), -5/-10/-20, upto(3), 
	levelnames(Cheap, Expensive, Very Expensive),
	mods(Addiction), page(54), cat(Mundane, Non-Racial, Physical),
	x( #InputReplace("Specify the drug to which you are addicted:", "[Physiological]", , "Addiction (Physiological)"))

Alcoholism, -15, page(54), cat(Mundane, Physical), taboo(DI:Alcoholism (Withdrawn), DI:Troll Brain, QU:Former Alcoholic)
Alcoholism (Withdrawn), -10, page(54), cat(Mundane, Physical), taboo(DI:Alcoholism, DI:Troll Brain, QU:Former Alcoholic)
Bad Back, -15/-25, levelnames(Mild, Severe), page(55), upto(2), cat(Mundane, Non-Racial, Physical)
Bad Grip, -5/-10, upto(3), page(63), cat(Mundane, Non-Racial, Physical, Racial), taboo(DI:Quadruped),
	gives(-2 To CL:Melee Weapon, -2 to SK:Climbing, -2 to SK:Fast-Draw)

Bad Sight (Farsighted), -25, page(63), cat(Mundane, Non-Racial, Physical, Racial),
	taboo(DI:Blindness, DI:Bad Sight (Nearsighted), AD:Acute Vision), mods(Bad Sight),
	conditional(_
			-6 to ST:Vision when "item is within 1 yard",
			-3 to ST:DX when "performing close manual tasks",
			-3 to "CL:Melee Combat" when "in Close Combat" _
			)
Bad Sight (Nearsighted), -25, page(63), cat(Mundane, Non-Racial, Physical, Racial),
	taboo(DI:Blindness, DI:Bad Sight (Farsighted), AD:Acute Vision), mods(Bad Sight),
	conditional(_
			-6 to ST:Vision when "item is more than 1 yard away",
			-2 to "CL:Melee Combat",
			*2 to "CL:Ranged Combat" when "calculating range penalties" _
			)
Bad Smell, -10, page(55), cat(Mundane, Non-Racial, Physical, Racial), gives(-2 to ST:Reaction)
Blindness, -50, page(55), cat(Mundane, Non-Racial, Physical), mods(Blindness),
	taboo(AD:Acute Vision, AD:Night Vision, DI:One Eye, DI:Bad Sight),
	gives(-4 to ST:Dodge, -6 to CL:Melee Combat, -6 to CL:Ranged Combat, -ST:Vision::basescore to ST:Vision)
Cannot Speak, -15, page(56), cat(Mundane, Non-Racial, Physical, Racial), taboo(DI:Disturbing Voice, DI:Mute)

Combat Paralysis, -15, gives(-2 to ST:Fright Check), page(57), cat(Mundane, Non-Racial, Physical), taboo(AD:Combat Reflexes)
Deafness, -20, page(59), cat(Mundane, Non-Racial, Physical), mods(Deafness),
	taboo(AD:Acute Hearing, AD:Ultrahearing), gives(-ST:Perception to ST:Hearing)
Disturbing Voice, -10, page(30), cat(Mundane, Non-Racial, Physical, Racial), taboo(AD:Voice, DI:Mute),
	gives(-2 to GR:VocalFeatures), conditional(-2 to ST:Reaction when "talking to people")
Ham-Fisted, -5, page(60), cat(Mundane, Non-Racial, Physical), taboo(AD:High Manual Dexterity, DI:Quadruped),
	gives(-3 to SK:Fast-Draw, -3 to GR:High Manual Dexterity), conditional(-1 to ST:Reaction when "being tidy or well-groomed matters")
Hard of Hearing, -10, gives(-4 To ST:Hearing), page(63), cat(Mundane, Non-Racial, Physical), mods(Hard of Hearing), taboo(DI:Deafness)
Hunchback, -10, gives(-1 to ST:Reaction, -3 To GR:Hunchback), page(63), cat(Mundane, Non-Racial, Physical)

Klutz, -5, needs(DX <= 13), page(60), cat(Mundane, Non-Racial, Physical)
Lame, -10, page(63), cat(Mundane, Non-Racial, Physical), sets(ST:Basic Move = @int(ST:Basic Speed/2)),
	taboo(ST:Basic Move > @int(ST:Basic Speed/2), DI:No Legs, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	gives(-3 to "CL:Melee Combat")
No Legs, -30, page(63), cat(Mundane, Non-Racial, Physical), sets(ST:Basic Move = 0),
	taboo(ST:Basic Move > 0, DI:Lame, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	conditional(-6 to ST:DX when "using any skill which requires your legs"), mods(Missing Legs),
	gives(-6 to "CL:Melee Combat")
Low Pain Threshold, -10, page(61), cat(Mundane, Non-Racial, Physical), taboo(AD:High Pain Threshold, AD:Supernatural Durability),
	conditional(-1 to ST:Reaction when "from ''macho'' individuals")

Motion Sickness, -10, page(63), cat(Mundane, Non-Racial, Physical)
Mute, -25, page(56), cat(Mundane, Non-Racial, Physical, Racial),
	taboo(AD:Voice, PE:Penetrating Voice, DI:Cannot Speak, DI:Disturbing Voice)

One Arm, -20, page(64), cat(Mundane, Non-Racial, Physical),
	gives(-ST:Two Arm Lifting ST::basescore to ST:Two Arm Lifting ST, -ST:Two Arm Striking ST::basescore to ST:Two Arm Striking ST),
	taboo(DI:Quadruped, DI:Short Arms (2 Arms), DI:One Hand, AD:Ambidexterity, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level)
One Eye, -15, page(64), cat(Mundane, Non-Racial, Physical), taboo(DI:Blindness, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	conditional(-3 to CL:Ranged Combat when "not aiming"), gives(-1 to CL:Melee Combat)
One Hand, -15, page(64), cat(Mundane, Non-Racial, Physical),
	taboo(DI:One Arm, AD:Ambidexterity, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level)
Restricted Diet, -10/-20/-30/-40, levelnames(Very Common, Common, Occasional, Rare),
	page(96), upto(4), cat(Mundane, Physical, Racial, Vampire),
	taboo(AD:Cast-Iron Stomach, AD:Doesn't Eat or Drink),
	x(#InputToTag("Specify the unusual sustenance required:", nameext, , "Restricted Diet"))
Sulphurholism, -15, page(54), cat(Mundane, Physical, Racial, Troll),
	needs(DI:Troll Brain), taboo(DI:Sulphurholism (Withdrawn), QU:Former Sulphurholic)
Sulphurholism (Withdrawn), -10, page(54), cat(Mundane, Physical, Racial, Troll),
	needs(DI:Troll Brain), taboo(QU:Former Sulphurholic)

<Mundane Mental>
Absent-Mindedness, -15, page(54), cat(Mundane, Mental, Non-Racial, Racial),
	conditional(-5 to ST:IQ when "concentrating on another task")

Addiction ([Psychological]), -5/-10/-20, upto(3), 
	levelnames(Cheap, Expensive, Very Expensive),
	mods(Addiction), page(54), cat(Mundane, Mental, Non-Racial),
	x( #InputReplace("Specify the activity to which you are addicted:", "[Psychological]", , "Addiction (Psychological)") )

Bad Temper, -10, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Reaction when "foul-tempered behaviour observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Reaction when "foul-tempered behaviour observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Reaction when "foul-tempered behaviour observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "foul-tempered behaviour observed" _
			)

Berserk, -10, mods(Self-Control, Berserk), page(64), cat(Mundane, Mental, Non-Racial), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Bloodlust, -10, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Reaction when "violent behaviour observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Reaction when "violent behaviour observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Reaction when "violent behaviour observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "violent behaviour observed" _
			)

Bully, -10, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control), gives(-2 to ST:Reaction),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Reaction when "bullying observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Reaction when "bullying observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Reaction when "bullying observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "bullying observed" _
			)

Callous, -5, gives(-3 To SK:Teaching), page(56), cat(Mundane, Mental, Non-Racial, Racial),
	conditional(-1 to ST:Reaction when "past victim, or has Empathy", -3 to SK:Psychology when "attempting to help people", +1 to SK:Interrogation when "you use threats or torture", +1 to SK:Intimidation when "you use threats or torture")
   
Charitable, -15, mods(Self-Control), page(65),
	cat(Mundane, Mental, Non-Racial, Virtuous Flaws), taboo(DI:Greed, DI:Dwarfish Greed),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Chummy, -5, page(56), cat(Mundane, Mental, Non-Racial), taboo(DI:Loner, DI:Gregarious), conditional(-1 to ST:IQ when "alone")
Gregarious, -10, page(56), cat(Mundane, Mental, Non-Racial), taboo(DI:Chummy, DI:Loner),
	conditional(-1 to ST:IQ when "in a group of four or less", -4 to ST:IQ when "alone")

Clueless, -10, gives(-4 To SK:Savoir-Faire, -2 to ST:Reaction), page(61), cat(Mundane, Mental, Non-Racial, Mental Limitations)

Code of Honour, -5/-10, page(56), upto(3), cat(Mundane, Mental, Non-Racial),
	levelnames(Informal or Safe, Formal or Dangerous, Highly Formal AND Dangerous),
	x(#InputToTag("Specify the type of Code of Honour:", nameext, , "Code of Honour"))
Code of Honour (Academic), -5, page(56), cat(Mundane, Mental, Non-Racial)
Code of Honour (Assassin's), -10, page(56), cat(Mundane, Mental, Non-Racial)
Code of Honour (Chivalry), -15, page(56), cat(Mundane, Mental, Non-Racial)
Code of Honour (Dark Lord's), -10, page(56), cat(Mundane, Mental, Non-Racial)
Code of Honour (D'reg's), -5, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Gentleman's), -10, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Igor's), -5, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Klatchian), -10, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Pirate's), -5, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Professional), -5, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Soldier's), -10, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Vampire Who Plays Fair), -5, page(111), cat(Mundane, Mental, Racial, Vampire)
Code of Honour (Watchman's), -5, page(57), cat(Mundane, Mental, Non-Racial)
Code of Honour (Wise-Woman's), -5, page(57), cat(Mundane, Mental, Non-Racial)

Compulsive Behavior, -5/-10, mods(Self-Control), page(58), upto(3), levelnames(,,),
	cat(Mundane, Mental, Non-Racial, Racial, Vampire),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	x( #InputToTag("Specify the type of compulsive behavior:", nameext, , "Compulsive Behavior") )
Compulsive Barbarian Heroism, -10, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Carousing, -5, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Carousing (Puritannical Setting), -10, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Gambling, -5, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial), 
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Lying, -15, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial), taboo(DI:Truthfulness), 
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Neatness, -5, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial, Racial, Vampire),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Risk-Taking, -15, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial), 
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Compulsive Spending, -5, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to SK:Merchant when "you bargain or haggle",
			=@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to SK:Merchant when "you bargain or haggle",
			=@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to SK:Merchant when "you bargain or haggle",
			=@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to SK:Merchant when "you bargain or haggle" _
			)
Compulsive Vowing, -5, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial), 
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Confused, -10, mods(Self-Control), page(61), cat(Mundane, Mental, Non-Racial, Mental Limitations), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Cowardice, -10, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control), taboo(AD:Fearlessness),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
		=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Reaction when "from non-cowards, when cowardice matters", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Reaction when "from non-cowards, when cowardice matters", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Reaction when "from non-cowards, when cowardice matters", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "from non-cowards, when cowardice matters",
		=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Fright Check when "physical danger involved", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Fright Check when "physical danger involved", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Fright Check when "physical danger involved", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Fright Check when "physical danger involved"_
			)

Curious, -5, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control), taboo(DI:Incurious),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -2 else 0 ) to ST:Reaction when "excessive curiosity observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -1 else 0 ) to ST:Reaction when "excessive curiosity observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -1 else 0 ) to ST:Reaction when "excessive curiosity observed" _
			)

Delusion, -5/-10/-15, upto(3), levelnames(Minor, Major, Severe), page(59), 
	cat(Delusions, Mundane, Mental), gives(-1 to ST:Reaction),
	x(#InputToTag("Specify your delusion here:", nameext, , "Delusion"))
Delusion ("My combat sports training is fully effective in a real fight"), -10, page(59), 
	cat(Delusions, Mundane, Mental), conditional(-2 to ST:Reaction when "noticed by a genuine veteran warrior")
Delusion ("My superior social class automatically makes me a good warrior"), -10,
	page(59), needs(ST:Status = 1),
	cat(Delusions, Mundane, Mental), conditional(-2 to ST:Reaction when "noticed by a genuine veteran warrior")

Disciplines of Faith, -5/-10, upto(3), page(59), cat(Mundane, Mental, Non-Racial), levelnames(,,),
	x(#InputToTag("Specify your set of rules here:", nameext, , "Disciplines of Faith"))
Disciplines of Faith (Asceticism), -15, page(59), cat(Mundane, Mental, Non-Racial), taboo(AD:Wealth, AD:Status::baselevel > 0)
Disciplines of Faith (Monasticism), -10, page(59), cat(Mundane, Mental, Non-Racial), taboo(AD:Wealth, AD:Status::baselevel > 0)
Disciplines of Faith (Mysticism), -10, page(59), cat(Mundane, Mental, Non-Racial), conditional(-2 to ST:Reaction when "not a devout co-religionist")
Disciplines of Faith (Ritualism), -5, page(59), cat(Mundane, Mental, Non-Racial)

Dwarfish Greed, -15, mods(Self-Control), page(64), cat(Mundane, Mental, Racial), taboo(DI:Charitable, DI:Greed),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -6 else 0 ) to ST:Reaction when "when rampant greed is observed by non-dwarfs", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -4 else 0 ) to ST:Reaction when "when rampant greed is observed by non-dwarfs", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -3 else 0 ) to ST:Reaction when "when rampant greed is observed by non-dwarfs", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "when rampant greed is observed by non-dwarfs" _
			)

Easy to Read, -10, page(60), cat(Mundane, Mental, Non-Racial), description(Gives others +4 on all Empathy, Body Language, and Psychology rolls to discern your intentions or the truth of your words, and +4 to their IQ, Detect Lies, and Gambling rolls in any Quick Contest with your Acting, Fast-Talk, or Gambling skill when you try to lie or bluff.)
Fanaticism, -15/-15, levelnames( , Extreme), page(62), upto(2), cat(Mundane, Mental, Non-Racial, Obsessive Ideas),
	x(#InputToTag("Specify the country, organization, philosophy, or religion that you put ahead of everything else:", nameext, , "Fanaticism")),
	conditional(=+@if(%level = 2 THEN 3) to ST:Will when "resisting Brainwashing, Interrogation, and Mind Control")
Fearfulness, -2/-4, gives(-1 To Fright Check), page(60), upto(ST:Will - 3), cat(Mundane, Mental, Non-Racial),
	taboo(AD:Fearlessness, AD:Unfazeable)

Gluttony, -5, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control), taboo(AD:Doesn't Eat or Drink),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -2 else 0 ) to ST:Reaction when "when gluttony is observed in action", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -1 else 0 ) to ST:Reaction when "when gluttony is observed in action", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -1 else 0 ) to ST:Reaction when "when gluttony is observed in action" _
			)

Greed, -15, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control, Racial), taboo(DI:Charitable, DI:Dwarfish Greed),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -6 else 0 ) to ST:Reaction when "when rampant greed is observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -4 else 0 ) to ST:Reaction when "when rampant greed is observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -3 else 0 ) to ST:Reaction when "when rampant greed is observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "when rampant greed is observed" _
			)

Gullibility, -10, gives(-3 To SK:Merchant), mods(Self-Control), page(60), cat(Mundane, Mental, Non-Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	taboo(SK:Detect Lies)

Hidebound, -5, page(61), cat(Mundane, Mental, Mental Limitations, Non-Racial, Racial),
	conditional(-2 to SK:Artist when "creativity matters", -2 to SK:Engineer when "making a new invention")

Honesty, -10, mods(Self-Control), page(66), cat(Mundane, Mental, Non-Racial, Racial, Virtuous Flaws),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Impulsiveness, -10, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Reaction when "from sensible people, when impulsiveness is observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Reaction when "from sensible people, when impulsiveness is observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Reaction when "from sensible people, when impulsiveness is observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "from sensible people, when impulsiveness is observed",
			)

Incurious, -5, mods(Self-Control), page(61), cat(Mundane, Mental, Non-Racial, Mental Limitations), taboo(DI:Curious),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Innumerate, -5, page(60), cat(Mundane, Mental, Non-Racial, Racial), taboo(AD:Lightning Calculator, AD:Mathematical Ability)

Intolerance, -5/-10, upto(2), page(60), cat(Mundane, Mental, Non-Racial),
	levelnames(One group, Total Intolerance),
	x(#InputToTag("Specify the group or groups you are Intolerant of:", nameext, , "Intolerance"))

Jealousy, -10, page(60), cat(Mundane, Mental, Non-Racial)

Kleptomania, -15, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial), 
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Laziness, -10, page(61), cat(Mundane, Mental, Non-Racial)

Lecherousness, -15, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -6 else 0 ) to ST:Reaction when "when lechery is observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -4 else 0 ) to ST:Reaction when "when lechery is observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -3 else 0 ) to ST:Reaction when "when lechery is observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "when lechery is observed" _
			)
Literal-Minded, -10, page(61), cat(Mundane, Mental, Mental Limitations, Non-Racial),
	taboo(DI:Clueless, DI:No Sense of Humour)
Literal-Minded (Combined with Clueless or No Sense of Humour), -5, page(61),
	cat(Mundane, Mental, Mental Limitations, Non-Racial), needs(DI:Clueless | DI:No Sense of Humour)
Low Empathy, -20, gives(-3 To GR:Low Empathy), page(61), cat(Mundane, Mental, Mental Limitations, Non-Racial),
	taboo(AD:Empathy, AD:Sensitive)
Megalomania, -10, page(59), cat(Delusions, Mundane, Mental, Non-Racial),
	conditional(+2 to ST:Reaction when "young or naive individuals", -2 to ST:Reaction when "non-frothing NPCs")

Miserliness, -10, mods(Self-Control), page(62),
	cat(Mundane, Mental, Non-Racial), taboo(DI:Compulsive Generosity, DI:Compulsive Spending),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Nightmares, -5, mods(Self-Control), page(B145), cat(Mundane, Mental, Non-Racial), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

No Sense of Humour, -10, page(65), cat(Mundane, Mental, Non-Racial, Racial, Unsociable Flaws),
	conditional(-2 to ST:Reaction)
Non-Iconographic, -10, page(B146), cat(Mundane, Mental, Non-Racial)
Oblivious, -5, gives(-1 To GR:Oblivious), page(B146),
	taboo(DI:Totally Oblivious), cat(Mundane, Mental, Non-Racial, Mental Limitations)

Obsession, -5/-10, mods(Self-Control), levelnames(Short-Term Goal, Long-Term Goal),
	upto(2), page(62), cat(Mundane, Mental, Non-Racial, Obsessive Ideas, Racial, Vampire),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	x(#InputToTagReplace("Describe your Obsession:", nameext, , "Obsession"))

On the Edge, -15, mods(Self-Control), page(B147), cat(Mundane, Mental, Non-Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(-2 to ST:Reaction when "people witness behavior", +2 to ST:Reaction when "witnessed by people who value bravery over self-preservation")

Overconfidence, -5, mods(Self-Control), page(62), cat(Mundane, Mental, Non-Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(+2 to ST:Reaction when "young or naive individuals", -2 to ST:Reaction when "experienced NPCs")

Pacifism (Reluctant Killer), -5, page(62), cat(Mundane, Mental, Non-Racial),
	taboo(DI:Pacifism (Cannot Harm Innocents), DI:Pacifism (Self-Defence Only))
Pacifism (Cannot Harm Innocents), -10, page(62), cat(Mundane, Mental, Non-Racial),
	taboo(DI:Pacifism (Reluctant Killer), DI:Pacifism (Self-Defence Only))
Pacifism (Self-Defence Only), -15, page(62), cat(Mundane, Mental, Non-Racial),
	taboo(DI:Pacifism (Reluctant Killer), DI:Pacifism (Cannot Harm Innocents))

Paranoia, -10, page(59), cat(Delusions, Mundane, Mental), conditional(-2 to ST:Reaction)

Phobia, -5/-10, upto(4), mods(Self-Control), page(62), cat(Mundane, Mental, Non-Racial), levelnames(,,,),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control),
	page(53)), x(#InputToTag("Specify what you're afraid of here:", nameext, , "Phobia"))

Phobia (%examplelist%), %examplecostlist%, displaycost(variable),
	mods(Self-Control), page(62), cat(Mundane, Mental, Non-Racial, Phobias, Racial, Vampire),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	x(#ChoiceList(_
			name(example),
			title(Phobia: Choose a Phobia),
			text(Choose a phobia from the list of examples provided:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Demophobia: Crowds"=-15,
				"Scotophobia: Darkness"=-15,
				"Claustrophobia: Enclosed Spaces"=-15,
				"Minor Pyrophobia: Uncontrolled Flames"=-5,
				"Major Pyrophobia: Any Fire"=-10,
				"Acrophobia: Heights"=-10,
				"Teratophobia: Monsters"=-15,
				"Octophobia: The Number 8"=-5,
				"Agoraphobia: Open Spaces"=-10,
				"Xenophobia: Strange and Unknown Things"=-15,
				"Heliophobia: The Sun"=-15,
				"Genuan Fairy-Tale Terror"=-5_
			)_
			)_
	), noresync(yes)

Post-Combat Shakes, -5, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Pyromania, -5, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Sadism, -15, mods(Self-Control), page(64), cat(Mundane, Mental, Non-Racial, Poor Impulse Control, Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -6 else 0 ) to ST:Reaction when "when habitual cruelty is observed", =@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -4 else 0 ) to ST:Reaction when "when habitual cruelty is observed", =@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -3 else 0 ) to ST:Reaction when "when habitual cruelty is observed", =@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "when habitual cruelty is observed" _
			)

Selfish, -5, mods(Self-Control), page(65),
	cat(Mundane, Mental, Non-Racial, Racial, Unsociable Flaws), taboo(DI:Selfless),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Selfless, -5, mods(Self-Control), page(66), cat(Mundane, Mental, Non-Racial, Racial, Virtuous Flaws), taboo(DI:Selfish),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Sense of Duty, -2/-5/-10/-15/-20, levelnames(Individual, Small Group, Large Group, Entire Race, Every Living Being),
	page(B153), upto(5), cat(Mundane, Mental, Non-Racial),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known"),
	x(#InputToTag("Specify the person or group you have a Sense of Duty towards:", nameext, , "Sense of Duty"))

Short Attention Span, -10, mods(Self-Control), page(B153), cat(Mundane, Mental, Non-Racial, Racial), taboo("AD:Single-Minded")
Shyness, -5/-10/-20, gives(=@indexedvalue(%level, -1, -2, -4) To GR:Shyness),
	levelnames(Mild, Severe, Crippling), page(B154), upto(3), cat(Mundane, Mental, Non-Racial)
Slave Mentality, -40, page(B154), cat(Mundane, Mental, Non-Racial, Racial)

Split Personality, -15, mods(Self-Control), page(B156), cat(Mundane, Mental, Non-Racial),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)),
	gives(-1 to ST:Reaction), conditional(-3 to ST:Reaction when "others witness a personality shift")

Squeamish, -10, mods(Self-Control), page(63), cat(Mundane, Mental, Non-Racial, Phobias), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Stubbornness, -5, page(65), cat(Mundane, Mental, Non-Racial, Unsociable Flaws),
	conditional(-1 to ST:Reaction when "attitude noticed")
Totally Oblivious, -5, gives(-1 To GR:Oblivious), page(61),
	taboo(DI:Oblivious, SK:Acting, SK:Fast-Talk, SK:Fortune-Telling, SK:Intimidation, SK:Interrogation, SK:Politics),
	conditional(-4 to SK:Acting when "used at default", -4 to SK:Fast-Talk when "used at default", -4 to SK:Fortune-Telling when "used at default", -4 to SK:Intimidation when "used at default", -4 to SK:Interrogation when "used at default", -4 to SK:Politics when "used at default"),
	cat(Mundane, Mental, Mental Limitations, Non-Racial)
Trickster, -15, mods(Self-Control), page(58), cat(Mundane, Mental, Non-Racial),
	conditional(=-1 to ST:Reaction when "from people who disapprove"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))
Truthfulness, -5, mods(Self-Control), page(66), cat(Mundane, Mental, Non-Racial), taboo(DI:Compulsive Lying), 
	gives(-5 to SK:Fast-Talk),
	conditional(-5 to SK:Acting when "your purpose is to deceive"),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53))

Unluckiness, -10, page(65), cat(Mundane, Mental, Non-Racial)
Vow, -5/-10/-15, levelnames(Minor, Major, Great), page(B160), upto(3), cat(Mundane, Mental, Non-Racial),
	x(#InputToTag("Please describe the nature of your Vow:", nameext, , "Vow"))
Workaholic, -5, page(B162), cat(Mundane, Mental, Non-Racial),
	conditional(+1 to ST:Reaction, -1 to ST:Reaction), taboo(DI:Laziness)

<Mundane Social>
Odious Personal Habit, -5/-10, upto(3), page(29), cat(Mundane, Non-Racial, Social),
	conditional(-1 to ST:Reaction when "people notice your problem"),
	x(#InputToTag("Specify the Odious Personal Habit:", nameext, , "Odious Personal Habit"))
Odious Racial Habit, -5/-10, upto(3), page(96), cat(Mundane, Racial, Social),
	conditional(-1 to ST:Reaction when "people are aware of the issue"),
	x(#InputToTag("Specify the Odious Racial Habit:", nameext, , "Odious Racial Habit"))
Wealth, -10/-15/-25, upto(3), page(33), levelnames([Average], Struggling, Poor, Dead Broke), cat(Mundane, Social, Wealth),
	gives(=@indexedvalue(%level, -5, -8, -10) To ST:Wealth Modifier),
	taboo(AD:Wealth, DI:Wealth > me::level, DI:Wealth < me::level)

Reputation, -5/-10, mods(Reputation Disadvantage), page(34), upto(4), cat(Mundane, Social, Influence),
	x(#InputToTag("Please describe the nature of the Reputation:", nameext, , "Reputation")),
	initmods(_
			People Affected: Almost everyone on the Disc, *1, shortname(Almost everyone), group(Reputation) _
			| Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation) _
			),
	conditional(-1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you")

Status, -5/-10, page(37), gives(-1 to ST:Status), cat(Mundane, Non-Racial, Social, Influence), taboo(AD:Status),
	upto(2 + @indexedvalue(AD:Wealth::level, 0, 1, 1, 1, 2, 3))

Dependent, -1/-2/-5/-10/-15, upto(5),
	mods(Dependent, Frequency of Appearance), page(B131), cat(Mundane, Social),
	levelnames(No more than 100%, No more than 75%, No more than 50%, No more than 25%, 0 or fewer points), 
	initmods(_
			Importance: Friend, *1, shortname(Friend), group(Dependent) _
			| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			),
	x(#InputToTag("Name or describe your Dependent:", nameext, , "Dependent"))

Duty, -2/-5/-10/-15, mods(Duty), page(B134), cat(Mundane, Social), upto(4),
	levelnames("6 or less (quite rarely)", "9 or less (fairly often)", "12 or less (quite often)", "15 or less (almost always)"),
	x(#InputToTag("Please describe the nature of your Duty:", nameext, , "Duty"))

Enemy (One Person), -5/-10/-20, upto(3), mods(Enemy, Evil Twin, Frequency of Appearance), 
   page(B135), cat(Mundane, Social),
   levelnames("Less powerful than the PC", "Equal in power to the PC", "More powerful than the PC"),
   initmods(_
		Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
		),
	x(#InputToTagReplace("Name or describe your Enemy:", nameext, , "Enemy (One Person)"))

Enemy (Less powerful group), -10/-20/-30, upto(3), mods(Enemy, Frequency of Appearance), 
	page(B135), cat(Mundane, Social),
	levelnames("Small group (3-5 people)", "Medium-sized group (6-20 people)", "A large group (21-1,000 people)"),
	initmods(_
			Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			),
	x(#InputToTagReplace("Name or describe your Enemy Group:", nameext, , "Enemy (Less powerful group)"))

Enemy (Formidable group), -30/-40, upto(2), mods(Enemy, Frequency of Appearance), 
	page(B135), cat(Mundane, Social),
	levelnames("medium-sized group, some formidable or super-human", "utterly formidable group"),
	initmods(_
			Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			),
	x(#InputToTagReplace("Name or describe your Enemy Group:", nameext, , "Enemy (Formidable group)"))

Secret, -5/-10/-20/-30, upto(4), page(65), cat(Mundane, Social),
	levelnames("Serious Embarrassment", "Utter Rejection", "Imprisonment or Exile", "Possible Death"),
	x(#InputToTag("Please describe the nature of your Secret:", nameext, , "Secret"))
Secret Identity (Normal Status), -15/-20/-30/-40, page(65), cat(Mundane, Social), needs(ST:Status < 3),
	levelnames("Serious Embarrassment", "Utter Rejection", "Imprisonment or Exile", "Possible Death")
Secret Identity (High Status), -15/-20/-30/-40, page(65), cat(Mundane, Social), needs(ST:Status = 3),
	levelnames("Serious Embarrassment", "Utter Rejection", "Imprisonment or Exile", "Possible Death")

Social Stigma, -5/-10, upto(4), page(36), cat(Mundane, Non-Racial, Racial, Social),
	x( #InputToTag("Please describe the nature of your Stigma:", nameext, , "Social Stigma") )
Social Stigma (Logical Impossibility), -10, page(36), cat(Mundane, Non-Racial, Racial, Social)
Social Stigma (Minor), -5, page(36), cat(Mundane, Social),
	conditional(-2 to ST:Reaction when "dealing with others as an adult")
Social Stigma (Minority Group), -10, page(36), cat(Mundane, Non-Racial, Racial, Social),
	conditional(-2 to ST:Reaction)
Social Stigma (Monster), -15, page(36), cat(Mundane, Social),
	conditional(-3 to ST:Reaction, +3 to SK:Intimidation when "you have the upper hand")
Social Stigma (Overdressed Foreigner), -10, page(36), cat(Mundane, Non-Racial, Social),
	conditional(-1 to ST:Reaction when "dealing with non-cosmopolitan people who don't want your money", -3 to ST:Reaction when "thought to be a wizard and dealing with UU graduates and barbarian heroes")
Social Stigma (Second-Class Citizen), -5, page(36), cat(Mundane, Non-Racial, Racial, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Uneducated), -5, page(36), cat(Mundane, Non-Racial, Racial, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Valuable Property), -10, page(B155), cat(Mundane, Social)

************************************************************************************************************************
[QUIRKS]
************************************************************************************************************************

<General>
_New Quirk, -1, noresync(yes), x(#edit)

_Unused Quirk 1, -1
_Unused Quirk 2, -1
_Unused Quirk 3, -1
_Unused Quirk 4, -1
_Unused Quirk 5, -1

<Mental>
Attentive, -1, page(66), cat(Mental, Non-Racial)
Autocondimentor, -1, page(66), cat(Mental, Non-Racial)
Blunt and Tactless, -1, page(101), cat(Banshee, Racial)
Brawling Society, -1, page(99), cat(Racial, Trollish)
Broad-Minded, -1, page(66), cat(Mental, Non-Racial)
Considers Dwarf Gender a Very Private Matter, -1, page(100), cat(Dwarfish, Mental, Racial)
Careful, -1, page(67), cat(Mental, Non-Racial)
Chauvinistic, -1, page(67), cat(Mental, Non-Racial)
Code of Honour, -1, page(67), cat(Mental, Non-Racial),
	x(#InputReplace("Specify the character's Minor Code:", nameext, , "Minor Code of Honour"))
Collects Own Snot and Earwax, -1, page(103), cat(Goblin, Mental, Racial)
Congenial, -1, page(67), cat(Mental, Non-Racial)
Delusion, -1 , page(67), cat(Mental, Non-Racial),
	x(#InputReplace("Specify the character's trivial Delusion:", nameext, , "Trivial Delusion"))
Delusion (Spelling my name backwards disguises it perfectly), -1, page(99), cat(Racial, Vampiric)
Dislikes [specify], -1, page(67), cat(Mental, Non-Racial),
	x(#InputReplace("Specify what the character dislikes:", "[specify]", , "Dislikes"))
Dislikes Cramped Conditions, -1, page(101), cat(Banshee, Racial)
Dislikes Garlic, -1, page(110), cat(Non-Racial, Racial, Vampiric)
Dislikes Water, -1, page(107), cat(Feline, Non-Racial, Racial)
Distractible, -1, page(67), cat(Mental, Non-Racial)
Doesn't Go Where Not Asked, -1, page(111), cat(Mental, Racial, Vampiric)
Doggy Responses, -1, page(99), cat(Canine, Lycanthropic, Racial)
Dreamer, -1, page(67), cat(Mental, Non-Racial)
Dull, -1, page(67), cat(Mental, Non-Racial)
Former Alcoholic, -1, page(67), taboo(DI:Alcoholism, DI:Troll Brain), cat(Mental, Non-Racial)
Former Sulphurholic, -1, page(55), needs(DI:Troll Brain), taboo(DI:Sulphurholism), cat(Mental, Non-Racial)
Giggles a Lot, -1, page(67), cat(Elvish, Non-Racial)
Habit, -1, page(67), cat(Mental, Non-Racial),
	x(#InputToTag("Specify what the character's habit is:", nameext, , "Habit"))
"Hunter's Habits", -1, page(99), cat(Lycanthropic, Racial)
Expression, -1, page(67), cat(Mental, Non-Racial),
	x(#InputToTag("Specify what the character's expression is:", nameext, , "Expression"))
Humble, -1, page(67), cat(Mental, Non-Racial)
Imaginative, -1, page(67), cat(Mental, Non-Racial)
Likes [specify], -1, page(67), cat(Mental, Non-Racial),
	x( #InputReplace("Specify what the character likes:", "[specify]", , "Likes") )
Nosy, -1, page(67), cat(Mental, Non-Racial)
Obsession, -1, page(67), cat(Mental, Non-Racial),
	x(#InputToTag("Specify what the character's petty Obsession is:", nameext, , "Obsession"))
Personality Change, -1, page(67), cat(Mental, Non-Racial),
	x(#InputToTag("Specify what Disadvantage the character acquires, and when:", nameext, , "Personality Change"))
Personality Change (Gains Bad Temper When Drinking), -1, page(67), cat(Mental, Non-Racial, Racial)
Prefers To Be Above Ground Level, -1, page(101), cat(Gargoyle, Mental, Non-Racial, Racial)
Proud, -1, page(68), cat(Mental, Non-Racial)
Responsive, -1, page(68), cat(Mental, Non-Racial)
Staid, -1, page(68), cat(Mental, Non-Racial)
Terrifying Singer, -1, page(68), needs(ST:HT = 12), taboo(SK:Singing), cat(Mental, Non-Racial)
Touchy About Height and Beard, -1, page(100), cat(Dwarfish, Mental, Racial)
Uncongenial, -1, page(68), cat(Mental, Non-Racial)
Vow, -1, page(68), cat(Mental, Non-Racial),
	x(#InputToTag("Specify the character's trivial Vow:", nameext, , "Vow"))

<Physical>
Alcohol Intolerance, -1, page(68), cat(Non-Racial)
Bowlegged, -1, page(68), gives(-1 To SK:Jumping), cat(Non-Racial)
Cannot Float, -1, page(99), cat(Gargoyle, Golem, Racial, Trollish)
Cannot Run Long Distances, -1, page(99), cat(Canine, Dwarfish, Racial)
Closes Eyes and Screams to Intimidate Victims, -1, page(101), cat(Racial, Banshee)
Distinctive Features, -1, page(68), gives(-1 To SK:Disguise, -1 to SK:Shadowing), cat(Non-Racial),
	x( #InputToTag("Specify the character's Distinctive Feature:", nameext, , "Distinctive Feature") )
Horrible Hangovers, -1, page(68), cat(Non-Racial)
Minor Handicap, -1, page(68), cat(Non-Racial),
	x(#InputToTag("Specify the character's Minor Handicap:", nameext, , "Minor Handicap"))
Nervous Stomach, -1, page(68), cat(Non-Racial)
No Staff, -1, page(68), needs(SK:Magic (Wizardry)), taboo(AD:Superior Staff), cat(Magical, Non-Racial)
Reflexively Grabs and Consumes Small Flying Creatures, -1, page(101), cat(Banshee, Racial)
Short Lifespan, -1, page(99), cat(Racial)
Silver Aversion, -1, page(99), needs(DI:Vulnerability (Silver Weapons) | DI:Vulnerability (Silver)), cat(Lycanthropic, Racial)
Sunburns Easily, -1, page(99), cat(Elvish, Racial)
Weak Spot, -1, page(99), needs(AD:Damage Resistance = 2), cat(Racial, Trollish)

************************************************************************************************************************
[SKILLS]
************************************************************************************************************************
<_New Skills>
_New Parent Item, N/A, isparent(yes), upto(0 LimitingTotal), cat(_General, _New Skills),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, , "New Parent Item"))

_New Skill, %typelist%, cat(_General, _New Skills),
	x(#InputToTagReplace("Please enter the name of this Skill:" , name, , "New Skill"),
	#ChoiceList(_
			name(parry),
			title(New Skill: Can this skill be used to parry in combat?),
			text(Can this skill be used to parry in combat? Choose one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"_No Parry",
				"Normal Parry",
				"Knife Parry"=-1,
				"Staff Parry"=+2_
			),
			aliaslist(_
				"",
				"@int(%level/2)+3",
				"@int(%level/2)+3-1",
				"@int(%level/2)+3+2"_
			)_
			),
	#ChoiceList(_
			name(block),
			title(New Skill: Can this skill be used to Block in combat?),
			text(Can this skill be used to block in combat? Choose one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"_No Block",
				"Normal Block"_
			),
			aliaslist(_
				"",
				"@int(%level/2)+3"_
			)_
			),
	#ChoiceList(_
			name(type),
			title(New Skill: Choose a Skill Type),
			text(Choose the type of skill from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"DX/E",
				"DX/A",
				"DX/H",
				"DX/VH",
				"IQ/E",
				"IQ/A",
				"IQ/H",
				"IQ/VH",
				"HT/E",
				"HT/A",
				"HT/H",
				"HT/VH",
				"Will/E",
				"Will/A",
				"Will/H",
				"Will/VH",
				"Per/E",
				"Per/A",
				"Per/H",
				"Per/VH"_
			)_
			),
	#edit _
	), noresync(yes), parryat(%parryaliaslist%), blockat(%blockaliaslist%)

<Academic>
Astronomy, IQ/H, tl(0-5), default(IQ - 6), page(70), cat(_General, Scholarly)
Astrozoology, IQ/H, default(IQ - 6), page(70), cat(_General, Scholarly)
History, IQ/H, default(IQ - 6), page(70), cat(_General, Scholarly),
	x(#InputToTag("You must specialise in a period and theme, period and region, small nation, city, etc.:", nameext, , "History"))
Literature, IQ/H, default(IQ - 6), page(70), cat(_General, Scholarly)
Mathematics (Applied), IQ/H, tl(0-5), default(IQ - 6), page(70), cat(_General, Scholarly)
Mathematics (Pure), IQ/H, tl(0-5), default(IQ - 6), page(70), cat(_General, Scholarly)
Metallurgy, IQ/H, tl(0-5), default(IQ - 6), page(70), cat(_General, Scholarly)
Natural Philosophy, IQ/H, tl(0-5), default(IQ - 6), page(71), cat(_General, Scholarly)
Philosophy, IQ/H, default(IQ - 6), page(71), cat(_General, Scholarly),
	x(#InputToTag("You must specialise in a particular school of philosophy:", nameext, , "Philosophy"))

<Animal>
Animal Handling, IQ/A, default(IQ - 5), page(71), cat(_General, Animal),
	x(#InputToTag("You must specialise in a category of animals:", nameext, "Equines", "Animal Handling"))
Falconry, IQ/A, default(IQ - 5), page(71), cat(_General, Animal)
Mimicry (Animal Sounds), IQ/H, default(IQ - 6), page(78), cat(_General, Animal, Entertainment, Outdoor/Exploration)
Mimicry (Bird Calls), IQ/H, default(IQ - 6), page(78), cat(_General, Animal, Entertainment, Outdoor/Exploration)
Mount, DX/A, default(DX - 5), page(78), cat(_General, Animal, Athletic)
Naturalist, IQ/H, default(IQ - 6), page(79), cat(_General, Animal, Outdoor/Exploration, Plant)
Packing, IQ/A, default(IQ - 5), page(80), cat(_General, Animal, Professional, Travel)
Riding, DX/A, default(DX - 5), page(81), cat(_General, Animal, Travel),
	x(#InputToTag("You must specialise by riding beast type:", nameext, "Equines", "Riding"))
Teamster, IQ/A, default(IQ - 5), page(83), taboo(DI:Motion Sickness), cat(_General, Animal, Travel),
	x(#InputToTag("You must specialise by animal type:", nameext, "Equines", "Teamster"))
Veterinary, IQ/H, tl(0-5), page(77), cat(_General, Animal, Medical)

<Artistic>
Artist, IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Entertainment),
	x(#InputToTag("You must specialise in a medium:", nameext, , "Artist"))
Artist (Calligraphy), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Craft, Entertainment)
Artist (Drawing), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Entertainment)
Artist (Illumination), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Craft, Entertainment)
Artist (Interior Decorating), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Craft, Entertainment, Social)
Artist (Painting), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Craft, Entertainment)
Artist (Pottery), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Entertainment, Craft)
Artist (Sculpting), IQ/H, default(IQ - 6), page(71), cat(_General, Artistic, Entertainment, Craft)
Conducting, IQ/A, default(IQ - 5), page(71), cat(_General, Entertainment)
Dancing, DX/A, default(DX - 5), page(71), cat(_General, Assassin, Entertainment, Social)
Directing, IQ/A, default(IQ - 5), page(71), cat(_General, Entertainment)
Jeweller, IQ/H, tl(1-5), default(IQ - 6), page(71), cat(_General, Craft)
Musical Composition, IQ/H, page(71), cat(_General, Artistic, Entertainment)
Musical Instrument, IQ/H, page(71), cat(_General, Artistic, Assassin, Entertainment),
	x(#InputToTag("You must specialise in a particular instrument:", nameext, , "Musical Instrument"))
Performance, IQ/A, default(IQ - 5), page(71), cat(_General, Artistic, Entertainment)
Poetry, IQ/A, default(IQ - 5), page(71), cat(_General, Artistic, Entertainment)
Singing, HT/E, default(HT - 4), page(71), cat(_General, Entertainment, Social)

<Athletic>
Acrobatics, DX/H, default(DX - 6), page(78), cat(_General, Assassin, Movement)
Aerobatics, DX/H, default(DX - 6), page(78), cat(_General, Movement)
Bicycling, DX/E, default(DX - 4), page(83), taboo(DI:Motion Sickness), cat(_General, Travel, Vehicle)
Climbing, DX/A, default(DX - 5), page(79), cat(_General, Assassin, Movement, Criminal/Street, Outdoor/Exploration)
Hiking, HT/A, default(HT - 5), page(79), cat(_General, Military, Movement, Outdoor/Exploration, Travel)
Jumping, DX/E, page(79), cat(_General, Assassin, Movement)
Running, HT/A, default(HT - 5), page(79), cat(_General, Movement)
Sports, DX/A, default(DX - 5), page(74), cat(_General, Athletic, Game/Sport),
	x(#InputToTag("Please specify a particular sport:", nameext, , "Sports"))
Sports (Aargrooha), DX/A, default(DX - 5), page(74), cat(_General, Athletic, Game/Sport)
Sports (Darts), DX/A, default(DX - 5), page(74), cat(_General, Athletic, Game/Sport)
Sports (Modern Ankh-Morpork Football), DX/A, default(DX - 5), page(74), cat(_General, Athletic, Game/Sport)
Swimming, HT/E, default(HT - 4), page(79), cat(_General, Movement, Outdoor/Exploration)
Throwing, DX/A, default(DX - 3), page(78), cat(_General, Athletic, Missile Weapons, Ranged Combat)

<Business>
Accounting, IQ/H, default(IQ - 6), page(79), cat(_General, Business, Government, Professional)
Administration, IQ/A, default(IQ - 5), page(71), cat(_General, Business, Government, Social)
Current Affairs (Business), IQ/E, tl(0-5), default(IQ - 4), page(72), cat(_General, Business, Everyman, Social)
Diplomacy, IQ/H, default(IQ - 6), page(74), cat(_General, Business, Influence, Police/Watch, Social),
	gives(=@if(me::level >= 20 then 2 else 0) to ST:Reaction)
Finance, IQ/H, page(79), cat(_General, Business, Professional)
Law, IQ/H, default(IQ - 6), page(76), cat(_General, Business, Government, Police/Watch),
	x(#InputToTag("You must specialise:", nameext, "Ankh-Morpork Police", "Law"))
Merchant, IQ/A, default(IQ - 5), page(78), cat(_General, Business, Social)
Politics, IQ/A, default(IQ - 5), page(79), cat(_General, Business, Government, Social)
Professional Skill (Filing Clerk), IQ/A, default(IQ - 5), page(80), cat(_General) 
Propaganda, IQ/A, tl(0-5), default(IQ - 5), page(80), cat(_General, Business, Government, Military, Social)
Public Speaking, IQ/A, default(IQ - 5), page(80), cat(_General, Business, Government, Scholarly, Social)
Savoir-Faire (High Society), IQ/E, default(IQ - 4), page(75), cat(_General, Assassin, Business, Influence, Social)

<Craft>
Armoury ([Type]), IQ/A, tl(0-5), page(80), default(IQ - 5), cat(_General, Craft, Military, Repair), noresync(yes),
	x(#InputReplace("Choose a type of weapons or armour to repair:", "[Type]", , "Armoury"))
Armoury (%examplelist%), IQ/A, tl(0-5), page(80), default(IQ - 5), cat(_General, Craft, Military, Repair),
	x(#ChoiceList(_
			name(example), title(Armoury: Choose an Armoury Specialisation),
			text(Choose an Armoury Specialisation from the list of examples provided:),
			picksallowed(1), method(bynumber),
			list(_
				"Body Armour",
				"Heavy Weapons",
				"Melee Weapons",
				"Missile Weapons" _
				)_
			)_
	), noresync(yes)
Carpentry, IQ/E, default(IQ - 4), page(79), cat(_General, Craft, Professional)
Cooking, IQ/A, default(IQ - 5), page(80), cat(_General, Craft, Professional)
Explosives (Fireworks), IQ/A, tl(0-5), default(IQ - 5), page(73), cat(_General, Craft, Entertainment, Technical)
Mechanic ([Type]), IQ/A, tl(0-5), page(80), default(IQ - 5), cat(_General, Craft, Repair), noresync(yes),
	x( #InputReplace("Choose a type of machinery to fix:", "[Type]", , "Mechanic") )
Mechanic (%examplelist%), IQ/A, tl(0-5), page(80), default(IQ - 5), cat(_General, Craft, Repair),
	x(#ChoiceList(_
			name(example), title(Mechanic: Choose a Mechanic Specialisation),
			text(Choose a Mechanic Specialisation from the list of examples provided:),
			picksallowed(1), method(bynumber),
			list(_
				"Animal-Drawn Vehicle",
				"Clacks",
				"Clockwork",
				"Low-Tech Machines",
				"Steam Engines" _
				)_
			)_
	), noresync(yes)
Pot-Making, IQ/A, default(IQ - 5), page(103), cat(_General, Craft, Professional)
Professional Skill (Brewer), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Cooper), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Distiller), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Dyer), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Florist), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Plant, Professional)
Professional Skill (Glassblower), DX/A, default(DX - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Leatherworking), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Masonry), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Potter), DX/A, default(DX - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Tailor), DX/A, default(DX - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Tanner), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Vinter), IQ/A, default(IQ - 5), page(), cat(_General, Craft, Professional)
Professional Skill (Weaver), DX/A, default(DX - 5), page(), cat(_General, Craft, Professional)
Sewing, DX/E, tl(0-5), default(DX - 4), page(81), cat(_General, Craft, Everyman)
Smith (Blacksmith), IQ/A, tl(2-5), default(IQ - 5), page(80), cat(_General, Craft, Professional)
Smith (Coppersmith), IQ/A, tl(1-5), default(IQ - 5), page(80), cat(_General, Craft, Professional)
Smith (Tinsmith), IQ/A, tl(1-5), default(IQ - 5), page(80), cat(_General, Craft, Professional)

<Criminal/Street>
Carousing, HT/E, default(HT - 4), page(72), cat(_General, Criminal/Street, Social)
Counterfeiting, IQ/H, tl(0-5), default(IQ - 6), page(75), cat(_General, Larcenous)
Disguise, IQ/A, tl(0-5), default(IQ - 5), page(72), cat(_General, Criminal/Street, Police/Watch),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Disguise"))
Escape, DX/H, default(DX - 6), page(73), cat(_General, Criminal/Street, Entertainment)
Fast-Talk, IQ/A, default(IQ - 5), page(74), cat(_General, Criminal/Street, Influence, Social),
	conditional(=@if(me::level >= 20 then 2 else 0) to ST:Reaction if "you are able to speak")
Filch, DX/A, default(DX - 5), page(75), cat(_General, Larcenous)
Forced Entry, DX/E, page(76), cat(_General, Larcenous, Police/Watch)
Forgery, IQ/H, tl(0-5), default(IQ - 6), page(76), cat(_General, Larcenous)
Gambling, IQ/A, default(IQ - 5), page(73), cat(_General, Criminal/Street, Game/Sport, Social)
Games (Craps), IQ/E, default(IQ - 4), page(74), cat(_General, Game/Sport)
Games (Cripple Mr. Onion), IQ/E, default(IQ - 4), page(74), cat(_General, Game/Sport)
Holdout, IQ/A, default(IQ - 5), page(76), cat(_General, Assassin, Criminal/Street, Larcenous)
Intimidation, Will/A, default(Will - 5), page(74), cat(_General, Criminal/Street, Influence, Police/Watch, Social)
Lockpicking, IQ/A, tl(0-5), default(IQ - 5), page(76), cat(_General, Criminal/Street, Larcenous, Police/Watch, Technical)
Observation, Per/A, default(Per - 5), page(79), cat(_General, Criminal/Street, Military, Police/Watch)
Panhandling, IQ/E, default(IQ - 4), page(80), cat(_General, Criminal/Street, Professional, Social)
Pickpocket, DX/H, default(DX - 6), page(76), cat(_General, Criminal/Street, Larcenous)
Poisons, IQ/H, tl(0-5), default(IQ - 6), page(79), cat(_General, Assassin, Criminal/Street, Social)
Savoir-Faire (Organised Crime), IQ/E, default(IQ - 4), page(75), cat(_General, Criminal/Street, Influence, Social)
Scrounging, Per/E, default(Per - 4), page(81), cat(_General, Criminal/Street, Military)
Shadowing, IQ/A, default(IQ - 5), page(81), cat(_General, Criminal/Street, Police/Watch)
Smuggling, IQ/A, default(IQ - 5), page(76), cat(_General, Criminal/Street, Larcenous)
Stealth, DX/A, default(DX - 5, IQ - 5), page(81), cat(_General, Assassin, Criminal/Street, Police/Watch)
Streetwise, IQ/A, default(IQ - 5), page(75), cat(_General, Assassin, Criminal/Street, Influence, Police/Watch, Social)
Traps, IQ/A, tl(0-5), default(IQ - 5), page(82), cat(_General, Assassin, Criminal/Street)
Urban Survival, Per/A, default(Per - 5), page(81), cat(_General, Criminal/Street)

<Design/Invention>
Architecture, IQ/A, tl(0-5), default(IQ - 5), page(79), cat(_General, Design/Invention, Professional)
Computer Programming (Magical Computers), IQ/H, page(72), cat(_General, Design/Invention, Occult/Magical, Technical)
Computer Programming (Stone Circles), IQ/H, page(72), cat(_General, Design/Invention, Occult/Magical, Priestly)
Engineer ([Type]), IQ/H, tl(0-5), page(73), cat(_General, Design/Invention, Technical), noresync(yes),
	x( #InputReplace("Choose a type of thing to engineer:", "[Type]", , "Engineer") )
Engineer (%examplelist%), IQ/H, tl(0-5), page(73), cat(_General, Design/Invention, Technical),
	x(#ChoiceList(_
			name(example),
			title(Engineer: Choose an Engineering Specialisation),
			text(Choose an Engineering Specialisation from the list of examples provided:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Animal-Drawn Vehicles",
				"Artillery",
				"Bicycles",
				"Civil",
				"Clacks",
				"Clockwork",
				"Combat",
				"Low-Tech Machines",
				"Magical",
				"Mining",
				"Ships",
				"Steam Engines" _
				)_
			)_
	), noresync(yes)

<Entertainment>
Mimicry (Speech), IQ/H, default(IQ - 6), page(78), cat(_General)
Photography, IQ/A, default(IQ - 5), page(79), cat(_General, Craft, Technical)
Fool's Lore, IQ/A, default(IQ - 6), page(79), cat(_General, Entertainment, Professional)
Professional Skill (Choreographer), IQ/A, default(IQ - 5), page(), cat(_General, Entertainment, Professional)
Professional Skill (Game Designer), IQ/A, default(IQ - 5), page(), cat(_General, Entertainment, Professional)
Sleight of Hand, DX/H, page(81), cat(_General, Criminal/Street)
Writing, IQ/A, default(IQ - 5), page(83), cat(_General, Scholarly)

<Everyman>
Area Knowledge ([Area]), IQ/E, default(IQ - 4), page(71), cat(_General),
	x(#InputReplace("Please specify the area covered:", "[Area]", "local", "Area Knowledge")), noresync(yes)
Connoisseur, IQ/A, default(IQ - 5), page(72), cat(_General),
	x(#InputToTag("Specify the required specialisation:", nameext, , "Connoisseur"))
Connoisseur (Antiques), IQ/A, default(IQ - 5), page(72), cat(_General)
Connoisseur (Dance), IQ/A, default(IQ - 5), page(72), cat(_General)
Connoisseur (Literature), IQ/A, default(IQ - 5), page(72), cat(_General, Scholarly)
Connoisseur (Music), IQ/A, default(IQ - 5), page(72), cat(_General, Scholarly, Social)
Connoisseur (Painting), IQ/A, default(IQ - 5), page(72), cat(_General, Scholarly)
Connoisseur (Sculpture), IQ/A, default(IQ - 5), page(72), cat(_General, Scholarly)
Connoisseur (Theatre), IQ/A, default(IQ - 5), page(72), cat(_General)
Connoisseur (Wine), IQ/A, default(IQ - 5), page(72), cat(_General, Social)
Current Affairs (Headline News), IQ/E, tl(0-5), default(IQ - 4), page(72), cat(_General, Everyman, Government, Social)
Current Affairs (Politics), IQ/E, tl(0-5), default(IQ - 4), page(72), cat(_General, Everyman, Government, Social)
Current Affairs (Regional: [Regional]), IQ/E, tl(0-5), default(IQ - 4), page(72), cat(_General, Everyman, Government, Social),
	x(#InputReplace("Please specify a particular region:", "[Regional]", "local region", "Current Affairs"))
Current Affairs (Sports), IQ/E, tl(0-5), default(IQ - 4), page(72), cat(_General, Everyman, Social)
First Aid, IQ/E, tl(0-5), default(IQ - 4), page(77), cat(_General, Everyman, Medical),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "First Aid"))
Housekeeping, IQ/E, default(IQ - 4), page(74), cat(_General, Everyman)
Knot-Tying, DX/E, default(DX - 4), page(75), cat(_General, Everyman, Police/Watch)
Savoir-Faire (Servant), IQ/E, default(IQ - 4), page(75), cat(_General, Everyman, Influence, Social)
Weather Sense, IQ/A, tl(0-5), default(IQ - 5), page(83), cat(_General, Everyman, Outdoor/Exploration)

<Game/Sport>
Games, IQ/E, default(IQ - 4), page(74), cat(_General),
	x(#InputToTag("You must specialise in a particular game:", nameext, "Cripple Mr. Onion", "Games"))
Games (Aqueduct), IQ/E, default(IQ - 4), page(74), cat(_General, Social)
Games (Chess), IQ/E, default(IQ - 4), page(74), cat(_General, Social)
Games (Hnaflbaflsniflwhifltafl), IQ/E, default(IQ - 4), page(74), cat(_General, Social)
Games (Marquis of Fantailler Boxing Rules), IQ/E, default(IQ - 4), page(74), cat(_General)
Games (Modern Ankh-Morpork Football Rules), IQ/E, default(IQ - 4), page(74), cat(_General, Social)
Games (Shibo Yangcong-san), IQ/E, default(IQ - 4), page(74), cat(_General)
Games (Thud), IQ/E, default(IQ - 4), page(74), cat(_General, Social)

<Heavy Weapons>
Artillery (Cannon), IQ/A, tl(0-5), default(IQ - 5), page(74), cat(_General, Ranged Combat)
Artillery (Catapult), IQ/A, tl(0-5), default(IQ - 5), page(74), cat(_General, Ranged Combat)
Gunner (Cannon), DX/E, tl(0-5), default(DX - 4), page(74), cat(_General, Ranged Combat)
Gunner (Catapult), DX/E, tl(0-5), default(DX - 4), page(74), cat(_General, Ranged Combat)

<Hobby>
Hobby Skill ([DX-based]), DX/E, default(DX - 4), page(74), cat(_General),
   x( #InputReplace("Specify the field of study:", "[DX-based]", , "Hobby Skill") )
Hobby Skill (Juggling), DX/E, default(DX - 4), page(74), cat(_General)
Hobby Skill (Kite-Flying), DX/E, default(DX - 4), page(74), cat(_General, Social)
Hobby Skill ([IQ-based]), IQ/E, default(IQ - 4), page(74), cat(_General),
   x( #InputReplace("Specify the field of study:", "[IQ-based]", , "Hobby Skill") )
Hobby Skill (Needlepoint), IQ/E, default(IQ - 4), page(74), cat(_General, Craft)
Hobby Skill (Origami), IQ/E, default(IQ - 4), page(74), cat(_General)
Hobby Skill (Pin Collecting), IQ/E, default(IQ - 4), page(74), cat(_General)
Hobby Skill (Stamp Collecting), IQ/E, default(IQ - 4), page(74), cat(_General)

<Improvised Communication>
Gesture, IQ/E, default(IQ - 4), page(74), cat(_General, Social)
Shouting at Foreigners, IQ/E, default(HT - 5, IQ - 4), page(74),
	cat(_General, Social)

<Influence>
Savoir-Faire, IQ/E, default(IQ - 4), page(75), cat(_General, Social),
	x(#InputToTag("You must specialise in a subculture:", nameext, "High Society", "Savoir-Faire"))
Savoir-Faire (Military), IQ/E, default(IQ - 4), page(75), cat(_General, Military, Social)
Savoir-Faire (Watch), IQ/E, default(IQ - 4), page(75), cat(_General, Police/Watch, Social)
Sex Appeal, HT/A, default(HT - 3), page(75), cat(_General, Entertainment, Social)

<Knowledge>
Heraldry, IQ/A, default(IQ - 5), page(75), cat(_General, Assassin, Knowledge, Social)
Hidden Lore, IQ/A, page(75), cat(_General, Knowledge),
	x(#InputToTag("You must specialise in a particular body of secret knowledge:", nameext, , "Hidden Lore"))
Hidden Lore (Demon Lore), IQ/A, page(75), cat(_General, Knowledge, Occult/Magical, Priestly)
Hidden Lore (L-Space), IQ/A, page(75), cat(_General, Knowledge, Scholarly)
Hidden Lore (Secrets of the City: [city]), IQ/A, page(75), cat(_General, Knowledge),
   x(#InputReplace("Specify the city in question:", "[city]", , "Secrets of the City"))
Hidden Lore (Spirit Lore), IQ/A, page(75), cat(_General, Knowledge, Occult/Magical, Priestly)
Occultism, IQ/A, default(IQ - 5), page(75), cat(_General, Occult/Magical)
Sacred Texts, IQ/A, page(75), cat(_General, Priestly)

<Medical>
Diagnosis, IQ/H, tl(0-5), default(IQ - 6), page(77), cat(_General, Medical),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Diagnosis"))
Herbalism, IQ/H, default(IQ - 6), page(77), cat(_General, Medical, Plant),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Herbalism"))
Midwifery, IQ/A, default(IQ - 5), page(77), cat(_General, Medical),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Midwifery"))
Physician, IQ/H, tl(0-5), default(IQ - 7), page(77), cat(_General, Medical),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Physician"))
Surgery, IQ/VH, tl(0-5), page(77), cat(_General, Medical),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Surgery"))

<Melee Combat>
Axe/Mace, DX/A, default(DX - 5), page(78), parryat(@int(%level/2)+3), cat(_General, Impact Weapon, Melee Weapon)
Broadsword, DX/A, default(DX - 5, SK:Shortsword - 2), page(78), parryat(@int(%level/2)+3), cat(_General, Melee Weapon, Swords)
Fast-Draw, DX/E, page(73), cat(_General, Ranged Combat),
	x(#InputToTag("You must specialise in a type of Weapon:", nameext, , "Fast-Draw"))
Fast-Draw (Knife), DX/E, page(73), cat(_General, Ranged Combat)
Fast-Draw (Knuckledusters), DX/E, page(73), cat(_General)
Fast-Draw (Sword), DX/E, page(73), cat(_General)
Fast-Draw (Two-Handed Sword), DX/E, page(73), cat(_General)
Flail, DX/H, default(DX - 6), page(77), parryat(@int(%level/2)+3), cat(_General, Flails, Melee Weapon)
Knife, DX/E, default(DX - 4), page(78), parryat(@int(%level/2)+3-1), cat(_General, Assassin, Melee Weapon, Swords)
Polearm, DX/A, default(DX - 5), page(78), parryat(@int(%level/2)+3), cat(_General, Melee Weapon, Pole Weapons)
Rapier, DX/A, default(DX - 5), page(77), parryat(@int(%level/2)+3), cat(_General, Assassin, Fencing Weapons, Melee Weapon)
Shield, DX/E, default(DX - 4), page(81), blockat(@int(%level/2)+3), cat(_General)
Shortsword, DX/A, default(DX - 5, SK:Broadsword - 2), page(78), parryat(@int(%level/2)+3),
	cat(_General, Assassin, Melee Weapon, Swords)
Smallsword, DX/A, default(DX - 5), page(77), parryat(@int(%level/2)+3), cat(_General, Assassin, Fencing Weapons, Melee Weapon)
Spear, DX/A, default(DX - 5), page(78), parryat(@int(%level/2)+3), cat(_General, Melee Weapon, Pole Weapons)
Staff, DX/A, default(DX - 5), page(78), parryat(@int(%level/2)+3+2), cat(_General, Melee Weapon, Pole Weapons)
Two-Handed Axe/Mace, DX/A, default(DX - 5), page(78), parryat(@int(%level/2)+3), cat(_General, Impact Weapon, Melee Weapon)
Two-Handed Sword, DX/A, default(DX - 5), page(78), parryat(@int(%level/2)+3), cat(_General, Melee Weapon, Swords)

Judo, DX/H, page(82), parryat(@int(%level/2)+3), cat(_General, Melee Combat, Unarmed Combat)
Wrestling, DX/A, page(83), parryat(@int(%level/2)+3), cat(_General, Melee Combat, Unarmed Combat)
Boxing, DX/A, page(82), parryat(@int(%level/2)+3), cat(_General, Melee Combat, Unarmed Combat), mods(Punch/Kick),
	newmode(Punch, damage(_
				thr-1 + _
					@if(me::level = ST:DX+1 then @basethdice(ST:Punch) else @if(me::level > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) _
					), damtype(_
						$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
					), reach(C), parry(0), skillused(SK:Boxing),
				damagebasedon(ST:Punch), reachbasedon(ST:Arm Reach)_
		),
	description(Notes: Calculated damage takes into account bonuses from Claws and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" to apply the +1 damage to Punch.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$)
//	replacetags(in "ST:Punch" with "hide(yes), reach()"),

Brawling, DX/E, page(82), parryat(@int(%level/2)+3), cat(_General, Melee Combat, Unarmed Combat), mods(Punch/Kick),
	newmode(Punch, damage(_
				thr-1 + _
					@if(me::level > ST:DX+1 then @basethdice(ST:Punch) else 0) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) _
					), damtype(_
						$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
					), reach(C), parry(0), skillused(SK:Brawling),
				damagebasedon(ST:Punch), reachbasedon(ST:Arm Reach)_
		),
	newmode(Bite, damage(_
				thr-1 + _
				@if(me::level > ST:DX+1 then @basethdice(ST:Bite) else 0) + _
				-@if("DI:Weak Bite::level" = 1 then 2 * @basethdice(ST:Bite) else 0)_
				), damtype($if("AD:Teeth (Sharp Teeth)::level" = 1 THEN "cut" ELSE $if("AD:Teeth (Sharp Beak)::level" = 1 THEN "pi+" ELSE $if("AD:Teeth (Fangs)::level" = 1 THEN "imp" ELSE "cr")))), reach(C), parry(No), skillused(SK:Brawling),
				damagebasedon(ST:Bite), reachbasedon(ST:Neck Reach)_
		),
	newmode(Kick, damage(_
				thr+ _
					@if(me::level > ST:DX+1 then @basethdice(ST:Kick) else 0) + _
					@if(ST:Quadruped > 0 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0)))_
				), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(SK:Brawling-2, SK:Kicking (Brawling)),
				damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach) _
		),
	description(Notes: Calculated damage takes into account bonuses from Teeth, Weak Bite, Claws, and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" or "Has Boots" to apply the +1 damage to Punch or Kick, as appropriate.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Kick::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Bite::reach$)
//	replacetags(in "ST:Punch" with "hide(yes), reach()", in "ST:Kick" with "hide(yes), reach()", in "ST:Bite" with "hide(yes), reach()"),

Karate, DX/H, page(83), parryat(@int(%level/2)+3), cat(_General, Melee Combat, Unarmed Combat), mods(Punch/Kick),
	newmode(Punch, damage(_
				thr-1 + _
					@if(me::level = ST:DX then @basethdice(ST:Punch) else @if(me::level > ST:DX then 2 * @basethdice(ST:Punch) else 0)) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) _
					), damtype(_
						$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
					), reach(C), parry(0), skillused(SK:Karate),
				damagebasedon(ST:Punch), reachbasedon(ST:Arm Reach) _
		),
	newmode(Kick, damage(_
				thr+ _ 
					@if(me::level = ST:DX then @basethdice(ST:Kick) else @if(me::level > ST:DX then 2 * @basethdice(ST:Kick) else 0)) + _
					@if(ST:Quadruped > 0 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0)))_
				), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(SK:Karate-2, SK:Kicking (Karate)),
				damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach) _
			),
	description(Notes: Calculated damage takes into account bonuses from Claws and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" or "Has Boots" to apply the +1 damage to Punch or Kick, as appropriate.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Kick::reach$)
//	replacetags(in "ST:Punch" with "hide(yes), reach()", in "ST:Kick" with "hide(yes), reach()"),

<Military>
Camouflage, IQ/E, default(IQ - 4), page(71), cat(_General, Military, Outdoor/Exploration)
Cryptography, IQ/H, tl(0-5), page(72), cat(_General, Government, Military)
Explosives (Demolition), IQ/A, tl(0-5), default(IQ - 5), page(73), cat(_General, Assassin, Military, Technical)
Intelligence Analysis, IQ/H, tl(0-5), default(IQ - 6), page(79), cat(_General, Military, Officer, Police/Watch)
Interrogation, IQ/A, default(IQ - 5), page(75), cat(_General, Military, Police/Watch)
Leadership, IQ/A, default(IQ - 5), page(76), cat(_General, Military, Social)
Soldier, IQ/A, tl(0-5), default(IQ - 5), page(81), cat(_General, Military)
Strategy (Land), IQ/H, default(IQ - 6), page(79), cat(_General, Military, Officer)
Strategy (Naval), IQ/H, default(IQ - 6), page(79), cat(_General, Military, Officer)
Tactics, IQ/H, default(IQ - 6), page(79), cat(_General, Military, Officer, Police/Watch)

<Missile Weapons>
Blowpipe, DX/H, default(DX - 6), page(78), cat(_General, Assassin, Ranged Combat)
Bow, DX/A, default(DX - 5), page(78), cat(_General, Ranged Combat)
Crossbow, DX/E, default(DX - 4), page(78), cat(_General, Assassin, Ranged Combat)
Flamethrower, DX/E, tl(1-5), default(DX - 4), page(), cat(_General, Ranged Combat)
Guns (Pistol), DX/E, tl(3-5), default(DX - 4), page(78), cat(_General, Ranged Combat)
Guns (Rifle), DX/E, tl(3-5), default(DX - 4), page(78), cat(_General, Ranged Combat)
Guns (Shotgun), DX/E, tl(3-5), default(DX - 4), page(78), cat(_General, Ranged Combat)
Innate Attack (Beam), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Innate Attack (Breath), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Innate Attack (Gaze), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Innate Attack (Projectile), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Sling, DX/H, default(DX - 6), page(78), cat(_General, Ranged Combat)
Thrown Weapon (Axe/Mace), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Thrown Weapon (Knife), DX/E, default(DX - 4), page(78), cat(_General, Assassin, Ranged Combat)
Thrown Weapon (Spear), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Thrown Weapon (Stick), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)
Thrown Weapon (Throwing Star), DX/E, default(DX - 4), page(78), cat(_General, Ranged Combat)

<Occult/Magical>
Alchemy, IQ/VH, tl(0-5), page(71), cat(_General, Occult/Magical, Scholarly)
Magic, IQ/VH, page(76), cat(_General, Occult/Magical, Scholarly),
	gives(=+me to ST:MagicSkill, =+(@if((me::level > 20) THEN (20 - ST:Magery) ELSE (me::level - ST:Magery))) to ST:MagicDefaultBase),
	needs(AD:Magery 0 | AD:Magery 0 (Engineering Only) | Magery 0 (Non-Improvisational)),
	x(#InputToTag("You must specialise in a branch of magic (Witchcraft, Wizardry, etc.):", nameext, "Witchcraft", "Magic Skill"))
Magical Form (%formlist%), IQ/VH, default(ST:MagicDefaultBase - 6), page(76), cat(_General, Occult/Magical, Scholarly),
	needs(SK:Magic), upto(ST:MagicSkill - ST:Magery),
	x(#ChoiceList(_
			name(form),
			title(Magical Form: Choose a Form),
			text(Choose a Magical Form from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Divination",
				"Elementalism",
				"Magianism",
				"Necromancy",
				"Physiomancy",
				"Psychomancy",
				"Sortilege",
				"Summonation" _
				)_
			)_
	), noresync(yes)
Thaumatology, IQ/VH, default(IQ - 7), page(82), cat(_General, Occult/Magical, Scholarly)

<Outdoor/Exploration>
Boating (Sailboat), DX/A, tl(0-5), taboo(DI:Motion Sickness), default(DX - 5, IQ - 5),
	page(83), cat(_General, Outdoor/Exploration, Travel, Vehicle)
Boating (Unpowered), DX/A, tl(0-5), taboo(DI:Motion Sickness), default(DX - 5, IQ - 5),
	page(83), cat(_General, Outdoor/Exploration, Travel, Vehicle)
Cartography, IQ/A, default(IQ - 5), page(79), cat(_General, Outdoor/Exploration, Professional)
Fishing, Per/E, default(Per - 4), page(73), cat(_General, Outdoor/Exploration)
Navigation (%modelist%), IQ/A, tl(0-5), default(IQ - 5), cat(_General, Outdoor/Exploration, Technical, Travel),
	x(#ChoiceList(_
			name(mode), title(Navigation: Choose a Mode),
			text(Choose a mode of travel from the list:),
			picksallowed(1), method(bynumber),
			list(_
				"Air",
				"Land",
				"Sea" _
				)_
			)_
	), noresync(yes)
Prospecting, IQ/A, tl(0-5), default(IQ - 5), page(80), cat(_General, Outdoor/Exploration)
Shiphandling, IQ/H, tl(0-5), taboo(DI:Motion Sickness), default(IQ - 6),
	needs(SK:Seamanship, SK:Leadership, "SK:Navigation (Sea)"), page(81), cat(_General, Travel)
Survival, Per/A, default(Per - 5), page(81), cat(_General, Outdoor/Exploration),
  x(#InputToTag("You must specialise by a particular terrain type:", nameext, , "Survival"))
Survival (%terrainlist%), Per/A, default(Per - 5), page(81), cat(_General, Outdoor/Exploration),
	x(#ChoiceList(name(terrain), title(Survival: Choose a Type of Terrain),
			text(Choose a terrain type from the list:), picksallowed(1),
			method(bynumber),
			list(_
				"Arctic",
				"Desert",
				"Fourecks Outback",
				"Island/Beach",
				"Jungle",
				"L-Space",
				"Mountain",
				"Plains",
				"Swampland",
				"Woodlands" _
				)_
			)_
	), noresync(yes)
Tracking, Per/A, default(Per - 5), page(82), cat(_General, Outdoor/Exploration)

<Plant>
Farming, IQ/A, tl(0-5), default(IQ - 5), page(80), cat(_General, Professional)
Gardening, IQ/E, default(IQ - 4), page(80), cat(_General, Professional)

<Police/Watch>
Body Language, Per/A, page(71), cat(_General, Social)
Criminology, IQ/A, tl(0-5), default(IQ - 5), page(72), cat(_General, Social)
Detect Lies, Per/H, default(Per - 6), page(72), cat(_General, Government, Social)
Search, Per/A, default(Per - 5), page(81), cat(_General, Police/Watch)

<Priestly>
Religious Ritual, IQ/H, page(80), cat(_General),
	x(#InputToTag("You must specialise by religion:", nameext, "Omnianism", "Religious Ritual"))
Theology, IQ/H, default(IQ - 6), page(82), cat(_General, Scholarly),
	x(#InputToTag("You must specialise by religion:", nameext, "Omnianism", "Theology"))

<Professional>
Professional Skill ([DX based]), DX/A, default(DX - 5), page(79), cat(_General),
   x( #InputReplace("Specify the profession encompassed by this skill:", "[DX based]", , "Professional Skill") )
Professional Skill ([IQ based]), IQ/A, default(IQ - 5), page(79), cat(_General),
   x( #InputReplace("Specify the profession encompassed by this skill:", "[IQ based]", , "Professional Skill") )
Printing, IQ/A, tl(3-5), default(IQ - 5), page(80), cat(_General)
Professional Skill (Barber), IQ/A, default(IQ - 5), page(), cat(_General) 
Professional Skill (Bartender), IQ/A, default(IQ - 5), page(80), cat(_General) 
Professional Skill (Freight Handling), IQ/A, tl(0-5), default(IQ - 5), page(80), cat(_General, Travel)
Professional Skill (Prostitute), IQ/A, default(IQ - 5), page(), cat(_General, Social)
Seamanship, IQ/E, tl(0-5), default(IQ - 4), taboo(DI:Motion Sickness), page(80), cat(_General, Travel)
Telegraphy, IQ/E, tl(4-5), page(80), cat(_General, Technical)

<Ranged Combat>
"Fast-Draw (Arrow/Bolt)", DX/E, page(73), cat(_General, Ranged Combat)
"Fast-Draw (Pistol Crossbow)", DX/E, page(73), cat(_General, Ranged Combat)
"Fast-Draw (Throwing Star)", DX/E, page(73), cat(_General, Ranged Combat)

<Scholarly>
Research, IQ/A, tl(0-5), default(IQ - 5), needs(1 CA:Language Written = 2), page(80), cat(_General, Scholarly)
Survival (L-Space), Per/A, default(Per - 5), page(81), cat(_General, Scholarly)
Teaching, IQ/A, default(IQ - 5), page(82), cat(_General, Scholarly, Social)

<Social>
Acting, IQ/A, default(IQ - 5), page(71), cat(_General, Social)
Fortune-Telling, IQ/A, default(IQ - 5), page(73), cat(_General, Social),
	x(#InputToTag("You must specialise in a particular method of Fortune-Telling:", nameext, , "Fortune-Telling"))
Fortune-Telling (Astrology), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Fortune-Telling (Caroc Cards), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Fortune-Telling (Ching Aling), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Fortune-Telling (Crystal Ball), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Fortune-Telling (Cuisinomancy), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Fortune-Telling (Palmistry), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Fortune-Telling (Tea-Leaf Reading), IQ/A, default(IQ - 5), page(73), cat(_General, Social)
Psychology, IQ/H, default(IQ - 6), page(80), cat(_General, Social),
	x(#InputToTag("You must specialise by species:", nameext, "Human", "Psychology"))

<Vehicle>
Driving, DX/A, default(DX - 5, IQ - 5), page(83), taboo(DI:Motion Sickness), cat(_General, Travel, Vehicle),
	x(#InputToTag("You must specialise by precise vehicle type:", nameext, "Steam Car", "Driving"))
Piloting, DX/A, default(IQ - 6), page(83), taboo(DI:Motion Sickness), cat(_General, Travel, Vehicle),
	x(#InputToTag("You must specialise by precise vehicle type:", nameext, "Hang Glider", "Piloting"))
Submarine, DX/A, default(IQ - 6), page(83), taboo(DI:Motion Sickness), cat(_General, Travel, Vehicle),
	x(#InputToTag("You must specialise by precise vehicle type:", nameext, "Exploratory Submersible", "Submarine"))

************************************************************************************************************************
[SPELLS]
************************************************************************************************************************
<%NewSpellList%>
_New One-Form Spell, (Magical Form (%FormList%)), type(Tech/H), default("SK:Magical Form (%FormList%)" %penaltylist%),
	needs(SK:Magical Form (%FormList%)), page(203), cat(_General, _New Spells, Techniques, Spells, %FormList% Spells),
	upto(ST:MagicSkill - ST:Magery + 4),
	x(#InputToTagReplace("Please enter the name of this Spell:" , name, , "New Spell"),
		#ChoiceList(_
			name(form),
			title(New Spell: Choose a Magical Form),
			text(Please select the Magical Form this Spell is based on:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Divination",
				"Elementalism",
				"Magianism",
				"Necromancy",
				"Physiomancy",
				"Psychomancy",
				"Sortilege",
				"Summonation"_
				)_
			),
		#ChoiceList(_
			name(penalty),
			title(New Technique: Choose a General Skill Modifier),
			text(Please select the Spell's General Skill Modifier (see p. 194):),
			picksallowed(1),
			method(bynumber),
			list(_
				+0,
				-1,
				-2,
				-3,
				-4,
				-5,
				-6,
				-7,
				-8,
				-9,
				-10,
				-11,
				-12,
				-13,
				-14,
				-15,
				-16_
				)_
			)_
	), noresync(yes)

_New Parent Item, type(N/A), isparent(yes), upto(0 LimitingTotal), basepoints(0), points(0), initmods(Parent, -1),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this categorisation or whatever:", name, , "New Parent Item"))

<Techniques, Techniques - Spells, Spells, Divination Spells>
Scry Shield (Magical Form (Divination)), type(Tech/H), default("SK:Magical Form (Divination)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Divination)), page(202)
Love's Name (Magical Form (Divination)), type(Tech/H), default("SK:Magical Form (Divination)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Divination)), page(202)
Scrying - Minimal Item (Magical Form (Divination)), type(Tech/H), default("SK:Magical Form (Divination)" - 14),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Divination)), page(202)
Scrying - Silver Mirror (Magical Form (Divination)), type(Tech/H), default("SK:Magical Form (Divination)" - 8),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Divination)), page(202)
Scrying - Crystal Ball (Magical Form (Divination)), type(Tech/H), default("SK:Magical Form (Divination)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Divination)), page(202)

<Techniques, Techniques - Spells, Spells, Elementalism Spells>
Snap (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 1),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(203)
Visual Illusion (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(203)
Fireball (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(203)
Magic Lightning (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(203)

Balanced Levitation (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(203)
Gindle's Effortless Elevator (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(204)
Rock Soften (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(204)
Wind (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(204)
Sumpjumper's Incendiary Surprise (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(204)
Herpetty's Seismic Reorganiser (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 6),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page(204)
Atavarr's Personal Gravitational Upset (Magical Form (Elementalism)), type(Tech/H),
	default("SK:Magical Form (Elementalism)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page()
Quondum's Attractive Point (Magical Form (Elementalism)), type(Tech/H), default("SK:Magical Form (Elementalism)" - 5),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Elementalism)), page()

<Techniques, Techniques - Spells, Spells, Magianism Spells>
Detect Magic (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)), page(204)
Check Thaumic Flux (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 1),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)),  page(204)
Analyse Magic (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)),  page(205)
Octagram (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)),  page(205)
Nul Zone (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)),  page(205)
Dispel Magic (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 5),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)),  page(205)
Emergency Power Drain (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 8),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)),  page(205)
Mystic Feedback (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)), page()
Fresnel's Wonderful Concentrator (Magical Form (Magianism)), type(Tech/H), default("SK:Magical Form (Magianism)" - 7),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Magianism)), page()

<Techniques, Techniques - Spells, Spells, Necromancy Spells>
Detect Haunting (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)), page(206)
Exorcise Ghost (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)),  page(206)
Speak With the Dead (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)" - 2),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)),  page(206)
Last Vision (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)),  page(206)
Chill Finger (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)),  page(206)
Steal Zombie (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)),  page(206)
Animate Zombie (Magical Form (Necromancy)), type(Tech/H), default("SK:Magical Form (Necromancy)" - 6),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Necromancy)),  page(206)

<Techniques, Techniques - Spells, Spells, Physiomancy Spells>
Spolt's Forthright Respirator (Magical Form (Physiomancy)), type(Tech/H), default("SK:Magical Form (Physiomancy)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Physiomancy)), page(207)
Eringyas' Surprising Bouquet (Magical Form (Physiomancy)), type(Tech/H), default("SK:Magical Form (Physiomancy)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Physiomancy)), page(207)
Transfer Pain (Magical Form (Physiomancy)), type(Tech/H), default("SK:Magical Form (Physiomancy)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Physiomancy)), page(207)
Catch Wound (Magical Form (Physiomancy)), type(Tech/H), default("SK:Magical Form (Physiomancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Physiomancy)), page(207)
Stacklady's Morphic Resonator (Magical Form (Physiomancy)), type(Tech/H), default("SK:Magical Form (Physiomancy)" - 6),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Physiomancy)), page(208)
Englebert's Enhancer (Magical Form (Physiomancy)), type(Tech/H), default("SK:Magical Form (Physiomancy)" - 2),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Physiomancy)), page()

<Techniques, Techniques - Spells, Spells, Psychomancy Spells>
Detect Mind (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(209)
Truth Tell (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 1),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(209)
Mental Adjustment (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(209)
Hide from Minds (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(210)
Mental Illusion (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(210)
Borrowing - Simple (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(210)
Borrowing - Carnivore (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 7),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(210)
Borrowing - Group Mind (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 10),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(210)
Follow the Plot Damn You (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 5),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page(211)
Break Mental Walls (Magical Form (Psychomancy)), type(Tech/H), default("SK:Magical Form (Psychomancy)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Psychomancy)), page()

<Techniques, Techniques - Spells, Spells, Sortilege Spells>
A Little Luck (Magical Form (Sortilege)), type(Tech/H), default("SK:Magical Form (Sortilege)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Sortilege)), page(211)
Mechanical Failure (Magical Form (Sortilege)), type(Tech/H), default("SK:Magical Form (Sortilege)" - 2),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Sortilege)), page(211)
Magical Fortune-Telling (Magical Form (Sortilege)), type(Tech/H), default("SK:Magical Form (Sortilege)" - 2),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Sortilege)), page(211)
Cursing (Magical Form (Sortilege)), type(Tech/H), default("SK:Magical Form (Sortilege)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Sortilege)), page(212)
Suspend Time (Magical Form (Sortilege)), type(Tech/H), default("SK:Magical Form (Sortilege)" - 7),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Sortilege)), page(212)
Narrative Manipulation (Magical Form (Sortilege)), type(Tech/H), default("SK:Magical Form (Sortilege)" - 5),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Sortilege)), page(213)

<Techniques, Techniques - Spells, Spells, Summonation Spells>
Gate Scan (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page(214)
The Rite of AshkEnte (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)" - 1),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page(214)
Summon Thing (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page(215)
Exorcise Spirit (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page(215)
Oracular Demon (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)" - 3),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page(215)
Summon Demon (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)" - 5),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page(215)
Divine Rider (Magical Form (Summonation)), type(Tech/H), default("SK:Magical Form (Summonation)" - 4),
	upto(ST:MagicSkill - ST:Magery + 4),
	needs(SK:Magical Form (Summonation)), page()

//Note that the following may need testing to make sure that defaults are working right.
<Techniques, Techniques - Spells, Spells, Multiple-Form Spells>
Necromantic Retrocognition - Good Equipment (Magical Forms (Divination & Necromancy)),
	needs("SK:Magical Form (Divination)", "SK:Magical Form (Necromancy)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	type(Tech/H), default(lowprereq - 5), page(216)
Shatter Bolt (Magical Forms (Elementalism & Magianism)),
	needs("SK:Magical Form (Elementalism)", "SK:Magical Form (Magianism)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	type(Tech/H), default(lowprereq - 3), page(217)
Hurled Curse (Magical Forms (Magianism & Sortilege)),
	needs("SK:Magical Form (Sortilege)", "SK:Magical Form (Magianism)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	type(Tech/H), default(lowprereq - 5), page(217)
Teleportation (Magical Forms (Magianism & Summonation)),
	needs("SK:Magical Form (Summonation)", "SK:Magical Form (Magianism)"),
	upto(ST:MagicSkill - ST:Magery + 4),
	type(Tech/H), default(lowprereq - 5), page(217)

************************************************************************************************************************
[GROUPS]
* [LISTS] ^^^^ Need to conver to List, need a #DeleteFromList() command
************************************************************************************************************************
<AllMetaTraits>
TE:Domestic Animal
TE:Spirit
TE:Wild Animal

<AllAdvantages>
AD:_New Advantage
AD:_New Leveled Advantage
AD:_New Parent Item
AD:_New Talent
AD:Absolute Direction
AD:Absolute Timing
AD:Active IR
AD:Acute Hearing
AD:Acute Taste and Smell
AD:Acute Touch
AD:Acute Vision
AD:Administrative Rank
AD:Alternate Form
AD:Alternate Identity
AD:Ambidexterity
AD:Amphibious
AD:Animal Control Talent
AD:Animal Empathy
AD:Animal Friend
AD:Appearance
AD:Artificer
AD:Born to Hang
AD:Born War-Leader
AD:Brachiator
AD:Cast-Iron Stomach
AD:Catfall
AD:Channelling
AD:Chaos Talent
AD:Charisma
AD:Chronolocation
AD:Claim to Hospitality
AD:Clairsentience
AD:Claws (Blunt Claws)
AD:Claws (Hooves)
AD:Claws (Long Talons)
AD:Claws (Sharp Claws)
AD:Claws (Talons)
AD:Clerical Investment
AD:Clinging
AD:Cold/Ice Talent
AD:Combat Reflexes
AD:Common Sense
AD:Compartmentalized Mind
AD:Constriction Attack
AD:Contact
AD:Control [Common]
AD:Control [Godlike]
AD:Control [Occasional]
AD:Control [Rare]
AD:Control [Very Common]
AD:Corrosion Attack
AD:Cosmic Talent
AD:Crushing Attack
AD:Cultural Familiarity (Native)
AD:Cultural Familiarity
AD:Cutting Attack
AD:Damage Resistance
AD:Danger Sense
AD:Daredevil
AD:Dark Vision
AD:Darkness Talent
AD:Death Talent
AD:Destiny
AD:Detect
AD:Dimension Shift
AD:Diplomatic Immunity
AD:Discriminatory Smell
AD:Doesn't Breathe
AD:Doesn't Eat or Drink
AD:Doesn't Sleep
AD:Dominance
AD:Double-Jointed
AD:Duplication
AD:Earth Talent
AD:Eidetic Memory
AD:Elastic Skin
AD:Electricity Talent
AD:Electrokinesis Talent
AD:Empathy
AD:Energy Reserve
AD:Enhanced Block
AD:Enhanced Dodge
AD:Enhanced Move (Air)
AD:Enhanced Move (Ground)
AD:Enhanced Move (Water)
AD:Enhanced Parry (%One-Handed Melee Weapon ArtList%)
AD:Enhanced Parry (%One-Handed Melee WeaponList%)
AD:Enhanced Parry (%One-Handed Melee Weapon SportList%)
AD:Enhanced Parry (all parries)
AD:Enhanced Parry (bare hands)
AD:Enhanced Time Sense
AD:Enhanced Tracking
AD:Extra Attack
AD:Extra Life
AD:Fashion Sense
AD:Fatigue Attack
AD:Fearlessness
AD:Filter Lungs
AD:Flexibility
AD:Flight
AD:Flight (Levitation)
AD:Flight (Winged, Can Hover)
AD:Flight (Winged, Cannot Hover)
AD:Gadgeteer
AD:Gifted Artist
AD:Gizmo
AD:Good Talent
AD:Gravity Talent
AD:Green Thumb
AD:Healer
AD:Healing Talent
AD:Healing
AD:High Manual Dexterity
AD:High Pain Threshold
AD:High TL
AD:Igor Immunity
AD:Indomitable
AD:Injury Tolerance
AD:Insubstantiality
AD:Intuitive Mathematician
AD:Invisibility
AD:Kinetic Energy Talent
AD:Language - Native (Spoken)
AD:Language - Native (Written)
AD:Language - Native
AD:Language (Spoken)
AD:Language (Written)
AD:Language Talent
AD:Language
AD:Legal Enforcement Powers
AD:Legal Immunity
AD:Less Sleep
AD:Lifting ST
AD:Lightning Calculator
AD:Luck
AD:Magery 0
AD:Magery
AD:Mathematical Ability
AD:Medium
AD:Metalwork
AD:Military Rank
AD:Mind Shield
AD:Modified ST-Based Damage
AD:Musical Ability
AD:Night Vision
AD:Outdoorsman
AD:Patrons
AD:Perfect Balance
AD:Peripheral Vision
AD:Photographic Memory
AD:Pitiable
AD:Possession
AD:Pressure-Proof
AD:Protected Eyes
AD:Rank
AD:Rapid Healing
AD:Rapier Wit
AD:Regeneration
AD:Regrowth
AD:Religious Rank
AD:Repairable
AD:Reputation
AD:Resistant
AD:See Invisible (Magical)
AD:See Invisible (Spirit)
AD:Sensitive Touch
AD:Sensitive
AD:Serendipity
AD:Silence
AD:Single-Minded
AD:Smooth Operator
AD:Social Regard (Feared)
AD:Social Regard (Respected)
AD:Social Regard (Venerated)
AD:Social Regard
AD:Sonar
AD:Speak With Animals
AD:Spirit Empathy
AD:Status
AD:Super Climbing
AD:Supernatural Durability
AD:Swarm Body
AD:Teeth (Blunt Teeth)
AD:Teeth (Fangs)
AD:Teeth (Sharp Beak)
AD:Teeth (Sharp Teeth)
AD:Temperature Tolerance (Cold)
AD:Temperature Tolerance (Heat)
AD:Tenure
AD:Terror (Awe)
AD:Terror (Confusion)
AD:Terror
AD:True Faith
AD:Ultrahearing
AD:Unaging
AD:Unfazeable
AD:Universal Digestion
AD:Unkillable
AD:Versatile
AD:Versatile (Inspiration Magnet)
AD:Very Rapid Healing
AD:Voice
AD:Watch Rank
AD:Wealth

<AllPerks>
PE:_New Perk
PE:Alcohol Tolerance
PE:Archaic Training
PE:Assassin in Good Standing
PE:Autotrance
PE:Blade-Proof Bare-Chestedness
PE:Boredom Immunity
PE:Check the Exits
PE:Climatic Emphasis
PE:Cobblestone Sense
PE:Cold Resistance
PE:Controllable Disadvantage
PE:Crossbow Safety
PE:Cutting-Edge Training
PE:Deep Sleeper
PE:Divine News-Feed
PE:Dual Ready
PE:Fearsome Stare
PE:Feathers
PE:Forgettable Face
PE:Fully-Dressed Resurrection
PE:Fur
PE:Good with (Animal)
PE:Good with (Social Group)
PE:Haughty Sneer
PE:Heartbeat Counter
PE:Heat Resistance
PE:High-Heeled Heroine
PE:Honest Face
PE:Hyper-Specialisation
PE:Improvised Weapons
PE:Limited Camouflage
PE:Limited Camouflage (Stone)
PE:Longevity
PE:Name Hearing
PE:No Hangover
PE:Off-Hand Training
PE:Oggham Reader
PE:One Spell Doesn't Need Preparation
PE:Penetrating Voice
PE:Recognised Divinity
PE:Sanitized Metabolism
PE:Scales
PE:Sea Legs
PE:Secret Name
PE:Shtick
PE:Self-Styling Hair
PE:Sordid Claws
PE:Statuesque
PE:Street Swagger
PE:Striking Surface
PE:There on Call
PE:Understands the Librarian
PE:Unfazed by Size

<AllDisadvantages>
DI:_New Disadvantage
DI:_New Parent Item
DI:Absent-Mindedness
DI:Addiction ([Physiological])
DI:Addiction ([Psychological])
DI:Aerial
DI:Alcoholism
DI:Alcoholism (Withdrawn)
DI:Amnesia (Partial)
DI:Amnesia (Total)
DI:Appearance
DI:Bad Back
DI:Bad Grip
DI:Bad Sight (Farsighted)
DI:Bad Sight (Nearsighted)
DI:Bad Smell
DI:Bad Temper
DI:Berserk
DI:Bestial
DI:Blindness
DI:Bloodlust
DI:Bully
DI:Callous
DI:Cannot Kick
DI:Cannot Learn
DI:Cannot Speak
DI:Charitable
DI:Chronic Depression
DI:Chronic Pain
DI:Chummy
DI:Clueless
DI:Code of Honour (Chivalry)
DI:Code of Honour (Gentleman's)
DI:Code of Honour (Pirate's)
DI:Code of Honour (Professional)
DI:Code of Honour (Soldier's)
DI:Code of Honour
DI:Combat Paralysis
DI:Compulsive Behavior
DI:Compulsive Carousing
DI:Compulsive Gambling
DI:Compulsive Generosity
DI:Compulsive Lying
DI:Compulsive Spending
DI:Compulsive Vowing
DI:Confused
DI:Cowardice
DI:Curious
DI:Cursed
DI:Deafness
DI:Decreased Time Rate
DI:Delusion
DI:Dependency
DI:Dependent
DI:Destiny
DI:Disciplines of Faith (Asceticism)
DI:Disciplines of Faith (Monasticism)
DI:Disciplines of Faith (Mysticism)
DI:Disciplines of Faith (Ritualism)
DI:Disciplines of Faith
DI:Disturbing Voice
DI:Divine Curse
DI:Draining
DI:Dread
DI:Duty
DI:Dwarfish Greed
DI:Dwarfism
DI:Dyslexia
DI:Easy to Read
DI:Electrical
DI:Enemy (Formidable group)
DI:Enemy (Less powerful group)
DI:Enemy (One Person)
DI:Epilepsy
DI:Fanaticism
DI:Fat
DI:Fearfulness
DI:Fragile
DI:Frightens Animals
DI:Gigantism
DI:G-Intolerance
DI:Gluttony
DI:Greed
DI:Gregarious
DI:Gullibility
DI:Ham-Fisted
DI:Hard of Hearing
DI:Hemophilia
DI:Hidebound
DI:Honesty
DI:Hunchback
DI:Impulsiveness
DI:Increased Consumption
DI:Increased Life Support (Extreme Heat/Cold)
DI:Increased Life Support (Massive)
DI:Increased Life Support
DI:Incurious
DI:Indecisive
DI:Infectious Attack
DI:Innumerate
DI:Insomniac
DI:Intolerance
DI:Invertebrate
DI:Jealousy
DI:Kleptomania
DI:Klutz
DI:Lame
DI:No Legs
DI:Laziness
DI:Lecherousness
DI:Lifebane
DI:Loner
DI:Low Empathy
DI:Low Pain Threshold
DI:Low Self-Image
DI:Low TL
DI:Lunacy
DI:Magic Susceptibility
DI:Maintenance
DI:Manic-Depressive
DI:Megalomania
DI:Miserliness
DI:Motion Sickness
DI:Mute
DI:Quadruped
DI:No Sense of Humour
DI:No Sense of Smell/Taste
DI:Noisy
DI:Non-Iconographic
DI:Numb
DI:Oblivious
DI:Obsession
DI:Odious Personal Habit
DI:Odious Racial Habit
DI:On the Edge
DI:One Arm
DI:One Eye
DI:One Hand
DI:Overconfidence
DI:Overweight
DI:Pacifism (Cannot Harm Innocents)
DI:Pacifism (Reluctant Killer)
DI:Pacifism (Self-Defence Only)
DI:Paranoia
DI:Phobia (%examplelist%)
DI:Phobia
DI:Post-Combat Shakes
DI:Pyromania
DI:Quadruped
DI:Reprogrammable
DI:Reputation
DI:Restricted Diet
DI:Restricted Vision
DI:Revulsion
DI:Sadism
DI:Secret
DI:Secret Identity (Normal Status)
DI:Secret Identity (High Status)
DI:Selfish
DI:Selfless
DI:Semi-Upright
DI:Sense of Duty
DI:Short Arms (1 Arm)
DI:Short Arms (2 Arms)
DI:Short Attention Span
DI:Short Legs
DI:Shyness
DI:Skinny
DI:Slave Mentality
DI:Slow Eater
DI:Slow Healing
DI:Slow Riser
DI:Social Disease
DI:Social Stigma (Criminal Record)
DI:Social Stigma (Disowned)
DI:Social Stigma (Excommunicated)
DI:Social Stigma (Ignorant)
DI:Social Stigma (Minor)
DI:Social Stigma (Minority Group)
DI:Social Stigma (Monster)
DI:Social Stigma (Publically disowned)
DI:Social Stigma (Second-Class Citizen)
DI:Social Stigma (Subjugated)
DI:Social Stigma (Uneducated)
DI:Social Stigma (Valuable Property)
DI:Social Stigma
DI:Space Sickness
DI:Split Personality
DI:Squeamish
DI:Status
DI:Stubbornness
DI:Sulphurholism
DI:Sulphurholism (Withdrawn)
DI:Supernatural Feature
DI:Supernatural Feature (Mostly Concealed: [Feature])
DI:Supernatural Feature (Blatantly Unnatural: [Feature])
DI:Supernatural Feature (Mostly Concealed: No Body Heat)
DI:Supernatural Feature (Blatantly Unnatural: No Reflection)
DI:Supernatural Feature (Blatantly Unnatural: No Shadow)
DI:Supernatural Feature (Blatantly Unnatural: Deathly Pallor)
DI:Supersensitive
DI:Susceptible to [Common]
DI:Susceptible to [Occasional]
DI:Susceptible to [Very Common]
DI:Trademark
DI:Trickster
DI:Total Vampire Nocturnalism
DI:Troll Brain
DI:Troll Nocturnalism
DI:Truthfulness
DI:Uncontrollable Appetite
DI:Unhealing
DI:Unique
DI:Unluckiness
DI:Unnatural Features
DI:Unnaturally Fragile
DI:Very Fat
DI:Vow
DI:Vulnerability
DI:Weak Bite
DI:Weakness
DI:Wealth
DI:Workaholic

<AllQuirks>
QU:_New Quirk
QU:Alcohol Intolerance
QU:Attentive
QU:Autocondimentor
QU:Blunt and Tactless
QU:Bowlegged
QU:Brawling Society
QU:Broad-Minded
QU:Cannot Float
QU:Cannot Run Long Distances
QU:Careful
QU:Chauvinistic
QU:Closes Eyes and Screams to Intimidate Victims
QU:Code of Honour
QU:Collects Own Snot and Earwax
QU:Congenial
QU:Considers Dwarf Gender a Very Private Matter
QU:Delusion
QU:Delusion (Spelling my name backwards disguises it perfectly)
QU:Dislikes [specify]
QU:Dislikes Cramped Conditions
QU:Dislikes Garlic
QU:Dislikes Water
QU:Distinctive Feature
QU:Distractible
QU:Doesn't Go Where Not Asked
QU:Doggy Responses
QU:Dreamer
QU:Dull
QU:Expression
QU:Former Alcoholic
QU:Former Sulphurholic
QU:Giggles a Lot
QU:Habit
QU:Horrible Hangovers
QU:Humble
QU:Hunter's Habits
QU:Imaginative
QU:Likes
QU:Minor Handicap
QU:Nervous Stomach
QU:Neutered
QU:No Staff
QU:Nosy
QU:Obsession
QU:Personality Change
QU:Personality Change (Gains Bad Temper When Drinking)
QU:Prefers To Be Above Ground Level
QU:Proud
QU:Reflexively Grabs and Consumes Small Flying Creatures
QU:Responsive
QU:Short Lifespan
QU:Silver Aversion
QU:Staid
QU:Sunburns Easily
QU:Terrifying Singer
QU:Touchy About Height and Beard
QU:Uncongenial
QU:Vow
QU:Weak Spot

<AllSkills>
SK:Accounting
SK:Acrobatics
SK:Acting
SK:Administration
SK:Aerobatics
SK:Airshipman
SK:Alchemy
SK:Animal Handling
SK:Animal Handling (Big Cats)
SK:Animal Handling (Dogs)
SK:Animal Handling (Equines)
SK:Animal Handling (Raptors)
SK:Anthropology
SK:Aquabatics
SK:Archaeology
SK:Architecture
SK:Area Knowledge
SK:Armoury
SK:Armoury (Body Armour)
SK:Armoury (Heavy Weapons)
SK:Armoury (Melee Weapons)
SK:Armoury (Missile Weapons)
SK:Artillery
SK:Artillery (Cannon)
SK:Artillery (Catapult)
SK:Artist
SK:Artist (Body Art)
SK:Artist (Calligraphy)
SK:Artist (Drawing)
SK:Artist (Illumination)
SK:Artist (Illusion)
SK:Artist (Interior Decorating)
SK:Artist (Painting)
SK:Artist (Pottery)
SK:Artist (Scene Design)
SK:Artist (Sculpting)
SK:Artist (Woodworking)
SK:Astronomy
SK:Astronomy (Observational)
SK:Autohypnosis
SK:Axe/Mace
SK:Bicycling
SK:Blowpipe
SK:Boating
SK:Boating (Sailboat)
SK:Boating (Unpowered)
SK:Body Language
SK:Body Sense
SK:Bow
SK:Boxing
SK:Brawling
SK:Broadsword
SK:Camouflage
SK:Carousing
SK:Carpentry
SK:Cartography
SK:Chemistry
SK:Climbing
SK:Cloak
SK:Computer Hacking
SK:Computer Operation
SK:Computer Programming
SK:Conducting
SK:Connoisseur
SK:Connoisseur (Dance)
SK:Connoisseur (Literature)
SK:Connoisseur (Music)
SK:Connoisseur (Visual Arts)
SK:Connoisseur (Wine)
SK:Cooking
SK:Counterfeiting
SK:Criminology
SK:Crossbow
SK:Cryptography
SK:Current Affairs
SK:Current Affairs (Business)
SK:Current Affairs (Headline News)
SK:Current Affairs (Politics)
SK:Current Affairs (Regional)
SK:Current Affairs (Sports)
SK:Dancing
SK:Detect Lies
SK:Diagnosis
SK:Diplomacy
SK:Directing
SK:Disguise
SK:Diving Suit
SK:Dreaming
SK:Driving
SK:Driving (Automobile)
SK:Driving (Construction Equipment)
SK:Driving (Halftrack)
SK:Driving (Heavy Wheeled)
SK:Driving (Hovercraft)
SK:Driving (Locomotive)
SK:Driving (Mecha)
SK:Driving (Motorcycle)
SK:Driving (Tracked)
SK:Dropping
SK:Economics
SK:Engineer
SK:Engineer (Animal-Drawn Vehicles)
SK:Engineer (Artillery)
SK:Engineer (Bicycles)
SK:Engineer (Civil)
SK:Engineer (Clacks)
SK:Engineer (Clockwork)
SK:Engineer (Combat)
SK:Engineer (Low-Tech Machines)
SK:Engineer (Magical)
SK:Engineer (Mining)
SK:Engineer (Ships)
SK:Engineer (Steam Engines)
SK:Escape
SK:Exorcism
SK:Explosives
SK:Explosives (Demolition)
SK:Explosives (Fireworks)
SK:Falconry
SK:Farming
SK:Fast-Draw
SK:Fast-Draw (Arrow)
SK:Fast-Draw (Knife)
SK:Fast-Draw (Long Arm)
SK:Fast-Draw (Pistol)
SK:Fast-Draw (Sword)
SK:Fast-Draw (Two-Handed Sword)
SK:Fast-Talk
SK:Filch
SK:Finance
SK:Fire Eating
SK:First Aid
SK:Fishing
SK:Flail
SK:Flamethrower
SK:Forced Entry
SK:Forensics
SK:Forgery
SK:Fortune-Telling
SK:Fortune-Telling (Astrology)
SK:Fortune-Telling (Augury)
SK:Fortune-Telling (Crystal Gazing)
SK:Fortune-Telling (Dream Interpretation)
SK:Fortune-Telling (Feng Shui)
SK:Fortune-Telling (Palmistry)
SK:Fortune-Telling (Tarot)
SK:Forward Observer
SK:Free Fall
SK:Freight Handling
SK:Gambling
SK:Games
SK:Gardening
SK:Geology
SK:Gesture
SK:Gunner
SK:Gunner (Cannon)
SK:Gunner (Catapult)
SK:Guns
SK:Guns (Pistol)
SK:Guns (Rifle)
SK:Guns (Shotgun)
SK:Heraldry
SK:Herb Lore
SK:Hidden Lore
SK:Hidden Lore (Conspiracies)
SK:Hidden Lore (Demon Lore)
SK:Hidden Lore (Faerie Lore)
SK:Hidden Lore (Spirit Lore)
SK:Hiking
SK:History
SK:Hobby Skill
SK:Holdout
SK:Housekeeping
SK:Hypnotism
SK:Innate Attack
SK:Innate Attack (Beam)
SK:Innate Attack (Breath)
SK:Innate Attack (Gaze)
SK:Innate Attack (Projectile)
SK:Intelligence Analysis
SK:Interrogation
SK:Intimidation
SK:Jeweler
SK:Judo
SK:Jumping
SK:Karate
SK:Kiai
SK:Knife
SK:Knot-Tying
SK:Kusari
SK:Lance
SK:Lasso
SK:Law
SK:Leadership
SK:Leatherworking
SK:Lifting
SK:Light Walk
SK:Linguistics
SK:Lip Reading
SK:Literature
SK:Lockpicking
SK:Makeup
SK:Masonry
SK:Mathematics
SK:Mathematics (Applied)
SK:Mathematics (Pure)
SK:Mechanic
SK:Meditation
SK:Mental Strength
SK:Merchant
SK:Metallurgy
SK:Meteorology
SK:Mimicry
SK:Mimicry (Animal Sounds)
SK:Mimicry (Bird Calls)
SK:Mimicry (Speech)
SK:Mind Block
SK:Mount
SK:Musical Composition
SK:Musical Instrument
SK:Naturalist
SK:Navigation
SK:Navigation (Air)
SK:Navigation (Land)
SK:Navigation (Sea)
SK:Observation
SK:Occultism
SK:Packing
SK:Panhandling
SK:Parachuting
SK:Performance
SK:Pharmacy
SK:Philosophy
SK:Photography
SK:Physician
SK:Physics
SK:Physiology
SK:Pickpocket
SK:Piloting
SK:Poetry
SK:Poisons
SK:Polearm
SK:Politics
SK:Pot-Making
SK:Professional Skill
SK:Professional Skill (Barber)
SK:Professional Skill (Brewer)
SK:Professional Skill (Choreographer)
SK:Professional Skill (Cooper)
SK:Professional Skill (Distiller)
SK:Professional Skill (Dyer)
SK:Professional Skill (Florist)
SK:Professional Skill (Game Designer)
SK:Professional Skill (Glassblower)
SK:Professional Skill (Leatherworking)
SK:Professional Skill (Masonry)
SK:Professional Skill (Potter)
SK:Professional Skill (Prostitute)
SK:Professional Skill (Tailor)
SK:Professional Skill (Tanner)
SK:Professional Skill (Vinter)
SK:Professional Skill (Weaver)
SK:Propaganda
SK:Prospecting
SK:Psychology
SK:Public Speaking
SK:Rapier
SK:Religious Ritual
SK:Research
SK:Riding
SK:Ritual Magic
SK:Running
SK:Savoir-Faire
SK:Savoir-Faire (High Society)
SK:Savoir-Faire (Military)
SK:Savoir-Faire (Organised Crime)
SK:Savoir-Faire (Servant)
SK:Savoir-Faire (Watch)
SK:Scrounging
SK:Scuba
SK:Seamanship
SK:Search
SK:Sewing
SK:Sex Appeal
SK:Shadowing
SK:Shield
SK:Shield (Buckler)
SK:Shield (Force)
SK:Shield (Shield)
SK:Shiphandling
SK:Shortsword
SK:Singing
SK:Skating
SK:Sleight of Hand
SK:Sling
SK:Smallsword
SK:Smith
SK:Smith (Blacksmith)
SK:Smith (Coppersmith)
SK:Smith (Tinsmith)
SK:Smuggling
SK:Sociology
SK:Soldier
SK:Spacer
SK:Spear
SK:Spear Thrower
SK:Sports
SK:Staff
SK:Stealth
SK:Strategy
SK:Strategy (Land)
SK:Strategy (Naval)
SK:Streetwise
SK:Submarine
SK:Surgery
SK:Survival
SK:Survival (Arctic)
SK:Survival (Desert)
SK:Survival (Island/Beach)
SK:Survival (Jungle)
SK:Survival (L-Space)
SK:Survival (Mountain)
SK:Survival (Plains)
SK:Survival (Swampland)
SK:Survival (Woodlands)
SK:Swimming
SK:Symbol Drawing
SK:Tactics
SK:Teaching
SK:Teamster
SK:Thaumatology
SK:Theology
SK:Throwing
SK:Thrown Weapon
SK:Thrown Weapon (Axe/Mace)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Spear)
SK:Thrown Weapon (Stick)
SK:Thrown Weapon (Throwing Star)
SK:Tracking
SK:Traps
SK:Two-Handed Axe/Mace
SK:Two-Handed Sword
SK:Urban Survival
SK:Veterinary
SK:Weather Sense
SK:Wrestling
SK:Writing

************************************************************************************************************************
[GROUPS]
************************************************************************************************************************
<Musical Instrument>
SK:Musical Instrument

<Appeal>
ST:Appealing
ST:Unappealing

<Absolute Direction>
SK:Navigation (Air)
SK:Navigation (Land)
SK:Navigation (Sea)

<Animal Friend>
SK:Animal Handling
SK:Falconry
SK:Packing
SK:Riding
SK:Teamster
SK:Veterinary

<Artificer>
SK:Armoury
SK:Carpentry
SK:Engineer
SK:Masonry
SK:Mechanic
SK:Smith

<Born to Hang>
SK:Counterfeiting
SK:Disguise
SK:Fast-Talk
SK:Filch
SK:Forced Entry
SK:Forgery
SK:Fortune-Telling
SK:Holdout
SK:Lockpicking
SK:Pickpocket
SK:Sleight of Hand
SK:Smuggling

<Born War-Leader>
SK:Intelligence Analysis
SK:Leadership
SK:Savoir-Faire (Military)
SK:Strategy
SK:Tactics

<Charisma>
SK:Fortune-Telling
SK:Leadership
SK:Panhandling
SK:Public Speaking

<Combat Reflexes>
ST:Dodge
ST:Parry
ST:Block
SK:Fast-Draw

<Empathy>
SK:Detect Lies
SK:Fortune-Telling

<Gifted Artist>
SK:Artist
SK:Jeweller
SK:Leatherworking
SK:Photography
SK:Sewing

<Healer>
SK:Diagnosis
SK:First Aid
SK:Herbalism
SK:Midwifery
SK:Physician
SK:Psychology
SK:Surgery
SK:Veterinary

<High Manual Dexterity>
SK:Artist
SK:Jeweller
SK:Knot-Tying
SK:Lockpicking
SK:Pickpocket
SK:Sewing
SK:Sleight of Hand
SK:Surgery

<Hunchback>
SK:Disguise
SK:Shadowing

<Influence Skills>
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<Low Empathy>
SK:Acting
SK:Carousing
SK:Criminology
SK:Detect Lies
SK:Diplomacy
SK:Fast-Talk
SK:Interrogation
SK:Leadership
SK:Merchant
SK:Politics
SK:Psychology
SK:Savoir-Faire
SK:Sex Appeal
SK:Sociology
SK:Streetwise

<Mathematical Ability>
SK:Accounting
SK:Astronomy
SK:Cryptography
SK:Engineer
SK:Finance
SK:Mathematics

<Metalwork>
SK:Armoury
SK:Engineer (Animal-Drawn Vehicles)
SK:Engineer (Artillery)
SK:Engineer (Bicycles)
SK:Engineer (Clacks)
SK:Engineer (Clockwork)
SK:Engineer (Low-Tech Machines)
SK:Engineer (Magical)
SK:Engineer (Mining)
SK:Engineer (Ships)
SK:Engineer (Steam Engines)
SK:Jeweller
SK:Mechanic
SK:Metallurgy
SK:Prospecting
SK:Smith

<Musical Ability>
SK:Conducting
SK:Musical Composition
SK:Musical Instrument
SK:Singing

<Oblivious>
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<Outdoorsman>
SK:Camouflage
SK:Fishing
SK:Mimicry
SK:Naturalist
SK:Navigation
SK:Survival
SK:Tracking

<Perfect Balance>
SK:Acrobatics
SK:Aerobatics
SK:Aquabatics
SK:Climbing
SK:Piloting

<Seek Spells>
SP:Seek Earth
SP:Seek Water 

<Shyness>
SK:Acting
SK:Carousing
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Leadership
SK:Merchant
SK:Panhandling
SK:Performance
SK:Politics
SK:Public Speaking
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise
SK:Teaching

<Smooth Operator>
SK:Acting
SK:Carousing
SK:Detect Lies
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Leadership
SK:Panhandling
SK:Politics
SK:Public Speaking
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<VocalFeatures>
SK:Diplomacy
SK:Fast-Talk
SK:Mimicry
SK:Performance
SK:Politics
SK:Public Speaking
SK:Sex Appeal
SK:Singing

<Unarmed Combat Skill>
SK:Boxing
SK:Brawling
SK:Karate
SK:Judo
SK:Sumo Wrestling
SK:Wrestling

<Melee Weapon Skill>
SK:Axe/Mace
SK:Broadsword
SK:Cloak
SK:Flail
SK:Knife
SK:Lance
SK:Polearm
SK:Rapier
SK:Shortsword
SK:Smallsword
SK:Spear
SK:Staff
SK:Two-Handed Axe/Mace
SK:Two-Handed Flail
SK:Two-Handed Sword

<One-Handed Melee Weapon Skill>
SK:Axe/Mace
SK:Broadsword
SK:Flail
SK:Knife
SK:Polearm
SK:Rapier
SK:Shortsword
SK:Smallsword
SK:Spear
SK:Staff

<ShieldSkill>
SK:Shield (Shield)
SK:Shield (Buckler)
SK:Shield (Force)

<Ranged Weapon Skill>
SK:Artillery (Beams)
SK:Artillery (Bombs)
SK:Artillery (Cannon)
SK:Artillery (Catapult)
SK:Artillery (Guided Missile)
SK:Artillery (Torpedoes)
SK:Beam Weapons (Pistol)
SK:Beam Weapons (Projector)
SK:Beam Weapons (Rifle)
SK:Blowpipe
SK:Bolas
SK:Bow
SK:Crossbow
SK:Dropping
SK:Flamethrower
SK:Gunner (Cannon)
SK:Gunner (Catapult)
SK:Guns (Pistol)
SK:Guns (Rifle)
SK:Guns (Shotgun)
SK:Innate Attack (Beam)
SK:Innate Attack (Breath)
SK:Innate Attack (Gaze)
SK:Innate Attack (Projectile)
SK:Sling
SK:Thrown Weapon (Axe/Mace)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Spear)
SK:Thrown Weapon (Stick)
SK:Thrown Weapon (Throwing Star)

************************************************************************************************************************
[MODIFIERS]
************************************************************************************************************************

<_General>
_User-Defined Enhancement, +0%, group(_General),
	x(_
		#InputToTagReplace("Please enter the name of the Enhancement:" , name, ,"User-Define Enhancement"),
		#InputToTagReplace("Please enter the value of the Enchantment; use +0% for percentage enhancements, *0 for cost multipliers, and +0 for point increases (replacing 0 with the actual value):", cost, "+0%", "User-Define Enhancement") _
	)

_User-Defined Limitation, -0%, group(_General),
	x(_
		#InputToTagReplace("Please enter the name of the Limitation:" , name, ,"User-Define Limitation"),
		#InputToTagReplace("Please enter the value of the Limitation; use -0% for percentage limitaitons, *0 for cost multipliers, and -0 for point reductions (replacing 0 with the actual value):", cost, "-0%", "Limitation") _
	)

_Free, *0, group(_General)

Mitigator, -60%, group(_General), page(53), mitigator(yes)

Pact, -1%/-2%, group(_General), page(B113)
Preparation Required, -20%/-30%/-50%/-60%, levelnames(1 minute, 10 minutes, 1 hour, 8 hours), upto(4), group(_General), page(B114)
Preparation Required: Weakened Without Preparation, -10%/-15%/-25%/-30%, levelnames(1 minute, 10 minutes, 1 hour, 8 hours), upto(4), group(_General), page(B114)

Takes Extra Time, -10%/-20%, group(_General), page(B115)
Takes Recharge, -10%/-20%, levelnames(5 seconds, 15 seconds, 1 hour), upto(3), group(_General), page(B115)

Temporary Disadvantage, -1%/-2%, group(_General), page(B115), level(%levelaliaslist%),
	formula(-@min(me::level,@round((me::level*80/owner::premodspoints)+0.004999,2))), forceformula(yes),
	levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100),
	x(_
	#InputToTag("Please specify the name of the Temporary Disadvantage:",nameext, ,Temporary Disadvantage),
	#ChoiceList(_
			name(level),
			title(Temporary Disadvantage),
			text(Please select the point cost of the Temporary Disadvantage. If the exact value is not listed pick the closest one, you will be able to adjust it later:),
			picksallowed(1),
			method(bynumber),
			list(_
				"  -1",
				"  -2",
				"  -3",
				"  -4",
				"  -5",
				"  -6",
				"  -7",
				"  -8",
				"  -9",
				" -10",
				" -11",
				" -12",
				" -13",
				" -14",
				" -15",
				" -20",
				" -25",
				" -30",
				" -35",
				" -40",
				" -45",
				" -50",
				" -55",
				" -60",
				" -65",
				" -70",
				" -75",
				" -80",
				" -85",
				" -90",
				" -95",
				"-100"_
				),
			aliaslist(_
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				20,
				25,
				30,
				35,
				40,
				45,
				50,
				55,
				60,
				65,
				70,
				75,
				80,
				85,
				90,
				95,
				100 _
					)_
			),
	#Edit _
	)

Trigger, -10%/-20%, levelnames(Very Common, Common, Occasional, Rare), upto(4), group(_General), page(B115), mods(Trigger)
Unconscious Only, -20%, group(_General), page(B115)
Uncontrollable, -10%/-30%, levelnames(non-destructive power, destructive power), upto(2), group(_General), page(B116)
Unreliable/Activation, -10%/-20%/-40%/-80%, levelnames(14 or less, 11 or less, 8 or less, 5 or less), upto(4), group(_General), page(B116)
Unreliable/Malfunction, -5%/-10%, levelnames(malfunction number 16 , malfunction number 15, malfunction number 14, malfunction number 13, malfunction number 12), upto(5), group(_General), page(B116)
Untrainable, -40%, group(_General), page(B116)
Gadget/Breakable: DR 2 or less, -20%, group(_General), page(B117)
Gadget/Breakable: DR 3-5, -15%, group(_General), page(B117)
Gadget/Breakable: DR 6-15, -10%, group(_General), page(B117)
Gadget/Breakable: DR 16-25, -5%, group(_General), page(B117)
Gadget/Breakable: DR 26 or higher, +0%, group(_General), page(B117)
Gadget/Breakable: Cannot repair, -15%, group(_General), page(B117)
Gadget/Breakable: Object is complex machine, -5%, group(_General), page(B117)
Gadget/Breakable: Size -9 or less, +0%, group(_General), page(B117)
Gadget/Breakable: Size -7 or -8, -5%, group(_General), page(B117)
Gadget/Breakable: Size -5 or -6, -10%, group(_General), page(B117)
Gadget/Breakable: Size -3 or -4, -15%, group(_General), page(B117)
Gadget/Breakable: Size -1 or -2, -20%, group(_General), page(B117)
Gadget/Breakable: Size 0 or more, -25%, group(_General), page(B117)
Gadget/Can Be Stolen: Easily snatched with unopposed DX roll, -40%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Can Be Stolen: Thief must win a Quick Contest of DX or ST, -30%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Can Be Stolen: Can only be taken by stealth or trickery, -20%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Can Be Stolen: Must be forcefully removed, -10%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Unique, -25%, group(_General), page(B117)

<Can Be Stolen>
Does not work for the Thief, *0.5, group(Can Be Stolen), page(B117)

<Costs Fatigue>
Per Minute, *1, group(Costs Fatigue), page(B111)
Per Second, *2, group(Costs Fatigue), page(B111)
Per Activation, *1, group(Costs Fatigue), page(B111)

<Cultural Familiarity>
Native, *0, group(Cultural Familiarity), page(32), gives(+1 to ST:Native Cultural Familiarities)

<Trigger>
Illegal, *1.5, group(Trigger), page(B115)
Addictive, *1.5, group(Trigger), page(B115)
Dangerous, *1.5, group(Trigger), page(B115)

<_Psionic Power Modifier>
ESP, -10%, group(_Psionic Power Modifier), page(B255)
Telepathic, -10%, group(_Psionic Power Modifier), page(B257)
Psionic Teleportation, -10%, group(_Psionic Power Modifier), page(B257)

Psychic Healing, -10%, group(_Psionic Power Modifier), page(B256)
Psychokinetic, -10%, group(_Psionic Power Modifier), page(B256)

<_Origin>
Biological, +0, group(_Origin), page(B33)
Chi, +0, group(_Origin), page(B33)
Cosmic, +0, group(_Origin), page(B33)
Divine, +0, group(_Origin), page(B33)
High-Tech, +0, group(_Origin), page(B33)
Magic, +0, group(_Origin), page(B33)
Mana Sensitive, -10%, group(_Origin), page(B33)
Psionic, +0, group(_Origin), page(B33)
Spirit, +0, group(_Origin), page(B33)

<Addiction>
Effect: Extreme, -10, shortname(Extreme Effects), group(Addiction), page(54)
Effect: Highly Addictive (-5 on withdrawal roll), -5, shortname(Highly Addictive), group(Addiction), page(54)
Effect: Totally Addictive (-10 on withdrawal roll), -10, shortname(Totally Addictive), group(Addiction), page(54)
Legality: Illegal, +0, shortname(Illegal), group(Addiction), page(54)
Legality: Legal, +5, shortname(Legal), group(Addiction), page(54)

<Secondary>
Secondary, *1/5, group(Secondary), page(B36)

<Alternate Form>
Difference in point costs, +1/+2, formula(@int(me::level * 0.9 + 0.9)), forceformula(yes), tier(1), group(Alternate Form), page(85),
	level([level]),
	x(_
		#InputReplace("Please enter the differnce in point costs between the characters native template and his most expensive alternate form:", "[level]", "0", "Difference in point costs")_
	)
Absorptive Change, +5%/+10%, upto(5),
	levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance, Extra-Heavy Encumbrance),
	group(Alternate Form), page(86)
Emergencies Only, -30%, page(86)
"Once On, Stays On", +50%, group(Alternate Form), page(86)
"Difference in point costs (Once On, Stays On)", +1/+2, tier(1), group(Alternate Form), page(86)
Reduced Change Time, +20%/+40%, upto(4), group(Alternate Form), page(87),
	levelnames(5 seconds, 3 seconds, 2 seconds, 1 second)
Trigger, -10%/-15%/-20%/-25%/-30%/-35%/-40%, upto(7),
	levelnames(Available Almost Anywhere, Available Most Places, A Bit of an Issue, Noticeably Limiting, Significantly Limiting, A Substantial Problem, Very Seriously Expensive or Inconvenient),
	group(Alternate Form), page(87)
Unconscious Only, -20%, group(Alternate Form), page(87)
Uncontrollable, -10%/-15%/-20%/-25%/-30%, upto(5),
	levelnames(Somewhat Inconvenient OR When Under Ordinary Stress, Rather Inconvenient OR When Under Ordinary or Specific Stress, Significantly Inconvenient, Really Inconvenient, Seriously Inconvenient),
	group(Alternate Form), page(87)

// Note that the following is definitely kept for Discworld purposes!
<Appearance>
Universal, +25%, group(Appearance), page(85)

<Arm DX>
One arm, *1, group(Arm DX), page(B40)
Two arms, *4/3, group(Arm DX), page(B40)

<Arm ST>
One arm, *1, gives(+owner::level to ST:One Arm Lifting ST, +owner::level to ST:One Arm Striking ST), group(Arm ST), page(B40)
Two arms, *5/3, gives(_
				+owner::level to ST:One Arm Lifting ST,
				+owner::level to ST:One Arm Striking ST,
				+owner::level to ST:Two Arm Lifting ST,
				+owner::level to ST:Two Arm Striking ST _
				), group(Arm ST), page(B40)

<Attractive>
Androgynous, 0, group(Attractive), page(B21)
Impressive, 0, group(Attractive), page(B21)

<Bad Sight>
Mitigator (Glasses), -60%, group(Bad Sight), page(53), mitigator(yes), shortname(Glasses), mitigator(yes)

<Blindness>
Mitigator (Artificial Eyes), -60%, group(Blindness), page(), shortname(Artificial Eyes), mitigator(yes),
	x(#Message("This modifier is for use only with Blindness. Applying it to any other trait will cause problems."))

<Combat Table>
Remove Combat Table Entry, +0, addmode({Punch, damage(), damtype(), minst(), reach()} | {Kick, damage(), damtype(), minst(), reach()} | {Bite, damage(), damtype(), minst(), reach()})

<Contact>
Can Obtain Information Using Supernatural Talents, +1, shortname(Supernatural), group(Contact), page(38)

<Cosmic Power>
Per point of abilities, 10/20, group(Cosmic Power), page(B71)

<Damage Resistance>
Can't Wear Armour, -40%, group(Damage Resistance), page(88)
Only vs. [verycommon], -20%, group(Damage Resistance), page(88),
	x(_
		#InputReplace("Please Specify the Very Common form of damage this protects against:",
			"[verycommon]", , "Very Common Damage Type")_
	)
Only vs. [common], -40%, group(Damage Resistance), page(88),
	x(_
		#InputReplace("Please Specify the Common form of damage this protects against:",
			"[common]", , "Common Damage Type")_
	)
Only vs. [occasional], -60%, group(Damage Resistance), page(88),
	x(_
		#InputReplace("Please Specify the occasionally-encountered form of damage this protects against:",
			"[occasional]", , "Occasional Damage Type")_
	)
Only vs. [infrequent], -80%, group(Damage Resistance), page(88),
	x(_
		#InputReplace("Please Specify the infrequently-encountered form of damage this protects against:",
			"[infrequent]", , "Infrequent Damage Type")_
	)
Tough Skin, -40%, group(Damage Resistance), page(B47)

<Partial>
Covers only one hit location of that type, *2, group(Partial), page(B47)
Covers all hit location of that type, *1, group(Partial), page(B47)

<Dependency>
Illegal, -5, group(Dependency), page(B130)
Frequency Needed: Constantly, *5, shortname(Constantly), group(Dependency), page(B130)
Frequency Needed: Hourly, *4, shortname(Hourly), group(Dependency), page(B130)
Frequency Needed: Daily, *3, shortname(Daily), group(Dependency), page(B130)
Frequency Needed: Weekly, *2, shortname(Weekly), group(Dependency), page(B130)
Frequency Needed: Monthly, *1, shortname(Monthly), group(Dependency), page(B130)
Frequency Needed: Seasonally, *1/3, shortname(Seasonally), group(Dependency), page(B130)
Frequency Needed: Yearly, *1/10, shortname(Yearly), group(Dependency), page(B130)
Aging, +30%, group(Dependency), page(B130)

<Dependent>
Importance: Employer or Acquaintance, *1/2, shortname(Employer/Acquaintance), group(Dependent), page(B131)
Importance: Friend, *1, shortname(Friend), group(Dependent), page(B131)
Importance: Loved one, *2, shortname(Loved one), group(Dependent), page(B131)
Group of Dependents, *2, group(Dependent), page(B131)

<Discriminatory Smell>
Emotion Sense, +8, group(Discriminatory Smell), page(88)

<Dread>
Larger Radius, -1/-2, upto(10), group(Dread), page(95),
	levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards)
Rarity: Rare, *1/2, shortname(Rare), group(Dread), page(95)
Rarity: Occasional, *1, shortname(Occasional), group(Dread), page(95)
Rarity: Common, *2, shortname(Common), group(Dread), page(95)
Rarity: Very Common, *3, shortname(Very Common), group(Dread), page(95)

<Duty>
Extremely Hazardous, -5, group(Duty), page(B134)
Involuntary, -5, group(Duty), page(B134)
Nonhazardous, +5, group(Duty), page(B134)

<Evil Twin>
Evil Twin, -10, group(Evil Twin), page(B135)
Evil Twin is more skilled than you, -5, group(Evil Twin), page(B135)
Evil Twin posseses abilities that you do not, -5, group(Evil Twin), page(B135)
Evil Twin is more skilled than you and posseses abilities that you do not, -10, group(Evil Twin), page(B135)

<Enemy>
Unknown, -5, group(Enemy), page(B135)
Intent: Watcher, *1/4, shortname(Watcher), group(Enemy), page(B135)
Intent: Rival, *1/2, shortname(Rival), group(Enemy), page(B135)
Intent: Hunter, *1, shortname(Hunter), group(Enemy), page(B135)

<Extra ST>
Affects displayed ST score, +0%, shortname(Affects ST), gives(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional ST bonus, +0%, shortname(Conditional ST), conditional(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally recieves the bonus.)

<Extra DX>
Affects displayed DX score, +0%, shortname(Affects DX), gives(+Owner::Level to ST:DX), group(Extra DX), description(This modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional DX bonus, +0%, shortname(Conditional DX), conditional(+Owner::Level to ST:DX), group(Extra DX), description(This modifier causes the Extra DX advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra IQ>
Affects displayed IQ score, +0%, shortname(Affects IQ), gives(+Owner::Level to ST:IQ), group(Extra IQ), description(This modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional IQ bonus, +0%, shortname(Conditional IQ), conditional(+Owner::Level to ST:IQ), group(Extra IQ), description(This modifier causes the Extra IQ advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra HT>
Affects displayed HT score, +0%, shortname(Affects HT), gives(+Owner::Level to ST:HT), group(Extra HT), description(This modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HT bonus, +0%, shortname(Conditional HT), conditional(+Owner::Level to ST:HT), group(Extra HT), description(This modifier causes the Extra HT advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Will>
Affects displayed Will score, +0%, shortname(Affects Will), gives(+Owner::Level to ST:Will), group(Extra Will), description(This modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Will bonus, +0%, shortname(Conditional Will), conditional(+Owner::Level to ST:Will), group(Extra Will), description(This modifier causes the Extra Will advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Perception>
Affects displayed Per score, +0%, shortname(Affects Per), gives(+Owner::Level to ST:Perception), group(Extra Perception), description(This modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Per bonus, +0%, shortname(Conditional Per), conditional(+Owner::Level to ST:Perception), group(Extra Perception), description(This modifier causes the Extra Perception advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Hit Points>
Affects displayed HP score, +0%, shortname(Affects HP), gives(+Owner::Level to ST:Hit Points), group(Extra Hit Points), description(This modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HP bonus, +0%, shortname(Conditional HP), conditional(+Owner::Level to ST:Hit Points), group(Extra Hit Points), description(This modifier causes the Extra Hit Points advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)
Growth Size, +0%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Extra Hit Points), page(B58)

<Extra Fatigue Points>
Affects displayed FP score, +0%, shortname(Affects FP), gives(+Owner::Level to ST:Fatigue Points), group(Extra Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional FP bonus, +0%, shortname(Conditional FP), conditional(+Owner::Level to ST:Fatigue Points), group(Extra Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Basic Move>
Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(+Owner::Level to ST:Basic Move), group(Extra Basic Move), description(This modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Move bonus, +0%, shortname(Conditional Move), conditional(+Owner::Level to ST:Basic Move), group(Extra Basic Move), description(This modifier causes the Extra Basic Move advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Basic Speed>
Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(+(Owner::Level/4) to ST:Basic Speed), group(Extra Basic Speed), description(This modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Speed bonus, +0%, shortname(Conditional Speed), conditional(+(Owner::Level/4) to ST:Basic Speed), group(Extra Basic Speed), description(This modifier causes the Extra Basic Speed advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Water Move>
Affects displayed Water Move score, +0%, shortname(Affects Water Move), gives(+Owner::Level to ST:Basic Water Move), group(Extra Water Move), description(This modifier causes the Extra Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Water Move bonus, +0%, shortname(Conditional Water Move), conditional(+Owner::Level to ST:Basic Water Move), group(Extra Water Move), description(This modifier causes the Extra Water Move advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Air Move>
Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(+Owner::Level to ST:Basic Air Move), group(Extra Air Move), description(This modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Air Move bonus, +0%, shortname(Conditional Air Move), conditional(+Owner::Level to ST:Basic Air Move), group(Extra Air Move), description(This modifier causes the Extra Air Move advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Frequency of Appearance>
Frequency: roll of  6 or less (Quite rarely), *1/2, shortname(6 or less), group(Frequency of Appearance), page(B36)
Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance), page(B36)
Frequency: roll of 12 or less (Quite often), *2, shortname(12 or less), group(Frequency of Appearance), page(B36)
Frequency: roll of 15 or less (Almost all the time), *3, shortname(15 or less), group(Frequency of Appearance), page(B36)
Frequency: no roll required (Constantly), *4, shortname(Constantly), group(Frequency of Appearance), page(B36)

<Deafness>
Mitigator (Ear Trumpet), -60%, group(Deafness), page(53), shortname(Ear Trumpet), mitigator(yes)

<Hard of Hearing>
Mitigator (Ear Trumpet), -60%, group(Hard of Hearing), page(53), shortname(Ear Trumpet), mitigator(yes)

<Injury Tolerance>
No Blood, +5, group(Injury Tolerance), page(89)
No Vitals, +5, group(Injury Tolerance), page(89)
Unliving, +20, group(Injury Tolerance), page(89)

<Alternative Attack>
Alternative Attack, *1/5, group(Alternative Attack), page(B61), tier(2)

<Insubstantiality>
Affect Substantial, +80, group(Insubstantiality), page(89)
Always On, -40, group(Insubstantiality), page(90)
Can Carry Objects, +8/+16/+40/+80, upto(4),
	levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance),
	group(Insubstantiality), page(90)
Usually On, -32, group(Insubstantiality), page(90)

<Invisibility>
Affects Devices, +20, group(Invisibility), page(90)
Can Carry Objects, +4/+8/+20/+40, upto(4),
	levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance),
	group(Invisibility), page(90)
Only While Insubstantial, -4, group(Invisibility), page(90)
Substantial Only, -4, group(Invisibility), page(90)
Switchable, +4, group(Invisibility), page(90)
Usually On, +2, group(Invisibility), page(90)
Visible Reflection, -4, group(Invisibility), page(90)
Visible Shadow, -4, group(Invisibility), page(90)

<Native Language>
Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)
Native Speaker, -3, gives(=+0.5 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 2 else 3)), forceformula(yes), group(Language), page(B23)
Native Writer, -3, gives(=+0.5 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 2 else 3)), forceformula(yes), group(Language), page(B23)

<Lifting ST>
Doesn't affect Basic Lift, 0, gives(-owner::level to ST:Lifting ST)

<Missing Legs>
Mitigator (Prosthetic Leg), -60%, group(Missing Legs), page(B112), shortname(Prosthetic Leg), mitigator(yes)

<Money>
5% of Starting Wealth, +0
10% of Starting Wealth, +0
15% of Starting Wealth, +0
20% of Starting Wealth, +0
30% of Starting Wealth, +0
40% of Starting Wealth, +0
50% of Starting Wealth, +0
60% of Starting Wealth, +0
70% of Starting Wealth, +0
80% of Starting Wealth, +0
90% of Starting Wealth, +0
100% of Starting Wealth, +0

Trading Character Points for Money, +1/+2, formula(0), forceformula(yes), gives(+@indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000) to ST:Money, +@indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000) to ST:Remaining Funds), page(B26)

Money Earned in Play, +0/+0, level([Level]), formula(0), forceformula(yes), gives(+1 to ST:Money, +1 to ST:Remaining Funds),
	x(_
		#InputToTagReplace("Please describe how this money was acquired", nameext, "note","Money Earned in Play"),
		#InputReplace("Please enter the level (dollars) of this modifier:", "[level]", "1", "Money Earned in Play") _
	)

Money Spent in Play, +0/+0, level([Level]), formula(0), forceformula(yes), gives(-1 to ST:Money, -1 to ST:Remaining Funds),
	x(_
		#InputToTagReplace("Please describe how this money was spent", nameext, "note","Money Spent in Play"),
		#InputReplace("Please enter the level (dollars) of this modifier:", "[level]", "1", "Money Spent in Play") _
	)

<Quadruped>
Quadruped, -40%, group(Quadruped), page(96)

<Quadruped Stat>
Quadruped, -0%, formula(-@if(ST:Quadruped > 0 & owner::level > 0 then 40 else 0)),
	forceformula(yes), group(Quadruped Stat), page(96)

<Patron>
Equipment: no more than starting wealth, +50%, group(Patron), page(B73)
Equipment: more than starting wealth, +100%, group(Patron), page(B73)
Highly Accessible, +50%, group(Patron), page(B73)
Special Abilities: extensive social or political power, +50%, group(Patron), page(B73)
Special Abilities: magical powers in nonmagical world, +100%, group(Patron), page(B73)
Special Abilities: possesses equipment from a greater TL, +100%, group(Patron), page(B73)
Special Abilities: grants special powers, +100%, group(Patron), page(B73)
Special Abilities: unusual reach in time or space, +100%, group(Patron), page(B73)
Minimal Intervention, -50%, group(Patron), page(B73)
Secret, -50%, group(Patron), page(B73)
Unwilling, -50%, group(Patron), page(B74)

<Peripheral Vision>
Easy to Hit, -20%, group(Peripheral Vision), page(B75)

<Possession>
Assimilation, +10%, group(Possession), page(B76)
Chronic, +20%, group(Possession), page(B76)
Mind Swap, +10%, group(Possession), page(B76)
Telecontrol, +50%, group(Possession), page(B76)
Digital, -40%, group(Possession), page(B76)
Magical, -10%, group(Possession), page(B76)
Mindlink Required, -40%, group(Possession), page(B76)
No Memory Access, -10%, group(Possession), page(B76)
Parasitic, -60%, group(Possession), page(B76)
Puppet Only, -30%, group(Possession), page(B76)
Spiritual, -20%, group(Possession), page(B76)

<Regeneration>
Requires Special Condition, -40%, group(Regeneration), page(90)
Doesn't Heal Damage of a Specific Type, -20%, group(Regeneration), page(90)
Doesn't Work in Specific Circumstances, -20%, group(Regeneration), page(90)

<Punch/Kick>
Include +1 damage from Boots in base damage, +0, shortname(Has Boots), gives(=+@textindexedvalue( $modetag(mode), ("Kick", 1) ) to owner::damage$ listAs "+1 damage from Boots"), group(Punch/Kick)
Include +1 damage from Gauntlets in base damage, +0, shortname(Has Gauntlets), gives(=+@textindexedvalue( $modetag(mode), ("Punch", 1) ) to owner::damage$ listAs "+1 damage from Gauntlets"), group(Punch/Kick)
Include +1 damage from Brass Knuckles in base damage, +0, shortname(Has Brass Knuckles), gives(=+@textindexedvalue( $modetag(mode), ("Punch", 1) ) to owner::damage$ listAs "+1 damage from Brass Knuckles"), group(Punch/Kick)

Add Punch w/Brass Knuckles Combat Table Entry, +0, shortname(Punch w/Brass Knuckles),
	addmode(Punch w/Brass Knuckles,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst) _
		)

Add Punch w/Gauntlets Combat Table Entry, +0, shortname(Punch w/Gauntlets),
	addmode(Punch w/Gauntlets,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst) _
		)

Add Kick w/Boots Combat Table Entry, +0, shortname(Kick w/Boots),
	addmode(Kick w/Boots,
			damage(1 + %copyprev - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else 0))), damtype(cr), reach(%copyprev), parry(%copyprev), skillused(%copyprev) _
		)

Add Punch w/Brass Knuckles & Kick w/Boots Combat Table Entries, +0, shortname(Punch w/Brass Knuckles & Kick w/Boots),
	addmode({Kick w/Boots,
			damage(1 + %copyprev - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else 0))), damtype(cr), reach(%copyprev), parry(%copyprev), skillused(%copyprev)} | _
		{Punch w/Brass Knuckles,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst)} _
		)

Add Punch w/Gauntlets & Kick w/Boots Combat Table Entries, +0, shortname(Punch w/Gauntlets & Kick w/Boots),
	addmode({Kick w/Boots,
			damage(1 + %copyprev - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else 0))), damtype(cr), reach(%copyprev), parry(%copyprev), skillused(%copyprev)} | _
		{Punch w/Gauntlets,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst)} _
		)
// Add Weak Arm Punch Combat Table Entry, +0, shortname(Weak Arm Punch),
// 	addmode(Weak Arm Punch, damage(%copyfirst), damtype(%copyfirst), reach(%copyprev), parry(%copyprev), skillused(%copyprev), damagebasedon(ST:Two Arm Striking ST)),
//	description(Normally damage is based on your strongest arm (the one with the highest Arm ST). This modifier adds a mode calculating damage of the second strongest arm.)
		
Remove Punch Mode, +0, addmode(Punch, damage(), damtype(), minst(), reach())
Remove Bite Mode, +0, addmode(Bite, damage(), damtype(), minst(), reach())
Remove Kick Mode, +0, addmode(Kick, damage(), damtype(), minst(), reach())

Increased Punch Damage, +0/+0, gives(=+@textindexedvalue( $modetag(mode), ("Punch", $solver(me::level)) ) to owner::damage$ listAs "+X Punch damage"), group(Punch/Kick)
Increased Kick Damage, +0/+0, gives(=+@textindexedvalue( $modetag(mode), ("Kick", $solver(me::level)) ) to owner::damage$ listAs "+X Kick damage"), group(Punch/Kick)
Increased Bite Damage, +0/+0, gives(=+@textindexedvalue( $modetag(mode), ("Bite", $solver(me::level)) ) to owner::damage$ listAs "+X Bite damage"), group(Punch/Kick)

Remove the default Punch combat table entry, +0, gives(=nobase ST:Punch::reach$)
Remove the default Kick combat table entry, +0, gives(=nobase ST:Kick::reach$)
Remove the default Bite combat table entry, +0, gives(=nobase ST:Bite::reach$)

<Gauntlets>
Melee Table Punch Listing, +0, page(B271), shortname(Punch),
	addmode(Punch w/gauntlet, damage(thr+_
								@max(_
									@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
									@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
									@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
									)_
							), damtype(cr), reach(C), parry(0), minst(), notes([3]), skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX))
<Boots>
Melee Table Kick Listing, +0, page(B271), shortname(Kick),
	addmode(Kick w/boots, damage(thr+_
							@max(_
								@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Kick) else 0),
								@if("SK:Karate::level" = ST:DX then @basethdice(ST:Kick) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Kick) else 0)) _
								)_
					), damtype(cr), reach(C,1), parry(No), skillused(ST:DX-2, SK:Brawling-2, SK:Karate-2, SK:Kicking (Karate), SK:Kicking (Brawling)))

<Precognition>
Can't See Own Death, -60%, group(Precognition), page(B77)
One Event, -40%, group(Precognition), page(B77)

<Rank>
Rank replaces Status, *2, group(Rank), page(38)

<Reduced ST>
Affects displayed ST score, +0%, shortname(Affects ST), gives(-Owner::Level to ST:ST), group(Reduced ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional ST penalty, +0%, shortname(Conditional ST), conditional(-Owner::Level to ST:ST), group(Reduced ST), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)
Growth Size, +0%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Reduced ST), page(B58)

<Reduced DX>
Affects displayed DX score, +0%, shortname(Affects DX), gives(-Owner::Level to ST:DX), group(Reduced DX), description(This modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional DX penalty, +0%, shortname(Conditional DX), conditional(-Owner::Level to ST:DX), group(Reduced DX), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced IQ>
Affects displayed IQ score, +0%, shortname(Affects IQ), gives(-Owner::Level to ST:IQ), group(Reduced IQ), description(This modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional IQ penalty, +0%, shortname(Conditional IQ), conditional(-Owner::Level to ST:IQ), group(Reduced IQ), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced HT>
Affects displayed HT score, +0%, shortname(Affects HT), gives(-Owner::Level to ST:HT), group(Reduced HT), description(This modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HT penalty, +0%, shortname(Conditional HT), conditional(-Owner::Level to ST:HT), group(Reduced HT), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Will>
Affects displayed Will score, +0%, shortname(Affects Will), gives(-Owner::Level to ST:Will), group(Reduced Will), description(This modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Will penalty, +0%, shortname(Conditional Will), conditional(-Owner::Level to ST:Will), group(Reduced Will), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Perception>
Affects displayed Per score, +0%, shortname(Affects Per), gives(-Owner::Level to ST:Perception), group(Reduced Perception), description(This modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Per penalty, +0%, shortname(Conditional Per), conditional(-Owner::Level to ST:Perception), group(Reduced Perception), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Hit Points>
Affects displayed HP score, +0%, shortname(Affects HP), gives(-Owner::Level to ST:Hit Points), group(Reduced Hit Points), description(This modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HP penalty, +0%, shortname(Conditional HP), conditional(-Owner::Level to ST:Hit Points), group(Reduced Hit Points), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)
Growth Size, +0%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Reduced Hit Points), page(B58)

<Reduced Fatigue Points>
Affects displayed FP score, +0%, shortname(Affects FP), gives(-Owner::Level to ST:Fatigue Points), group(Reduced Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional FP penalty, +0%, shortname(Conditional FP), conditional(-Owner::Level to ST:Fatigue Points), group(Reduced Fatigue Points), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Basic Move>
Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(-Owner::Level to ST:Basic Move), group(Reduced Basic Move), description(This modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Move penalty, +0%, shortname(Conditional Move), conditional(-Owner::Level to ST:Basic Move), group(Reduced Basic Move), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Basic Speed>
Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(-(Owner::Level/4) to ST:Basic Speed), group(Reduced Basic Speed), description(This modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Speed penalty, +0%, shortname(Conditional Speed), conditional(-Owner::Level to ST:Basic Speed), group(Reduced Basic Speed), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Water Move>
Affects displayed Water Move score, +0%, shortname(Affects Water Move), gives(-Owner::Level to ST:Basic Water Move), group(Reduced Water Move), description(This modifier causes the Extra Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Water Move penalty, +0%, shortname(Conditional Water Move), conditional(-Owner::Level to ST:Basic Water Move), group(Reduced Water Move), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Air Move>
Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(-Owner::Level to ST:Basic Air Move), group(Reduced Air Move), description(This modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Air Move penalty, +0%, shortname(Conditional Air Move), conditional(-Owner::Level to ST:Basic Air Move), group(Reduced Air Move), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reliability>
Reliability: Completely Reliable, *3, shortname(Completely Reliable), group(Reliability), page(B44)
Reliability: Usually Reliable, *2, shortname(Usually Reliable), group(Reliability), page(B44)
Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability), page(B44)
Reliability: Unreliable, *1/2, shortname(Unreliable), group(Reliability), page(B44)

<Reputation Advantage>
People Affected: Almost everyone on the Disc, *1, shortname(Almost everyone), group(Reputation Advantage), page(34), round(down)
People Affected: Almost everyone on the Disc except one large class, *2/3, shortname(Almost everyone, except large class), group(Reputation Advantage), page(34), round(down)
People Affected: Large class of people, *1/2, shortname(Large class), group(Reputation Advantage), page(34), round(down)
People Affected: Small class of people, *1/3, shortname(Small class), group(Reputation Advantage), page(34), round(down)
Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation Advantage), page(34), round(down)
Frequency of Recognition: Sometimes (roll of 10 or less), *1/2, shortname(10 or less), group(Reputation Advantage), page(34), round(down)
Frequency of Recognition: Occasionally (roll of 7 or less), *1/3, shortname(7 or less), group(Reputation Advantage), page(34), round(down)

<Reputation Disadvantage>
People Affected: Almost everyone on the Disc, *1, shortname(Almost everyone), group(Reputation Disadvantage), page(34)
People Affected: Almost everyone on the Disc except one large class, *2/3, shortname(Almost everyone, except large class), group(Reputation Disadvantage), page(34)
People Affected: Large class of people, *1/2, shortname(Large class), group(Reputation Disadvantage), page(34)
People Affected: Small class of people, *1/3, shortname(Small class), group(Reputation Disadvantage), page(34)
Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation Disadvantage), page(34)
Frequency of Recognition: Sometimes (roll of 10 or less), *1/2, shortname(10 or less), group(Reputation Disadvantage), page(34)
Frequency of Recognition: Occasionally (roll of 7 or less), *1/3, shortname(7 or less), group(Reputation Disadvantage), page(34)

<Resistant>
Degree: Immunity, *1, shortname(Immunity), group(Resistant), page(46), tier(-1)
Degree: +8 to HT rolls to resist, *1/2, round(Down), shortname(+8), group(Resistant), page(46), tier(-1)
Degree: +3 to HT rolls to resist, *1/3, round(Down), shortname(+3), group(Resistant), page(46), tier(-1)

<Self-Control>
You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), group(Self-Control), page(53)
You resist on a roll of  9 or less (fairly often), *1.5, shortname(9 or less), group(Self-Control), page(53)
You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)
You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15 or less), group(Self-Control), page(53)

<Shrinking>
Affects Others, +50%/+100%, group(Shrinking), page(B85)
Can Carry Objects, +10%/+20%/+50%/+100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Shrinking), page(B85)
Full Damage, +100%, group(Shrinking), page(B85)
Full DR, +30%, group(Shrinking), page(B85)
Full HP, +30%, group(Shrinking), page(B85)
Full Move, +30%, group(Shrinking), page(B85)

<Size>
Size, -10%, formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15)

<Size HP>
Size, -10%, formula(-@if(ST:Size Modifier > 0 & ST:Hit Points::level > 0 THEN ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15)

<Size ST>
Size, -10%, formula(-@if(ST:Size Modifier > 0 & ST:ST::level > 0 THEN ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15)

<Status>
Heir, +3/+5, page(B33), formula(@int(me::level * 2.5 + 0.9)), forceformula(yes), gives(=+@int(me::level/2) to ST:Status), upto(8 - owner::level)

<_Talents>
Gives Skill Bonus to %skillslist%, +0, gives(%skillsaliaslist%), shortname(%skillslist%),
	x(_
	#ChoiceList(_
			name(skills),
			title(Talent Bonus: Choose Skills),
			text(Choose which skills will receive a bonus from this Talent.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				),
			aliaslist(_
				#grouplist(GR:AllSkills, prepend(+owner::level to "), append("))_
					)_
			)_
)

Gives Conditional Bonus to %skillslist%, +0, conditional(%skillsaliaslist%), shortname(%skillslist%),
	x(_
	#ChoiceList(_
			name(skills),
			title(Talent Bonus: Choose Skills),
			text(Choose which skills will receive a bonus from this Talent.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
						#grouplist(GR:AllSkills, flags(NoPrefix), append(*))_
				),
			aliaslist(_
						#grouplist(GR:AllSkills, prepend(+owner::level to "), append("))_
					)_
			)_
)

Gives Skill Bonus to [skill], +0, gives(+owner::level to SK:[skill]), shortname([skill]),
	x(_
	#InputReplace("Please enter the name of the skill which will receive the skill bonus; include the name extension if applicable:", "[skill]", "name (extension)", "Talent Skill Bonus")_
	)

Gives Conditional Bonus to [skill], +0, conditional(+owner::level to SK:[skill]), shortname([skill]*),
	x(_
	#InputReplace("Please enter the name of the skill which will receive the conditional bonus:", "[skill]", , "Talent Conditional Bonus")_
	)

Gives Skill Bonus to [skill category], +0, gives(+owner::level to CL:[skill category]), shortname([skill category]),
	x(_
	#InputReplace("Please enter the name of the skill category which will receive the skill bonus:", "[skill category]", "name", "Talent Skill Bonus")_
	)

Gives Conditional Bonus to [skill category], +0, conditional(+owner::level to CL:[skill category]), shortname([skill category]*),
	x(_
	#InputReplace("Please enter the name of the skill which will receive the conditional bonus:", "[skill category]", , "Talent Conditional Bonus")_
	)

<Terror>
Always On, -20%, group(Terror), page(B93)

<Troll Nocturnalism>
Mitigator (High-Strength Sunscreen), -60%, group(Troll Nocturnalism),
	page(98), mitigator(yes), shortname(Sunscreen), mitigator(yes)

<Uncontrollable Appetite>
Mitigator (Displacement Focus), -60%, group(Uncontrollable Appetite),
	page(114), mitigator(yes), shortname(Mitigating Focus), mitigator(yes)

<Unkillable>
Achilles' Heel, -10%/-30%/-50%, levelnames(Rare, Occasional, Common), upto(3), group(Unkillable), page(93)
Hindrance, -5%/-15%/-25%, levelnames(Rare, Occasional, Common), upto(3), group(Unkillable), page(93)
Trigger, -5%/-15%/-25%, levelnames(Common, Occasional, Rare), upto(3), group(Unkillable), page(93)

<Voice of Command>
Only affects [verylargegroup], -5, shortname([verylargegroup] Only), page(49),
	x(#InputReplace("Please identify the very large group you can affect:", "[verylargegroup]", ,"Group Affected"))
Only affects Humans, -5, shortname(Humans Only), page(49)
Only affects [largegroup], -10, shortname([largegroup] Only), page(49),
	x(#InputReplace("Please identify the large group you can affect:", "[largegroup]", ,"Group Affected"))
Only affects Trolls, -10, shortname(Trolls Only), page(49)
Only affects Males, -10, shortname(Males Only), page(49)
Only affects Females, -10, shortname(Females Only), page(49)
Only affects Dwarfs, -10, shortname(Dwarfs Only), page(49)
Only affects [moderategroup], -15, shortname([moderategroup] Only), page(49),
	x(#InputReplace("Please identify the moderate-sized group you can affect:", "[moderategroup]", ,"Group Affected"))
Only affects Human Men, -15, shortname(Human Men Only), page(49)
Only affects Human Women, -15, shortname(Human Women Only), page(49)
Only affects [limitedgroup], -20, shortname([limitedgroup] Only), page(49),
	x(#InputReplace("Please identify the limited-size group you can affect:", "[limitedgroup]", ,"Group Affected"))
Only affects Priests, -20, shortname(Priests Only), page(49)
Only affects [smallgroup], -25, shortname([smallgroup] Only), page(49),
	x(#InputReplace("Please identify the small group you can affect:", "[smallgroup]", ,"Group Affected"))
Only affects Redheads, -25, shortname(Redheads Only), page(49)

<Vulnerability>
Wounding Multiplier x2, *1, shortname(x2), group(Vulnerability), page(98)
Wounding Multiplier x3, *1.5, shortname(x3), group(Vulnerability), page(98)
Wounding Multiplier x4, *2, shortname(x4), group(Vulnerability), page(98)

<Warp>
Blind, +50%, group(Warp), page(B98)
Extra Carrying Capacity, +10%/+20%/+30%/+50%, levelnames(Light Encumbrance, Medium Encumbrance, Heavy Encumbrance, Extra-Heavy Encumbrance), upto(4), group(Warp), page(B98)
Reliable, +5%/+10%, upto(10), group(Warp), page(B98), gives(+1 to owner::skillscore)
Warp Jump, +10%/+20%, upto(2), group(Warp), page(B98)
Hyperjump: light-speed, -50%, group(Warp), page(B98)
Hyperjump: faster than light, -25%, group(Warp), page(B98)
Naked, -30%, group(Warp), page(B99)
Range Limit, -5%/-10%, levelnames("100,000 miles", "10,000 miles", "1,000 miles", 100 miles, 10 miles, 2 miles, 500 yards, 100 yards, 20 yards, 10 yards), upto(10), group(Warp), page(B99)

<Weakness>
Rarity: Rare, *1/2, shortname(Rare), group(Weakness), page(98)
Rarity: Occasional, *1, shortname(Occasional), group(Weakness), page(98)
Rarity: Common, *2, shortname(Common), group(Weakness), page(98)
Rarity: Very Common, *3, shortname(Very Common), group(Weakness), page(98)

**************************************************************************
[TEMPLATES]
**************************************************************************
<Character Templates>
Investigator (Basic Set), displaycost(100),
	cat(Character Templates - Basic Set),
		description(You are a detective, investigative report, occult investigator, spy, or thief.),
		page(B259),
		sets(_
			ST:DX=12, 
			ST:IQ=12, 
			ST:HT=11, 
			ST:Hit Points=11, 
			ST:Perception=13_
			), 
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:Morporkian, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select the advantages you want for your character from the list below. You need to select 15 points worth."),
			pointswanted(15), 
			itemswanted(atleast 1),
			list(AD:Alternate Identity, 
				AD:Charisma #codes(UPTO 3), 
				AD:Contact,
				AD:Cultural Familiarity, 
				AD:Danger Sense, 
				AD:Gizmo #codes(UPTO 3),
				AD:Language, 
				AD:Legal Enforcement Powers, 
				AD:Luck,
				AD:Rapid Healing, 
				AD:Smooth Operator #codes(UPTO 1),
				AD:Extra Perception #codes(UPTO 3),
				AD:Appearance #codes(UPTO 3) _
				)_
			),
		select4(_
			text("Select the disadvantages you want for your character from the list below. You need to select -30 points worth."),
			pointswanted(-30), 
			itemswanted(atleast 1),
			list(_
				DI:Alcoholism, 
				DI:Curious, 
				DI:Duty, 
				DI:Greed, 
				DI:Honesty,
				DI:Pacifism (Reluctant Killer), 
				DI:Pacifism (Cannot Harm Innocents), 
				DI:Pacifism (Self-Defence Only), 
				DI:Secret, 
				#newitem(_
					DI:Sense of Duty (Comrades), -5, 
					page(B153), 
					cat(Mundane, Mental, Non-Racial)_
					),
				DI:Stubbornness, 
				DI:Wealth #codes(UPTO 1), 
				DI:Workaholic,
				DI:Reduced ST #codes(UPTO 1)_
				)_
			),
		select5(_
			text("Select the primary skills you want for your character from the list below. You need to select 3 skills (each will be taken at 4 points)."),
			pointswanted(12), 
			itemswanted(3),
			list(_
				SK:Climbing #codes(upto 4pts, downto 4pts),
				SK:Filch #codes(upto 4pts, downto 4pts),
				SK:Stealth #codes(upto 4pts, downto 4pts),
				SK:Criminology #codes(upto 4pts, downto 4pts),
				SK:Disguise #codes(upto 4pts, downto 4pts),
				SK:Holdout #codes(upto 4pts, downto 4pts),
				SK:Interrogation #codes(upto 4pts, downto 4pts),
				SK:Lockpicking #codes(upto 4pts, downto 4pts),
				SK:Occultism #codes(upto 4pts, downto 4pts),
				SK:Photography #codes(upto 4pts, downto 4pts),
				SK:Research #codes(upto 4pts, downto 4pts),
				SK:Shadowing #codes(upto 4pts, downto 4pts),
				SK:Smuggling #codes(upto 4pts, downto 4pts),
				SK:Traps #codes(upto 4pts, downto 4pts),
				SK:Writing #codes(upto 4pts, downto 4pts),
				SK:Observation #codes(upto 4pts, downto 4pts),
				SK:Search #codes(upto 4pts, downto 4pts),
				SK:Pickpocket #codes(upto 4pts, downto 4pts),
				SK:Computer Programming #codes(upto 4pts, downto 4pts),
				SK:Diagnosis #codes(upto 4pts, downto 4pts),
				SK:Expert Skill #codes(upto 4pts, downto 4pts),
				SK:Forensics #codes(upto 4pts, downto 4pts),
				SK:Intelligence Analysis #codes(upto 4pts, downto 4pts),
				SK:Law #codes(upto 4pts, downto 4pts),
				SK:Detect Lies #codes(upto 4pts, downto 4pts),
				SK:Computer Hacking #codes(upto 4pts, downto 4pts) _
				)_
			),
		select6(_
			text("Select the secondary skills you want for your character from the list below. You need to select 2 skills (each will be taken at 2 points)."),
			pointswanted(4), 
			itemswanted(2),
			list(_
				SK:Brawling #codes(upto 2pts, downto 2pts),
				SK:Crossbow #codes(upto 2pts, downto 2pts),
				SK:Forced Entry #codes(upto 2pts, downto 2pts),
				SK:Knife #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Axe/Mace) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Spear) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Stick) #codes(upto 2pts, downto 2pts),
				SK:Boxing #codes(upto 2pts, downto 2pts),
				SK:Rapier #codes(upto 2pts, downto 2pts),
				SK:Shortsword #codes(upto 2pts, downto 2pts),
				SK:Acting #codes(upto 2pts, downto 2pts),
				SK:Fast-Talk #codes(upto 2pts, downto 2pts),
				SK:Sex Appeal #codes(upto 2pts, downto 2pts),
				SK:Acrobatics #codes(upto 2pts, downto 2pts),
				SK:Judo #codes(upto 2pts, downto 2pts),
				SK:Karate #codes(upto 2pts, downto 2pts) _
				)_
			),
		select7(_
			text("Select the background skill you want for your character from the list below. You need to select 1 skill (which will be taken at 2 points)."),
			pointswanted(2), 
			itemswanted(1),
			list(_
				SK:Area Knowledge #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Business) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Headline News) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Politics) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Popular Culture) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Regional) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Sports) #codes(upto 2pts, downto 2pts),
				SK:Carousing #codes(upto 2pts, downto 2pts),
				SK:Swimming #codes(upto 2pts, downto 2pts),
				SK:Boating (Large Powerboat) #codes(upto 2pts, downto 2pts),
				SK:Boating (Motorboat) #codes(upto 2pts, downto 2pts),
				SK:Boating (Sailboat) #codes(upto 2pts, downto 2pts),
				SK:Boating (Unpowered) #codes(upto 2pts, downto 2pts),
				SK:Driving (Automobile) #codes(upto 2pts, downto 2pts),
				SK:Driving (Construction Equipment) #codes(upto 2pts, downto 2pts),
				SK:Driving (Halftrack) #codes(upto 2pts, downto 2pts),
				SK:Driving (Heavy Wheeled) #codes(upto 2pts, downto 2pts),
				SK:Driving (Hovercraft) #codes(upto 2pts, downto 2pts),
				SK:Driving (Locomotive) #codes(upto 2pts, downto 2pts),
				SK:Driving (Mecha) #codes(upto 2pts, downto 2pts),
				SK:Driving (Motorcycle) #codes(upto 2pts, downto 2pts),
				SK:Driving (Tracked) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Aerospace) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Autogyro) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Contragravity) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Glider) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Heavy Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Helicopter) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Light Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lighter-Than-Air) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lightsail) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-G Wings) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Ultralight) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Vertol) #codes(upto 2pts, downto 2pts),
				SK:Riding #codes(upto 2pts, downto 2pts),
				SK:Streetwise #codes(upto 2pts, downto 2pts),
				SK:Hiking #codes(upto 2pts, downto 2pts),
				SK:Running #codes(upto 2pts, downto 2pts) _
				)_
			)
Heroic Knight (Basic Set), displaycost(95),
	cat(Character Templates - Basic Set),
		description(You are a brave knight out of fantasy or fairy tales - strong, honerable, a wise leader, and a skilled warrior.),
		page(B448),
		sets(_
			ST:ST=12, 
			ST:DX=12, 
			ST:IQ=11, 
			ST:HT=12_
			), 
		adds(_
			AD:Status=2,
			AD:Wealth,
			DI:Code of Honour (Chivalry),
			DI:Duty (Liege lord)=2,
			DI:Honesty _
				with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), group(Self-Control)",
			DI:Vow (Never refuse a request for aid)=3,
			SK:Riding (Horse)=2pts,
			SK:Broadsword=8pts,
			SK:Lance=8pts,
			SK:Shield (Shield)=4pts,
			SK:Leadership=2pts,
			SK:Tactics=4pts,
			SK:Armoury (Melee Weapons)=1pts,
			SK:Heraldry=1pts _
			)
Warrior (Basic Set), displaycost(101),
	cat(Character Templates - Basic Set),
		description(You are a fantasy warrior - a barbarian, knight, swashbuckler; or someone else who lives by  the sword.),
		page(B448),
		sets(_
			ST:ST = 12, 
			ST:DX = 12,
			ST:HT = 12_
			),
		adds(_
			SK:Armoury (Melee Weapons) = 1pts,
			SK:Shield (Shield) = 4pts _
			),
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:Morporkian, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select two weapon skills from the list below. Each will be taken at 8 pts. Typical selections for a Knight would be Broadsword and Lance."),
			pointswanted(16), 
			itemswanted(2),
			list(_
				SK:Axe/Mace #codes(upto 8pts, downto 8pts),
				SK:Broadsword #codes(upto 8pts, downto 8pts),
				SK:Polearm #codes(upto 8pts, downto 8pts),
				SK:Rapier #codes(upto 8pts, downto 8pts),
				SK:Shortsword #codes(upto 8pts, downto 8pts),
				SK:Smallsword #codes(upto 8pts, downto 8pts),
				SK:Staff #codes(upto 8pts, downto 8pts),
				SK:Two-Handed Axe/Mace #codes(upto 8pts, downto 8pts),
				SK:Two-Handed Sword #codes(upto 8pts, downto 8pts)_
				)_
			)
Warrior - Heroic (Basic Set), displaycost(-9),
	cat(Character Templates - Basic Set),
		description(You are wise, honerable, and a leader of men.),
		page(B448),
		sets(_
			ST:IQ = 11_
			),
		needs(_
			TE:Warrior (Basic Set)_
			),
		adds(_
			DI:Honesty _
				with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), group(Self-Control)",
			DI:Vow (Never refuse a request for aid) = 3,
			SK:Leadership = 2pts,
			SK:Tactics = 4pts_
			)
Warrior - Knight (Basic Set), displaycost(+3),
	cat(Character Templates - Basic Set),
		description(You are an invested knight, with all the attendant privileges and duties.),
		page(B448),
		needs(_
			TE:Warrior (Basic Set)_
			),
		adds(_
			AD:Status = 2,
			AD:Wealth,
			DI:Code of Honour (Chivalry),
			DI:Duty (Liege lord) = 2,
			SK:Heraldry = 1pts,
			SK:Riding (Horse) = 2pts _
			)
Soldier of Fortune (Basic Set), displaycost(100),
	cat(Character Templates - Basic Set),
		description(You're a warrior. You could be a soldier, pirate, knight-errant, gunslinger, street fighter, or guerrilla.),
		page(B260),
		sets(_
			ST:ST=11, 
			ST:DX=13, 
			ST:IQ=11, 
			ST:HT=11_
			), 
		adds(_
			SK:First Aid=1pts_
			),
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:Morporkian, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select the advantages you want for your character from the list below. You need to select 20 points worth."),
			pointswanted(20), 
			itemswanted(atleast 1),
			list(AD:Ambidexterity, 
				AD:Charisma #codes(UPTO 4), 
				AD:Combat Reflexes,
				AD:Fit,
				AD:Very Fit,
				AD:High Pain Threshold,
				AD:Luck #codes(UPTO 1),
				AD:Magic Resistance #codes(UPTO 10),
				AD:Outdoorsman,
				AD:Administrative Rank #codes(UPTO 4),
				AD:Military Rank #codes(UPTO 4),
				AD:Religious Rank #codes(UPTO 4),
				AD:Watch  Rank #codes(UPTO 4),
				AD:Rapid Healing,
				AD:Reputation,
				AD:Status #codes(UPTO 4),
				AD:Wealth #codes(UPTO 1),
				AD:Extra ST #codes(UPTO 1),
				AD:Extra HT#codes(UPTO 1),
				AD:Extra Hit Points #codes(UPTO 4),
				AD:Extra Perception #codes(UPTO 4) _
				)_
			),
		select4(_
			text("Select the disadvantages you want for your character from the list below. You need to select -35 points worth."),
			pointswanted(-35), 
			itemswanted(atleast 1),
			list(_
				DI:Alcoholism,
				DI:Bad Temper,
				DI:Bloodlust,
				DI:Code of Honour,
				DI:Compulsive Carousing,
				DI:Compulsive Spending,
				DI:Duty,
				DI:Fanaticism,
				DI:Honesty,
				DI:Impulsiveness,
				DI:Lecherousness,
				DI:Overconfidence,
				#newitem(_
					DI:Sense of Duty (Comrades), -5, 
					page(B153), 
					cat(Mundane, Mental, Non-Racial)_
					),
				DI:Trademark #codes(UPTO 1)_
				)_
			),
		select5(_
			text("Select the primary skills you want for your character from the list below. You need to select 2 skills (each will be taken at 4 points)."),
			pointswanted(8), 
			itemswanted(2),
			list(_
				SK:Crossbow #codes(upto 4pts, downto 4pts),
				SK:Guns (Pistol) #codes(upto 4pts, downto 4pts),
				SK:Guns (Rifle) #codes(upto 4pts, downto 4pts),
				SK:Guns (Shotgun) #codes(upto 4pts, downto 4pts),
				SK:Axe/Mace #codes(upto 4pts, downto 4pts),
				SK:Bow #codes(upto 4pts, downto 4pts),
				SK:Broadsword #codes(upto 4pts, downto 4pts),
				SK:Lance #codes(upto 4pts, downto 4pts),
				SK:Rapier #codes(upto 4pts, downto 4pts),
				SK:Spear #codes(upto 4pts, downto 4pts),
				SK:Karate #codes(upto 4pts, downto 4pts),
				SK:Tactics #codes(upto 4pts, downto 4pts) _
				)_
			),
		select6(_
			text("Select a secondary skill you want for your character from the list below. You need to select 1 skill (which will be taken at 2 points)."),
			pointswanted(2), 
			itemswanted(1),
			list(_
				SK:Brawling #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Knife) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Pistol Crossbow) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Sword) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Two-Handed Sword) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Arrow) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Ammo) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Cannon) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Catapult) #codes(upto 2pts, downto 2pts),
				SK:Knife #codes(upto 2pts, downto 2pts),
				SK:Shield (Shield) #codes(upto 2pts, downto 2pts),
				SK:Shield (Buckler) #codes(upto 2pts, downto 2pts),
				SK:Shield (Force) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Cannon) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Catapult) #codes(upto 2pts, downto 2pts)_
				)_
			),
		select7(_
			text("Select another secondary skill you want for your character from the list below. You need to select 1 skill (which will be taken at 2 points)."),
			pointswanted(2), 
			itemswanted(1),
			list(_
				SK:Airshipman #codes(upto 2pts, downto 2pts),
				SK:Seamanship #codes(upto 2pts, downto 2pts),
				SK:Spacer #codes(upto 2pts, downto 2pts),
				SK:Submariner #codes(upto 2pts, downto 2pts),
				SK:Driving (Automobile) #codes(upto 2pts, downto 2pts),
				SK:Driving (Construction Equipment) #codes(upto 2pts, downto 2pts),
				SK:Driving (Halftrack) #codes(upto 2pts, downto 2pts),
				SK:Driving (Heavy Wheeled) #codes(upto 2pts, downto 2pts),
				SK:Driving (Hovercraft) #codes(upto 2pts, downto 2pts),
				SK:Driving (Locomotive) #codes(upto 2pts, downto 2pts),
				SK:Driving (Mecha) #codes(upto 2pts, downto 2pts),
				SK:Driving (Motorcycle) #codes(upto 2pts, downto 2pts),
				SK:Driving (Tracked) #codes(upto 2pts, downto 2pts),
				SK:Battlesuit #codes(upto 2pts, downto 2pts),
				SK:Diving Suit #codes(upto 2pts, downto 2pts),
				SK:NBC Suit #codes(upto 2pts, downto 2pts),
				SK:Vacc Suit #codes(upto 2pts, downto 2pts),
				SK:Piloting (Aerospace) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Autogyro) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Contragravity) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Glider) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Heavy Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Helicopter) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Light Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lighter-Than-Air) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lightsail) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-G Wings) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Ultralight) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Vertol) #codes(upto 2pts, downto 2pts),
				SK:Riding #codes(upto 2pts, downto 2pts),
				SK:Hiking #codes(upto 2pts, downto 2pts),
				SK:Acrobatics #codes(upto 2pts, downto 2pts)_
				)_
			),
		select8(_
			text("Select 2 background skills you want for your character from the list below. You need to select 2 skills (each will be taken at 1 points)."),
			pointswanted(2), 
			itemswanted(2),
			list(_
				SK:Camouflage #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (High Society) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Military) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Organised Crime) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Servant) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Watch) #codes(upto 1pts, downto 1pts),
				SK:Carousing #codes(upto 1pts, downto 1pts),
				SK:Swimming #codes(upto 1pts, downto 1pts),
				SK:Free Fall #codes(upto 1pts, downto 1pts),
				SK:Stealth #codes(upto 1pts, downto 1pts),
				SK:Electronics Operation (Communications) #codes(upto 1pts, downto 1pts),
				SK:Electronics Operation (Sensors) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Demolition) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Explosive Ordnance Disposal) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Fireworks) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Nuclear Ordnance Disposal) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Underwater Demolition) #codes(upto 1pts, downto 1pts),
				SK:Leadership #codes(upto 1pts, downto 1pts),
				SK:Observation #codes(upto 1pts, downto 1pts),
				SK:Survival (Arctic) #codes(upto 1pts, downto 1pts),
				SK:Survival (Desert) #codes(upto 1pts, downto 1pts),
				SK:Survival (Island/Beach) #codes(upto 1pts, downto 1pts),
				SK:Survival (Jungle) #codes(upto 1pts, downto 1pts),
				SK:Survival (Mountain) #codes(upto 1pts, downto 1pts),
				SK:Survival (Plains) #codes(upto 1pts, downto 1pts),
				SK:Survival (Swampland) #codes(upto 1pts, downto 1pts),
				SK:Survival (Woodlands) #codes(upto 1pts, downto 1pts),
				SK:Survival (Bank) #codes(upto 1pts, downto 1pts),
				SK:Survival (Deep Ocean Vent) #codes(upto 1pts, downto 1pts),
				SK:Survival (Fresh-Water Lake) #codes(upto 1pts, downto 1pts),
				SK:Survival (Open Ocean) #codes(upto 1pts, downto 1pts),
				SK:Survival (Reef) #codes(upto 1pts, downto 1pts),
				SK:Survival (River/Stream) #codes(upto 1pts, downto 1pts),
				SK:Survival (Salt-Water Sea) #codes(upto 1pts, downto 1pts),
				SK:Survival (Tropical Lagoon) #codes(upto 1pts, downto 1pts),
				SK:Tracking #codes(upto 1pts, downto 1pts),
				SK:Urban Survival #codes(upto 1pts, downto 1pts)_
				)_
			)

<Racial Templates>
_New Racial Template, displaycost(variable), cost(0),
	race(_New Racial Template),
	owns(yes),
	locks(yes),
	hides(yes),
	x(_
		#InputReplace("Please set the name of the Racial Template:", "_New Racial Template", , "New Racial Template")_
	),
		select1(tagwith(hide(yes)), text("Please select any "Meta-Traits" (collections of associated features) the Racial Template possesses:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllMetaTraits)_
				)_
			),
		select2(tagwith(hide(yes)), text("Please select the Racial Attribute Modifiers:"), pointswanted(atleast -1000, upto 10000), itemswanted(upto 10000),
			list(_
				#newitem(AD:_New Racial Template ST Bonus, 10/20, page(26), mods(Size, Quadruped), gives(+1 to ST:ST), cat(Attributes)),
				#newitem(AD:_New Racial Template DX Bonus, 20/40, page(26), mods(Quadruped), gives(+1 to ST:DX), cat(Attributes)),
				#newitem(AD:_New Racial Template IQ Bonus, 20/40, page(27), gives(+1 to ST:IQ), cat(Attributes)),
				#newitem(AD:_New Racial Template HT Bonus, 10/20, page(27), gives(+1 to ST:HT), cat(Attributes)),
				#newitem(AD:_New Racial Template Will Bonus, 5/10, page(27), gives(+1 to ST:Will), cat(Attributes)),
				#newitem(AD:_New Racial Template Perception Bonus, 5/10, page(27), gives(+1 to ST:Perception), cat(Attributes)),
				#newitem(AD:_New Racial Template Hit Points Bonus, 2/4, page(27), mods(Size, Quadruped), gives(+1 to ST:Hit Points), cat(Attributes)),
				#newitem(AD:_New Racial Template Fatigue Points Bonus, 3/6, page(27), gives(+1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(AD:_New Racial Template Basic Move Bonus, 5/10, page(28), gives(+1 to ST:Basic Move), cat(Attributes)),
				#newitem(AD:_New Racial Template Basic Speed Bonus, 5/10, page(28), upto(80), gives(+0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10,
							+10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 _
							)),
				#newitem(AD:_New Racial Template Air Move Bonus, 2/4, page(89), gives(+1 to ST:Air Move), cat(Attributes)),
				#newitem(AD:_New Racial Template TL Bonus, 5/10, page(31), gives(+1 to ST:Tech Level), cat(Mundane, Social, Mundane Social), upto(12 - ST:Tech Level::basevalue)),
				#newitem(AD:_New Racial Template SM Bonus, 0/0, gives(+1 to ST:Size Modifier), page(27), cat(Attributes)),
				#newitem(DI:_New Racial Template ST Penalty, -10/-20, page(26), gives(-1 to ST:ST), cat(Attributes)),
				#newitem(DI:_New Racial Template DX Penalty, -20/-40, page(26), gives(-1 to ST:DX), cat(Attributes)),
				#newitem(DI:_New Racial Template IQ Penalty, -20/-40, page(27), gives(-1 to ST:IQ), cat(Attributes)),
				#newitem(DI:_New Racial Template HT Penalty, -10/-20, page(27), gives(-1 to ST:HT), cat(Attributes)),
				#newitem(DI:_New Racial Template Will Penalty, -5/-10, page(27), gives(-1 to ST:Will), cat(Attributes)),
				#newitem(DI:_New Racial Template Perception Penalty, -5/-10, page(27), gives(-1 to ST:Perception), cat(Attributes)),
				#newitem(DI:_New Racial Template Hit Points Penalty, -2/-4, page(27), gives(-1 to ST:Hit Points), cat(Attributes)),
				#newitem(DI:_New Racial Template Fatigue Points Penalty, -3/-6, page(27), gives(-1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(DI:_New Racial Template Basic Move Penalty, -5/-10, page(28), gives(-1 to ST:Basic Move), cat(Attributes)),
				#newitem(DI:_New Racial Template Basic Speed Penalty, -5/-10, page(28), upto(80), gives(-0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							-0.25, -0.5, -0.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -4, -4.25, -4.5, -4.75, -5, -5.25, -5.5, -5.75, -6, -6.25, -6.5, -6.75, -7, -7.25, -7.5, -7.75, -8, -8.25, -8.5, -8.75, -9, -9.25, -9.5, -9.75, -10,
							-10.25, -10.5, -10.75, -11, -11.25, -11.5, -11.75, -12, -12.25, -12.5, -12.75, -13, -13.25, -13.5, -13.75, -14, -14.25, -14.5, -14.75, -15, -15.25, -15.5, -15.75, -16, -16.25, -16.5, -16.75, -17, -17.25, -17.5, -17.75, -18, -18.25, -18.5, -18.75, -19, -19.25, -19.5, -19.75, -20 _
							)),
				#newitem(DI:_New Racial Template Air Move Penalty, -2/-4, page(89), gives(-1 to ST:Air move), cat(Attributes)),
				#newitem(DI:_New Racial Template TL Penalty, -5/-10, page(31), gives(-1 to ST:Tech Level), cat(Mundane, Social, Mundane Social)),
				#newitem(DI:_New Racial Template SM Penalty, 0/0, gives(-1 to ST:Size Modifier), page(27), cat(Attributes)),
				#newitem(DI:_New Racial Template Ground Move Penalty, 0/0, page(28), gives(-1 to ST:Ground Move), replacetags(in "ST:Ground Move" with "hide(), display(yes), mainwin(11), noresync(yes)"))_
				)_
			),
		select3(tagwith(hide(yes)), text("Please select any Racial Perks:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllPerks)_
				)_
			),
		select4(tagwith(hide(yes)), text("Please select any Racial Advantages:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllAdvantages)_
				)_
			),
		select5(tagwith(hide(yes)), text("Please select any Racial Quirks:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllQuirks)_
				)_
			),
		select6(tagwith(hide(yes)), text("Please select the Racial Disadvantages:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllDisadvantages)_
				)_
			),
		select7(tagwith(hide(yes)), text("Please select any Racial Skill Bonuses:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
					"AD:Racial Skill Bonus (%skillslist%)",
					"AD:Racial Skill Bonus ([skill])",
					"AD:Racial Skill Point Bonus ([skill])",
					"AD:Racial Spell Bonus ([spell])",
					"AD:Racial Spell Point Bonus ([spell])"_
				)_
			), noresync(yes)

Banshee, displaycost(72), cost(0),
	cat(Racial Templates),
	description(),
	page(101),
	race(Banshee),
	noresync(yes),
	owns(yes),
adds(_
       {AD:Acute Taste and Smell}=2,
       {AD:Claws (Long Talons)},
       {AD:Combat Reflexes},
       {AD:Damage Resistance}=2 _
                   with {"Can't Wear Armour", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)} _
                   and  {"Tough Skin", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)},
       {AD:Discriminatory Smell},
       {AD:Fearlessness}=2,
       {AD:Flight (Winged, Cannot Hover)},
       {AD:High Pain Threshold},
       {AD:Night Vision}=4,
       {AD:Teeth (Sharp Teeth)},
       {PE:Penetrating Voice},
       {DI:Appearance}=3,
       {DI:Bad Temper} _
			with {"You resist on a roll of 15 or less (almost all the time)", *0.5,shortname(15 or less),group(Self-Control),page(53)},
       {DI:Bloodlust} _
			with {You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(53)},
       {DI:Callous},
       {DI:Social Stigma (Minority Group)},
       {QU:Blunt and Tactless},
       {QU:Closes Eyes and Screams to Intimidate Victims},
       {QU:Dislikes Cramped Conditions},
       {QU:Reflexively Grabs and Consumes Small Flying Creatures},
       {QU:Uncongenial}_
    ),
creates(_
          {AD:Banshee Basic Speed Bonus, 5/10,page(28),upto(80),gives(+0.25 to ST:Basic Speed),levelnames(+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10, +10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 ), cat(Attributes)}=1,
          {AD:Banshee DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=2,
          {AD:Banshee Hit Points Bonus, 2/4,page(27),mods(Size, Quadruped),gives(+1 to ST:Hit Points), cat(Attributes)}=4,
          {AD:Banshee HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Banshee Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=4,
          {AD:Racial Skill Point Bonus (Intimidation), 1/2,page(99),gives(+1pts to SK:Intimidation),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=4,
          {DI:Banshee ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=1,
          {DI:Odious Racial Habit (Habitual Killer), -5/-10,upto(3),page(96),conditional(-1 to ST:Reaction when "people are aware of the issue"), cat(Mundane, Racial, Social, Mundane Social)}=3,
          {DI:Vulnerability (Crushing Attacks), -10/-20/-30/-40,displaycost(variable),upto(4),levelnames(Rare, Occasional, Common, Very Common),mods(Vulnerability),page(98), cat(Exotic, Physical, Racial, Exotic Physical)}=3 _
                   with {"Wounding Multiplier x2", *1,shortname(x2),group(Vulnerability),page(98),level(1),valuenum(1)}_
       )

Dwarf, displaycost(27), cost(0),
	cat(Racial Templates),
	description(),
	page(100),
	race(Dwarf),
	noresync(yes),
	owns(yes),
adds(_
       {AD:Lifting ST}=3,
       {AD:Metalwork}=1,
       {PE:Longevity},
       {QU:Cannot Run Long Distances},
       {QU:Considers Dwarf Gender a Very Private Matter},
       {QU:Personality Change (Gains Bad Temper When Drinking)},
       {QU:Touchy About Height and Beard},
   %greedaliaslist%_
    ),
creates(_
          {AD:Dwarf Hit Points Bonus, 2/4,page(27),mods(Size, Quadruped),gives(+1 to ST:Hit Points), cat(Attributes)}=2,
          {AD:Dwarf HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Dwarf ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST), cat(Attributes)}=1,
          {AD:Racial Skill Point Bonus (Axe/Mace), 1/2,page(99),gives(+1pts to SK:Axe/Mace),noresync(yes),
				cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=2,
          {DI:Dwarf SM Penalty, 0/0,gives(-1 to ST:Size Modifier),page(27), cat(Attributes)}=1_
       ),
x(_
		#ChoiceList(_
				name(Greed),
				title(Greed),
				text(Select the variety of Greed for this dwarf from the list below. (Whichever you select will be taken with a self-control roll of 12-.)),
				picksallowed(1),
				method(bynumber),
				list(_
					"Greed",
					"Dwarfish Greed" _
					),
				aliaslist(_
						"DI:Greed",
						"DI:Dwarfish Greed"_
					)_
				)_
			)

Elf-Kin, displaycost(16), cost(0),
	cat(Racial Templates),
	description(),
	page(102),
	race(Elf-Kin),
	noresync(yes),
	owns(yes),
adds(_
       {AD:Appearance}=1,
       {QU:Giggles a Lot},
       {QU:Sunburns Easily}_
    ),
creates(_
          {AD:Elf-Kin DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=1,
          {AD:"Reputation (As wondrous magical folk, among naive romantics)", 5/10,mods(Reputation Advantage),page(34),upto(4),conditional(+1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you"),tl(),usernotes(),familiarities(), cat(Mundane, Social, Influence, Mundane Social)}=1 _
                   with {"Frequency of Recognition: All the time", *1,shortname(All the time),group(Reputation),level(1),valuenum(1)} _
                   and  {"People Affected: Large class of people", *1/2,shortname(Large class),group(Reputation Advantage),page(34),round(down),level(1),valuenum(1/2)},
          {DI:"Reputation (As a poseur with nothing to boast about, among humans who know the full truth about elves)", -5/-10,mods(Reputation Disadvantage),page(34),upto(4),conditional(-1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you"),tl(),usernotes(),familiarities(), cat(Mundane, Social, Influence, Mundane Social)}=1 _
                   with {"Frequency of Recognition: All the time", *1,shortname(All the time),group(Reputation),level(1),valuenum(1)} _
                   and  {"People Affected: Small class of people", *1/3,shortname(Small class),group(Reputation Disadvantage),page(34),level(1),valuenum(1/3)},
          {DI:"Reputation (As a sinister psycho case, among dwarfs, trolls, and humans who know a bit about elves)", -5/-10,mods(Reputation Disadvantage),page(34),upto(4),conditional(-1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you"),tl(),usernotes(),familiarities(), cat(Mundane, Social, Influence, Mundane Social)}=3 _
                   with {"Frequency of Recognition: All the time", *1,shortname(All the time),group(Reputation),level(1),valuenum(1)} _
                   and  {"People Affected: Large class of people", *1/2,shortname(Large class),group(Reputation Disadvantage),page(34),level(1),valuenum(1/2)}_
       )

Flock of Bats - Vampire Alternate Form, displaycost(23), cost(0),
	description(That bit where the vampire changes...), page(113), race(Vampire as Flock of Bats),
	noresync(yes), owns(yes),
	adds(_
       {AD:Night Vision}=5,
       {AD:Sonar},
       {AD:Swarm Body},
       {AD:Teeth (Sharp Teeth)},
       {AD:Temperature Tolerance (Cold)}=1,
       {AD:Ultrahearing},
       {PE:Fur},
       {PE:Longevity},
       {DI:Absent-Mindedness},
       {DI:Bad Grip}=3,
       {DI:Bad Sight (Nearsighted)},
       {DI:Cannot Speak},
       {DI:Supernatural Feature (Blatantly Unnatural: No Reflection)},
       {DI:Supernatural Feature (Mostly Concealed: No Body Heat)},
       {DI:Weakness (Direct Sunlight)}=1 _
                   with {"Rarity: Common", *2,shortname(Common),group(Weakness),page(98),level(1),valuenum(2)},
       {DI:Weakness (Holy Water)}=1 _
                   with {"Rarity: Rare", *1/2,shortname(Rare),group(Weakness),page(98),level(1),valuenum(1/2)},
       {QU:Dislikes Garlic}_
    ),
	creates(_
          {AD:Flock of Bats DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=2,
          {AD:Flock of Bats Hit Points Bonus, 2/4,page(27),mods(Size, Quadruped),gives(+1 to ST:Hit Points), cat(Attributes)}=3,
          {AD:Flock of Bats HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Flock of Bats Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=3,
          {AD:Flock of Bats SM Bonus, 0/0,gives(+1 to ST:Size Modifier),page(27), cat(Attributes)}=1,
          {AD:Injury Tolerance, 0,displaycost(variable),mods(Injury Tolerance),page(89), cat(Exotic, Physical, Exotic Physical)} _
                   with {"No Blood", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"No Vitals", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)},
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
             with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Resistant (Poison), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=3 _
             with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {DI:Dread (Holy Symbols), -10,mods(Dread),page(95),tl(),usernotes(),familiarities(), cat(Supernatural, Mental, Racial, Vampire, Supernatural Mental)} _
             with {"Larger Radius", -1/-2,upto(10),group(Dread),page(95),levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards),level(2),valuenum(-2)} _
               and  {"Rarity: Common", *2,shortname(Common),group(Dread),page(95),level(1),valuenum(2)},
          {DI:Dread (Running Water), -10,mods(Dread),page(95), cat(Supernatural, Mental, Racial, Vampire, Supernatural Mental)} _
             with {"Rarity: Occasional", *1,shortname(Occasional),group(Dread),level(1),valuenum(1)},
          {DI:Flock of Bats IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=1,
          {DI:Flock of Bats ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=5,
          {DI:Restricted Diet (Blood), -10/-20/-30/-40,levelnames(Very Common, Common, Occasional, Rare),page(96),upto(4),taboo(AD:Cast-Iron Stomach, AD:Doesn't Eat or Drink), cat(Mundane, Physical, Racial, Vampire, Mundane Physical)}=1,
          {QU:Confused (12) in Daylight, -1,noresync(yes),tl(),usernotes(),familiarities(), cat(General)},
          {QU:Dislikes Any Strong Light, -1,page(67), cat(Mental, Non-Racial)}_
       )

Flock of Magpies - Vampire Alternate Form, displaycost(35), cost(0),
	description(That bit where the vampire changes...), page(113), race(Vampire as Flock of Magpies),
	noresync(yes), owns(yes),
	adds(_
       {AD:Night Vision}=1,
       {AD:Swarm Body},
       {AD:Teeth (Sharp Beak)},
       {AD:Temperature Tolerance (Cold)}=1,
       {PE:Feathers},
       {PE:Longevity},
       {DI:Bad Grip}=3,
       {DI:Cannot Speak},
       {DI:Supernatural Feature (Blatantly Unnatural: No Reflection)},
       {DI:Supernatural Feature (Mostly Concealed: No Body Heat)},
       {DI:Weakness (Direct Sunlight)}=1 _
                   with {"Rarity: Common", *2,shortname(Common),group(Weakness),page(98),level(1),valuenum(2)},
       {DI:Weakness (Holy Water)}=1 _
                   with {"Rarity: Rare", *1/2,shortname(Rare),group(Weakness),page(98),level(1),valuenum(1/2)},
       {QU:Dislikes Garlic}_
    ),
	creates(_
          {AD:Flock of Magpies DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=2,
          {AD:Flock of Magpies Hit Points Bonus, 2/4,page(27),mods(Size, Quadruped),gives(+1 to ST:Hit Points), cat(Attributes)}=3,
          {AD:Flock of Magpies HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Flock of Magpies Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=3,
          {AD:Flock of Magpies SM Bonus, 0/0,gives(+1 to ST:Size Modifier),page(27), cat(Attributes)}=1,
          {AD:Injury Tolerance, 0,displaycost(variable),mods(Injury Tolerance),page(89), cat(Exotic, Physical, Exotic Physical)} _
                   with {"No Blood", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"No Vitals", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)},
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
             with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Resistant (Poison), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=3 _
             with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {DI:Dread (Holy Symbols), -10,mods(Dread),page(95),tl(),usernotes(),familiarities(), cat(Supernatural, Mental, Racial, Vampire, Supernatural Mental)} _
             with {"Larger Radius", -1/-2,upto(10),group(Dread),page(95),levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards),level(2),valuenum(-2)} _
               and  {"Rarity: Common", *2,shortname(Common),group(Dread),page(95),level(1),valuenum(2)},
          {DI:Dread (Running Water), -10,mods(Dread),page(95), cat(Supernatural, Mental, Racial, Vampire, Supernatural Mental)} _
             with {"Rarity: Occasional", *1,shortname(Occasional),group(Dread),level(1),valuenum(1)},
          {DI:Flock of Magpies IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=1,
          {DI:Flock of Magpies ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=5,
          {DI:Restricted Diet (Blood), -10/-20/-30/-40,levelnames(Very Common, Common, Occasional, Rare),page(96),upto(4),taboo(AD:Cast-Iron Stomach, AD:Doesn't Eat or Drink), cat(Mundane, Physical, Racial, Vampire, Mundane Physical)}=1,
          {QU:Dislikes Any Strong Light, -1,page(67), cat(Mental, Non-Racial)}_
       )

Gargoyle, displaycost(46), cost(0),
	cat(Racial Templates),
	description(),
	page(100),
	race(Gargoyle),
	noresync(yes),
	owns(yes),
adds(_
       {AD:Cast-Iron Stomach},
       {AD:Claws (Blunt Claws)},
       {AD:Damage Resistance}=5 _
                   with {"Can't Wear Armour", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)},
       {AD:High Pain Threshold},
       {AD:Night Vision}=4,
       {AD:Protected Eyes}=4,
       {AD:Single-Minded},
       {AD:Temperature Tolerance (Cold)}=3,
       {AD:Temperature Tolerance (Heat)}=1,
       {AD:Unfazeable},
       {PE:Boredom Immunity},
       {PE:Limited Camouflage (Stone)},
       {PE:Longevity},
       {DI:Appearance}=2,
       {DI:Disturbing Voice},
       {DI:Hidebound},
       {DI:Innumerate},
       {DI:Troll Brain},
       {QU:Cannot Float},
       {QU:Prefers To Be Above Ground Level}_
    ),
creates(_
          {AD:Gargoyle Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=4,
          {AD:Gargoyle ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST), cat(Attributes)}=5,
          {AD:Gargoyle Will Bonus, 5/10,page(27),gives(+1 to ST:Will), cat(Attributes)}=4,
          {AD:Racial Skill Point Bonus (Climbing), 1/2,page(99),gives(+1pts to SK:Climbing),noresync(yes),
				cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=12,
          {DI:Gargoyle Basic Move Penalty, -5/-10,page(28),gives(-1 to ST:Basic Move), cat(Attributes)}=1,
          {DI:Gargoyle DX Penalty, -20/-40,page(26),gives(-1 to ST:DX), cat(Attributes)}=1,
          {DI:Gargoyle IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=3_
       )

Gnoll, displaycost(-14), cost(0),
	description(A surly scavenger with a body seemingly made of soil.),
	page(103), race(Gnoll),
	noresync(yes), owns(yes),
	adds(_
       {AD:Cast-Iron Stomach},
       {AD:Damage Resistance}=2 _
                   with {"Can't Wear Armour", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)} _
                   and  {"Tough Skin", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)},
       {AD:Fearlessness}=3,
       {AD:Temperature Tolerance (Cold)}=1,
       {AD:Temperature Tolerance (Heat)}=1,
       {DI:Appearance}=3,
       {DI:Bad Smell},
       {DI:Callous},
       {DI:Disturbing Voice},
       {DI:Social Stigma (Uneducated)}_
    ),
	creates(_
          {AD:Gnoll Hit Points Bonus, 2/4,page(27),mods(Size, Quadruped),gives(+1 to ST:Hit Points), cat(Attributes)}=2,
          {AD:Gnoll HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=3,
          {AD:Gnoll Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=2,
          {AD:Gnoll ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST), cat(Attributes)}=2,
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
                   with {"Degree: +8 to HT rolls to resist", *1/2,round(Down),shortname(+8),group(Resistant),page(46),tier(-1),level(1),valuenum(1/2)},
          {DI:Gnoll Basic Move Penalty, -5/-10,page(28),gives(-1 to ST:Basic Move), cat(Attributes)}=1,
          {DI:Gnoll IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=2,
          {DI:Odious Racial Habit (Surly), -5/-10,upto(3),page(96),conditional(-1 to ST:Reaction when "people are aware of the issue"), cat(Mundane, Racial, Social, Mundane Social)}=1_
       )

Gnome or Pictsie, displaycost(18), cost(0),
	cat(Racial Templates),
	description(),
	page(101),
	race(Gnome or Pictsie),
	noresync(yes),
	owns(yes),
adds(_
       {AD:Catfall},
       {AD:Damage Resistance}=2 _
                   with {"Can't Wear Armour", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)} _
                   and  {"Tough Skin", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)},
       {AD:Damage Resistance}=15 _
                   with {"Only vs. Falling Damage", -80%,group(Damage Resistance),page(88),level(1),valuenum(-80)},
       {AD:Silence}=2,
       {DI:Short Arms (2 Arms)}_
    ),
creates(_
          {AD:Gnome or Pictsie DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=2,
          {AD:Gnome or Pictsie HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Gnome or Pictsie Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=1,
          {AD:Racial Skill Point Bonus (Camouflage), 1/2,page(99),gives(+1pts to SK:Camouflage),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=2,
          {AD:Racial Skill Point Bonus (Stealth), 1/2,page(99),gives(+1pts to SK:Stealth),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=4,
          {DI:Gnome or Pictsie Basic Move Penalty, -5/-10,page(28),gives(-1 to ST:Basic Move), cat(Attributes)}=2,
          {DI:Gnome or Pictsie SM Penalty, 0/0,gives(-1 to ST:Size Modifier),page(27), cat(Attributes)}=5,
          {DI:Gnome or Pictsie ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=6_
       )

Goblin, displaycost(-7), cost(0),
description(A sad and self-oppressing race, recently freed from the worst parts of their previous condition.),
page(102), race(Goblin), noresync(yes), owns(yes),
adds(_
       {AD:Claws (Sharp Claws)},
       {AD:Night Vision}=6,
       {AD:Temperature Tolerance (Cold)}=1,
       {PE:Sordid Claws},
       {DI:Appearance}=2,
       {DI:Bad Smell},
       {DI:Berserk} _
                   with {"You resist on a roll of 15 or less (almost all the time)", *0.5,shortname(15 or less),group(Self-Control),page(53),level(1),valuenum(0.5)},
       {QU:Collects Own Snot and Earwax}_
    ),
creates(_
          {AD:Goblin DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=1,
          {AD:Goblin HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Goblin Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=2,
          {AD:Goblin (Spoken), 1/2,displaycost(0/-1/+),page(31),upto(3),mods(Native Language),levelnames([None], Broken, Accented, Native),taboo(Native Languages > 1), cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social, Non-Racial, Racial)}=3 _
                   with {"Native Speaker", -3,gives(=+0.5 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level),group(Native Language),page(31),level(1),valuenum(-3)},
          {AD:Racial Skill Point Bonus (Pot-Making), 1/2,page(99),gives(+1pts to SK:Pot-Making),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=24,
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
                   with {"Degree: +3 to HT rolls to resist", *1/3,round(Down),shortname(+3),group(Resistant),page(46),tier(-1),level(1),valuenum(1/3)},
          {DI:Goblin (Written), -3, upto(1), gives(=+0.5 to ST:Native Languages), mods(Native Language), forceformula(yes), group(Language), levelnames(Illiterate), taboo(Native Languages > 1)},
          {DI:Goblin IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=1,
          {DI:Goblin SM Penalty, 0/0,gives(-1 to ST:Size Modifier),page(27), cat(Attributes)}=2,
          {DI:Goblin ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=3,
          {DI:Goblin Will Penalty, -5/-10,page(27),gives(-1 to ST:Will), cat(Attributes)}=1,
          {DI:Odious Racial Habit (General Sordidness), -5/-10,upto(3),page(96),conditional(-1 to ST:Reaction when "people are aware of the issue"), cat(Mundane, Racial, Social, Mundane Social)}=1_
       )

Golem, displaycost(438), cost(0),
	description(An ancient automaton, created theologically.),
	page(104), race(Golem), noresync(yes), owns(yes),
	adds(_
       {AD:Damage Resistance}=5,
       {AD:Doesn't Breathe},
       {AD:Doesn't Eat or Drink},
       {AD:Doesn't Sleep},
       {AD:High Pain Threshold},
       {AD:Indomitable},
       {AD:Lifting ST}=10 _
          with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(27),level(1),valuenum(-10)},
       {AD:Night Vision}=4,
       {AD:Photographic Memory},
       {AD:Pressure-Proof},
       {AD:Protected Eyes}=4,
       {AD:Repairable (Professional Skill (Potter))},
       {AD:Single-Minded},
       {AD:Temperature Tolerance (Cold)}=3,
       {AD:Temperature Tolerance (Heat)}=3,
       {AD:Unfazeable},
       {PE:Boredom Immunity},
       {PE:Longevity},
       {PE:Striking Surface},
       {DI:Hidebound},
       {DI:Honesty} _
          with {"You resist on a roll of  6 or less (quite rarely)", *2,shortname(6 or less),group(Self-Control),page(53),level(1),valuenum(2)},
       {DI:Selfless} _
          with {"You resist on a roll of  6 or less (quite rarely)", *2,shortname(6 or less),group(Self-Control),page(53),level(1),valuenum(2)},
       {DI:Unnaturally Fragile},
       {QU:Broad-Minded},
       {QU:Cannot Float}_
    ),
	creates(_
          {AD:Extra DR 15 (Only vs. Heat and Fire), 45, displaycost(varies), noresync(yes), cat(General)},
          {AD:Golem DX Bonus, 20/40,page(B15),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=1,
          {AD:Golem Perception Bonus, 5/10,page(B16),gives(+1 to ST:Perception), cat(Attributes)}=1,
          {AD:Golem SM Bonus, 0/0,gives(+1 to ST:Size Modifier),page(B19),tl(),usernotes(),familiarities(), cat(Attributes)}=1,
          {AD:Golem ST Bonus, 10/20,page(B14),mods(Size, Quadruped),gives(+1 to ST:ST),tl(),usernotes(),familiarities(), cat(Attributes)}=15 _
                   with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(B15),level(1),valuenum(-10)},
          {AD:Golem Will Bonus, 5/10,page(B16),gives(+1 to ST:Will), cat(Attributes)}=4,
          {AD:Injury Tolerance, 0,displaycost(variable),mods(Injury Tolerance),page(89), cat(Exotic, Physical, Exotic Physical)} _
                   with {"No Blood", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"No Vitals", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"Unliving", +20,group(Injury Tolerance),page(89),level(1),valuenum(20)},
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Resistant (Poison), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=3 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)}_
       )

Domestic Cat, displaycost(-82), cost(0),
	description(Tiddles.), page(107), race(Cat),
	noresync(yes), owns(yes),
	adds(_
       {AD:Catfall},
       {AD:Claws (Sharp Claws)},
       {AD:Combat Reflexes},
       {AD:Enhanced Move (Ground)}=1,
       {AD:Night Vision}=5,
       {AD:See Invisible (Spirit)},
       {AD:Teeth (Sharp Teeth)},
       {AD:Temperature Tolerance (Cold)}=1,
       {AD:Ultrahearing},
       {PE:Fur},
       {DI:Bestial}=1,
       {DI:Callous},
       {DI:Cannot Speak},
       {DI:Quadruped},
       {DI:Short Legs},
       {DI:Social Stigma (Valuable Property)},
       {DI:Wealth}=3,
       {QU:Dislikes Water},
       {QU:Distractible},
       {QU:Short Lifespan}_
    ),
	creates(_
          {AD:Cat Basic Move Bonus, 5/10,page(28),gives(+1 to ST:Basic Move), cat(Attributes)}=1,
          {AD:Cat DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX),tl(),usernotes(),familiarities(), cat(Attributes)}=4 _
                   with {"Quadruped", -40%,group(Quadruped),page(96),level(1),valuenum(-40)},
          {AD:Cat Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=8,
          {AD:Cat Will Bonus, 5/10,page(27),gives(+1 to ST:Will), cat(Attributes)}=7,
          {AD:Racial Skill Point Bonus (Brawling), 1/2,page(99),gives(+1pts to SK:Brawling),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=4,
          {AD:Racial Skill Point Bonus (Jumping), 1/2,page(99),gives(+1pts to SK:Jumping),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=1,
          {AD:Racial Skill Point Bonus (Stealth), 1/2,page(99),gives(+1pts to SK:Stealth),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=2,
          {DI:Cat IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=6,
          {DI:Cat SM Penalty, 0/0,gives(-1 to ST:Size Modifier),page(27), cat(Attributes)}=3,
          {DI:Cat ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=6_
       )

Small Smart Dog, displaycost(-122), cost(0),
	description(Fido with a brain.), page(107), race(Dog),
	noresync(yes), owns(yes),
	adds(_
       {AD:Discriminatory Smell},
       {AD:Teeth (Sharp Teeth)},
       {AD:Temperature Tolerance (Cold)}=1,
       {AD:Ultrahearing},
       {PE:Fur},
       {DI:Quadruped},
       {DI:Short Legs},
       {DI:Social Stigma (Valuable Property)},
       {DI:Wealth}=3,
       {QU:Cannot Run Long Distances},
       {QU:Short Lifespan}_
    ),
	creates(_
          {AD:Dog HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Dog Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=6,
          {AD:Dog Will Bonus, 5/10,page(27),gives(+1 to ST:Will), cat(Attributes)}=4,
          {AD:Canine (Spoken), 1/2,displaycost(0/-1/+),page(31),upto(3),mods(Native Language),levelnames([None], Broken, Accented, Native),taboo(Native Languages > 1), cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social, Non-Racial, Racial)}=3 _
                   with {"Native Speaker", -3,gives(=+0.5 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level),group(Native Language),page(31),level(1),valuenum(-3)},
          {AD:Racial Skill Point Bonus (Brawling), 1/2,page(99),gives(+1pts to SK:Brawling),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=1,
          {AD:Racial Skill Point Bonus (Tracking), 1/2,page(99),gives(+1pts to SK:Tracking),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=1,
          {DI:Canine (Written), -3, upto(1), gives(=+0.5 to ST:Native Languages), mods(Native Language), forceformula(yes), group(Language), levelnames(Illiterate), taboo(Native Languages > 1)},
          {DI:Dog IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=4,
          {DI:Dog SM Penalty, 0/0,gives(-1 to ST:Size Modifier),page(27), cat(Attributes)}=3,
          {DI:Dog ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=5_
       )

Moderate-Sized Troll, displaycost(83), cost(0),
	description(A typical member of the silicon-based race.), page(108),
	race(Troll), noresync(yes), owns(yes),
	adds(_
       {AD:Damage Resistance}=5,
       {AD:Fearlessness}=4,
       {AD:High Pain Threshold},
       {AD:Lifting ST}=4 _
          with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(27),level(1),valuenum(-10)},
       {AD:Night Vision}=3,
       {AD:Protected Eyes}=3,
       {AD:Temperature Tolerance (Cold)}=2,
       {PE:Longevity},
       {PE:Striking Surface},
       {DI:Appearance}=2,
       {DI:Troll Brain},
       {QU:Brawling Society},
       {QU:Cannot Float},
       {QU:Weak Spot (Neck)}_
    ),
	creates(_
          {AD:Racial Skill Point Bonus (Brawling), 1/2,page(99),gives(+1pts to SK:Brawling),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=2,
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
             with {"Degree: +3 to HT rolls to resist", *1/3,round(Down),shortname(+3),group(Resistant),page(46),tier(-1),level(1),valuenum(1/3)},
          {AD:Troll HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=2,
          {AD:Troll Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=1,
          {AD:Troll SM Bonus, 0/0,gives(+1 to ST:Size Modifier),page(27), cat(Attributes)}=1,
          {AD:Troll ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST),tl(),usernotes(),familiarities(), cat(Attributes)}=6 _
             with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(B15),level(1),valuenum(-10)},
          {DI:Odious Racial Habit (Hitting People), -5/-10,upto(3),page(96),conditional(-1 to ST:Reaction when "people are aware of the issue"), cat(Mundane, Racial, Social, Mundane Social)}=1,
          {DI:Troll IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=2_
       )

Big Troll, displaycost(115), cost(0),
	description(A notably well-grown troll.), page(108),
	race(Troll), noresync(yes), owns(yes),
	adds(_
       {AD:Damage Resistance}=6,
       {AD:Fearlessness}=4,
       {AD:High Pain Threshold},
       {AD:Lifting ST}=5 _
          with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(27),level(1),valuenum(-20)},
       {AD:Night Vision}=3,
       {AD:Protected Eyes}=3,
       {AD:Temperature Tolerance (Cold)}=2,
       {PE:Longevity},
       {PE:Striking Surface},
       {DI:Appearance}=2,
       {DI:Troll Brain},
       {QU:Brawling Society},
       {QU:Cannot Float},
       {QU:Weak Spot (Neck)}_
    ),
creates(_
          {AD:Racial Skill Point Bonus (Brawling), 1/2,page(99),gives(+1pts to SK:Brawling),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=2,
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
             with {"Degree: +3 to HT rolls to resist", *1/3,round(Down),shortname(+3),group(Resistant),page(46),tier(-1),level(1),valuenum(1/3)},
          {AD:Troll HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=2,
          {AD:Troll Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=1,
          {AD:Troll SM Bonus, 0/0,gives(+1 to ST:Size Modifier),page(27), cat(Attributes)}=2,
          {AD:Troll ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST),tl(),usernotes(),familiarities(), cat(Attributes)}=10 _
             with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(B15),level(1),valuenum(-20)},
          {DI:Odious Racial Habit (Hitting People), -5/-10,upto(3),page(96),conditional(-1 to ST:Reaction when "people are aware of the issue"), cat(Mundane, Racial, Social, Mundane Social)}=1,
          {DI:Troll IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=2_
       )

Huge Troll, displaycost(190), cost(0),
	description(A really big silicon sentient.), page(108),
	race(Troll), noresync(yes), owns(yes),
	adds(_
       {AD:Damage Resistance}=7 _
          with {"Can't Wear Armour", -40%,group(Damage Resistance),page(88),level(1),valuenum(-40)},
       {AD:Fearlessness}=6,
       {AD:High Pain Threshold},
       {AD:Lifting ST}=7 _
          with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(27),level(1),valuenum(-30)},
       {AD:Night Vision}=3,
       {AD:Protected Eyes}=4,
       {AD:Temperature Tolerance (Cold)}=2,
       {PE:Longevity},
       {PE:Striking Surface},
       {DI:Appearance}=2,
       {DI:Troll Brain},
       {QU:Brawling Society},
       {QU:Cannot Float},
       {QU:Weak Spot (Neck)}_
    ),
	creates(_
          {AD:Racial Skill Point Bonus (Brawling), 1/2,page(99),gives(+1pts to SK:Brawling),noresync(yes), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Racial)}=2,
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
             with {"Degree: +3 to HT rolls to resist", *1/3,round(Down),shortname(+3),group(Resistant),page(46),tier(-1),level(1),valuenum(1/3)},
          {AD:Troll HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=2,
          {AD:Troll SM Bonus, 0/0,gives(+1 to ST:Size Modifier),page(27), cat(Attributes)}=3,
          {AD:Troll ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST),tl(),usernotes(),familiarities(), cat(Attributes)}=23 _
             with {"Size", -10%,formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)),forceformula(yes),group(Size),page(B15),level(1),valuenum(-30)},
          {DI:Odious Racial Habit (Hitting People), -5/-10,upto(3),page(96),conditional(-1 to ST:Reaction when "people are aware of the issue"), cat(Mundane, Racial, Social, Mundane Social)}=1,
          {DI:Troll DX Penalty, -20/-40,page(26),gives(-1 to ST:DX), cat(Attributes)}=1,
          {DI:Troll IQ Penalty, -20/-40,page(27),gives(-1 to ST:IQ), cat(Attributes)}=1_
       )

Vampire (Female), displaycost(107), cost(0),
	description(A baseline bloodsucker), page(109), race(Vampire),
	noresync(yes), owns(yes),
	adds(_
       {AD:Charisma}=1,
       {AD:Doesn't Breathe},
       {AD:High Pain Threshold},
       {AD:Night Vision}=7,
       {AD:Pressure-Proof},
       {AD:Regeneration}=4 _
                   with {"Requires Special Condition (Contact With Blood)", -40%,group(Regeneration),page(90),level(1),valuenum(-40),basedon(Requires Special Condition),basedgroup(Regeneration)},
       {AD:Teeth (Sharp Teeth)},
       {AD:Temperature Tolerance (Cold)}=2,
       {AD:Unkillable}=2 _
                   with {"Hindrance (Wooden Weapons)", -5%/-15%/-25%,levelnames(Rare, Occasional, Common),upto(3),group(Unkillable),page(93),level(3),valuenum(-25),basedon(Hindrance),basedgroup(Unkillable)} _
                   and  {"Trigger (Contact With Blood)", -5%/-15%/-25%,levelnames(Common, Occasional, Rare),upto(3),group(Unkillable),page(93),level(1),valuenum(-5),basedon(Trigger),basedgroup(Unkillable)},
       {PE:Longevity},
       {DI:Supernatural Feature (Blatantly Unnatural: No Reflection)},
       {DI:Supernatural Feature (Mostly Concealed: No Body Heat)},
       {DI:Weakness (Direct Sunlight)}=3 _
                   with {"Rarity: Common", *2,shortname(Common),group(Weakness),page(98),level(1),valuenum(2)},
       {DI:Weakness (Holy Water)}=3 _
                   with {"Rarity: Rare", *1/2,shortname(Rare),group(Weakness),page(98),level(1),valuenum(1/2)},
       {QU:Dislikes Garlic}_
    ),
creates(_
          {AD:Injury Tolerance, 0,displaycost(variable),mods(Injury Tolerance),page(89), cat(Exotic, Physical, Exotic Physical)} _
                   with {"No Blood", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"No Vitals", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)},
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Resistant (Poison), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=3 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Vampire DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=3,
          {AD:Vampire HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Vampire Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=2,
          {AD:Vampire ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST), cat(Attributes)}=5,
          {DI:Dread (Holy Symbols), -10,mods(Dread),page(95),tl(),usernotes(),familiarities(), cat(Supernatural, Mental, Racial, Supernatural Mental)} _
                   with {"Larger Radius", -1/-2,upto(10),group(Dread),page(95),levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards),level(2),valuenum(-2)} _
                   and  {"Rarity: Common", *2,shortname(Common),group(Dread),page(95),level(1),valuenum(2)},
          {DI:Dread (Running Water), -10,mods(Dread),page(95), cat(Supernatural, Mental, Racial, Supernatural Mental)} _
                   with {"Rarity: Occasional", *1,shortname(Occasional),group(Dread),level(1),valuenum(1)},
          {DI:Restricted Diet (Blood), -10/-20/-30/-40,levelnames(Very Common, Common, Occasional, Rare),page(96),upto(4),taboo(AD:Cast-Iron Stomach, AD:Doesn't Eat or Drink), cat(Mundane, Physical, Racial, Mundane Physical)}=1,
          {DI:Vulnerability (Cutting Attacks to the Neck), -10/-20/-30/-40,displaycost(variable),upto(4),levelnames(Rare, Occasional, Common, Very Common),mods(Vulnerability),page(98), cat(Exotic, Physical, Racial, Exotic Physical)}=2 _
                   with {"Wounding Multiplier x2", *1,shortname(x2),group(Vulnerability),page(98),level(1),valuenum(1)},
          {DI:Vulnerability (Wooden Impaling Weapons), -10/-20/-30/-40,displaycost(variable),upto(4),levelnames(Rare, Occasional, Common, Very Common),mods(Vulnerability),page(98), cat(Exotic, Physical, Racial, Exotic Physical)}=2 _
                   with {"Wounding Multiplier x2", *1,shortname(x2),group(Vulnerability),page(98),level(1),valuenum(1)}_
       )

Vampire (Male), displaycost(108), cost(0),
	description(A baseline bloodsucker), page(109), race(Vampire),
	noresync(yes), owns(yes),
	adds(_
       {AD:Charisma}=1,
       {AD:Doesn't Breathe},
       {AD:High Pain Threshold},
       {AD:Night Vision}=7,
       {AD:Pressure-Proof},
       {AD:Regeneration}=4 _
                   with {"Requires Special Condition (Contact With Blood)", -40%,group(Regeneration),page(90),level(1),valuenum(-40),basedon(Requires Special Condition),basedgroup(Regeneration)},
       {AD:Teeth (Sharp Teeth)},
       {AD:Temperature Tolerance (Cold)}=2,
       {AD:Unkillable}=2 _
                   with {"Hindrance (Wooden Weapons)", -5%/-15%/-25%,levelnames(Rare, Occasional, Common),upto(3),group(Unkillable),page(93),level(3),valuenum(-25),basedon(Hindrance),basedgroup(Unkillable)} _
                   and  {"Trigger (Contact With Blood)", -5%/-15%/-25%,levelnames(Common, Occasional, Rare),upto(3),group(Unkillable),page(93),level(1),valuenum(-5),basedon(Trigger),basedgroup(Unkillable)},
       {PE:Fully-Dressed Resurrection},
       {PE:Longevity},
       {DI:Supernatural Feature (Blatantly Unnatural: No Reflection)},
       {DI:Supernatural Feature (Mostly Concealed: No Body Heat)},
       {DI:Weakness (Direct Sunlight)}=3 _
                   with {"Rarity: Common", *2,shortname(Common),group(Weakness),page(98),level(1),valuenum(2)},
       {DI:Weakness (Holy Water)}=3 _
                   with {"Rarity: Rare", *1/2,shortname(Rare),group(Weakness),page(98),level(1),valuenum(1/2)},
       {QU:Dislikes Garlic}_
    ),
creates(_
          {AD:Injury Tolerance, 0,displaycost(variable),mods(Injury Tolerance),page(89), cat(Exotic, Physical, Exotic Physical)} _
                   with {"No Blood", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"No Vitals", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)},
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Resistant (Poison), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=3 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Vampire DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=3,
          {AD:Vampire HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Vampire Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=2,
          {AD:Vampire ST Bonus, 10/20,page(26),mods(Size, Quadruped),gives(+1 to ST:ST), cat(Attributes)}=5,
          {DI:Dread (Holy Symbols), -10,mods(Dread),page(95),tl(),usernotes(),familiarities(), cat(Supernatural, Mental, Racial, Supernatural Mental)} _
                   with {"Larger Radius", -1/-2,upto(10),group(Dread),page(95),levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards),level(2),valuenum(-2)} _
                   and  {"Rarity: Common", *2,shortname(Common),group(Dread),page(95),level(1),valuenum(2)},
          {DI:Dread (Running Water), -10,mods(Dread),page(95), cat(Supernatural, Mental, Racial, Supernatural Mental)} _
                   with {"Rarity: Occasional", *1,shortname(Occasional),group(Dread),level(1),valuenum(1)},
          {DI:Restricted Diet (Blood), -10/-20/-30/-40,levelnames(Very Common, Common, Occasional, Rare),page(96),upto(4),taboo(AD:Cast-Iron Stomach, AD:Doesn't Eat or Drink), cat(Mundane, Physical, Racial, Mundane Physical)}=1,
          {DI:Vulnerability (Cutting Attacks to the Neck), -10/-20/-30/-40,displaycost(variable),upto(4),levelnames(Rare, Occasional, Common, Very Common),mods(Vulnerability),page(98), cat(Exotic, Physical, Racial, Exotic Physical)}=2 _
                   with {"Wounding Multiplier x2", *1,shortname(x2),group(Vulnerability),page(98),level(1),valuenum(1)},
          {DI:Vulnerability (Wooden Impaling Weapons), -10/-20/-30/-40,displaycost(variable),upto(4),levelnames(Rare, Occasional, Common, Very Common),mods(Vulnerability),page(98), cat(Exotic, Physical, Racial, Exotic Physical)}=2 _
                   with {"Wounding Multiplier x2", *1,shortname(x2),group(Vulnerability),page(98),level(1),valuenum(1)}_
       )

Bat - Vampire Alternate Form, displaycost(-53), cost(0),
	description(Bat form), page(113), race(Bat Shape),
	noresync(yes), owns(yes),
	adds(_
       {AD:Flight (Winged, Cannot Hover)},
       {AD:High Pain Threshold},
       {AD:Night Vision}=5,
       {AD:Sonar},
       {AD:Teeth (Sharp Teeth)},
       {AD:Temperature Tolerance (Cold)}=1,
       {AD:Ultrahearing},
       {PE:Fur},
       {PE:Longevity},
       {DI:Aerial},
       {DI:Bad Grip}=3,
       {DI:Bad Sight (Nearsighted)},
       {DI:Cannot Speak},
       {DI:Supernatural Feature (Blatantly Unnatural: No Reflection)},
       {DI:Supernatural Feature (Mostly Concealed: No Body Heat)},
       {DI:Weakness (Direct Sunlight)}=1 _
                   with {"Rarity: Common", *2,shortname(Common),group(Weakness),page(98),level(1),valuenum(2)},
       {DI:Weakness (Holy Water)}=1 _
                   with {"Rarity: Rare", *1/2,shortname(Rare),group(Weakness),page(98),level(1),valuenum(1/2)},
       {QU:Dislikes Garlic}_
    ),
	creates(_
          {AD:Bat Alternate Form DX Bonus, 20/40,page(26),mods(Quadruped),gives(+1 to ST:DX), cat(Attributes)}=2,
          {AD:Bat Alternate Form HT Bonus, 10/20,page(27),gives(+1 to ST:HT), cat(Attributes)}=1,
          {AD:Bat Alternate Form Perception Bonus, 5/10,page(27),gives(+1 to ST:Perception), cat(Attributes)}=2,
          {AD:Injury Tolerance, 0,displaycost(variable),mods(Injury Tolerance),page(89), cat(Exotic, Physical, Exotic Physical)} _
                   with {"No Blood", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)} _
                   and  {"No Vitals", +5,group(Injury Tolerance),page(89),level(1),valuenum(5)},
          {AD:Resistant (Disease), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=2 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {AD:Resistant (Poison), 5/10/15/30,mods(Resistant),levelnames(Rare, Occasional, Common, Very Common),page(46),upto(4), cat(Mundane, Non-Racial, Physical, Racial, Mundane Physical)}=3 _
                   with {"Degree: Immunity", *1,shortname(Immunity),group(Resistant),level(1),valuenum(1)},
          {DI:Bat Alternate Form SM Penalty, 0/0,gives(-1 to ST:Size Modifier),page(27), cat(Attributes)}=4,
          {DI:Bat Alternate Form ST Penalty, -10/-20,page(26),gives(-1 to ST:ST), cat(Attributes)}=5,
          {DI:Dread (Holy Symbols), -10,mods(Dread),page(95),tl(),usernotes(),familiarities(), cat(Supernatural, Mental, Racial, Vampire, Supernatural Mental)} _
                   with {"Larger Radius", -1/-2,upto(10),group(Dread),page(95),levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards),level(2),valuenum(-2)} _
                   and  {"Rarity: Common", *2,shortname(Common),group(Dread),page(95),level(1),valuenum(2)},
          {DI:Dread (Running Water), -10,mods(Dread),page(95), cat(Supernatural, Mental, Racial, Vampire, Supernatural Mental)} _
                   with {"Rarity: Occasional", *1,shortname(Occasional),group(Dread),level(1),valuenum(1)},
          {DI:Restricted Diet (Blood), -10/-20/-30/-40,levelnames(Very Common, Common, Occasional, Rare),page(96),upto(4),taboo(AD:Cast-Iron Stomach, AD:Doesn't Eat or Drink), cat(Mundane, Physical, Racial, Vampire, Mundane Physical)}=1,
          {QU:Hates Any Strong Light, -1,noresync(yes),tl(),usernotes(),familiarities(), cat(General)}_
       )

<Meta-Traits>
_New Meta-Trait, displaycost(variable), cost(0), gives(),
	owns(yes),
	locks(yes),
	hides(yes),
	x(_
		#InputReplace("Please set the name of the Meta-Trait:", "_New Meta-Trait", , "New Meta-Trait")_
	),
		select1(tagwith(hide(yes)), text("Please select the Meta-Trait Attribute Modifiers:"), pointswanted(atleast -1000, upto 10000), itemswanted(upto 10000),
			list(_
				#newitem(AD:_New Meta-Trait ST Bonus, 10/20, page(B14), mods(Size, Quadruped), gives(+1 to ST:ST), cat(Attributes)),
				#newitem(AD:_New Meta-Trait DX Bonus, 20/40, page(B15), mods(Quadruped), gives(+1 to ST:DX), cat(Attributes)),
				#newitem(AD:_New Meta-Trait IQ Bonus, 20/40, page(B15), gives(+1 to ST:IQ), cat(Attributes)),
				#newitem(AD:_New Meta-Trait HT Bonus, 10/20, page(B15), gives(+1 to ST:HT), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Will Bonus, 5/10, page(B16), gives(+1 to ST:Will), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Perception Bonus, 5/10, page(B16), gives(+1 to ST:Perception), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Hit Points Bonus, 2/4, page(B16), mods(Size, Quadruped), gives(+1 to ST:Hit Points), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Fatigue Points Bonus, 3/6, page(B16), gives(+1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Basic Move Bonus, 5/10, page(B17), gives(+1 to ST:Basic Move), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Basic Speed Bonus, 5/10, page(B17), upto(80), gives(+0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10,
							+10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 _
							)),
				#newitem(AD:_New Meta-Trait Water Move Bonus, 5/10, page(B18), gives(+1 to ST:Water Move), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Air Move Bonus, 2/4, page(B18), gives(+1 to ST:Air Move), cat(Attributes)),
				#newitem(AD:_New Meta-Trait TL Bonus, 5/10, page(B23), gives(+1 to ST:Tech Level), cat(Mundane, Social, Mundane Social), upto(12 - ST:Tech Level::basevalue)),
				#newitem(AD:_New Meta-Trait SM Bonus, 0/0, gives(+1 to ST:Size Modifier), page(B19), cat(Attributes)),
				#newitem(DI:_New Meta-Trait ST Penalty, -10/-20, page(B14), gives(-1 to ST:ST), cat(Attributes)),
				#newitem(DI:_New Meta-Trait DX Penalty, -20/-40, page(B15), gives(-1 to ST:DX), cat(Attributes)),
				#newitem(DI:_New Meta-Trait IQ Penalty, -20/-40, page(B15), gives(-1 to ST:IQ), cat(Attributes)),
				#newitem(DI:_New Meta-Trait HT Penalty, -10/-20, page(B15), gives(-1 to ST:HT), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Will Penalty, -5/-10, page(B16), gives(-1 to ST:Will), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Perception Penalty, -5/-10, page(B16), gives(-1 to ST:Perception), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Hit Points Penalty, -2/-4, page(B16), gives(-1 to ST:Hit Points), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Fatigue Points Penalty, -3/-6, page(B16), gives(-1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Basic Move Penalty, -5/-10, page(B17), gives(-1 to ST:Basic Move), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Basic Speed Penalty, -5/-10, page(B17), upto(80), gives(-0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							-0.25, -0.5, -0.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -4, -4.25, -4.5, -4.75, -5, -5.25, -5.5, -5.75, -6, -6.25, -6.5, -6.75, -7, -7.25, -7.5, -7.75, -8, -8.25, -8.5, -8.75, -9, -9.25, -9.5, -9.75, -10,
							-10.25, -10.5, -10.75, -11, -11.25, -11.5, -11.75, -12, -12.25, -12.5, -12.75, -13, -13.25, -13.5, -13.75, -14, -14.25, -14.5, -14.75, -15, -15.25, -15.5, -15.75, -16, -16.25, -16.5, -16.75, -17, -17.25, -17.5, -17.75, -18, -18.25, -18.5, -18.75, -19, -19.25, -19.5, -19.75, -20 _
							)),
				#newitem(DI:_New Meta-Trait Water Move Penalty, -5/-10, page(B18), gives(-1 to ST:Water Move), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Air Move Penalty, -2/-4, page(B18), gives(-1 to ST:Air move), cat(Attributes)),
				#newitem(DI:_New Meta-Trait TL Penalty, -5/-10, page(B22), gives(-1 to ST:Tech Level), cat(Mundane, Social, Mundane Social)),
				#newitem(DI:_New Meta-Trait SM Penalty 0/0, gives(-1 to ST:Size Modifier), page(B19), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Ground Move Penalty, 0/0, page(B18), gives(-1 to ST:Ground Move), replacetags(in "ST:Ground Move" with "hide(), display(yes), mainwin(11), noresync(yes)"))_
				)_
			),
		select2(tagwith(hide(yes)), text("Please select any Meta-Trait Perks:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllPerks)_
				)_
			),
		select3(tagwith(hide(yes)), text("Please select any Meta-Trait Advantages:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllAdvantages)_
				)_
			),
		select4(tagwith(hide(yes)), text("Please select any Meta-Trait Quirks:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllQuirks)_
				)_
			),
		select5(tagwith(hide(yes)), text("Please select the Meta-Trait Disadvantages:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllDisadvantages)_
				)_
			),
		select6(tagwith(hide(yes)), text("Please select any Meta-Trait Skill Bonuses:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
					"AD:Racial Skill Bonus (%skillslist%)",
					"AD:Racial Skill Bonus ([skill])",
					"AD:Racial Skill Point Bonus ([skill])",
					"AD:Racial Spell Bonus ([spell])",
					"AD:Racial Spell Point Bonus ([spell])"_
				)_
			), noresync(yes)

Domestic Animal, displaycost(-30), cost(0),
	description(A farm animal, pet, mount, or a trained wild animal.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:Cannot Speak,
		DI:Hidebound,
		DI:Social Stigma (Valuable Property) _
		),
	taboo(ST:IQ>0pts)

Spirit, displaycost(261), cost(0),
	description(You are a noncorporeal entity: ghost, being of pure thought, etc. You are invisible _
			and intangible (except to others with this meta-trait!). You can temporarily become _
			visible, or even solid, but this is draining. However, your senses can perceive the _
			material world at all times, and your magical or psionic abilities, if any, can _
			always affect the physical world.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Doesn't Eat or Drink,
		AD:Doesn't Sleep,
		AD:Insubstantiality _
			with "Affect Substantial, +100%, group(Insubstantiality)" _
			and  "Usually On, -40%, group(Insubstantiality)",
		AD:Invisibility _
			with "Substantial Only, -10%, group(Invisibility)" _
			and  "Usually On, +5%, group(Invisibility)",
		AD:Unaging _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)

Wild Animal, displaycost(-30), cost(0),
	description(An ordinary animal found in nature.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:Bestial,
		DI:Cannot Speak,
		DI:Hidebound _
		),
	taboo(ST:IQ>0pts)

**************************************************************************
[EQUIPMENT]
**************************************************************************

*Equipment, techlvl(), basecost(), baseweight(), mods()

*Armour, techlvl(), basecost(), baseweight(), location(), dr(), notes(), mods()

*Standard armour locations  for the fulkl Basic Set system include:
*  all, arms, eyes, face, feet, full suit, groin, hands, head, legs, limbs, neck, skull, torso

*Muscle-Powered Ranged Weapon, techlvl(), basecost(), baseweight(), mods(),
*	newmode(MODE NAME, damage(), damtype(), acc(), calcrange(yes), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused()),
*	newmode(MODE NAME, damage(), damtype(), acc(), calcrange(yes), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused())

*Firearm, techlvl(), basecost(), baseweight(), mods(),
*	newmode(MODE NAME, damage(), damtype(), acc(), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), rcl(), skillused()),
*	newmode(MODE NAME, damage(), damtype(), acc(), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), rcl(), skillused())

*Melee Weapon, techlvl(), basecost(), baseweight(), mods(), 
*	newmode(MODE NAME, damage(), damtype(), reach(), parry(), minst(), skillused()),
*	newmode(MODE NAME, damage(), damtype(), reach(), parry(), minst(), skillused())

*Throwable Melee Weapon, techlvl(), basecost(), baseweight(), mods(), 
*	newmode(MELEE MODE NAME, damage(), damtype(), reach(), parry(), minst(), skillused()),
*	newmode(RANGED MODE NAME, damage(), damtype(), acc(), calcrange(yes), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused())

<_New Equipment>
_New Equipment, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this piece of equipment:", name, , "New Equipment"),
		#InputReplace("Please enter the Tech Level of this piece of equipment:", "[techlevel]", , "New Equipment"),
		#InputReplace("Please enter the Cost of this piece of equipment. DO NOT include a dollar sign or comma:", "[cost]", , "New Equipment"),
		#InputReplace("Please enter the Weight of this piece of equipment:", "[weight]", , "New Equipment"),
		#edit)

_New Armour, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		location(%locationlist%),
		dr([damageresistance]),
		notes([notes]),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this piece of armour:", name, , "New Armour"),
		#InputReplace("Please enter the Tech Level of this piece of armour:", "[techlevel]", , "New Armour"),
		#InputReplace("Please enter the Cost of this piece of armour. DO NOT include a dollar sign or comma:", "[cost]", , "New Armour"),
		#InputReplace("Please enter the Weight of this piece of armour:", "[weight]", , "New Armour"),
		#InputReplace("Please enter the Damage Resistance of this piece of armour:", "[damageresistance]", , "New Armour"),
		#ChoiceList(_
				name(location),
				title(_New Armour),
				text(Choose the locations covered by this piece of armour:),
				picksallowed(atleast 1),
				method(bynumber),
				list(_
					"all",
					"arms",
					"eyes",
					"face",
					"feet",
					"full suit",
					"groin",
					"hands",
					"head",
					"legs",
					"limbs",
					"neck",
					"skull",
					"torso",
					"right leg",
					"left leg",
					"right foot",
					"left foot",
					"right arm",
					"left arm",
					"right hand",
					"left hand",
					"right eye",
					"left eye"_
					)_
				),
		#edit)

_New Firearm, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		damage([damage]),
		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		bulk([bulk]),
		rcl([recoil]),
		skillused([skillused]),
		mods(Equipment, Guns),
	x(_
		#InputToTagReplace("Please enter the name of this firearm:", name, " ", "New Firearm"),
		#InputReplace("Please enter the Tech Level of this firearm:", "[techlevel]", " ", "New Firearm"),
		#InputReplace("Please enter the Cost of this firearm. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Firearm"),
		#InputReplace("Please enter the Weight of this firearm:", "[weight]", " ", "New Firearm"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armour divisors or damage type in this field:", "[damage]", " ", "New Firearm"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", " ", "New Firearm"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", " ", "New Firearm"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", " ", "New Firearm"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", " ", "New Firearm"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", " ", "New Firearm"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", " ", "New Firearm"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", " ", "New Firearm"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", " ", "New Firearm"),
		#InputReplace("Please enter the bulk of this firearm:", "[bulk]", " ", "New Firearm"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", " ", "New Firearm"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", " ", "New Firearm"),
		#ChoiceList(_
				name(Use),
				title(New Firearm: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Weapon, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused]),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this hand weapon:", name, " ", "New Melee Weapon"),
		#InputReplace("Please enter the Tech Level of this hand weapon:", "[techlevel]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the Cost of this hand weapon. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the Weight of this hand weapon:", "[weight]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armour divisors or damage type:", "[damage]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the parry for this hand weapon; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, 0, or -1):", "[parry]", "0", "New Melee Weapon"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", " ", "New Melee Weapon"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Weapon: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Muscle-Powered Ranged Weapon, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		damage([damage]),
		armourdivisor([armourdivisor]),
		damtype([damagetype]),
		acc([accuracy]),
		calcrange(yes),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		bulk([bulk]),
		skillused([skillused]),
		mods(Equipment, Melee Quality),
	x(_
		#InputToTagReplace("Please enter the name of this muscle-powered ranged weapon:", name, " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Tech Level of this muscle-powered ranged weapon:", "[techlevel]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Cost of this muscle-powered ranged weapon. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Weight of this muscle-powered ranged weapon:", "[weight]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the damage of this muscle-powered ranged weapon (e.g. 6dx5 or thr+1). DO NOT include armour divisors or damage type in this field :", "[damage]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the damage type of this muscle-powered ranged weapon (e.g. pi+ or cut):", "[damagetype]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the accuracy of this muscle-powered ranged weapon:", "[accuracy]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the half damage range of this muscle-powered ranged weapon (e.g. ST*10 or 25):", "[halfdamagerange]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the maximum range of this muscle-powered ranged weapon (e.g. ST*10 or 25):", "[maxrange]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the rate of fire of this muscle-powered ranged weapon:", "[rateoffire]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the shots for this muscle-powered ranged weapon:", "[shots]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the minimum strength of this muscle-powered ranged weapon:", "[minimumst]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the bulk of this muscle-powered ranged weapon:", "[bulk]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the skill used for this muscle-powered ranged weapon:", "[skillused]", " ", "New Muscle-Powered Ranged Weapon"),
		#ChoiceList(_
				name(Use),
				title(New Muscle-Powered Ranged Weapon: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Parent Item, basecost(0), baseweight(0), isparent(yes),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, " ", "New Parent Item"))

<Discworld RPG, Discworld RPG - Food and Drink>
Travel Rations, basecost([cost]), baseweight(14), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 5% of the character's cost of living (though sometimes topping out at Status 3). DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.05", "Travel Rations")_
	), page(148), description(A week's eating while on the road. 5% of cost of living (though sometimes topping out at Status 3); 14lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Food and Drink)
"Wine or Liquor (per bottle)", basecost([cost]), baseweight(1), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 1% of the character's cost of living (though sometimes topping out at Status 3). DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.01", "Travel Rations")_
	), page(148), description(A bottle of acceptable booze. 1% of cost of living (though sometimes topping out at Status 3); 1lb.), techlvl(0), cat(Discworld RPG, Discworld RPG - Food and Drink)
Travel Rations (Status %StatusList%), basecost(0.05 * @indexedvalue(%StatusList% + 3, 5, 15, 30, 60, 150, 600, 3000, 30000, 300000, 3000000, 30000000)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Food: Travel Rations),
			text(Select the Status level appropriate to these victuals. Cost will be based on the Status selected. Note that food rated above Status 3 will be exceptionally extravagant and possibly pretentious:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(148), description(Food for a week on the road. 5% of cost of living; 14lbs.), techlvl(0)
Wind or Liquor (per bottle, Status %StatusList%), basecost(0.01 * @indexedvalue(%StatusList% + 3, 5, 15, 30, 60, 150, 600, 3000, 30000, 300000, 3000000, 30000000)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Drink: Wine or Liquor),
			text(Select the Status level appropriate to this drink. Cost will be based on the Status selected. Note that drink rated above Status 3 will be exceptionally refined:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(148), description(A bottle or booze. 1% of cost of living; 1lb.), techlvl(0)

<Discworld RPG, Discworld RPG - Clothing>
Complete Wardrobe, basecost([cost]), baseweight([weight]), mods(Equipment), displaycost(varies), displayweight(20+),
	x(_
		#InputReplace("Please enter the weight of this item here, or just press OK to use the base cost of 20 lbs.:", [weight], "20", "Complete Wardrobe"),
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 100% of the characters cost of living (though usually topping out at Status 3). DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living", "Complete Wardrobe")_
	), page(148), description(Includes one to four sets of ordinary clothes, plus nightclothes, one set each of formal wear and winter clothes, and usually at least one outfit (lab coat, uniform, gym clothes, etc.) appropriate to your job or hobbies. 100% of cost of living; 20+lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
Ordinary Clothes, basecost([cost]), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 20% of the characters cost of living (though usually topping out at Status 3). DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.2", "Ordinary Clothes")_
	), page(149), description(One complete outfit, ranging in quality from castoff rags to designer fashions, depending on Status. At minimum: undergarments, plus a tunic, blouse, or shirt with hose, skirt, or trousers - or a long tunic, robe or dress - and suitable footwear. 20% of cost of living; 2lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
Winter Clothes, basecost([cost]), baseweight(4), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 30% of the characters cost of living (though usually topping out at Status 3). DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.3", "Winter Clothes")_
	), page(149), description(As Ordinary Clothes, but heavier. Includes a hat or hood, boots, and probably furs. 30% of cost of living; 4lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
Formal Wear, basecost([cost]), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 40% of the characters cost of living (though usually topping out at Status 3). DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.4", "Formal Wear")_
	), page(149), description(Your "best outfit," which will usually include at least some accessories (hat, gloves, etc.) or jewelry. 40% of cost of living; 2lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)

Complete Wardrobe (Status %StatusList%), basecost(@indexedvalue(%StatusList% + 3, 5, 15, 30, 60, 150, 600, 600, 600, 600, 600, 600)), baseweight([weight]), mods(Equipment), displaycost(varies), displayweight(20+),
	x(_
	#InputReplace("Please enter the weight of this item here, or just press OK to use the base cost of 20 lbs.:", [weight], "20", "Complete Wardrobe"),
	#ChoiceList(_
			name(Status),
			title(Clothing: Complete Wardrobe),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected, topping out at Status 3:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(148), description(Includes one to four sets of ordinary clothes, plus nightclothes, one set each of formal wear and winter clothes, and usually at least one outfit (lab coat, uniform, gym clothes, etc.) appropriate to your job or hobbies. 100% of cost of living; 20+lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
Ordinary Clothes (Status %StatusList%), basecost(0.2 * @indexedvalue(%StatusList% + 3, 5, 15, 30, 60, 150, 600, 600, 600, 600, 600, 600)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Ordinary Clothes),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected, topping out at Status 3:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(149), description(One complete outfit, ranging in quality from castoff rags to designer fashions, depending on Status. At minimum: undergarments, plus a tunic, blouse, or shirt with hose, skirt, or trousers - or a long tunic, robe or dress - and suitable footwear. 20% of cost of living; 2lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
Winter Clothes (Status %StatusList%), basecost(0.3 * @indexedvalue(%StatusList% + 3, 5, 15, 30, 60, 150, 600, 600, 600, 600, 600, 600)), baseweight(4), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Winter Clothes),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected, topping out at Status 3:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(149), description(As Ordinary Clothes, but heavier. Includes a hat or hood, boots, and probably furs. 30% of cost of living; 4lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
Formal Wear (Status %StatusList%), basecost(0.4 * @indexedvalue(%StatusList% + 3, 5, 15, 30, 60, 150, 600, 600, 600, 600, 600, 600)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Formal Wear),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected, topping out at Status 3:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(149), description(Your "best outfit," which will usually include at least some accessories (hat, gloves, etc.) or jewelry. 40% of cost of living; 2lbs.), techlvl(0), cat(Discworld RPG, Discworld RPG - Clothing)
	
<Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear>
"Backpack, Frame", techlvl(1), basecost(5), baseweight(10), description(TL:1 Notes: Holds 100 lbs. of gear.), page(156), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Backpack, Small", techlvl(1), basecost(3), baseweight(3), description(TL:1 Notes: Holds 40 lbs. of gear.), page(156), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Blanket, techlvl(1), basecost(1), baseweight(4), description(TL:1 Notes: A warm sleeping blanket.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Climbing Gear, techlvl(2), basecost(1), baseweight(4), description(TL:2 Notes: Hammer, spikes, etc.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Compass (TL2), techlvl(2), basecost(2.50), baseweight(1), description(TL:2 Notes: Has octiron needle), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Compass (TL3+), techlvl(3), basecost(2.50), baseweight(1), description(TL:3 Notes: Has octiron needle - gives +1 to Navigation skill), page(156), mods(Equipment), conditional(+1 to "SK:Navigation"), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Fishhooks & Line, techlvl(0), basecost(2.50), baseweight(0.1), description(TL:0 Notes: Basic gear for Fishing skill, needs a pole.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Group Basics, techlvl(0), basecost(2.50), baseweight(20), description(TL:0 Notes: Basic equipment for Cooking and Survival skill for a group. Cook pot, rope, hatchet, etc., for 3-8 campers.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Iron Spike (Piton)", techlvl(2), basecost(0.05), baseweight(0.5), description(TL:2 Notes: For climbing, spiking doors, etc.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Personal Basics, techlvl(0), basecost(0.25), baseweight(1), description(TL:0 Notes: Minimum gear for camping: -2 to any Survival roll without it. Includes utensils, tinderbox or flint and steel, etc., as TL permits.), page(156), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Pole, 6'", techlvl(0), basecost(0.25), baseweight(3), description(TL:0 Notes: For pitching tents, fishing, or prodding items.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Pole, 10'", techlvl(1), basecost(0.40), baseweight(5), description(TL:1 Notes: For things you wouldn't touch with a 6' pole.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Saddlebags, techlvl(1), basecost(5), baseweight(3), description(TL:1 Notes: Holds 40lbs.), page(156), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Sleeping Fur, techlvl(0), basecost(2.50), baseweight(8), description(TL:0 Notes: Warm unless wet.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Tent, 1-Man", techlvl(0), basecost(2.50), baseweight(5), description(TL:0 Notes: Includes ropes, no poles needed.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Tent, 2-Man", techlvl(0), basecost(4), baseweight(12), description(TL:0 Notes: Includes ropes, requires one 6-foot pole.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Tent, 4-Man", techlvl(0), basecost(7.50), baseweight(30), description(TL:0 Notes: Includes ropes, requires 2 poles.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
"Towel, Small/Blanket Patch", techlvel(1), basecost(0.10), baseweight(0.5), description(TL:1 Notes: 18 inch square - miniature blankets issued to watchmen for dealing with bogeymen are blue.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)
Traveller's Rations, techlvl(0), basecost(0.10), baseweight(0.5), description(TL:0 Notes: One meal of dried meat, cheese, etc.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment - Camping & Travel Gear, Discworld RPG - Miscellaneous Equipment)

<Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment>
Balance & Weights, techlvl(1), basecost(1.75), baseweight(3), description(TL:1 Notes: For weighing goods.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Bandages, techlvl(Var.), basecost(0.50), baseweight(2), description(TL:Var. Notes: Bandages for half-dozen wounds. Basic equipment for First Aid skill.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Book, Mass-Market", techlvl(2), basecost(0.50), baseweight(1), description(TL:2 Notes: The cheapest sort of book - some cost a LOT more.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Bottle, Ceramic", techlvl(1), basecost(0.15), baseweight(1), description(TL:1 Notes: Holds 1 quart of liquid.), page(156), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Candle, Tallow", techlvl(1), basecost(0.25), baseweight(1), description(TL:1 Notes: Smoky! Lasts 12hrs.), page(156), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Caroc Cards (Casino Deck)", techlvl(3), basecost(2.50), baseweight(0.5), description(TL:3 Notes: A cheap but adequate deck for gaming.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Caroc Cards (Divination Deck)", techlvl(3), basecost(5), baseweight(0.5), description(TL:3 Notes: A good deck for magical uses.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Cement, Ceramic (Pot)", techlvl(2), basecost(1), baseweight(2), description(TL:2 Notes: Can be used to repair up to 5 HP on a golem.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Clockwork Pocket-Watch, techlvl(4), basecost(2.50), baseweight(0.25), description(TL:4 Notes: Probably dwarf-made and surprisingly reliable.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Cord, 3/16'' (per 10 yards)", techlvl(0), basecost(0.05), baseweight(0.5), description(TL:0 Notes: Supports 90 lbs.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Crowbar, 3'", techlvl(2), basecost(1), baseweight(3), description(TL:2 Notes: Treat as small mace in combat, at -1 to skill.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
First Aid Kit, techlvl(2), basecost(2.50), baseweight(2), description(TL:2 Notes: A complete kit for treating wounds, with bandages, ointments, etc. +1 to First Aid skill.), page(157), mods(Equipment), conditional(+1 to "SK:First Aid"), cat(Medical Equipment, Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Hip Quiver, techlvl(0), basecost(0.75), baseweight(1), description(TL:0 Notes: Holds 20 arrows or bolts.), page(157), mods(Equipment), isparent(yes), cat(Military Gear, Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
Hourglass, techlvl(2), basecost(2), baseweight(2), description(TL:2), page(157), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Lantern, techlvl(2), basecost(1), baseweight(2), description(TL:2 Notes: Burns for 24 hours on 1 pint of oil.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Lockpicks, techlvl(3), basecost(2.50), baseweight(0.10), description(TL:3 Notes: Basic equipment for Lockpicking skill.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Matches, techlvl(4), basecost(0.20), baseweight(0), description(TL:4 Notes: Starts fires. Crude and probably quite poisonous. Box of 20.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Oil (for lantern, per pint)", techlvl(2), basecost(0.10), baseweight(1), description(TL:2), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Pouch, techlvl(0), basecost(0.50), baseweight(0), description(TL:0 Notes: Holds 3 lbs.), page(157), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Purse, techlvl(0), basecost(0.50), baseweight(0), description(TL:0 Notes: Holds 3 lbs.), page(157), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Religious Symbol, Silver", techlvl(1), basecost(15), baseweight(0.25), description(TL:1), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Religious Symbol, Wood", techlvl(0), basecost(0.50), baseweight(1), description(TL:0), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Rope, 3/8'' (per 10 yards)", techlvl(0), basecost(0.25), baseweight(1.5), description(TL:0 Notes: Supports 300lbs.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Rope, 3/4'' (per 10 yards)", techlvl(1), basecost(1.25), baseweight(5), description(TL:1 Notes: Supports 1,100 lbs.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
"Scribe's Kit", techlvl(3), basecost(2.50), baseweight(2), description(TL:3 Notes: Quills, inkbottles, penknife, paper.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Sewing Kit, techlvl(0), basecost(1), baseweight(0.5), description(TL:0 Notes: Needles, thimble, thread. Basic Equipment for Sewing skill. Can fix up to 5 HP on a Repairable zombie. Sometimes useful for surgical work on humans.), page(157), mods(Equipment), cat(Medical Equipment, Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Shoulder Quiver, techlvl(0), basecost(0.50), baseweight(0.5), description(TL:0 Notes: Holds 12 arrows or bolts.), page(157), mods(Equipment), isparent(yes), cat(Military Gear, Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Shovel, techlvl(1), basecost(0.60), baseweight(6), description(TL:1 Notes: Speeds up digging.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Spyglass, techlvl(4), basecost(5), baseweight(4), description(TL:4 Notes: A simple telescope, mostly used at sea. Gives x4 magnification, eliminating -2 in range penalties if you take several seconds to scan a specific target.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Surgical Instruments, techlvl(1), basecost(15), baseweight(15), description(TL:1 Notes: Includes scalpels, forceps, etc. Basic equipment for Surgery skill.), page(157), mods(Equipment), cat(Medical Equipment, Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Torch, techlvl(0), basecost(0.15), baseweight(1), description(TL:0 Notes: Burns for 1hr.), page(157), mods(Equipment), cat()
"Watchman's Hand-Bell", techlvl(1), basecost(2), baseweight(2), description(TL:1), page(157), mods(Equipment), cat()
Wax Tablet, techlvl(1), basecost(0.50), baseweight(2), description(TL:1 Notes: For writing, erasable.), page(157), mods(Equipment), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Whetstone, techlvl(1), basecost(0.25), baseweight(1), description(TL:1 Notes: For sharpening tools and weapons.), page(157), mods(Equipment), cat(Military Gear, Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)
Wineskin, techlvl(0), basecost(0.50), baseweight(0.25), description(TL:0 Notes: Holds 1 gallon of liquid.), page(157), mods(Equipment), isparent(yes), cat(Discworld RPG, Discworld RPG - Miscellaneous Equipment, Discworld RPG - Miscellaneous Equipment - Assorted Tools & Equipment)

<Discworld RPG, Discworld RPG - Magical Gear>
Broomstick, techlvl(0), basecost(25), baseweight(4), description(TL:0 Skill:Aerobatics Notes: A classic flying broomstick with Move 18. Needs Magery to operate.), page(158), mods(Equipment)
"Iconograph (Fragile)", techlvl(4), basecost(2), baseweight(0.75), description(TL:4 Notes: Minimal, unreliable equipment for Photography skill.), page(159), mods(Equipment, Photographic Equipment), isparent(yes)
"Iconograph (Basic)", techlvl(4), basecost(3), baseweight(1), description(TL:4 Notes: Basic equipment for Photography skill.), page(159), mods(Equipment), isparent(yes), cat(Photographic Equipment)
"Iconograph (Professional/Minimal)", techlvl(4), basecost(10), baseweight(1.5), description(TL:4 Notes: Basic equipment for Photography skill in fully professional applications.), page(159), mods(Equipment), isparent(yes), cat(Photographic Equipment)
"Iconograph (Professional/Adequate)", techlvl(4), basecost(20), baseweight(2), description(TL:4 Notes: Basic equipment for Photography skill in fully professional applications, with some extra features.), page(159), mods(Equipment), isparent(yes), cat(Photographic Equipment)
"Akina TR-10 Dual-Imp Studio Iconograph", techlvl(4), basecost(180), baseweight(200), description(TL:4 Notes: Required equipment for specialist applications of Photography skill. Has a telescopic seat and a big shiny lever.), page(159), mods(Equipment), isparent(yes), cat(Photographic Equipment)
"Iconograph Paint and Paper (per picture)", techlvl(4), basecost(0.10), baseweight(0.05), description(TL:4 Notes: Art supplies. An iconograph can typically hold enough for 20-30 pictures at a time.), page(159), mods(Equipment), cat(Photographic Equipment)
Iconograph Flash Fitting, techlvl(4), basecost(0.50), baseweight(0), description(TL:4 Notes: Attaches to an iconograph. Holds one salamander and startles it when the iconograph is triggered.), page(159), mods(Equipment), cat(Photographic Equipment)
Salamander, techlvl(0), basecost(1), baseweight(0), description(TL:0 Notes: Used in flash iconography. See also p. 358 for flash effects.), page(159, 358), mods(Equipment, Animal), cat(Photographic Equipment, Discworld RPG - Animals)
Imp Watch, techlvl(4), basecost(2.50), baseweight(0.25), description(TL:4 Notes: A magical time-piece. Reliable but eventually irritating.), page(160), mods(Equipment)
"Personal Organiser (Dis-Organiser)", techlvl(4), basecost(20), baseweight(2), description(TL:4 Notes: A multi-purpose personal information-handling device. Can be insanely annoying or amazingly useful, often simultaneously. GMs can add extra cost for extra features, some possibly even worth having.), page(160), mods(Equipment)
Flying Carpet, techlvl(2), nameext(Size %SizeList% square yards), basecost(500 + (500 * %SizeList%)), baseweight(5 * %SizeList%), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(name(Size),
			title(Flying Carpet Size),
			text(Select the Size of the carpet in square yards. Each square yard can carry one SM 0 person or 250 lbs. of luggage:),
			picksallowed(1),
			method(bynumber),
			list(1, 2, 3, 4, 5, 6, 7, 8, 9))), page(160), description(A flying carpet; normal maximum is 40 mph (Move 20), but this can sometimes be boosted. Controlled by voice and carefull weight shifts.)
Speaking Brass Door Plate, techlvl(1), basecost(10), baseweight(3), description(TL:1 Notes: Speaks the name of the house's occupant when approached.), page(160), mods(Equipment)
"Speaking Door-Knocker", techlvl(1), basecost(25), baseweight(5), description(TL:1 Notes: Speaks the name of the house's occupant when approached, and announces visitors to those inside. Flashy IQ 8 but unimaginative, probably with a speech impediment.), page(160), mods(Equipment)
Illuminated Sign (per letter), techlvl(3), basecost(5), baseweight(4), description(TL:3 Notes: A foot tall. Larger signs cost more in proportion. Last 2d years then start buzzing and flickering), page(160), mods(Equipment)
Thaumometer, techlvl(4), basecost(10), baseweight(1), description(TL:4 Notes: Measures the ambient magical flux in thaums. Good for up to a million thaums, then it starts to melt.), page(160), mods(Equipment)

<GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment>
"Cable, Steel, 1.5'' (per 10 yards)", techlvl(5), basecost(5), baseweight(17), description(TL:5 Notes: Supports 3,700 lbs.), page(B288), mods(Equipment), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)
Drum, techlvl(0), basecost(2), baseweight(2), description(TL:0 Notes: Audible for several miles.), page(B288), mods(Equipment), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)
Grapnel, techlvl(5), basecost(1), baseweight(2), description(TL:5 Notes: Throw to STx2 yards. Supports 300lbs.), page(B288), mods(Equipment), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)
"Suitcase, Hard", techlvl(5), basecost(12.50), baseweight(8), description(TL:5 Notes: Holds 100 lbs. DR 4 with key lock.), page(B288), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)
"Tent, 20-Man", techlvl(1), basecost(15), baseweight(100), description(TL:1 Notes: Includes ropes, requires 16 poles.), page(B288), mods(Equipment), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)
Water (per gallon), techlvl(0), basecost(0), baseweight(8), description(TL:0), page(B288), mods(Equipment), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)
Water (per quart), techlvl(0), basecost(0), baseweight(2), description(TL:0), page(B288), mods(Equipment), cat(GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment)

<Domestic Animals>
Camel, page(353), st(22), dx(10), iq(13), ht(12), will(13), per(13), speed(5.50), dodge(8), move(7), sm(+1), size(3 hexes), weight(1000 lbs.), traits(Enhanced Move 1 (Ground Speed 14); Hooves; Mathematical Ability 4; Obsession (Pursuit of Pure Mathematics) (12); Peripheral Vision; Quadruped; Reduced Consumption 3 (Water Only); Stubbornness; Tacitly Sarcastic; Weak Bite.), skills(Survival (Desert)-12.), basecost(75), description(ST:22 DX:10 IQ:13 HT:12 Will:13 Per:13 Speed:5.50 Dodge:8 Move:7 SM:+1 (3 hexes); 1000 lbs. Traits: Enhanced Move 1 (Ground Speed 14); Hooves; Mathematical Ability 4; Obsession (Pursuit of Pure Mathematics) (12); Peripheral Vision; Quadruped; Reduced Consumption 3 (Water Only). Skills: Mathematics (all specialiisations)-19; Survival (Desert)-15. Notes: A dry-plains native and secret mathematical genius, the camel can go for days without drinking. Its stubborn temper gives -4 to Animal Handling rolls. It can spit as a ranged attack (skill-12, Max 3, Acc 2) to blind a target for 1d-2 turns, or spit date stones (skill-16, 1/2D 5, Max 10, Acc 2) for 1d-3 cr damage.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)
Elephant, page(355), st(45), dx(12), iq(5), ht(12), will(10), per(10), speed(4), dodge(7), move(4), sm(+3), size(10 hexes), weight(12000 lbs.), traits(Crushing Striker (Tusks); Domestic (or Wild) Animal; DR 4; Enhanced Move 1 (Ground Speed 8); Peripheral Vision; Quadruped (but with One "Arm"); Trunk (Extra-Flexible; Long, +1 SM; Weak, 1/4 ST); Weak Bite), skills(), basecost(500), description(ST:45 DX:12 IQ:5 HT:12 Will:10 Per:10 Speed:4 Dodge:7 Move:4 SM:+3 (10 hexes); 12000 lbs. Traits: Crushing Striker (Tusks); Domestic (or Wild) Animal; DR 4; Enhanced Move 1 (Ground Speed 8); Peripheral Vision; Quadruped (but with One "Arm"); Trunk (Extra-Flexible; Long, +1 SM; Weak, 1/4 ST); Weak Bite Notes: Often domesticated. Intelligent, loyal, and hard working.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)
Fourecksian Emu, page(355), st(13), dx(11), iq(3), ht(11), will(10), per(11), speed(5.50), dodge(8), move(7), sm(0), size(1 hex), weight(150 lbs.), traits(Bad Temper (15); Blunt Claws; Domestic Animal; Enhanced Move 1 (Ground Speed 14); Long Neck (Reach 1 with beak); Peripheral Vision; No Arms; Sharp Beak.), skills(Brawling-12.), basecost(25), description(ST:13 DX:11 IQ:3 HT:11 Will:10 Per:11 Speed:5.50 Dodge:8 Move:7 SM:0 (1 hex); 150 lbs. Traits: Bad Temper (15); Blunt Claws; Domestic Animal; Enhanced Move 1 (Ground Speed 14); Long Neck (Reach 1 with beak); Peripheral Vision; No Arms; Sharp Beak. Skills: Brawling-12. Notes: A large and very formidable flightless bird which can be used to pull miniature carts.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals),
	initmods(Animal: War-Trained, *2, page(356), group(Animal), shortname(War-Trained))
Cavalry Horse, page(356), st(22), dx(9), iq(3), ht(11), will(11), per(12), speed(5), dodge(9), move(8), sm(+1), size(3 hexes), weight(1400 lbs.), traits(Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(Brawling-10; Mount-12.), basecost(100), displaycost(200), description(ST:22 DX:9 IQ:3 HT:11 Will:11 Per:12 Speed:5 Dodge:9 Move:8 SM:+1 (3 hexes); 1,400 lbs. Traits: Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite. Skills: Brawling-10; Mount-12. Notes: A light warhorse.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals),
	initmods(Animal: War-Trained, *2, page(356), group(Animal), shortname(War-Trained))
Draft Horse, page(356), st(25), dx(9), iq(3), ht(12), will(10), per(11), speed(5.25), dodge(8), move(6), sm(+1), size(3 hexes), weight(2000 lbs), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(100), description(ST:25 DX:9 IQ:3 HT:12 Will:10 Per:11 Speed:5.25 Dodge:8 Move:6 SM:+1 (3 hexes); 2000 lbs Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: A work horse.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)
Pony, page(356), st(18), dx(10), iq(3), ht(11), will(11), per(12), speed(5.25), dodge(8), move(7), sm(+1), size(3 hexes), weight(800 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 14); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(75), description(ST:18 DX:10 IQ:3 HT:11 Will:11 Per:12 Speed:5.25 Dodge:8 Move:7 SM:+1 (3 hexes); 800 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 14); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: Small horse.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)
Saddle Horse, page(356), st(21), dx(9), iq(3), ht(11), will(10), per(12), speed(5), dodge(8), move(6), sm(+1), size(3 hexes), weight(1200 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(60), description(ST:21 DX:9 IQ:3 HT:11 Will:10 Per:12 Speed:5 Dodge:8 Move:6 SM:+1 (3 hexes); 1200 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: An ordinary riding horse.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)
Small Mule, page(356), st(18), dx(10), iq(3), ht(12), will(12), per(12), speed(5.5), dodge(8), move(5), sm(+1), size(2 hexes), weight(800 lbs.), traits(Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite; sterile.), skills(), basecost(50), description(ST:18 DX:10 IQ:3 HT:12 Will:12 Per:12 Speed:5.5 Dodge:8 Move:5 SM:+1 (2 hexes); 800 lbs. Traits: Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite; sterile. Notes: Sturdy work animal.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)
Spirited Horse, page(356), st(21), dx(10), iq(3), ht(12), will(12), per(12), speed(5.50), dodge(8), move(9), sm(+1), size(3 hexes), weight(1200 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 18); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(Brawling-11; Mount-12), basecost(60), description(ST:21 DX:10 IQ:3 HT:12 Will:12 Per:12 Speed:5.50 Dodge:8 Move:9 SM:+1 (3 hexes); 1200 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 18); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: Something offloaded on certain careless buyers.), baseweight(0), mods(Equipment, Animal), cat(Discworld RPG, Discworld RPG - Animals)

Swamp Dragon, page(359), st(4), dx(11), iq(4), ht(9), will(9), per(10), speed(5), dodge(9), move(6), sm(-3), size(2' long), weight(3 lbs.), traits(Acute Taste and Smell 5; Bad Temper (9); Berserk (9); Burning Attack (see notes); Cast-Iron Stomach; Combat Reflexes; Discriminatory Smell; Flight (Winged, Move 9, costs 1 FP per second); Quadruped; Self-Destruct; Sharp Claws; Sharp Teeth; Short Legs.), skills(Innate Attack (Breath)-12), basecost(10), description(ST:4 DX:11 IQ:4 HT:9 Will:9 Per:10 Speed:5 Dodge:9 Move:6 SM:-3; 3 lbs. Traits: Acute Taste and Smell 5; Bad Temper (9); Berserk (9); Burning Attack (see notes); Cast-Iron Stomach; Combat Reflexes; Discriminatory Smell; Flight (Winged, Move 9, costs 1 FP per second). Skills: Innate Attack (Breath)-12. Notes: Hugely variable and with many odd features; just read pp. 359-360, okay?), baseweight(0), mods(Equipment, Animal), cat(Animals)

Donkey, page(B459), st(15), dx(10), iq(3), ht(11), will(11), per(12), speed(5.25), dodge(8), move(5), sm(+1), size(2 hexes), weight(500 lbs.), traits(Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite.), skills(), basecost(50), description(ST:15 DX:10 IQ:3 HT:11 Will:11 Per:12 Speed:5.25 Dodge:8 Move:5 SM:+1 (2 hexes); 500 lbs. Traits: Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite. Notes: Sturdy, but too small for an adult to ride.), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals)
Heavy Warhorse, page(B460), st(24), dx(9), iq(3), ht(12), will(11), per(12), speed(5.25), dodge(9), move(7), sm(+1), size(3 hexes), weight(1900 lbs.), traits(Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite, Bad Temper (12) and Enhanced Move 1 (Ground Speed 14).), skills(Brawling-10; Mount-12.), basecost(125), displaycost(250), description(ST:24 DX:9 IQ:3 HT:12 Will:11 Per:12 Speed:5.25 Dodge:9 Move:7 SM:+1 (3 hexes); 1900 lbs. Traits: Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite, Bad Temper (12) and Enhanced Move 1 (Ground Speed 14). Skills: Brawling-10; Mount-12. Notes: A heavy warhorse.), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals),
	initmods(Animal: War-Trained, *2, page(B459), group(Animal), shortname(War-Trained))
Large Mule, page(B460), st(22), dx(10), iq(3), ht(12), will(12), per(12), speed(5.5), dodge(8), move(6), sm(+1), size(2 hexes), weight(1400 lbs.), traits(Domestic Animal; Enhanced Move 1/2 (Ground Speed 9); Hooves; Quadruped; Weak Bite; sterile.), skills(), basecost(100), description(ST:22 DX:10 IQ:3 HT:12 Will:12 Per:12 Speed:5.5 Dodge:8 Move:6 SM:+1 (2 hexes); 1400 lbs. Traits: Domestic Animal; Enhanced Move 1/2 (Ground Speed 9); Hooves; Quadruped; Weak Bite; sterile. Notes: Sturdy work animal.), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals)
Racehorse, page(B460), st(20), dx(9), iq(3), ht(11), will(11), per(11), speed(5), dodge(8), move(9), sm(+1), size(3 hexes), weight(1100 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 18); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(200), description(ST:20 DX:9 IQ:3 HT:11 Will:11 Per:11 Speed:5 Dodge:8 Move:9 SM:+1 (3 hexes); 1100 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 18); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: Racing horse.), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals)
Oxen, page(B460), st(27), dx(8), iq(3), ht(12), will(12), per(10), speed(5), dodge(8), move(4), sm(+2), size(3 hexes), weight(2500 lbs.), traits(Domestic Animal; DR 2 (Skull only); Enhanced Move 1 (Ground Speed 8); Impaling Striker (Horns); Neutered; Quadruped; Weak Bite.), skills(), basecost(75), description(ST:27 DX:8 IQ:3 HT:12 Will:12 Per:10 Speed:5 Dodge:8 Move:4 SM:+2 (3 hexes); 2500 lbs. Traits: Domestic Animal; DR 2 (Skull only); Enhanced Move 1 (Ground Speed 8); Impaling Striker (Horns); Neutered; Quadruped; Weak Bite. Notes: Oxen are steers trained to work in the fields. They are hardier and easier to keep than horses.), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals)
Large Guard Dog, page(B457), st(9), dx(10), iq(4), ht(12), will(10), per(12), speed(5.75), dodge(8), move(10), sm(0), size(), weight(90 lbs.), traits(Chummy; Discriminatory Smell; Domestic Animal; Quadruped; Sharp Teeth.), skills(Brawling-13; Tracking-13 (bloodhounds have Tracking-15 or better!).), basecost(10), description(ST:9 DX:10 IQ:4 HT:12 Will:10 Per:12 Speed:5.75 Dodge:8 Move:10 SM:0; 90 lbs. Traits: Chummy; Discriminatory Smell; Domestic Animal; Quadruped; Sharp Teeth. Skills: Brawling-13; Tracking-13 (bloodhounds have Tracking-15 or better!). Notes: There are many breeds of dog; statistics can vary greatly. Cost ranges from neg. to $500+. A healthy, trained dog - even a mongrel - is always worth at least $10.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Large Falcon, page(B457), st(3), dx(14), iq(3), ht(10), will(10), per(12), speed(6), dodge(9), move(2), sm(-4), size(), weight(5 lbs.), traits(Acute Vision 3; Domestic (or Wild) Animal; Enhanced Move 1 (Air Speed 24); Flight (Winged; Air Move 12); Sharp Beak; Sharp Claws.), skills(Brawling-16.), basecost(0), description(ST:3 DX:14 IQ:3 HT:10 Will:10 Per:12 Speed:6 Dodge:9 Move:2 SM:-4; 5 lbs. Traits: Acute Vision 3; Domestic (or Wild) Animal; Enhanced Move 1 (Air Speed 24); Flight (Winged; Air Move 12); Sharp Beak; Sharp Claws. Skills: Brawling-16. Notes: These birds of prey are commonly used for sport hunting. A trained falcon – or one disturbed by a stranger – might attack a human. A diving falcon can reach Move 70!), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals)
House Cat, page(B456), st(4), dx(14), iq(4), ht(10), will(11), per(12), speed(6), dodge(10), move(10), sm(-3), size(), weight(10 lbs.), traits(Catfall; Combat Reflexes; Domestic Animal; Night Vision 5; Quadruped; Sharp Claws; Sharp Teeth.), skills(Brawling-16; Jumping-14; Stealth-14.), basecost(0), description(ST:4 DX:14 IQ:4 HT:10 Will:11 Per:12 Speed:6 Dodge:10 Move:10 SM:-3; 10 lbs. Traits: Catfall; Combat Reflexes; Domestic Animal; Night Vision 5; Quadruped; Sharp Claws; Sharp Teeth. Skills: Brawling-16; Jumping-14; Stealth-14. Notes: A domestic feline, kept as a pet, familiar, or mouser.), baseweight(0), mods(Equipment, Animal), cat(GURPS Basic Set, GURPS Basic Set - Animals)

<Discworld RPG, Discworld RPG - Animals - Equestrian Gear>
Bridle, techlvl(1), basecost(1.75), baseweight(3), description(TL:1 Notes: If this is the only gear you have, Riding skill rolls are possible at -2.), page(356), mods(Equipment), cat(Discworld RPG, Discworld RPG - Animals - Equestrian Gear)
Full Tack without stirrups, techlvl(2), basecost(7.50), baseweight(15), description(TL:2 Notes: Basic equipment for Riding skill.), page(356), mods(Equipment), cat(Discworld RPG, Discworld RPG - Animals - Equestrian Gear)
Full Tack with stirrups, techlvl(3), basecost(7.50), baseweight(15), description(TL:2 Notes: Basic equipment for Riding skill; permits fast mounting and hands-free riding.), page(356), mods(Equipment), cat(Discworld RPG, Discworld RPG - Animals - Equestrian Gear)
Horseshoes, techlvl(3), basecost(2.50), baseweight(4), description(TL:3 Notes: Per set. Without these, horses need a lot of care and will go lame at inconvenient moments.), page(356), mods(Equipment), cat(Discworld RPG, Discworld RPG - Animals - Equestrian Gear)

<GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment, GURPS Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear>
Disguise Kit, techlvl(5), basecost(10), baseweight(10), description(TL:5 Notes: +1 to Disguise skill.), page(B289), mods(Equipment), conditional(+1 to "SK:Disguise")
Handcuffs, techlvl(5), basecost(2), baseweight(0.5), description(TL:5 Notes: Gives -5 to Escape.), page(B289), mods(Equipment)

<GURPS Basic Set, GURPS Basic Set - Miscellaneous Equipment, GURPS Basic Set - Miscellaneous Equipment - Tools>
Knitting Needles, techlvl(3), basecost(0.25), baseweight(0), description(TL:3 Notes: Per pair.), page(B289), mods(Equipment)
Pickaxe, techlvl(2), basecost(15), baseweight(8), description(TL:2 Notes: Improves digging speed.), page(B289), mods(Equipment)
"Plow, Iron", techlvl(2), basecost(11), baseweight(120), description(TL:2 Notes: Works rough soils.), page(B289), mods(Equipment)
"Plow, Wooden", techlvl(1), basecost(2.75), baseweight(60), description(TL:1 Notes: Pulled by oxen.), page(B289), mods(Equipment)
Portable Carpentry Tool Kit, techlvl(1), basecost(15), baseweight(20), description(TL:1 Notes: Basic equipment for Carpentry skill.), page(B289), mods(Equipment)
Portable Armoury Tool Kit, techlvl(1), basecost(30), baseweight(20), description(TL:1 Notes: Basic equipment for Armoury skill.), page(B289), mods(Equipment)
Portable Explosives Tool Kit, techlvl(5), basecost(30), baseweight(20), description(TL:5 Notes: Basic equipment for Explosives skill.), page(B289), mods(Equipment)
Portable Mechanic Tool Kit, techlvl(5), basecost(30), baseweight(20), description(TL:5 Notes: Basic equipment for Mechanic skill.), page(B289), mods(Equipment)
Saw, techlvl(0), basecost(7.50), baseweight(3), description(TL:0 Notes: A lumberjack's tool, not a carpentry saw.), page(B289), mods(Equipment)
Spinning Wheel, techlvl(3), basecost(5), baseweight(40), description(TL:3 Notes: Produces yarn six times as fast.), page(B289), mods(Equipment)
Wheelbarrow, techlvl(2), basecost(3), baseweight(18), description(TL:2 Notes: Holds 350lbs Divide effective weight of load by 5.), page(B289), mods(Equipment)

<_Armour, Discworld RPG, Discworld RPG - Armour, Discworld RPG - Protection>
Very Light Armour, techlvl(1), basecost(7.50), baseweight(9), location(full suit, skull), dr(1), description(TL:1 DR:1 Locations: all Notes:A full suit of armour. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armour. You do not have to buy clothing or padding seperately, or account for its DR and weight.), page(156), cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Armour)
Light Armour, techlvl(1), basecost(17.50), baseweight(20), location(full suit, skull), dr(2), description(TL:1 DR:2 Locations: all Notes:A full suit of armour. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armour. You do not have to buy clothing or padding seperately, or account for its DR and weight.), page(156), cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Armour)
Medium Armour, techlvl(2), basecost(26), baseweight(30), location(full suit, skull), dr(3), description(TL:2 DR:3 Locations: all Notes:A full suit of armour. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armour. You do not have to buy clothing or padding seperately, or account for its DR and weight.), page(156), cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Armour)
Mail Armour, techlvl(2), basecost(50), baseweight(75), location(full suit, skull), dr(4), description(TL:2 DR:4 Locations: all Notes:A full suit of armour. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armour. You do not have to buy clothing or padding seperately, or account for its DR and weight.), page(156), cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Armour)
Plate Armour, techlvl(3), basecost(200), baseweight(90), location(full suit, skull), dr(6), description(TL:3 DR:6 Locations: all Notes:A full suit of armour. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armour. You do not have to buy clothing or padding seperately, or account for its DR and weight.), page(156), cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Armour)
Jousting Plate Armour, techlvl(3), basecost(320), baseweight(110), location(full suit, skull), dr(7), description(TL:3 DR:7 Locations: all Notes:A full suit of armour. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armour. You do not have to buy clothing or padding seperately, or account for its DR and weight.), page(156), cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Armour)
Shield, basecost(3), baseweight(15), dr(7/40), db(2), techlvl(1), page(155),
	cat(Military Gear, Discworld RPG, Discworld RPG - Armour), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	description(TL:1 DB:2 Dam:thr cr Reach:1 Parry:No ST:-- DR:7 HP:40 Skill:Shield Can be used offensively with a shield bash (see the Melee Weapon Table p. 151). Usually takes a few seconds to ready for use, but can be grabbed in a single second in emergencies. If strapped to the arm, leaves that hand free to hold stuff but not to wield weapons.)

<GURPS Basic Set, GURPS Basic Set - Vehicles, GURPS Basic Set - Vehicles - Ground>
Dogsled, basecost(20), techlvl(0), description(TL:0 Skill:Teamster ST/HP:27! Hnd/SR:0/2 HT:12c Move:6/6 Lwt:0.29 Load:0.14 SM:+1 Occ:1 DR:2 Range:F Locations: 14DER Notes: Needs dogs.), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Ground, GURPS Basic Set - Vehicles)
Chariot, basecost(16.50), techlvl(1), description(TL:1 Skill:Teamster ST/HP:22! Hnd/SR:0/2 HT:11c Move:4/9* Lwt:0.29 Load:0.2 SM:+1 Occ:1+1 DR:1 Range:F Locations: 2DE2W Notes: Needs Horses.), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Ground, GURPS Basic Set - Vehicles)
Wagon, basecost(34), techlvl(3), description(TL:3 Skill:Teamster ST/HP:35! Hnd/SR:-3/4 HT:12c Move:4/8* Lwt:0.84 Load:0.5 SM:+2 Occ:1 DR:2 Range:F Locations: 2DE4W Notes: Needs Horses.), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Ground, GURPS Basic Set - Vehicles)
Coach, basecost(5500), techlvl(4), description(TL:4 Skill:Teamster ST/HP:53! Hnd/SR:-2/3 HT:12c Move:4/9* Lwt:2.4 Load:1.2 SM:+3 Occ:1+9 DR:2 Range:F Locations: 4DO4W Notes: Needs Horses.), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Ground, GURPS Basic Set - Vehicles)
Locomotive, basecost(2250), techlvl(5), description(TL:5 Skill:Driving/TL (Locomotive) ST/HP:152 Hnd/SR:-2/5 HT:11 Move:1/35‡ Lwt:28 Load:0.2 SM:+5 Occ:1+1 DR:8 Range:700 Locations: 8W), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Ground, GURPS Basic Set - Vehicles)

<GURPS Basic Set, GURPS Basic Set - Vehicles, GURPS Basic Set - Vehicles - Watercraft>
Canoe, basecost(10), techlvl(0), description(TL:0 Skill:Boating/TL (Unpowered) ST/HP:23† Hnd/SR:+1/1 HT:12c Move:2/2 Lwt:0.3 Load:0.2 SM:+1 Occ:2 DR:2 Range:F Locations: O Draft:3), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Watercraft, GURPS Basic Set - Vehicles)
Penteconter, basecost(700), techlvl(2), description(TL:2 Skill:Shiphandling/TL (Ship) ST/HP:85† Hnd/SR:-4/3 HT:11c Move:1/5 Lwt:12.5 Load:7.5 SM:+8 Occ:55 DR:3 Range:F Locations: MO Draft:6 Notes: A "penteconter" is a war galley with a sail and a single bank of oars, favored by raiders and pirates. Using oars, with 50 rowers. Under sail, range is "--" and Move is 1/4 in a fair wind. Has a bronze ram, which adds +1 per die of collision damage.), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Watercraft, GURPS Basic Set - Vehicles)
Cog, basecost(1150), techlvl(3), description(TL:3 Skill:Shiphandling/TL (Ship) ST/HP:147† Hnd/SR:-3/4 HT:12c Move:0.1/4 Lwt:85 Load:60 SM:+7 Occ:18 DR:5 Range:-- Locations: M Draft:13 Notes: A "cog" (or "roundship") is a single-masted sailing ship. Weight includes ballast.), page(B464), mods(Equipment), isparent(yes), cat(GURPS Basic Set, GURPS Basic Set - Vehicles - Watercraft, GURPS Basic Set - Vehicles)

<Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG>
Axe, techlvl(0), break(0), basecost(3), baseweight(4), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Dwarf Weapons), mods(Equipment, Melee Quality, Cutting Class Quality), calcrange(yes),
	newmode(Swing, damage(sw+2), damtype(cut), reach(1), parry(0U), minst(11), notes([1]), skillused(SK:Axe/Mace, ST:DX-5)),
	newmode(Thrown, damage(sw+2), damtype(cut), acc(2), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(11), bulk(-3), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:sw+2 cut Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:11 Bulk:-3], [Mode:swing Dam:sw+2 cut Reach:1 Parry:0U ST:11 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 153)])
Club, techlvl(0), break(0), basecost(1.75), baseweight(5), page(151), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG, Troll Weapons), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), 
	newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0U), minst(12), skillused(SK:Axe/Mace, ST:DX-5)),
	description(TL:0, [Mode:swing Dam:sw+2 cr Reach:1 Parry:0U ST:12 Skill:Axe/Mace])
Hatchet, techlvl(0), break(0), basecost(2), baseweight(2), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Dwarf Weapons), mods(Equipment, Melee Quality, Cutting Class Quality), calcrange(yes),
	newmode(Swing, damage(sw), damtype(cut), reach(1), parry(0), minst(8), notes([1]), skillused(SK:Axe/Mace, ST:DX-5)),
	newmode(Thrown, damage(sw), damtype(cut), acc(1), rangehalfdam(ST*1.5), rangemax(ST*2.5), rof(1), shots(T(1)), minst(8), bulk(-2), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:sw cut Acc:1 Range:ST*1.5/ST*2.5 RoF:1 Shots:T(1) ST:8 Bulk:-2], [Mode:swing Dam:sw cut Reach:1 Parry:0 ST:8 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 153)])
Mace, techlvl(1), break(0), basecost(2.50), baseweight(5), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Swing, damage(sw+3), damtype(cr), reach(1), parry(0U), minst(12), notes([1]), skillused(SK:Axe/Mace, ST:DX-5)),
	newmode(Thrown, damage(sw+3), damtype(cr), acc(1), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(12), bulk(-4), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:2, [Mode: thrown Dam:sw+3 cr Acc:1 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:12 Bulk:-4], [Mode:swing Dam:sw+3 cr Reach:1 Parry:0U ST:12 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 153)])
Small Mace, techlvl(1), break(0), basecost(1.75), baseweight(3), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0U), minst(10), notes([1]), skillused(SK:Axe/Mace, ST:DX-5)),
	newmode(Thrown, damage(sw+2), damtype(cr), acc(1), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(10), bulk(-3), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:1, [Mode: thrown Dam:sw+2 cr Acc:1 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:10 Bulk:-3], [Mode:swing Dam:sw+2 cr Reach:1 Parry:0U ST:10 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Pick, techlvl(3), break(0), basecost(3.50), baseweight(3), page(151), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG, Dwarf Weapons), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), 
	newmode(Swing, damage(sw+1), damtype(imp), reach(1), parry(0U), minst(10), notes([2]), skillused(SK:Axe/Mace, ST:DX-5)),
	description(TL:2, [Mode:swing Dam:sw+2 cr Reach:1 Parry:0U ST:10 Skill:Axe/Mace Notes: [2] May get stuck - see p. 152.])
Large Truncheon, techlvl(0), break(0), basecost(0.25), baseweight(3), page(151), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cr), reach(1), parry(0), minst(10), skillused(SK:Broadsword, SK:Shortsword-2, ST:DX-5)),
	newmode(Thrust, damage(thr+1), damtype(cr), reach(1), parry(0), minst(10), skillused(SK:Broadsword, SK:Shortsword-2, ST:DX-5)),
	description(TL:0 [Mode:swing Dam:sw+1 cr Reach:1 Parry:0 ST:10 Skill:Broadsword], [Mode:thrust Dam:thr+1 cr Reach:1 Parry:0 ST:10 Skill:Broadsword])
Broadsword, techlvl(2), break(0), basecost(30), baseweight(3), page(151), mods(Equipment, Melee Quality, Sword Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cut), reach(1), parry(0), minst(10), skillused(SK:Broadsword, SK:Shortsword-2, ST:DX-5)),
	newmode(Thrust, damage(thr+2), damtype(imp), reach(1), parry(0), minst(10), skillused(SK:Broadsword, SK:Shortsword-2, ST:DX-5)),
	description(TL:2, [Mode:swing Dam:sw+1 cut Reach:1 Parry:0 ST:10 Skill:Broadsword], [Mode:thrust Dam:thr+2 imp Reach:1 Parry:0 ST:10 Skill:Broadsword])
Agatean Numknuts, techlvl(3), break(0), basecost(1), baseweight(2), page(151), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+1), damtype(cr), reach(1), parry(0U), minst(7), notes([3]), skillused(SK:Flail, ST:DX-6), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	itemnotes({Attempts to parry flails are at -4, and fencing weapons (''F'' parry) cannot parry at all! Attempts to block flails are at -2. Agatean Numknuts are small, and give half these penalties.}),
	description(TL:3, Dam:sw+1 cr Reach:1 Parry:0U ST:7 Skill:Flail Notes: [3] Attempts to parry flails are at -4, and fencing weapons (F parry) cannot parry at all! Attempts to block flails are at -2. Agatean Numknuts are small, and give half these penalties.)
Morningstar, techlvl(3), break(0), basecost(4), baseweight(6), page(151), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+3), damtype(cr), reach(1), parry(0U), minst(12), notes([4]), skillused(SK:Flail, ST:DX-6), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	itemnotes({Attempts to parry flails are at -4, and fencing weapons (''F'' parry) cannot parry at all! Attempts to block flails are at -2. Agatean Numknuts are small, and give half these penalties.}),
	description(TL:3, Dam:sw+3 cr Reach:1 Parry:0U ST:12 Skill:Flail Notes: [4] Attempts to parry flails are at -4, and fencing weapons (F parry) cannot parry at all! Attempts to block flails are at -2. Agatean Numknuts are small, and gives half these penalties.)
Large Knife, techlvl(0), break(0), basecost(2), baseweight(1), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), mods(Equipment, Melee Quality, Sword Class Quality), calcrange(yes),
	newmode(Swing, damage(sw-2), damtype(cut), reach(C,1), parry(-1), minst(6), skillused(SK:Knife, ST:DX-4)),
	newmode(Thrust, damage(thr), damtype(imp), reach(C), parry(-1), minst(6), notes([1]), skillused(SK:Knife, ST:DX-4)),
	newmode(Thrown, damage(thr), damtype(imp), acc(0), rangehalfdam(ST*0.8), rangemax(ST*1.5), rof(1), shots(T(1)), minst(6), bulk(-2), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:thr imp Acc:0 Range:ST*0.8/ST*1.5 RoF:1 Shots:T(1) ST:6 Bulk:-2], [Mode:swing Dam:sw-2 cut Reach:C,1 Parry:-1 ST:6 Skill:Knife], [Mode:thrust Dam:thr imp Reach:C Parry:-1 ST:6 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 153)])
Small Knife, techlvl(0), break(0), basecost(1.50), baseweight(0.5), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), calcrange(yes),
	newmode(Swing, damage(sw-3), damtype(cut), reach(C,1), parry(-1), minst(5), skillused(SK:Knife, ST:DX-4)),
	newmode(Thrust, damage(thr-1), damtype(imp), reach(C), parry(-1), minst(5), notes([1]), skillused(SK:Knife, ST:DX-4)),
	newmode(Thrown, damage(thr-1), damtype(imp), acc(0), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(-1), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:thr-1 imp Acc:0 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:-1], [Mode:swing Dam:sw-3 cut Reach:C,1 Parry:-1 ST:5 Skill:Knife], [Mode:thrust Dam:thr-1 imp Reach:C Parry:-1 ST:5 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 153)])
Dagger, techlvl(1), break(0), basecost(1), baseweight(0.25), page(151, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), mods(Equipment, Melee Quality, Sword Class Quality), calcrange(yes),
	newmode(Thrust, damage(thr-1), damtype(imp), reach(C), parry(-1), minst(5), notes([1]), skillused(SK:Knife, ST:DX-4)),
	newmode(Thrown, damage(thr-1), damtype(imp), acc(0), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(-1), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:1, [Mode: thrown Dam:thr-1 imp Acc:0 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:-1], [Mode:thrust Dam:thr-1 imp Reach:C Parry:-1 ST:5 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 153)])
Hatpin, techlvl(2), break(0), basecost(0.30), baseweight(0.10), page(151), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Improvised Weapons), mods(Equipment, Melee Quality, Sword Class Quality),
	newmode(Thrust, damage(thr-2), damtype(imp), reach(C), parry(-2), minst(2), notes([5]), skillused(SK:Knife, ST:DX-4)),
	description(TL:2 [Mode:thrust Dam:thr-2 imp Reach:C Parry:-2 ST:2 Skill:Knife Notes: [5].])
Small Wooden Stake, techlvl(0), break(0), basecost(2), baseweight(1), page(150), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Improvised Weapons), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Thrust, damage(thr), armourdivisor(0.5), damtype(imp), reach(C), parry(-1), minst(6), notes([1]), skillused(SK:Knife, ST:DX-4)),
	newmode(Thrown, damage(thr), armourdivisor(0.5), damtype(imp), acc(0), rangehalfdam(ST*0.8), rangemax(ST*1.5), rof(1), shots(T(1)), minst(6), bulk(-2), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:thr(0.5) imp Acc:0 Range:ST*0.8/ST*1.5 RoF:1 Shots:T(1) ST:5 Bulk:-2], [Mode:thrust Dam:thr(0.5) imp Reach:C Parry:-1 ST:6 Skill:Knife Notes: [1] Double target's DR. Can be thrown. See p. 150.])
Halberd, techlvl(3), break(0), basecost(7.50), baseweight(12), page(151), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing/cut, damage(sw+5), damtype(cut), reach(2,3*), parry(0U), minst(13‡), skillused(SK:Polearm, ST:DX-5)),
	newmode(Swing/imp, damage(sw+4), damtype(imp), reach(2,3*), parry(0U), minst(13‡), notes([2]), skillused(SK:Polearm, ST:DX-5)),
	newmode(Thrust, damage(thr+3), damtype(imp), reach(1-3*), parry(0U), minst(12†), skillused(SK:Polearm, ST:DX-5)),
	itemnotes({}|{May get stuck; see p. 152.}|{}),
	description(TL:3, [Mode:swing/cut Dam:sw+5 cut Reach:2,3* Parry:0U ST:13‡ Skill:Polearm Notes: Requires two hands; becomes unready after attack.], [Mode:swing/imp Dam:sw+4 imp Reach:2,3* Parry:0U ST:13‡ Skill:Polearm Notes: [2] Requires two hands; becomes unready after attack. May get stuck; see p. 152.], [Mode:thrust Dam:thr+3 imp Reach:1-3* Parry:0U ST:12† Skill:Polearm Notes: Requires two hands.])
Short Glaive, techlvl(3), break(0), basecost(4), baseweight(6), page(151), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+2), damtype(cut), reach(1,2*), parry(0U), minst(9‡), skillused(SK:Polearm, ST:DX-5)),
	newmode(Thrust, damage(thr+3), damtype(imp), reach(1,2*), parry(0), minst(9†), skillused(SK:Polearm, ST:DX-5)),
	description(TL:3, [Mode:swing Dam:sw+2 cut Reach:1,2* Parry:0U ST:9‡ Skill:Polearm Notes: Requires two hands; becomes unready after attack.], [Mode:thrust Dam:thr+3 imp Reach:1,2* Parry:0 ST:9† Skill:Polearm Notes: Requires two hands.])
Rapier, techlvl(4), break(0), basecost(25), baseweight(2.75), page(151), mods(Equipment, Melee Quality, Sword Class Quality), damage(thr+1), damtype(imp), reach(1,2), parry(0F), minst(9), skillused(SK:Rapier, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	description(TL:4, Dam:thr+1 imp Reach:1,2 Parry:0F ST:9 Skill:Rapier)
Small Truncheon, techlvl(0), break(0), basecost(1), baseweight(1), page(151), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw), damtype(cr), reach(1), parry(0), minst(6), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2)),
	newmode(Thrust, damage(thr), damtype(cr), reach(1), parry(0), minst(6), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2)),
	description(TL:0, [Mode:swing Dam:sw cr Reach:1 Parry:0 ST:6 Skill:Shortsword], [Mode:thrust Dam:thr cr Reach:1 Parry:0 ST:6 Skill:Shortsword])
Shortsword, techlvl(1), break(0), basecost(20), baseweight(2), page(151), mods(Equipment, Melee Quality, Sword Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw), damtype(cut), reach(1), parry(0), minst(8), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2)),
	newmode(Thrust, damage(thr+1), damtype(imp), reach(1), parry(0), minst(8), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2)),
	description(TL:2, [Mode:swing Dam:sw cut Reach:1 Parry:0 ST:8 Skill:Shortsword], [Mode:thrust Dam:thr+1 imp Reach:1 Parry:0 ST:8 Skill:Shortsword])
Sickle Sword, techlvl(2), break(0), basecost(20), baseweight(2), page(151), mods(Equipment, Melee Quality, Sword Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cut), reach(1), parry(0), minst(10), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2)),
	newmode(Thrust, damage(thr-2), damtype(imp), reach(1), parry(0), minst(10), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2)),
	description(TL:2, [Mode:swing Dam:sw+1 cut Reach:1 Parry:0 ST:10 Skill:Shortsword], [Mode:thrust Dam:thr-2 imp Reach:1 Parry:0 ST:10 Skill:Shortsword])
Smallsword, techlvl(4), break(0), basecost(20), baseweight(1.5), page(152), mods(Equipment, Melee Quality, Sword Class Quality), damage(thr+1), damtype(imp), reach(1), parry(0F), minst(5), skillused(SK:Smallsword, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	description(TL:4, Dam:thr+1 imp Reach:1 Parry:0F ST:5 Skill:Smallsword)
Spear, techlvl(0), break(0), basecost(2), baseweight(4), page(152, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(1H Thrust, damage(thr+2), damtype(imp), reach(1*), parry(0), minst(9), notes([1]), skillused(SK:Spear, ST:DX-5)),
	newmode(2H Thrust, damage(thr+3), damtype(imp), reach(1,2*), parry(0), minst(9†), skillused(SK:Spear, ST:DX-5)),
	newmode(Thrown, damage(thr+3), damtype(imp), acc(2), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), minst(9), bulk(-3), shots(T(1)), skillused(SK:Thrown Weapon (Spear), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:thr+3 imp Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:9 Bulk:-3], [Mode:one-handed thrust Dam:thr+2 imp Reach:1* Parry:0 ST:9 Skill:Spear Notes: [1] Can be thrown; see Muscle Powered Ranged Weapon Table (p. 153)], [Mode:two-handed thrust Dam:thr+3 imp Reach:1,2* Parry:0 ST:9† Skill:Spear Notes: Requires two hands.])
Javelin, techlvl(1), break(0), basecost(1.50), baseweight(2), page(152, 153), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Thrust, damage(thr+1), damtype(imp), reach(1), parry(0), minst(6), notes([1]), skillused(SK:Spear, ST:DX-5)),
	newmode(Thrown, damage(thr+1), damtype(imp), acc(3), rangehalfdam(ST*1.5), rangemax(ST*2.5), rof(1), shots(T(1)), minst(6), bulk(-4), skillused(SK:Thrown Weapon (Spear), ST:DX-4)),
	description(TL:1, [Mode: thrown Dam:thr+1 imp Acc:3 Range:ST*1.5/ST*2.5 RoF:1 Shots:T(1) ST:6 Bulk:-4], [Mode:thrust Dam:thr+1 imp Reach:1 Parry:0 ST:6 Skill:Spear Notes: [1] Can be thrown; see Muscle Powered Ranged Weapon Table (p. 153)])
Large Wooden Stake, techlvl(0), break(0), basecost(2), baseweight(4), page(150), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Improvised Weapons), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(1H Thrust, damage(thr), armourdivisor(0.5), damtype(imp), reach(1*), parry(0), minst(9), notes([1]), skillused(SK:Spear, ST:DX-5)),
	newmode(2H Thrust, damage(thr+1), armourdivisor(0.5), damtype(imp), reach(1,2*), parry(0), minst(9†), skillused(SK:Spear, ST:DX-5)),
	newmode(Thrown, damage(thr+1), damtype(imp), acc(2), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), minst(9), bulk(-3), shots(T(1)), skillused(SK:Thrown Weapon (Spear), ST:DX-4)),
	description(TL:0, [Mode: thrown Dam:thr+1(0.5) imp Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:9 Bulk:-3], [Mode:one-handed thrust Dam:thr(0.5) imp Reach:1* Parry:0 ST:9 Skill:Spear Notes: [1] Can be thrown.], [Mode:two-handed thrust Dam:thr+3(0.5) imp Reach:1,2* Parry:0 ST:9† Skill:Spear Notes: Requires two hands.])
Pitchfork, techlvl(0), break(0), basecost(2), baseweight(4), page(150), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Improvised Weapons), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(2H Thrust, damage(thr+3), armourdivisor(0.5), damtype(imp), reach(1,2*), parry(0), minst(9†), skillused(SK:Spear-2, ST:DX-7)),
	description(TL:0, [Mode:two-handed thrust Dam:thr+3(0.5) imp Reach:1,2* Parry:0 ST:9† Skill:Spear Notes: -1 to target's Dodge, +1 to target's Block or Parry.])
Quarterstaff, techlvl(0), break(0), basecost(0.50), baseweight(4), page(152), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Staff swing, damage(sw+2), damtype(cr), reach(1,2), parry(+2), minst(7†), skillused(SK:Staff, ST:DX-5)),
	newmode(Staff thrust, damage(thr+2), damtype(cr), reach(1,2), parry(+2), minst(7†), skillused(SK:Staff, ST:DX-5)),
	description(TL:0 [Mode:staff swing Dam:sw+2 cr Reach:1,2 Parry:+2 ST:7† Skill:Staff Notes: Requires two hands.], [Mode:staff thrust Dam:thr+2 cr Reach:1,2 Parry:+2 ST:7† Skill:Staff Notes: Requires two hands.])
Big Club, techlvl(0), break(0), basecost(4), baseweight(12), page(152), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+4), damtype(cr), reach(1,2*), parry(0U), minst(13‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Troll Weapons),
	description(TL:0, Dam:sw+4 cr Reach:1,2* Parry:0U ST:13‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Very Big Club, techlvl(0), break(0), basecost(5), baseweight(15), page(152), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+5), damtype(cr), reach(1,2*), parry(0U), minst(16‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Troll Weapons),
	description(TL:0, Dam:sw+5 cr Reach:1,2* Parry:0U ST:16‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Huge Club, techlvl(0), break(0), basecost(7), baseweight(21), page(152), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+7), damtype(cr), reach(1,2*), parry(0U), minst(23‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Troll Weapons),
	description(TL:0, Dam:sw+7 cr Reach:1,2* Parry:0U ST:23‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Monster Club, techlvl(0), break(0), basecost(9), baseweight(27), page(152), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+9), damtype(cr), reach(1,2*), parry(0U), minst(29‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, Troll Weapons),
	description(TL:0, Dam:sw+9 cr Reach:1,2* Parry:0U ST:29‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Great Axe, techlvl(1), break(0), basecost(5), baseweight(8), page(152), mods(Equipment, Melee Quality, Cutting Class Quality), damage(sw+3), damtype(cut), reach(1,2*), parry(0U), minst(12‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	description(TL:1, Dam:sw+3 cut Reach:1,2* Parry:0U ST:12‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Scythe, techlvl(1), break(0), basecost(0.75), baseweight(5), page(152), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing cut, damage(sw+2), damtype(cut), reach(1), parry(0U), minst(11‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5)),
	newmode(Swing impale, damage(sw), damtype(imp), reach(1), parry(0U), minst(11‡), notes([2]), skillused(SK:Two-Handed Axe/Mace, ST:DX-5)),
	itemnotes({}|{May get stuck; see p. 152.}),
	description(TL:1, [Mode:swing1 Dam:sw+2 cut Reach:1 Parry:0U ST:11‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.], [Mode:swing2 Dam:sw imp Reach:1 Parry:0U ST:11‡ Skill:Two-Handed Axe/Mace Notes: [2] May get stuck; see p. 152. Requires two hands; becomes unready after attack.])
Greatsword, techlvl(3), break(0), basecost(45), baseweight(7), page(152), mods(Equipment, Melee Quality, Sword Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+3), damtype(cut), reach(1,2), parry(0), minst(12†), skillused(SK:Two-Handed Sword, ST:DX-5)),
	newmode(Thrust, damage(thr+3), damtype(imp), reach(2), parry(0), minst(12†), skillused(SK:Two-Handed Sword, ST:DX-5)),
	description(TL:3 [Mode:swing Dam:sw+3 cut Reach:1,2 Parry:0 ST:12† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:thrust Dam:thr+2 cr Reach:2 Parry:0 ST:12† Skill:Two-Handed Sword Notes: Requires two hands.])

Brass Knuckles, techlvl(1), break(0), basecost(0.50), baseweight(0.25), page(178), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG, Brawling Weapons),
	damage(thr + _
					@max(_
						@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
						@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
						@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
						)_
				), damtype(cr), reach(C), parry(0), minst(), notes([1]), skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX),
	itemnotes({Brawling increases all unarmed damage; Claws and Karate improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boxing improves punching damage.}),
	description(TL:1 Dam:thr cr Reach:C Parry:0 ST:-- Skill:Boxing, Brawling, Karate, DX Notes: [1] Brawling increases all unarmed damage; claws and Karate improve damage with punches and kicks (claws don't affect damage with brass knuckles or boots); Boxing improves punching damage. Calculated damage takes into account these skill bonuses.)
Blackjack, techlvl(1), break(0), basecost(1), baseweight(1), page(178), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(thr), damtype(cr), reach(C), parry(0), minst(7), skillused(SK:Brawling, ST:DX), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG, Brawling Weapons),
	itemnotes({Brawling increases all unarmed damage; Claws and Karate improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boxing improves punching damage.}),
	description(TL:1 Dam:thr cr Reach:C Parry:0 ST:7 Skill:Brawling, DX)
Sap, techlvl(1), break(0), basecost(1), baseweight(1), page(178), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(thr), damtype(cr), reach(C), parry(No), minst(7), skillused(SK:Brawling, ST:DX), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG, Brawling Weapons),
	itemnotes({Brawling increases all unarmed damage; Claws and Karate improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boxing improves punching damage.}),
	description(TL:1 Dam:thr cr Reach:C Parry:No ST:7 Skill:Brawling, DX)
Boots, techlvl(2), break(0), basecost(4), baseweight(3), page(178), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(thr+1), damtype(cr), reach(C,1), parry(No), minst(), skillused(SK:Brawling-2, SK:Karate-2, ST:DX-2), cat(Discworld RPG, Discworld RPG - Melee Weapons, _Melee Weapons, _Melee Weapons - Discworld RPG, Brawling Weapons, Improvised Weapons),
	itemnotes({Brawling increases all unarmed damage; Claws and Karate improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boxing improves punching damage.}),
	description(TL:2 Dam:thr+1 cr Reach:C,1 Parry:No ST:-- Skill:Brawling-2, Karate-2, DX-2. Give at least DR 2 on the feet, if it matters.)

<Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG>
Boomerang Croissant, basecost(1), baseweight(1), mode(thrown), damage(sw), damtype(cr), techlvl(2), acc(2), calcrange(yes), rangehalfdam(ST*6), rangemax(ST*10), rof(1), shots(T(1)), minst(6), bulk(-2), skillused(SK:Thrown Weapon (Stick), ST:DX-4), page(153), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Dwarf Weapons),
	description(TL:2, Dam:sw cr Acc:2 Range:ST*6/ST*10 RoF:1 Shots:T(1) ST:6 Bulk:0 Skill:Thrown Weapon (Stick)), mods(Equipment, Cutting Class Quality)
Throwing Star, basecost(0.15), baseweight(0.1), mode(thrown), damage(thr-1), damtype(cut), techlvl(3), acc(1), calcrange(yes), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(0), skillused(SK:Thrown Weapon (Throwing Star), ST:DX-4), page(153), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	description(TL:3, Dam:thr-1 cut Acc:1 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:0 Skill:Thrown Weapon (Throwing Star)), mods(Equipment, Cutting Class Quality)
Blowpipe, basecost(1.50), baseweight(1), damage(1d-3), damtype(pi-), techlvl(0), acc(1), calcrange(yes), rangehalfdam(), rangemax(ST*4), rof(1), shots(1(2)), minst(2), bulk(-6), skillused(SK:Blowpipe, ST:DX-6), page(154), notes([1]), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({Follow-up drug or poison attack if damage penetrates DR. Effects depend on the poison used.},{Requires two hands to ready, but only one hand to attack.},{A dart for a blowpipe costs $0.05.}),
	description(TL:0, Dam:1d-3 pi- Acc:1 Range:ST*4 RoF:1 Shots:1(2) ST:2 Bulk:-6 Skill:Blowpipe Notes: [1] A dart for a blowpipe costs $0.05. Follow-up drug or poison attack if damage penetrates DR. Effects depend on the poison used. Requires two hands to ready, but only one hand to attack.), mods(Equipment, Bow Quality)
Longbow (ST%choiceList%), weaponst(%choice%), basecost(10), baseweight(3), damage(@thr(me::weaponst)+2), damtype(imp), techlvl(0), acc(3), calcrange(yes), rangehalfdam(me::weaponst*15), rangemax(me::weaponst*20), rof(1), shots(1(2)), minst(11†), bulk(-8), skillused(SK:Bow, ST:DX-5), page(154), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.}),
	description(TL:0, Dam:thr+2 imp Acc:3 Range:ST*15/ST*20 RoF:1 Shots:1(2) ST:11† Bulk:-8 Skill:Bow), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list
Short Bow (ST%choiceList%), weaponst(%choice%), basecost(2.50), baseweight(2), damage(@thr(me::weaponst)), damtype(imp), techlvl(0), acc(1), calcrange(yes), rangehalfdam(me::weaponst*10), rangemax(me::weaponst*15), rof(1), shots(1(2)), minst(7†), bulk(-6), skillused(SK:Bow, ST:DX-5), page(154), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.}),
	description(TL:0 Dam:thr imp Acc:1 Range:ST*10/ST*15 RoF:1 Shots:1(2) ST:7† Bulk:-6 Skill:Bow), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list
Composite Bow (ST%choiceList%), weaponst(%choice%), basecost(45), baseweight(4), damage(@thr(me::weaponst)+3), damtype(imp), techlvl(1), acc(3), calcrange(yes), rangehalfdam(me::weaponst*20), rangemax(me::weaponst*25), rof(1), shots(1(2)), minst(10†), bulk(-7), skillused(SK:Bow, ST:DX-5), page(154), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.}),
	description(TL:1, Dam:thr+3 imp Acc:3 Range:ST*20/ST*25 RoF:1 Shots:1(2) ST:10† Bulk:-7 Skill:Bow), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list
Crossbow (ST%choiceList%), weaponst(%choice%), basecost(7.50), baseweight(6), damage(@thr(me::weaponst)+4), damtype(imp), techlvl(2), acc(4), calcrange(yes), rangehalfdam(me::weaponst*20), rangemax(me::weaponst*25), rof(1), shots(1(4)), minst(7†), bulk(-6), skillused(SK:Crossbow, ST:DX-4), page(154), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.}),
	description(TL:2, Dam:thr+4 imp Acc:4 Range:ST*20/ST*25 RoF:1 Shots:1(4) ST:7† Bulk:-6 Skill:Crossbow), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Crossbow ST), text(A Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list
Troll Crossbow, weaponst(%choice%), basecost(10), baseweight(12), damage(@thr(me::weaponst)+5), damtype(imp), techlvl(2), acc(4), calcrange(yes), rangehalfdam(me::weaponst*22), rangemax(me::weaponst*28), rof(1), shots(1(4)), minst(16†), bulk(-9), skillused(SK:Crossbow, ST:DX-4), page(154), notes([2]), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Troll Weapons),
	itemnotes({Adapted from small siege engine designs by the Ankh-Morpork City Watch - not normally within troll technological capacity},{An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.}),
	description(TL:2, Dam:thr+5 imp Acc:4 Range:ST*22/ST*28 RoF:1 Shots:1(4) ST:16† Bulk:-9 Skill:Crossbow Notes: [2]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Crossbow ST), text(A Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list(" 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120")))
Pistol Crossbow (ST%choiceList%), weaponst(%choice%), basecost(7.50), baseweight(4), damage(@thr(me::weaponst)+2), damtype(imp), techlvl(3), acc(1), calcrange(yes), rangehalfdam(me::weaponst*15), rangemax(me::weaponst*20), rof(1), shots(1(4)), minst(7), bulk(-4), skillused(SK:Crossbow, ST:DX-4), page(154), notes([1]), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({Requires two hands to ready, but only one hand to attack.},{An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.}),
	description(TL:3, Dam:thr+2 imp Acc:1 Range:ST*15/ST*20 RoF:1 Shots:1(4) ST:7 Bulk:-4 Skill:Crossbow Notes: [1] Requires two hands to ready, but only one hand to attack.), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Crossbow ST), text(A Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))
Spring Gun (ST%choiceList%), weaponst(%choice%), basecost(20), baseweight(5), damage(@thr(me::weaponst)+4), damtype(imp), techlvl(4), acc(3), calcrange(yes), rangehalfdam(me::weaponst*20), rangemax(me::weaponst*25), rof(1), shots(1(4)), minst(10†), bulk(-4), skillused(SK:Crossbow, ST:DX-4), page(154), notes([1,3]), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.},{A metal tube with an integral spring and cocking mechanism - very illegal in Ankh-Morpork.}),
	description(TL:2, Dam:thr+4 imp Acc:3 Range:ST*20/ST*25 RoF:1 Shots:1(4) ST:10† Bulk:-4 Skill:Crossbow Notes: [1,3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Spring Gun ST), text(A crossbow-style weapon must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list
Goat's Foot, basecost(2.50), baseweight(2), damage(), damtype(), techlvl(3), acc(), rangehalfdam(), rangemax(), rof(), shots((20)), minst(7†), bulk(), skillused(SK:Crossbow, ST:DX-4), page(154), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	itemnotes({Cocking lever to reload a high-ST crossbow or prodd. You can reload a weapon up to 4 ST over your own with 20 one-second Ready maneuvers.}),
	description(TL:3, Dam: Acc: Range: RoF: Shots:(20) ST:7† Bulk: Skill:Crossbow Cocking lever to reload a high-ST crossbow. You can reload a weapon up to 4 ST over your own with 20 one-second Ready maneuvers.), mods(Equipment)
Sling, basecost(1), baseweight(0.5), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG),
	newmode(Stone, damage(sw), damtype(pi), techlvl(0), acc(0), calcrange(yes), rangehalfdam(ST*6), rangemax(ST*10), rof(1), shots(1(2)), minst(6), bulk(-4), skillused(SK:Sling, ST:DX-6), notes([1,4])),
	newmode(Lead bullet, damage(sw+1), damtype(pi), techlvl(0), acc(0), calcrange(yes), rangehalfdam(ST*12), rangemax(ST*20), rof(1), shots(1(2)), minst(6), bulk(-4), skillused(SK:Sling, ST:DX-6), notes([1,4])),
	itemnotes({Requires two hands to ready, but only one hand to attack.},{An arrow or bolt for a bow or crossbow is $0.10. Darts for blowpipes and lead pellets for slings are $0.05 for a bag of 10. Sling stones are free.},{Can fire stones (TL0) or lead bullets (TL2).}),
	page(154), description(TL:0, Dam:sw pi Acc:0 Range:ST*6/ST*10 RoF:1 Shots:1(2) ST:6 Bulk:-4 Skill:Sling Notes: [1,4] Requires two hands to ready, but only one hand to attack. Can fire stones (TL0) or lead pellets (TL2). Lead bullets give +1 damage and double range.), mods(Equipment)
Arrow, techlvl(0), baseweight(0.1), basecost(0.10), page(155), mods(Equipment, Crushing/Imp Class Quality, Arrow), uses(count*1), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Ammunition)
Crossbow Bolt, techlvl(2), baseweight(0.06), basecost(0.10), page(155), mods(Equipment, Crushing/Imp Class Quality, Arrow), uses(count*1), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Ammunition)
Blowpipe Dart, techlvl(0), baseweight(0.05), basecost(0.005), page(155), mods(Equipment, Crushing/Imp Class Quality, Arrow), uses(count*1), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Ammunition)
Sling Stone, techlvl(0), baseweight(0.05), basecost(0), page(155), mods(Equipment), uses(count*1), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Ammunition)
Sling Lead Pellet, techlvl(2), baseweight(0.05), basecost(0.005), page(155), mods(Equipment), uses(count*1), cat(Discworld RPG, Discworld RPG - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Discworld RPG, Ammunition)
	
<Artillery, Discworld RPG Bonus Items>
Agatean Barking Dog, basecost(1000), baseweight(3200), damage(15d), damtype(pi++), techlvl(4), acc(1), calcrange(yes), rangehalfdam(220), rangemax(1900), rof(1), shots(1(60)), minst(45M†), bulk(-13), skillused(SK:Gunner (Cannon), ST:DX-4), page(), mods(Equipment)
Scorpion, basecost(250), baseweight(110), damage(5d), damtype(imp), techlvl(2), acc(3), calcrange(yes), rangehalfdam(415), rangemax(520), rof(1), shots(1(30)), minst(45M†), bulk(-10), skillused(SK:Gunner (Catapult), ST:DX-4), page(), mods(Equipment)
Cannonball and Powder, techlvl(4), baseweight(10), basecost(50), page(), mods(Equipment), uses(count*1), cat(Ammunition)
Scorpion Bolt, techlvl(2), baseweight(2), basecost(3.50), page(), mods(Equipment, Crushing/Imp Class Quality, Arrow), uses(count*1), cat(Ammunition)

<Basic Set, Basic Set - Natural Attacks>
//^^^^ Skillused()

_New Ranged Innate Attack, noresync(yes),
		basecost(0),
		baseweight(0),
		damage([damage]),
		damtype([damagetype]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst(*),
		bulk(*),
		rcl([recoil]),
		skillused(Innate Attack),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this attack:", name, " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the damage of this attack (e.g. 6dx5). DO NOT include armour divisors in this field (use the damage type field instead):", "[damage]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the damage type of this attack (e.g. pi+ or (10)cut):", "[damagetype]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the accuracy of this attack:", "[accuracy]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the half damage range of this attack:", "[halfdamagerange]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the maximum range of this attack:", "[maxrange]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the rate of fire of this attack:", "[rateoffire]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the shots for this attack:", "[shots]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the recoil of this attack:", "[recoil]", " ", "New Ranged Innate Attack"),
		#edit)

_New Melee Innate Attack, noresync(yes),
		basecost(0),
		baseweight(0),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		reach([reach]),
		parry([parry]),
		minst(*),
		skillused(Innate Attack),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this hand attack:", name, " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the damage of this hand attack (e.g. 6dx5, sw+1, or thr-1). DO NOT include armour divisors in this field (use the damage type field instead):", "[damage]", " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the damage type of this hand attack (e.g. pi+ or (10)cut):", "[damagetype]", " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the reach for this hand attack:", "[reach]", " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the parry for this hand attack; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, 0, or -1):", "[parry]", "0", "New Melee Weapon"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#edit)

************************************************************************************************************************
* EQUIPMENT MODIFIERS
[MODIFIERS]
************************************************************************************************************************
<Animal>
Animal: Training, *1/*1, page(B459), group(Animal), displaycost(varies), level(2), levelnames(IQ 2, IQ 3, IQ 4, IQ5), upto(owner::iq - 1), shortname(Training),
	formula(_
			@indexedvalue(me::level,
							@if(owner::iq < 3 THEN 1 ELSE 1/3),
							1, 1.5, 2_
							)_
			), forceformula(yes)
Animal: Increased ST, *1/*1, displaycost(varies), page(B459), group(Animal), shortname(Increased ST),
	formula(_
			@int(100 * (owner::st + me::level) / owner::st)/100 _
			), forceformula(yes)
Animal: Increased Move, *2/*4, displaycost(varies), page(B459), shortname(Increased Move),
	formula(_
			2 ^ me::level _
			), forceformula(yes)
Animal: War-Trained, *2, page(B459), group(Animal), shortname(War-Trained)
			
<Equipment>
_Free, *0
_New Modifier, [cost], gives([weight] to owner::baseweight),
	x(_
		#InputToTagReplace("Please enter the name of this modifier:", name, " ", "New Modifier"),
		#InputReplace("Enter the change in cost of the equipment; this can be numerical (e.g. +3 or -50), a multiplier (*0.5), or a percentage (e.g. +50% or -25%):", "[cost]", +0, "New Modifier"),
		#InputReplace("Enter the change in weight of the equipment; this can be numerical (e.g. +3 or -0.5), or a multiplier (*0.5), but *NOT* a percentage:", "[weight]", +0, "New Modifier") _
	)

Cost: Reduced Cost, *0.99/*0.98, upto(99), tier(1), group(Equipment), shortname(Reduced Cost),
	levelnames([-0%],-1%,-2%,-3%,-4%,-5%,-6%,-7%,-8%,-9%,-10%,-11%,-12%,-13%,-14%,-15%,-16%,-17%,-18%,-19%,-20%,-21%,-22%,-23%,-24%,-25%,-26%,-27%,-28%,-29%,-30%,-31%,-32%,-33%,-34%,-35%,-36%,-37%,-38%,-39%,-40%,-41%,-42%,-43%,-44%,-45%,-46%,-47%,-48%,-49%,-50%,-51%,-52%,-53%,-54%,-55%,-56%,-57%,-58%,-59%,-60%,-61%,-62%,-63%,-64%,-65%,-66%,-67%,-68%,-69%,-70%,-71%,-72%,-73%,-74%,-75%,-76%,-77%,-78%,-79%,-80%,-81%,-82%,-83%,-84%,-85%,-86%,-87%,-88%,-89%,-90%,-91%,-92%,-93%,-94%,-95%,-96%,-97%,-98%,-99%)

Cost: Multiplied Cost, *1.01/*1.02, tier(1), group(Equipment), shortname(Multiplied Cost)

Cost: Increased Cost, +1/+2, tier(1), group(Equipment), level([level]), shortname(Increased Cost),
	x(_
		#InputReplace("Please enter the level (cost) of this modifier:", "[level]", "1", "Increased Cost") _
	)

Cost: Decreased Cost, -1/-2, tier(1), group(Equipment), level([level]), shortname(Decreased Cost),
	x(_
		#InputReplace("Please enter the level (cost) of this modifier:", "[level]", "1", "Decreased Cost") _
	)

Equipment: Higher TL Equipment, *2/*4/*8, upto(12 - ST:Tech Level::basevalue), page(B27), forceformula(yes), formula(2 ^ me::level), shortname(Higher TL Equipment)

_New Melee Attack Mode, 0, group(Beams), noresync(yes),
	addmode(_New Melee Attack Mode, 
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armour divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, 0, or -1):", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

<Ammunition>
Composition: Silver (TL4+), *50, page(B275), group(Ammunition), shortname(Silver)

<Shield>
_Remove Attack Mode ([Mode]), +0, group(Shield), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

Shield: Gives Defense Bonus to Dodge/Block/Parry, +0, gives(=+owner::chardb to ST:Dodge, =+owner::chardb to ST:Block, =+owner::chardb to ST:Parry), group(Shield), shortname(Gives DB)
Shield: Conditional Defense Bonus to Dodge/Block/Parry, +0, conditional(=+owner::chardb to ST:Dodge, =+owner::chardb to ST:Block, =+owner::chardb to ST:Parry), group(Shield), shortname(Conditional DB)
Shield: Spike, +20, gives(_
						+5 to owner::baseweight,
						+1 to owner::damage,
						=+@textindexedvalue( $modetag(mode), ("Rush", -1), else 0) to owner::damage$_
					), page(B287), group(Shield), shortname(Spike)

<Arrow>
Bodkin Point (TL3+), *1, group(Arrows), page(B277), shortname(Bodkin Point)

<Bow Quality>
Variant: Increased Damage, +0/+0, tier(1), group(Bow Quality), gives(+1 to owner::damage, +0 to owner::baseweight), shortname(Increased Damage)
Variant: Decreased Damage, -0/-0, tier(1), group(Bow Quality), gives(-1 to owner::damage, -0 to owner::baseweight), shortname(Decreased Damage)
Variant: Increased Damage Dice, +0/+0, tier(1), group(Bow Quality), gives(=+$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Increased Damage Dice)
Variant: Decreased Damage Dice, -0/-0, tier(1), group(Bow Quality), gives(=-$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Decreased Damage Dice)
Variant: Damage Bonus (per die), +0/+0, group(Bow Quality),
	gives(_
		=+@textindexedvalue( $modetag(dmg), ("thr", $solver(me::level)*owner::basethdice), ("sw", $solver(me::level)*owner::baseswdice), ELSE $solver(me::level*owner::dmg) ) to owner::damage$ listAs "+/die from Damage Bonus" _
		),
	levelnames(+1/die, +2/die, +3/die, +4/die, +5/die, +6/die, +7/die, +8/die, +9/die, +10/die)
Variant: Receives Acc Bonus, +0/+0, group(Bow Quality), gives(+1 to owner::acc), shortname(Receives Skill Bonus)
Variant: Receives Acc Penalty, +0/+0, group(Bow Quality), gives(-1 to owner::acc), shortname(Receives Skill Bonus)

_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Bow Quality),
	gives(_
		=+@if(_
			$modetag(charskillscore) = ST:DX+1 _
			THEN @textindexedvalue($modetag(dmg), ("thr", owner::basethdice), ("sw", owner::baseswdice), ELSE $solver(owner::dmg)) _
			ELSE @if(_
				$modetag(charskillscore) > ST:DX+1 _
				THEN @textindexedvalue($modetag(dmg), ("thr", 2 * owner::basethdice), ("sw", 2 * owner::baseswdice), ELSE 2*$solver(owner::dmg)) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
		)

//	_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Bow Quality),
//		gives(_
//			=+@if(_
//				$modetag(charskillscore) = ST:DX+1 _
//				THEN @basethdice(owner::effectivest) _
//				ELSE @if(_
//					$modetag(charskillscore) > ST:DX+1 _
//					THEN 2 * @basethdice(owner::effectivest) _
//					ELSE 0 _
//					)_
//				) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
//			)

Weapon Quality: Good, *1, page(B277), group(Bow Quality), shortname(Good Quality)
Weapon Quality: Fine, *4, gives(*1.2 to owner::rangehalfdam listas "Increased Range from Fine Quality", *1.2 to owner::rangemax listas ""), page(B277), group(Bow Quality), shortname(Fine Quality)

_New Ranged Attack Mode, 0, group(Bow Quality), noresync(yes),
	addmode(_New Ranged Attack Mode, 
		damage([damage]),

		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		rcl([recoil]),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of this firearm:", "_New Ranged Attack Mode", " ", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armour divisors or damage type in this field:", "[damage]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", "%copyfirst", "New Ranged Attack Mode"),
		#ChoiceList(_
				name(Use),
				title(New Ranged Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Attack Mode, 0, group(Bow Quality), noresync(yes),
	addmode(_New Melee Attack Mode, 
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armour divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon:", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_Remove Attack Mode ([Mode]), +0, group(Bow Quality), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)
	
<Melee Quality>
	

//^^^^ Need minst() to be more functional
//_Used One-Handed, 0, shortname(One-Handed),
//	addmode(One-Handed, damage(%copyfirst), damtype(%copyfirst), reach(%copyfirst), parry(0U), minst(1.5 * %copyfirst), notes(%copyfirst), skillused(%copyfirst))
//	gives(=*@textindexedvalue( $modetag(mode), ("One-Handed", 1.5), ELSE 1) to owner::minst$) 
		
		

Variant: Increased Damage, +0/+0, tier(1), group(Melee Quality), gives(+1 to owner::damage, +0 to owner::baseweight), shortname(Increased Damage)
Variant: Decreased Damage, -0/-0, tier(1), group(Melee Quality), gives(-1 to owner::damage, -0 to owner::baseweight), shortname(Decreased Damage)
Variant: Increased Damage Dice, +0/+0, tier(1), group(Melee Quality), gives(=+$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Increased Damage Dice)
Variant: Decreased Damage Dice, -0/-0, tier(1), group(Melee Quality), gives(=-$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Decreased Damage Dice)
Variant: Damage Bonus (per die), +0/+0, group(Melee Quality),
	gives(_
		=+@textindexedvalue( $modetag(dmg), ("thr", $solver(me::level)*owner::basethdice), ("sw", $solver(me::level)*owner::baseswdice), ELSE $solver(me::level*owner::dmg) ) to owner::damage$ listAs "+/die from Damage Bonus" _
		),
	levelnames(+1/die, +2/die, +3/die, +4/die, +5/die, +6/die, +7/die, +8/die, +9/die, +10/die)

_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Melee Quality),
	gives(_
		=+@if(_
			$modetag(charskillscore) = ST:DX+1 _
			THEN @textindexedvalue($modetag(dmg), ("thr", owner::basethdice), ("sw", owner::baseswdice), ELSE $solver(owner::dmg)) _
			ELSE @if(_
				$modetag(charskillscore) > ST:DX+1 _
				THEN @textindexedvalue($modetag(dmg), ("thr", 2 * owner::basethdice), ("sw", 2 * owner::baseswdice), ELSE 2*$solver(owner::dmg)) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
		)

Composition: Stone (TL0+), *1, gives(+0.5 to owner::armour divisor), page(B275), group(Melee Quality), shortname(Stone)
Composition: Obsidian (TL1+), *1, page(B275), group(Melee Quality), shortname(Obsidian), gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Composition: Obsidian", +2 to owner::break)
Composition: Bronze (TL1+), *1, page(B275), group(Melee Quality), shortname(Bronze)
Composition: Iron (TL2+), *1, page(B275), group(Melee Quality), shortname(Iron)
Composition: Steel (TL3+), *1, page(B275), group(Melee Quality), shortname(Steel)
Composition: Silver-coated (TL1+), *3, page(B275), group(Melee Quality), shortname(Silver-coated)
Composition: Silver-edged (TL1+), *3, page(B275), group(Melee Quality), shortname(Silver-edged)
Composition: Plastic (TL7+), *2, page(B275), gives(*0.5 to owner::baseweight), shortname(Plastic)

*Weapon Quality: Cheap (TL6-), *0.4, gives(-1 to owner::Acc, +2 to owner::break), page(B274), group(Melee Quality), shortname(Cheap Quality)
*Weapon Quality: Cheap (TL7), *0.2, gives(-1 to owner::Acc, +2 to owner::break), page(B274), group(Melee Quality), shortname(Cheap Quality)
Weapon Quality: Cheap, *0.2/*0.4, upto(1), levelnames(,), gives(-1 to owner::Acc listas "-1 Acc from Cheap Quality", +2 to owner::break), page(B274), group(Melee Quality), shortname(Cheap Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 0.4 ELSE 0.2 _
				)_
			), forceformula(yes)

*Weapon Quality: Good (TL6-), *1, page(B274), group(Melee Quality), shortname(Good Quality)
*Weapon Quality: Good (TL7+), *0.4, page(B274), group(Melee Quality), shortname(Good Quality)
Weapon Quality: Good, *0.4/*1, upto(1), levelnames(,), page(B274), group(Melee Quality), shortname(Good Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 1 ELSE 0.4 _
				)_
			), forceformula(yes)

* Removed because they must be duplicated in later weapon entries
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)

_New Ranged Attack Mode, 0, group(Melee Quality), noresync(yes),
	addmode(_New Ranged Attack Mode, 
		damage([damage]),
		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		rcl([recoil]),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of this firearm:", "_New Ranged Attack Mode", " ", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armour divisors or damage type in this field:", "[damage]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", "%copyfirst", "New Ranged Attack Mode"),
		#ChoiceList(_
				name(Use),
				title(New Ranged Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Attack Mode, 0, group(Melee Quality), noresync(yes),
	addmode(_New Melee Attack Mode, 
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armourdivisor([armourdivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armour divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armour divisor. If there is no armour divisor enter space (or just click enter). DO NOT include parenthesis:", "[armourdivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon:", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_Remove Attack Mode ([Mode]), +0, group(Melee Quality), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

_Skill: Throwing Art Damage Bonus, +0, shortname(Throwing Art Damage Bonus), group(Melee Quality),
	gives(_
		=+@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN @textindexedvalue($modetag(mode)$modetag(dmg),
						("thrownsw", owner::baseswdice), ("thrownthr", owner::basethdice),
						("woomerasw", owner::baseswdice), ("woomerathr", owner::basethdice),
						("atlatlsw", owner::baseswdice), ("atlatlthr", owner::basethdice), ELSE 0) _
			ELSE @if(_
				"SK:Throwing Art::level" > ST:DX _
				THEN @textindexedvalue($modetag(mode)$modetag(dmg),
						("thrownsw", 2 * owner::baseswdice), ("thrownthr", 2 * owner::basethdice),
						("woomerasw", 2 * owner::baseswdice), ("woomerathr", 2 * owner::basethdice),
						("atlatlsw", 2 * owner::baseswdice), ("atlatlthr", 2 * owner::basethdice), ELSE 0) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "+1/die or +2/die from Throwing Art Damage Bonus",
		=*@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN 1 + (1/ST:ST::Score) _
			ELSE @IF(_
					"SK:Throwing Art::level" > ST:DX _
					THEN 1 + (2/ST:ST::Score) _
					ELSE 1 _
					)_
				) to owner::rangehalfdam,
		=*@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN 1 + (1/ST:ST::Score) _
			ELSE @IF(_
					"SK:Throwing Art::level" > ST:DX _
					THEN 1 + (2/ST:ST::Score) _
					ELSE 1 _
					)_
				) to owner::rangemax_
		)

<Sword Class Quality>
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine (TL6-), *4, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Sword Class Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL6-), *4, gives(-1 to owner::break), page(B274), group(Sword Class Quality), shortname(Fine Quality)

Weapon Quality: Fine, *1/*4, upto(1), levelnames(,), page(B274), group(Sword Class Quality), shortname(Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine Quality",
			-1 to owner::break_
		),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 4 ELSE 1 _
				)_
			), forceformula(yes)

Weapon Quality: Fine Stone/Bronze/Iron, *1/*4, upto(1), levelnames(,), gives(-1 to owner::break), page(B274), group(Sword Class Quality), shortname(Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 4 ELSE 1 _
				)_
			), forceformula(yes)

	

*Weapon Quality: Very Fine (TL6-), *20, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Quality: Very Fine", -2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
*Weapon Quality: Very Fine (TL7+), *4, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Quality: Very Fine", -2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
Weapon Quality: Very Fine, *4/*20, upto(1), levelnames(,), page(B274), group(Sword Class Quality), shortname(Very Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Very Fine Quality",
			-2 to owner::break_
			),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 20 ELSE 4 _
				)_
			), forceformula(yes)

*Weapon Quality: Very Fine Stone/Bronze/Iron (TL6-), *20, gives(-2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
*Weapon Quality: Very Fine Stone/Bronze/Iron (TL7+), *4, gives(-2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
Weapon Quality: Very Fine Stone/Bronze/Iron, *4/*20, upto(1), levelnames(,), gives(-2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 20 ELSE 4 _
				)_
			), forceformula(yes)

<Cutting Class Quality>
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine (TL6-), *10, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Cutting Class Quality), shortname(Fine Quality)
Weapon Quality: Fine, *1/*10, upto(1), levelnames(,), page(B274), group(Cutting Class Quality), shortname(Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine Quality",
			-1 to owner::break_
	), 
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 10 ELSE 1 _
				)_
			), forceformula(yes)

*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL6-), *10, gives(-1 to owner::break), page(B274), group(Cutting Class Quality), shortname(Fine Quality)
Weapon Quality: Fine Stone/Bronze/Iron, *1/*10, upto(1), levelnames(,), gives(-1 to owner::break), page(B274), group(Cutting Class Quality), shortname(Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 10 ELSE 1 _
				)_
			), forceformula(yes)

<Crushing/Imp Class Quality>
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine (TL6-), *3, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality)
Weapon Quality: Fine, *1/*3, upto(1), levelnames(,), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine Quality",
			-1 to owner::break_
			), 
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 3 ELSE 1 _
				)_
			), forceformula(yes)

*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL6-), *3, gives(-1 to owner::break), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality)
Weapon Quality: Fine Stone/Bronze/Iron, *1/*3, upto(1), levelnames(,), gives(-1 to owner::break), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 3 ELSE 1 _
				)_
			), forceformula(yes)

<Equipment>
Equipment: Quality ([Skill]*), *5/*20/*100, upto(3), levelnames(Good: +1 to skill, Fine: +2 to skill, Best: +TL/2 to skill), shortname(Quality), page(B345), bonus(@indexedvalue(me::level,1,2,@int(owner::techlvl/2))), conditional(+me::bonus to SK:[Skill]), gives(=me::bonus to owner::skillscore),
	x(_
		#InputReplace("Some equipment gives a Quality Bonus to certain skills (see p. B345 for details). Note that this normally does NOT include weapons! Please enter the name of the skill that receives a bonus from this item:", "[Skill]", , "Equipment: Quality")_
		)
		

Equipment: Quality (%skillslist%), *5/*20/*100, upto(3), levelnames(Good: +1 to skill, Fine: +2 to skill, Best: +TL/2 to skill), shortname(Quality), page(B345), bonus(@indexedvalue(me::level,1,2,@int(owner::techlvl/2))), conditional(%skillsaliaslist%), gives(=me::bonus to owner::skillscore),
	x(#ChoiceList(_
			name(skills),
			title(Equipment),
			text(Some equipment gives a Quality Bonus to certain skills (see p. B345 for details). Note that this normally does NOT include weapons! Choose which skills will receive a bonus from this item.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix), append(*))_
				),
			aliaslist(_
				#grouplist(GR:AllSkills, prepend(=+me::bonus to "), append("))_
					)_
			)_
	)

Equipment: Gives Skill Bonus ([Skill]*), +0/+0, shortname(Skill Bonus), page(B345), conditional(+1 to SK:[Skill]),
	x(#InputReplace("Some equipment gives a bonus to certain skills. Please enter the name of the skill that receives a bonus:", "[Skill]", , "Equipment: Skill Bonus"))

Equipment: Gives Skill Bonus (%skillslist%), +0/+0, shortname(Skill Bonus), page(B345), conditional(%skillsaliaslist%),
	x(#ChoiceList(_
			name(skills),
			title(Equipment),
			text(Some equipment gives a bonus to certain skills. Choose which skills will receive a bonus from this item:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix), append(*))_
				),
			aliaslist(_
				#grouplist(GR:AllSkills, prepend(+1 to "), append("))_
				)_
			)_
	)

Variant: Receives Skill Bonus, +0/+0, group(Equipment), gives(+1 to owner::skillscore), shortname(Receives Skill Bonus),
	x(#Message("This item receives a skill bonus when used. Adding this modifier will give a bonus to the Skill Level listing (e.g. the Level Column on the Weapons Tables), but will not affect the level under Skills. For that take the 'Equipment: Gives Skill Bonus' modifier."))
Variant: Receives Skill Penalty, +0/+0, group(Equipment), gives(-1 to owner::skillscore), shortname(Receives Skill Bonus),
	x(#Message("This item receives a skill penalty when used. Adding this modifier will give a bonus to the Skill Level listing (e.g. the Level Column on the Weapons Tables), but will not affect the level under Skills. For that take the 'Equipment: Gives Skill Bonus' modifier."))
