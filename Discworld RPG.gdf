Encoding=UTF-8
Version=3
* The version information above MUST be the first line of the data file
Program=4.0.408
Description=04/01/2013. This data file contains information taken from the GURPS Basic Set: Characters sourcebook. GURPS Basic Set: _
		Characters is Copyright © 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1996, 1998, 1999, 2002, 2004 by _
		Steve Jackson Games Incorporated. All rights reserved. _
Taboo="GURPS Lite 4th Ed.gdf", "GURPS Basic Set 3rd Ed. Revised.gdf"

[AUTHOR]
************************************************************************************************************************
*
* GURPS(R) Character Assistant
* Filename: GURPS Basic Set 4th Ed.--Characters.gdf
* Created:  August 24, 2004
* Requires GCA v4 or later!
*
* This data file contains information taken from the GURPS Basic Set: Characters sourcebook. GURPS Basic Set:
* Characters is Copyright © 1986, 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1996, 1998, 1999, 2002, 2004 by
* Steve Jackson Games Incorporated. All rights reserved.
*
* Information in this file includes:
*	Attributes
*	Advantages, Disadvantagess, Quirks, Including Bonuses and Penalties.
*	Skills, Including Bonuses, Classes, Needs and Prereqs.
*	Spells, Including Bonuses, Colleges, Needs and Prereqs.
*	Equipment
*	Templates
*
************************************************************************************************************************
*
* David L. Watkins - Major work
* Armin D. Sykes   - Changes, Updates, Packages/Templates
* Craig Roth	- Equipment
* Eric B. Smith	- GURPS Data File Coordinator, Equipment, Updates, Corrections, Skill Categories
*
* If you find any errors or omissions in this file please contact the Data File Coordinator at:
* ericbsmith42@gmail.com
*
* Or drop a message in the GCA4 forum at:
* http://forums.sjgames.com
*
************************************************************************************************************************
*
* GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
* Games. All rights reserved.
*
* The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
* copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
* rights reserved by Steve Jackson Games Incorporated.
*
************************************************************************************************************************

[Settings]
ModMaxNegPercentLimit = -80
NeedsDefaultSkillTag = baseapppoints
NeedsDefaultSkillValue = 1
NeedsDefaultSpellTag = baseapppoints
NeedsDefaultSpellValue = 1
RuleOf = 20

//NeedsDefaultSkillTag = points
//NeedsDefaultSkillValue = 1
//NeedsDefaultSpellTag = points
//NeedsDefaultSpellValue = 1

************************************************************************************************************************
[SKILLTYPES]
************************************************************************************************************************
N/A, cost(0/1), base(0), defaultstat(0), relname()
N|A, cost(0/1), base(0), defaultstat(%default), relname(def), subzero(yes)

DX/E, cost(1/2/4/8), base(-1), defaultstat(ST:DX), relname(DX)
DX/A, cost(1/2/4/8), base(-2), defaultstat(ST:DX), relname(DX)
DX/H, cost(1/2/4/8), base(-3), defaultstat(ST:DX), relname(DX)
DX/VH, cost(1/2/4/8), base(-4), defaultstat(ST:DX), relname(DX)
DX/WC, cost(3/6/12/24), base(-4), defaultstat(ST:DX), relname(DX)

IQ/E, cost(1/2/4/8), base(-1), defaultstat(ST:IQ), relname(IQ)
IQ/A, cost(1/2/4/8), base(-2), defaultstat(ST:IQ), relname(IQ)
IQ/H, cost(1/2/4/8), base(-3), defaultstat(ST:IQ), relname(IQ)
IQ/VH, cost(1/2/4/8), base(-4), defaultstat(ST:IQ), relname(IQ)
IQ/WC, cost(3/6/12/24), base(-4), defaultstat(ST:IQ), relname(IQ)

HT/E, cost(1/2/4/8), base(-1), defaultstat(ST:HT), relname(HT)
HT/A, cost(1/2/4/8), base(-2), defaultstat(ST:HT), relname(HT)
HT/H, cost(1/2/4/8), base(-3), defaultstat(ST:HT), relname(HT)
HT/VH, cost(1/2/4/8), base(-4), defaultstat(ST:HT), relname(HT)
HT/WC, cost(3/6/12/24), base(-4), defaultstat(ST:HT), relname(HT)

Will/E, cost(1/2/4/8), base(-1), defaultstat(ST:Will), relname(Will)
Will/A, cost(1/2/4/8), base(-2), defaultstat(ST:Will), relname(Will)
Will/H, cost(1/2/4/8), base(-3), defaultstat(ST:Will), relname(Will)
Will/VH, cost(1/2/4/8), base(-4), defaultstat(ST:Will), relname(Will)
Will/WC, cost(3/6/12/24), base(-4), defaultstat(ST:Will), relname(Will)

Per/E, cost(1/2/4/8), base(-1), defaultstat(ST:Perception), relname(Per)
Per/A, cost(1/2/4/8), base(-2), defaultstat(ST:Perception), relname(Per)
Per/H, cost(1/2/4/8), base(-3), defaultstat(ST:Perception), relname(Per)
Per/VH, cost(1/2/4/8), base(-4), defaultstat(ST:Perception), relname(Per)
Per/WC, cost(3/6/12/24), base(-4), defaultstat(ST:Perception), relname(Per)

Tech/A, cost(1/2/3), base(0), defaultstat(%default), relname(def), subzero(yes)
Tech/H, cost(2/3/4), base(0), defaultstat(%default), relname(def), subzero(yes)

Combo/2, cost(4/5), base(-6), defaultstat(%combo), relname(def), subzero(yes), zeropointsokay(yes)
Combo/3, cost(5/6), base(-12), defaultstat(%combo), relname(def), subzero(yes), zeropointsokay(yes)

************************************************************************************************************************
[BASICDAMAGE]
************************************************************************************************************************

* Starting this section will clear any existing 
* basic damage items.
*
* You must list the following items in order, because
* GCA will not sort them, but it does search through
* them in order.
*
* st() is the score that Damage Base must be <= 
* thr() is the basic thrust damage
* sw() is the basic swing damage

st(1), thr(1d-6), sw(1d-5)
st(2), thr(1d-6), sw(1d-5)
st(3), thr(1d-5), sw(1d-4)
st(4), thr(1d-5), sw(1d-4)
st(5), thr(1d-4), sw(1d-3)

st(6), thr(1d-4), sw(1d-3)
st(7), thr(1d-3), sw(1d-2)
st(8), thr(1d-3), sw(1d-2)
st(9), thr(1d-2), sw(1d-1)
st(10), thr(1d-2), sw(1d)

st(11), thr(1d-1), sw(1d+1)
st(12), thr(1d-1), sw(1d+2)
st(13), thr(1d), sw(2d-1)
st(14), thr(1d), sw(2d)
st(15), thr(1d+1), sw(2d+1)

st(16), thr(1d+1), sw(2d+2)
st(17), thr(1d+2), sw(3d-1)
st(18), thr(1d+2), sw(3d)
st(19), thr(2d-1), sw(3d+1)
st(20), thr(2d-1), sw(3d+2)

st(21), thr(2d), sw(4d-1)
st(22), thr(2d), sw(4d)
st(23), thr(2d+1), sw(4d+1)
st(24), thr(2d+1), sw(4d+2)
st(25), thr(2d+2), sw(5d-1)

st(26), thr(2d+2), sw(5d)
st(27), thr(3d-1), sw(5d+1)
st(28), thr(3d-1), sw(5d+1)
st(29), thr(3d), sw(5d+2)
st(30), thr(3d), sw(5d+2)

st(31), thr(3d+1), sw(6d-1)
st(32), thr(3d+1), sw(6d-1)
st(33), thr(3d+2), sw(6d)
st(34), thr(3d+2), sw(6d)
st(35), thr(4d-1), sw(6d+1)

st(36), thr(4d-1), sw(6d+1)
st(37), thr(4d), sw(6d+2)
st(38), thr(4d), sw(6d+2)
st(39), thr(4d+1), sw(7d-1)

st(40), thr(4d+1), sw(7d-1)
st(45), thr(5d), sw(7d+1)
st(50), thr(5d+2), sw(8d-1)
st(55), thr(6d), sw(8d+1)
st(60), thr(7d-1), sw(9d)
st(65), thr(7d+1), sw(9d+2)
st(70), thr(8d), sw(10d)
st(75), thr(8d+2), sw(10d+2)
st(80), thr(9d), sw(11d)
st(85), thr(9d+2), sw(11d+2)
st(90), thr(10d), sw(12d)
st(95), thr(10d+2), sw(12d+2)

st(100), thr(11d), sw(13d)

* The LAST item in the list is always the item that is to be used
* for anything that didn't fall under the preceding items.

st(0), thr((@int(ST:Striking ST/10)+1)d), sw((@int(ST:Striking ST/10)+3)d)

* you must use the extra set of parens to separate the math part
* from the 'd' for the dice.

************************************************************************************************************************
[CONVERTDICE]
************************************************************************************************************************

* Convert damage bonus into extra dice, as per the Optional Rule: Modifying Dice + Adds on p. B269.
*
* Starting this section will clear any existing
* convert dice items
*
* break()'if the bonus is this Value or more ...
* adddice()   '... add this Value to the damage dice ...
* subtract()  '... then subtract this amount from the bonus
*
* you need to start with the biggest break you want to deal with,
* and work down to the smallest, because GCA doesn't sort these either
* 

break(7), adddice(2), subtract(7)
break(4), adddice(1), subtract(4)

************************************************************************************************************************
[BODY]
************************************************************************************************************************
//All entries within a group() tag are in descending order. That is, the most all encompassing group comes first in the list, followed
//by the next most encompassing, down to the least encompassing group. This means that if there's a question as to which
//DR value should be used you can start with the rightmost group and work your way left, the first with a unique DR value
//is the one that takes precedence.
//  e.g. armor that has DR 30 on the Front Chest, DR 20 on the rest of the Torso, and DR 12 from the neck down
//		location(Full Suit, Torso, Front Chest),
//		basedr(12, 20, 30)
//
// We can further expand this; lets say the same armor provides a uniform DR 3 against Burning attacks and half DR against crushing:
//		location(Full Suit, Torso, Front Chest),
//		basedr(12, 20, 30), burningdr(3), crushingdr(6, 10, 15)
//
//	useful tags here include:
//		basedr(), cuttingdr(), crushingdr(), impalingdr(), piercingdr(), burningdr()
//	other's to condier, but which may not be necessary are:
//		corrosiondr(), fatiguedr(), toxicdr(), otherdr()
//		with otherdr() being a catch-all for other types of DR that may not fit into the regular categories.

<Humanoid>
name(Head), group(Head, All)
name(Eyes), group(Head, Eyes, All), display(-1), expanded(-1), posx(6), posy(0)
name(LeftEye), group(Head, LeftEye, Eyes, All)
name(RightEye), group(Head, RightEye, Eyes, All)
name(Neck), group(Neck, Body, Full Suit, All), display(-1), expanded(-1), posx(6), posy(50)
name(Skull), group(Head, Skull, All), basedr(2), dr(2), display(-1), expanded(-1), posx(155), posy(0)
name(Face), group(Head, Face, All), display(-1), expanded(-1), posx(155), posy(50)
name(Torso), group(Torso, Body, Full Suit, All), display(-1), expanded(-1), posx(4), posy(110)
name(Groin), group(Groin, Body, Full Suit, All), display(-1), expanded(-1), posx(195), posy(275)
name(Arms), group(Arms, Limbs, Full Suit, All), display(-1), expanded(-1), posx(200), posy(130)
name(LeftArm), group(LeftArm, Arms, Limbs, Full Suit, All)
name(RightArm), group(RightArm, Arms, Limbs, Full Suit, All)
name(Hands), group(Hands, Full Suit, All), display(-1), expanded(-1), posx(210), posy(180)
name(LeftHand), group(LeftHand, Hands, Full Suit, All)
name(RightHand), group(RightHand, Hands, Full Suit, All)
name(Legs), group(Legs, Limbs, Full Suit, All), display(-1), expanded(-1), posx(168), posy(340)
name(LeftLeg), group(LeftLeg, Legs, Limbs, Full Suit, All)
name(RightLeg), group(RightLeg, Legs, Limbs, Full Suit, All)
name(Feet), group(Feet, Full Suit, All), display(-1), expanded(-1), posx(168), posy(392)
name(LeftFoot), group(LeftFoot, Feet, Full Suit, All)
name(RightFoot), group(RightFoot, Feet, Full Suit, All)
name(Body), group(Body, Full Suit, All)
name(Full Suit), group(Full Suit, All)
name(All), group(All)

************************************************************************************************************************
[ATTRIBUTES]
************************************************************************************************************************
* mainwin() positions:
*  1 ST
*  2 DX
*  3 IQ
*  4 HT
*  5 Hit Points
*  6 Will
*  7 Perception
*  8 Fatigue Points
*  9 Basic Speed
* 10 Basic Move
* 11 Reserved for movement attributes activated by taking advantages or disadvantages
*	(e.g. Flight, Tunneling, No Legs (Aquatic))
* 12 Size Modifier
* 13 --------------------
* 14 Tech Level
* 15 Money
* 16 Status
* 17 Monthly Pay
* 18 Cost of Living

* Basic Attributes
************************************************************************************************************************
ST, symbol(ST), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), 
	up(10), down(-10), mainwin(1), mods(No Fine Manipulators, Size), 
	disadat(-1), display(no),
	initmods( Size, -10%, group(Size ST), 
			formula(-@if(ST:Size Modifier > 0 & owner::level > 0 THEN ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		| No Fine Manipulators, -40%, group(No Fine Manipulators Stat),
			formula(-@if(ST:No Fine Manipulators > 0 & owner::level > 0 then 40 else 0)), 
			forceformula(yes) _
		)

DX, symbol(DX), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), 
	up(20), down(-20), mainwin(2), mods(No Fine Manipulators Stat), 
	disadat(-1), display(no),
	parryat(@int(me::score/2)+3), blockat(@int(me::score/2)+1),
	initmods(No Fine Manipulators, -0%, formula(-@if(ST:No Fine Manipulators > 0 & owner::level > 0 then 40 else 0)), forceformula(yes), group(No Fine Manipulators Stat), page(B145))

IQ, symbol(IQ), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(20), down(-20), mainwin(3), disadat(-1), display(no)
HT, symbol(HT), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(10), down(-10), mainwin(4), disadat(-1), display(no)

* Secondary Characteristics
************************************************************************************************************************
Basic Lift, basevalue(@int(100 * ST:Lifting ST * ST:Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))/100), maxscore(1000000), minscore(0), symbol(BL), round(@if(ST:Lifting ST::score <= 7 then 0 else 1))

Hit Points, basevalue(ST:ST), step(1), maxscore(1000000), minscore(0 - me::syslevels), 
	up(2), down(-2), symbol(HP), mods(Size HP), mainwin(5),
	display(no), disadat(-1),
	initmods( Size, -10%, group(Size HP), 
			formula(-@if(ST:Size Modifier > 0 & ST:Hit Points::level > 0 then ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		)

Will, basevalue(ST:IQ), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), mainwin(6), disadat(-1)
Perception, basevalue(ST:IQ), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), symbol(Per), mainwin(7), disadat(-1)
Fatigue Points, basevalue(ST:HT), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(3), down(-3), symbol(FP), display(No), mainwin(8), disadat(-1)
Basic Speed, basevalue((ST:HT + ST:DX) / 4), step(0.25), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), display(No), mainwin(9), disadat(-1)
Basic Move, basevalue(@if("DI:No Legs (Sessile)" THEN 0 ELSE ST:Basic Speed)), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), round(-1), display(No), mainwin(10), disadat(-1)

Striking ST, basevalue(ST:ST), step(1), maxscore(1000000), minscore(ST:ST), up(5), down(0), round(-1), display(No),
	initmods( Size, -10%, group(Size), 
			formula(-@if(ST:Size Modifier > 0 & ST:Striking ST::level > 0 then ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		)
Lifting ST, basevalue(ST:ST), step(1), maxscore(1000000), minscore(ST:ST), up(3), down(0), round(-1), display(No),
	initmods( Size, -10%, group(Size), 
			formula(-@if(ST:Size Modifier > 0 & ST:Lifting ST::level > 0 then ST:Size Modifier * 10 else 0)),
			forceformula(yes) _
		)

Size Modifier, symbol(SM), basevalue(0), maxscore(1000000), minscore(-100), round(-1), up(0), down(0), step(1), mainwin(12)

Vision, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Hearing, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Taste/Smell, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Touch, basevalue(ST:Perception), maxscore(1000000), minscore(0)

Dodge, basevalue(ST:Basic Speed + 3), maxscore(1000000), minscore(0), round(-1), display(No)
Parry, basevalue(0), maxscore(1000000), minscore(0), display(No)
Block, basevalue(0), maxscore(1000000), minscore(0), display(No)
DB, basevalue(0), maxscore(1000000), minscore(0), display(No)

One Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(_
		=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:One Arm Reach _
		)

Two Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(_
 		=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Two Arm Reach _
		)

Extra Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(_
		=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Extra Arm Reach _
		)

Leg SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Leg Reach)

Neck SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Neck Reach)

One Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Two Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Extra Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Leg Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Neck Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)

Fright Check, basevalue(ST:Will)
Consciousness Check, basevalue(ST:HT::score), maxscore(1000000), minscore(0), display(yes)
Death Check, basevalue(ST:HT::score), maxscore(1000000), minscore(0), display(yes)
DR, symbol(DR), round(-1), display(no)
Damage Base, symbol(DamageBase), basevalue(ST:Striking ST), display(no)

* Encumbrance
************************************************************************************************************************
No Encumbrance, basevalue(ST:Basic Lift), maxscore(10000000), minscore(0), symbol(NEnc), round(0), display(No)
Light Encumbrance, basevalue(2 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(LEnc), round(0), display(No)
Medium Encumbrance, basevalue(3 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(MEnc), round(0), display(No)
Heavy Encumbrance, basevalue(6 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(HEnc), round(0), display(No)
X-Heavy Encumbrance, basevalue(10 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(XEnc), round(0), display(No)

No Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), ST:Ground Move)), maxscore(10000000), minscore(0), symbol(NEncMove), round(-1), display(No)
Light Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.8 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(LEncMove), round(-1), display(No)
Medium Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.6 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(MEncMove), round(-1), display(No)
Heavy Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.4 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(HEncMove), round(-1), display(No)
X-Heavy Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.2 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(XEncMove), round(-1), display(No)

* Arm ST/Physical Feats
************************************************************************************************************************
One Arm Lifting ST, basevalue(ST:Lifting ST), maxscore(1000000), minscore(0), round(-1)
One Arm Striking ST, basevalue(ST:Striking ST), maxscore(1000000), minscore(0), round(-1)
Two Arm Lifting ST, basevalue(ST:Lifting ST), maxscore(1000000), minscore(0), round(-1)
Two Arm Striking ST, basevalue(ST:Striking ST), maxscore(1000000), minscore(0), round(-1)
Three Arm Lifting ST, basevalue(@if(AD:Extra Arms > 0 THEN ST:Lifting ST ELSE 0)), maxscore(1000000), minscore(0), round(-1)
Three Arm Striking ST, basevalue(@if(AD:Extra Arms > 0 THEN ST:Striking ST ELSE 0)), maxscore(1000000), minscore(0), round(-1)

One-Handed Lift, basevalue(2 * @if(ST:One Arm Lifting ST::score <= 7 then ST:One Arm Lifting ST * ST:One Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5) else @int((ST:One Arm Lifting ST * ST:One Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))+0.5))), maxscore(1000000), minscore(0), round(1), page(B353), units(lb|kg)
Two-Handed Lift, basevalue(8 * @if(ST:Two Arm Lifting ST::score <= 7 then ST:Two Arm Lifting ST * ST:Two Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5) else @int((ST:Two Arm Lifting ST * ST:Two Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))+0.5))), maxscore(1000000), minscore(0), round(1), page(B353), units(lb|kg)

High Jump, basevalue((((6 * @max(ST:Basic Ground Move, SK:Jumping::level / 2)) - 10) * @if(ST:Metric = 1 THEN 2.5 ELSE 1)) * (2 ^ ST:Super Jump)), maxscore(1000000), minscore(0), page(B352), units(in|cm)
Broad Jump, basevalue((((2 * @max(ST:Basic Ground Move, SK:Jumping::level / 2)) - 3) / @if(ST:Metric = 1 THEN 3 ELSE 1)) * (2 ^ ST:Super Jump)), maxscore(1000000), minscore(0), page(B352), units(ft|m)

Shove/Knock Over, basevalue(12 * ST:Basic Lift), maxscore(1000000), minscore(0), page(B353), units(lb|kg)
Carry on Back, basevalue(15 * ST:Basic Lift), maxscore(1000000), minscore(0), page(B353), units(lb|kg)
Shift Slightly, basevalue(50 * ST:Basic Lift), maxscore(1000000), minscore(0), page(B353), units(lb|kg)

* Movement
************************************************************************************************************************
Ground Move, basevalue(ST:Basic Ground Move), maxscore(1000000), minscore(0), round(-1)
Water Move, basevalue(ST:Basic Water Move), step(1), maxscore(1000000), minscore(0), up(5), down(-5), round(-1)
Air Move, basevalue(ST:Basic Air Move), maxscore(1000000), minscore(0), hide(yes), display(no), up(2), down(-2), step(1), round(-1)
Space Move, basevalue(ST:Basic Space Move), maxscore(1000000), minscore(0), hide(yes), display(no), up(2), down(-2), step(1), round(-1)
Tunneling Move, basevalue(@itemhasmod(AD:Tunneling, Tunneling Move)), maxscore(1000000), minscore(0), hide(yes), display(no)
Brachiation Move, basevalue(ST:Basic Brachiation Move), maxscore(1000000), minscore(0), hide(yes), display(no), round(-1)
Jump Move, basevalue(@max(ST:Ground Move, @round((ST:Broad Jump/15)+0.49999, 0))), maxscore(1000000), minscore(0), hide(yes), display(no)

* Social Background
************************************************************************************************************************
--------------------, basevalue(0), mainwin(13), display(no)
Tech Level, basevalue(0), step(1), maxscore(12), minscore(0), up(5), down(-5), symbol(TL), round(1), mainwin(14), mods(Tech Level)
Money, basevalue((ST:Starting Wealth * @max(_
								@if(@hasmod(5% of Starting Wealth) THEN 0.05),
								@if(@hasmod(10% of Starting Wealth) THEN 0.1),
								@if(@hasmod(15% of Starting Wealth) THEN 0.15),
								@if(@hasmod(20% of Starting Wealth) THEN 0.2),
								@if(@hasmod(30% of Starting Wealth) THEN 0.3),
								@if(@hasmod(40% of Starting Wealth) THEN 0.4),
								@if(@hasmod(50% of Starting Wealth) THEN 0.5),
								@if(@hasmod(60% of Starting Wealth) THEN 0.6),
								@if(@hasmod(70% of Starting Wealth) THEN 0.7),
								@if(@hasmod(80% of Starting Wealth) THEN 0.8),
								@if(@hasmod(90% of Starting Wealth) THEN 0.9),
								@if(@hasmod(100% of Starting Wealth) THEN 1) _
								) _
				) - char::equipmentcost),
	step(0), minscore(0), display(No), round(1), mainwin(15), initmods(20% of Starting Wealth, +0), mods(Money)

//^^^^ Revisit p. 517
Monthly Pay, basevalue(_
					@indexedvalue(3 + AD:Wealth::level - DI:Wealth::level, 0.2, 0.5, 1, 2, 5, 20, 100, 1000, 10000, 100000, 1000000) * _
					@indexedvalue(1 + ST:Tech Level::basevalue, 625, 650, 675, 700, 800, 1100, 1600, 2100, 2600, 3600, 5600, 8100, 10600) _
					),
	step(0), minscore(0), display(No), round(1), mainwin(17),
	description(The /typical/ Monthly Pay for a job of the character's selected Wealth Level and the campaign's set Tech Level, as calculated based on the tables on p. B516-517)


Cost of Living, basevalue(_
							@indexedvalue(ST:Status::score + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)_
							),
	step(0), minscore(0), display(No), round(1), mainwin(18),
	description(The /typical/ Cost of Living for the character's selected Status Level, as calculated from the 'Cost of Living' table on p. B265)

Starting Wealth, basevalue(ST:Wealth Modifier * @indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000)), step(1), minscore(0), display(No), round(1)
Remaining Funds, basevalue(ST:Starting Wealth - char::equipmentcost), step(0), minscore(0), display(No), round(1)
Wealth Modifier, basevalue(10), step(1), minscore(0), display(No), round(-1)
Signature Gear, basevalue(0), display(No), hide(yes), step(0), minscore(0), round(1)

* Telekinesis Stats
************************************************************************************************************************
TK ST, basevalue(0), maxscore(1000000), minscore(0), hide(yes), display(no)
TK Basic Lift, symbol(TK BL), basevalue(ST:TK ST * ST:TK ST / @if(ST:Metric = 1 THEN 11 ELSE 5)), maxscore(1000000), minscore(0), round(@if(ST:TK ST::score <= 7 then 0 else 1)), hide(yes), display(no), units(lb|kg)
TK Max Lift, symbol(TK ML), basevalue(8 * "ST:TK Basic Lift"), maxscore(1000000), minscore(0), hide(yes), display(no), units(lb|kg)
TK Shove/Knock Over, basevalue(12 * ST:TK Basic Lift), maxscore(1000000), minscore(0), hide(yes), display(no), page(B353), units(lb|kg)
TK Shift Slightly, basevalue(50 * ST:TK Basic Lift), maxscore(1000000), minscore(0), hide(yes), display(no), page(B353), units(lb|kg)
TK Move, basevalue(0), maxscore(1000000), minscore(0), hide(yes), display(no)

TK No Encumbrance, basevalue(ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKNEnc), round(0), hide(yes), display(no)
TK Light Encumbrance, basevalue(2 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKLEnc), round(0), hide(yes), display(no)
TK Medium Encumbrance, basevalue(3 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKMEnc), round(0), hide(yes), display(no)
TK Heavy Encumbrance, basevalue(6 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKHEnc), round(0), hide(yes), display(no)
TK X-Heavy Encumbrance, basevalue(10 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKXEnc), round(0), hide(yes), display(no)

TK No Encumbrance Move, basevalue(ST:TK Move), maxscore(10000000), minscore(0), symbol(TKNEncMove), round(-1), hide(yes), display(no)
TK Light Encumbrance Move, basevalue(0.8 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKLEncMove), round(-1), hide(yes), display(no)
TK Medium Encumbrance Move, basevalue(0.6 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKMEncMove), round(-1), hide(yes), display(no)
TK Heavy Encumbrance Move, basevalue(0.4 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKHEncMove), round(-1), hide(yes), display(no)
TK X-Heavy Encumbrance Move, basevalue(0.2 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKXEncMove), round(-1), hide(yes), display(no)

* Melee Weapon Table listings
************************************************************************************************************************
Punch, display(no), mode(Punch), mods(Combat Table), damage(_
		thr-1 + _
			@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) + _
			@max(_
				@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
				@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
				@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
			) _
		), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate), mods(Punch/Kick),
	damagebasedon(ST:Punch), reachbasedon(ST:One Arm Reach), basevalue(ST:One Arm Striking ST)

Kick, display(no), mode(Kick), mods(Combat Table),
	damage(_
		thr+ _
		@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0))) + _
		@if("DI:Horizontal::level" = 1 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Kick) else 0),
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Kick) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Kick) else 0)) _
			) _
			), damtype(_
				$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(ST:DX-2, SK:Brawling-2, SK:Karate-2, SK:Kicking (Karate), SK:Kicking (Brawling)), mods(Punch/Kick),
	damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach), basevalue(ST:Striking ST)

Bite, display(no), mode(Bite), mods(Combat Table),
	damage(_
		thr-1 + _
		@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Bite) else 0) + _
		-@if("DI:Weak Bite::level" = 1 then 2 * @basethdice(ST:Bite) else 0)_
		),
	damtype($if("AD:Teeth (Sharp Teeth)::level" = 1 THEN "cut" ELSE $if("AD:Teeth (Sharp Beak)::level" = 1 THEN "pi+" ELSE $if("AD:Teeth (Fangs)::level" = 1 THEN "imp" ELSE $if("AD:Vampiric Bite::level" = 1 THEN "cut" ELSE "cr"))))), reach(C), parry(No), skillused(ST:DX, SK:Brawling),
	damagebasedon(ST:Bite), reachbasedon(ST:Neck Reach), basevalue(ST:Striking ST)

* Helper stats
************************************************************************************************************************
Metric, basevalue(0), up(0), down(0), step(1), maxscore(1), minscore(0), display(no), hide(yes)
Super Jump, basevalue(0), hide(yes), display(no)
Enhanced Ground Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Ground Move::basescore - ST:Ground Move::basescore _
		to ST:Ground Move _
		)
Enhanced Air Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Air Move::basescore - ST:Air Move::basescore _
		to ST:Air Move _
		)
Enhanced Space Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Space Move::basescore - ST:Space Move::basescore _
		to ST:Space Move _
		)
Enhanced Water Move, basevalue(0), hide(yes), display(no),
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Water Move::basescore - ST:Water Move::basescore _
		to ST:Water Move _
		)

Basic Ground Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(@if("DI:No Legs (Aerial)" THEN 0 ELSE @if("DI:No Legs (Aquatic)" THEN 0 ELSE @if("DI:No Legs (Semi-Aquatic)" THEN ST:Basic Move/5 ELSE @if("DI:No Legs (Sessile)" THEN 0 ELSE ST:Basic Move)))))
Basic Water Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(ST:Basic Move / @if(AD:Amphibious THEN 1 ELSE @if("DI:No Legs (Aquatic)" THEN 1 ELSE @if("DI:No Legs (Semi-Aquatic)" THEN 1 ELSE 5))))
Basic Air Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(_
				@if(@itemhasmod(AD:Flight, Gliding) THEN ST:Basic Move ELSE _
				@if(@itemhasmod(AD:Flight, Controlled Gliding) THEN ST:Basic Move ELSE _
				@if(AD:Flight THEN _
					@if(@itemhasmod(Flight, Space Flight Only) THEN 0 ELSE 2 * ST:Basic Speed) ELSE _
					0 )_
				)))
Basic Space Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(@if(@itemhasmod(AD:Flight, Newtonian Space Flight) THEN 2 * Basic Speed ELSE @if(@itemhasmod(AD:Flight, Space Flight) THEN 2 * Basic Speed ELSE @if(@itemhasmod(AD:Flight, Space Flight Only) THEN 2 * Basic Speed ELSE 0 ))))
Basic Brachiation Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(_
				@if(AD:Brachiator THEN ST:Basic Move / 2 ELSE 0)_
				)
	
No Fine Manipulators, basevalue(0), display(no), hide(yes)
Native Languages, basevalue(0), display(no), hide(yes)
Native Cultural Familiarities, basevalue(0), display(no), hide(yes)

* Magery Prerequisite Work-around Stats
************************************************************************************************************************
Magery 0, basevalue(0), display(no), minscore(0), maxscore(100), hide(yes)	
Magery, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes),
	gives(=+me::score to ("CO:Air", "CO:Animal", "CO:Body Control", "CO:Communication & Empathy", "CO:Earth", "CO:Enchantment", "CO:Fire", "CO:Food", "CO:Illusion & Creation", "CO:Gate", "CO:Healing", "CO:Knowledge", "CO:Light & Darkness", "CO:Making & Breaking", "CO:Meta-Spells", "CO:Mind Control", "CO:Movement", "CO:Necromancy", "CO:Plant", "CO:Protection & Warning", "CO:Sound", "CO:Technological", "CO:Water", "CO:Weather"))
Magery Air, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Body Control, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Communication & Empathy, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Earth, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Enchantment, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Fire, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Gate, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Healing, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Knowledge, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Light & Darkness, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Meta-Spells, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Mind Control, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Movement, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Necromancy, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Protection & Warning, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Water, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)

Magery Animal, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Food, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Illusion & Creation, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Making & Breaking, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Plant, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Sound, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Technological, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Weather, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)

* Reaction
************************************************************************************************************************
Appealing, basevalue(0), display(no)
Unappealing, basevalue(0), display(no)
Reaction, basevalue(0), display(no)
Status, basevalue(0), minscore(-2), maxscore(8 limitingtotal), up(5), down(-5), step(1), display(no), round(-1), mainwin(16)

************************************************************************************************************************
[ADVANTAGES]
************************************************************************************************************************
<Attributes>
Extra ST, 10/20, page(B14), mods(Extra ST, Size, No Fine Manipulators), initmods(Affects displayed ST score, +0%, shortname(Affects ST), gives(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra ST advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra DX, 20/40, page(B15), mods(Extra DX, No Fine Manipulators), initmods(Affects displayed DX score, +0%, shortname(Affects DX), gives(+Owner::Level to ST:DX), group(Extra DX), description(This modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra DX advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra IQ, 20/40, page(B15), mods(Extra IQ), initmods(Affects displayed IQ score, +0%, shortname(Affects IQ), gives(+Owner::Level to ST:IQ), group(Extra IQ), description(This modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra IQ advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra HT, 10/20, page(B15), mods(Extra HT), initmods(Affects displayed HT score, +0%, shortname(Affects HT), gives(+Owner::Level to ST:HT), group(Extra HT), description(This modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra HT advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
					

Extra Will, 5/10, page(B16), mods(Extra Will), initmods(Affects displayed Will score, +0%, shortname(Affects Will), gives(+Owner::Level to ST:Will), group(Extra Will), description(This modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Will advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra Perception, 5/10, page(B16), mods(Extra Perception), initmods(Affects displayed Per score, +0%, shortname(Affects Per), gives(+Owner::Level to ST:Perception), group(Extra Perception), description(This modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Perception advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra Hit Points, 2/4, page(B16), mods(Extra Hit Points, Size), initmods(Affects displayed HP score, +0%, shortname(Affects HP), gives(+Owner::Level to ST:Hit Points), group(Extra Hit Points), description(This modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Hit Points advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra Fatigue Points, 3/6, page(B16), mods(Extra Fatigue Points), initmods(Affects displayed FP score, +0%, shortname(Affects FP), gives(+Owner::Level to ST:Fatigue Points), group(Extra Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Fatigue advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Fatigue advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Extra Basic Move, 5/10, page(B17), mods(Extra Basic Move), initmods(Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(+Owner::Level to ST:Basic Move), group(Extra Basic Move), description(This modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Basic Move advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra Basic Speed, 5/10, page(B17), mods(Extra Basic Speed), upto(80), initmods(Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(+(Owner::Level/4) to ST:Basic Speed), group(Extra Basic Speed), description(This modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Basic Speed advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.),
	levelnames(_
			+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10,
			+10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 _
			)
Extra Water Move, 5/10, page(B18), mods(Extra Water Move), initmods(Affects displayed Water Move score, +0%, shortname(Affects Water Move), gives(+Owner::Level to ST:Basic Water Move), group(Extra Water Move), description(This modifier causes the Extra Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Water Move advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Extra Air Move, 2/4, page(B18), mods(Extra Air Move), initmods(Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(+Owner::Level to ST:Basic Air Move), group(Extra Air Move), description(This modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Extra Air Move advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
High TL, 5/10, page(B23), gives(+1 to ST:Tech Level), cat(Mundane, Social, Mundane Social),
	upto(12 - ST:Tech Level::basevalue)
Increased SM, 0/0, gives(+1 to ST:Size Modifier), page(B19)
					

<General>
_New Advantage, [cost], displaycost(varies), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Advantage:" , name, ,"New Advantage"),
	#InputReplace("Please enter the Cost of this advantage:", "[cost]", , "New Advantage"),
	#edit_
		)
_New Leveled Advantage, %Costaliaslist%, displaycost(varies), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Advantage:" , name, ,"New Advantage"),
	#ChoiceList(_
			name(Cost),
			title(New Leveled Advantage: Cost),
			text(Choose the point cost for this advantage),
			picksallowed(1),
			method(bynumber),
			list(_
				"  0/level",
				"  1/level",
				"  2/level",
				"  3/level",
				"  4/level",
				"  5/level",
				" 10/level",
				" 15/level",
				" 20/level",
				" 25/level",
				" 30/level",
				" 35/level",
				" 40/level",
				" 45/level",
				" 50/level",
				" 75/level",
				"100/level"_
				), 
			aliaslist(_
					0/0,
					1/2,
					2/4,
					3/6,
					4/8,
					5/10,
					10/20,
					15/30,
					20/40,
					25/50,
					30/60,
					35/70,
					40/80,
					45/90,
					50/100,
					75/150,
					100/200_
				)_
			)_
	#edit_
		)
					
					

_New Parent Item, 0, isparent(yes),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, ,"New Parent Item"))
					

_New Alternative Attacks, 0, isparent(yes), childprofile(1), page(B61), cat(Innate Attack),
	description(_
			In GCA Alternative Attacks are created using the Parent/Child trait relationship. Look at the Description of "_New Parent Item" for a full description of Parent items in GCA. _
			To create an Alternative Attack in GCA simply add this trait to the character then make all the Attack traits Children of the New Alternative Attack Parent item._
	),
	x(#InputToTagReplace("Please specify a name for this item:", name, ,"New Alternative Attack"))
					
					
					

<Exotic Physical>
Racial Skill Bonus ([skill]), 2/4, page(B452), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Talents),
	gives(+1 to SK:[skill]), noresync(yes),
	x(#InputReplace("Please enter the name of the skill:", "[skill]", , "Racial Skill Bonus"))
					

Racial Spell Bonus ([spell]), 2/4, page(B452), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Talents),
	gives(+1 to SK:[spell]), noresync(yes),
	x(#InputReplace("Please enter the name of the spell:", "[spell]", , "Racial spell Bonus"))
					

Racial Skill Point Bonus ([skill]), 1/2, page(B452), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Talents),
	gives(+1pts to SK:[skill]), noresync(yes),
	x(#InputReplace("Please enter the name of the skill:", "[skill]", , "Racial Skill Point Bonus"))
					

Racial Spell Point Bonus ([spell]), 1/2, page(B452), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Talents),
	gives(+1pts to SP:[spell]), noresync(yes),
	x(#InputReplace("Please enter the name of the spell:", "[spell]", , "Racial Spell Point Bonus"))
					

Racial Skill Bonus (%skillslist%), 2/4, page(B452), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Talents),
	gives(+1 to SK:%skillslist%), noresync(yes),
	x(#ChoiceList(_
			name(skills),
			title(Racial Skill Bonus: Choose a Skill),
			text(Choose which skill the Racial Skill Bonus is for:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				)_
			)_
		)
					

Racial Skill Point Bonus (%skillslist%), 1/2, page(B452), cat(Exotic Mental, Exotic Physical, Exotic, Mental, Physical, Talents),
	gives(+1pts to SK:%skillslist%), noresync(yes),
	x(#ChoiceList(_
			name(skills),
			title(Racial Skill Bonus: Choose a Skill),
			text(Choose which skill the Racial Skill Bonus is for:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				)_
			)_
		)
					
					

360° Vision, 25, mods(360° Vision), page(B34), cat(Exotic, Physical), taboo(DI:Blindness, AD:Peripheral Vision)
					

Acute [sense], 2/4, page(B35), cat(Exotic, Physical),
	x(#InputReplace("Specify the exact name of the specialized sense that is superior (Scanning Sense, Vibration Sense, etc.):", "[sense]", , "Acute Sense")),
	gives(+1 to ST:[sense]::skillscore, +1 to AD:[sense]::skillscore), needs(AD:[sense])
					
					
					

* Detect, Scanning Sense, Vibration Sense
* Radar, Imaging Radar, Ladar, Para-Radar, Sonar
* Ultrahearing/Ultrasonic Speech
* Ultravision
* Subsonic Hearing/Subsonic Speech
					

* From Powers
* Active IR, T-Ray Vision
					
					
					
					

Affliction, 10/20, mods(Affliction, Affliction Enhancements, Affliction Limitations, _Attack Enhancements, _Attack Limitations, Alternative Attack), page(B35), cat(Exotic, Physical, Natural Attacks),
	damage(HT-$solver(me::level - 1)),
	damtype(aff), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1),
	skillused(%examplealiaslist%), mode(Primary),
	x(#InputToTag("Please describe the nature of the Affliction:", nameext, , "Affliction"),
	#ChoiceList(_
			name(example),
			title(Affliction: Choose a Skill),
			text(Choose a Skill that will be used with this Affliction. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these", 
				"Will",
				"DX, Brawling", 
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)",
				"HT", 
				"ST", 
				"IQ", 
				"DX", 
				"Perception"_
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"ST:HT", 
				"ST:ST", 
				"ST:IQ", 
				"ST:DX", 
				"ST:Perception"_
				)_
			)_
	), noresync(yes)
					
					

Amphibious, 10, page(B40), cat(Exotic, Physical),
	replacetags(in "ST:Water Move" with "mainwin(11), noresync(yes)")
					

Arm DX, 12/24, mods(Arm DX), page(B40), cat(Exotic, Physical),
	initmods(_
			One arm, *1, group(Arm DX) _
			)
					

Arm ST, 3/6, mods(Arm ST, Punch/Kick), page(B40), cat(Exotic, Physical), taboo(DI:Weak Arms),
	conditional(+1 to ST:ST),
	damage(_
		$if(@hasmod(One Arm) THEN @sw(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @sw(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @sw(ST:Three Arm Striking ST::score) ELSE 0))) _
		| $if(@hasmod(One Arm) THEN @thr(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @thr(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @thr(ST:Three Arm Striking ST::score) ELSE 0))) _
		| $if(@hasmod(One Arm) THEN @thr(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @thr(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @thr(ST:Three Arm Striking ST::score) ELSE 0))) _
			-1 + @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0)) + _
			@max(_
				@if("SK:Brawling::level" > ST:DX+1 THEN $if(@hasmod(One Arm) THEN @basethdice(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @basethdice(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @basethdice(ST:Three Arm Striking ST::score) ELSE 0))) ELSE 0),
				@if("SK:Boxing::level" = ST:DX+1 then $if(@hasmod(One Arm) THEN @basethdice(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @basethdice(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @basethdice(ST:Three Arm Striking ST::score) ELSE 0))) else @if("SK:Boxing::level" > ST:DX+1 then 2 * $if(@hasmod(One Arm) THEN @basethdice(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @basethdice(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @basethdice(ST:Three Arm Striking ST::score) ELSE 0))) else 0)),
				@if("SK:Karate::level" = ST:DX then $if(@hasmod(One Arm) THEN @basethdice(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @basethdice(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @basethdice(ST:Three Arm Striking ST::score) ELSE 0))) else @if("SK:Karate::level" > ST:DX then 2 * $if(@hasmod(One Arm) THEN @basethdice(ST:One Arm Striking ST::score) ELSE $if(@hasmod(Two Arms) THEN @basethdice(ST:Two Arm Striking ST::score) ELSE $if(@hasmod(Three Arms) THEN @basethdice(ST:Three Arm Striking ST::score) ELSE 0))) else 0)) _
			) _
		),
	reach(N/A|N/A|C), reachbasedon(ST:Two Arm Reach|ST:Two Arm Reach|ST:Two Arm Reach),
	parry(||0),
	damtype(sw|thr|$if("AD:Claws (Sharp Claws)::level" = 1 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 THEN "cut/imp" ELSE "cr")))),
	skillused(||ST:DX, SK:Brawling, SK:Boxing, SK:Karate), mode(swing|thrust|punch),
	initmods(_
			One arm, *1, gives(+owner::level to ST:One Arm Lifting ST, +owner::level to ST:One Arm Striking ST), group(Arm ST) _
			)
					

Binding, 2/4, mods(Binding, _Attack Enhancements, _Attack Limitations, Alternative Attack), page(B40), cat(Exotic, Physical, Natural Attacks),
	skillused(%examplealiaslist%), mode(bind), damage(ST%level), damtype(spcl.), acc(3), rangemax(100), rof(1), shots(), rcl(1),
	x(_
	#InputToTag("Please describe the nature of the Binding:", nameext, , "Binding"),
	#ChoiceList(_
			name(example),
			title(Binding: Choose a Skill),
			text(Choose a Skill that will be used with Binding. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these", 
				"Will",
				"DX, Brawling", 
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)"_
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2"_
				)_
			)_
	), noresync(yes)

					

Brachiator, 5, gives(+2 To SK:Climbing), page(B41), cat(Exotic, Physical),
	replacetags(in "ST:Brachiation Move" with "hide(), display(yes), mainwin(11), noresync(yes)")
Breath-Holding, 2/4, page(B41), cat(Exotic, Physical)
Catfall, 10, page(B41), cat(Exotic, Physical),
	skillused(ST:DX), mode(halve damage from a fall)
Chameleon, 5/10, mods(Chameleon), page(B41), cat(Exotic, Physical),
	conditional(_
			+2 to SK:Stealth when "perfectly still, unless clothed",
			+1 to SK:Stealth when "moving, unless clothed",
			+1 to SK:Stealth when "perfectly still, and clothed"_
			)
				

Claws (Blunt Claws), 3, page(B42), cat(Exotic, Physical, Natural Attacks), mods(Claws), taboo("AD:Claws (Hooves)", "AD:Claws(Sharp Claws)", "AD:Claws (Talons)", "AD:Claws (Long Talons)")
Claws (Hooves), 3, page(B42), cat(Exotic, Physical, Natural Attacks), mods(Claws), taboo("AD:Claws (Blunt Claws)", "AD:Claws(Sharp Claws)", "AD:Claws (Talons)", "AD:Claws (Long Talons)")
Claws (Sharp Claws), 5, page(B42), cat(Exotic, Physical, Natural Attacks), mods(Claws), taboo("AD:Claws (Blunt Claws)", "AD:Claws (Hooves)", "AD:Claws (Talons)", "AD:Claws (Long Talons)")
Claws (Talons), 8, page(B42), cat(Exotic, Physical, Natural Attacks), mods(Claws), taboo("AD:Claws (Blunt Claws)", "AD:Claws (Hooves)", "AD:Claws(Sharp Claws)", "AD:Claws (Long Talons)")
Claws (Long Talons), 11, page(B42), cat(Exotic, Physical, Natural Attacks), mods(Claws), taboo("AD:Claws (Blunt Claws)", "AD:Claws (Hooves)", "AD:Claws(Sharp Claws)", "AD:Claws (Talons)")
					

Clinging, 20, mods(Clinging), page(B43), cat(Exotic, Physical),
	mode(grab ahold|hang on), skillused(ST:DX|ST:ST)
Constriction Attack, 15, mods(_Attack Enhancements, _Attack Limitations), page(B43), cat(Exotic, Physical, Natural Attacks),
	damage(ST vs. ST/HT), damtype (cr), reach(C), reachbasedon(0), skillused(ST:ST), mode(Primary), parry(No)
Damage Resistance, 5/10, gives(+1 To ST:DR), mods(Damage Resistance, Limited Defense), page(B46), cat(Exotic, Physical)
Dark Vision, 25, mods(Dark Vision), page(B47), cat(Exotic, Physical), taboo(AD:Night Vision, DI:Night Blindness, DI:Blindness)
Digital Mind, 5, page(B48), cat(Exotic, Physical)
Discriminatory Hearing, 15, page(B49), cat(Exotic, Physical), taboo(DI:Deafness), conditional(+4 to SK:Shadowing when "following a noisy target"), gives(+4 to ST:Hearing),
	skillused(ST:IQ|ST:Hearing), mode(memorize a sound|Hear)
Discriminatory Smell, 15, conditional(+4 to SK:Tracking when "scent is a factor", +4 to ST:Taste/Smell when "it involves Smell"), mods(Discriminatory Smell), page(B49), cat(Exotic, Physical), taboo("DI:No Sense of Smell/Taste"),
	skillused(ST:IQ|ST:Taste/Smell+4), mode(memorize a scent|Smell)
Discriminatory Taste, 10, page(B49), cat(Exotic, Physical), taboo("DI:No Sense of Smell/Taste"), conditional(+4 to ST:Taste/Smell when "it involves Taste"),
	skillused(ST:IQ|ST:Taste/Smell+4), mode(recognize a taste|Taste)
Doesn't Breathe, 20, mods(Doesn't Breathe), page(B49), cat(Exotic, Physical), taboo(AD:Filter Lungs)
Doesn't Eat or Drink, 10, page(B50), cat(Exotic, Physical), taboo(AD:Reduced Consumption, DI:Increased Consumption, DI:Restricted Diet, AD:Universal Digestion, DI:Slow Eater, DI:Gluttony)
Doesn't Sleep, 20, page(B50), cat(Exotic, Physical), taboo(AD:Extra Sleep, DI:Less Sleep, DI:Sleepy, DI:Slow Riser, DI:Insomniac)
Elastic Skin, 20, gives(+4 To SK:Disguise), page(B51), cat(Exotic, Physical)
					

//Enhanced Move (Ground), 20/40, gives(+1 To ST:Enhanced Ground Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical),
//	replacetags(in ST:Ground Move with "mainwin(11), noresync(yes)")
Enhanced Move (Ground), 10/20, gives(+0.5 To ST:Enhanced Ground Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical),
	replacetags(in ST:Ground Move with "mainwin(11), noresync(yes)"),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)
//Enhanced Move (Air), 20/40, gives(+1 To ST:Enhanced Air Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical)
Enhanced Move (Air), 10/20, gives(+0.5 To ST:Enhanced Air Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)
//Enhanced Move (Space), 20/40, gives(+1 To ST:Enhanced Space Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical)
Enhanced Move (Space), 10/20, gives(+0.5 To ST:Enhanced Space Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)
//Enhanced Move (Water), 20/40, gives(+1 To ST:Enhanced Water Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical)
Enhanced Move (Water), 10/20, gives(+0.5 To ST:Enhanced Water Move), mods(Enhanced Move), page(B52), cat(Exotic, Physical),
	levelnames("1/2",1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,37,37.5,38,38.5,39,39.5,40,40.5,41,41.5,42,42.5,43,43.5,44,44.5,45,45.5,46,46.5,47,47.5,48,48.5,49,49.5,50), upto(100)
					

Enhanced Tracking, 5/10, page(B53), cat(Exotic, Physical)
Extended Lifespan, 2/4, page(B53), cat(Exotic, Physical), taboo(AD:Unaging, DI:Short Lifespan, DI:Terminally Ill),
	levelnames(x2, x4, x8, x16, x32, x64, x128), upto(7)
					

Extra Arms, 10/20, mods(Extra Arms), page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:One Arm, DI:Quadriplegic)
Extra-Flexible Arms (1 Arm), 5, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Extra-Flexible (2 Arms))
Extra-Flexible Arms (2 Arms), 10, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Extra-Flexible (1 Arm), DI:One Arm)
Long Arms (1 Arm), 10/20, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Arms (2 Arms), DI:Short Arms), gives(+1 to ST:One Arm SM)
Long Arms (2 Arms), 20/40, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Arms (1 Arm), DI:Short Arms, DI:One Arm), gives(+1 to ST:One Arm SM, +1 to ST:Two Arm SM)
					

Extra Head, 15/30, mods(Extra Head), page(B54), cat(Exotic, Physical)
					

Extra Legs (3 Legs), 5, mods(Extra Legs), page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Legs, AD:Extra Legs (4 Legs), AD:Extra Legs (5 Legs), AD:Extra Legs (6 Legs), AD:Extra Legs (7+ Legs), DI:Quadriplegic, DI:Cannot Kick)
Extra Legs (4 Legs), 5, mods(Extra Legs), page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Legs, AD:Extra Legs (3 Legs), AD:Extra Legs (5 Legs), AD:Extra Legs (6 Legs), AD:Extra Legs (7+ Legs), DI:Quadriplegic, DI:Cannot Kick)
Extra Legs (5 Legs), 10, mods(Extra Legs), page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Legs, AD:Extra Legs (3 Legs), AD:Extra Legs (4 Legs), AD:Extra Legs (6 Legs), AD:Extra Legs (7+ Legs), DI:Quadriplegic, DI:Cannot Kick)
Extra Legs (6 Legs), 10, mods(Extra Legs), page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Legs, AD:Extra Legs (3 Legs), AD:Extra Legs (4 Legs), AD:Extra Legs (5 Legs), AD:Extra Legs (7+ Legs), DI:Quadriplegic, DI:Cannot Kick)
Extra Legs (7+ Legs), 15, mods(Extra Legs), page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Long Legs, AD:Extra Legs (3 Legs), AD:Extra Legs (4 Legs), AD:Extra Legs (5 Legs), AD:Extra Legs (6 Legs), DI:Quadriplegic, DI:Cannot Kick),
	x(#InputReplace("Please specify the number of legs the character posses (minimum 7)", "7+", "7", "Extra Legs"))
					

Long Legs, 10/20, page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(AD:Extra Legs (3 Legs), AD:Extra Legs (4 Legs), AD:Extra Legs (5 Legs), AD:Extra Legs (6 Legs), AD:Extra Legs (7+ Legs), DI:Quadriplegic), gives(+1 to ST:Leg Reach)
					

Extra Mouth, 5/10, page(B55), cat(Exotic, Physical)
Filter Lungs, 5, page(B55), cat(Exotic, Physical), taboo(AD:Doesn't Breathe)
Flight, 40, mods(Flight), page(B56), cat(Exotic, Physical),
	replacetags(in "ST:Air Move" with "hide(), display(yes), mainwin(11), noresync(yes)", in "ST:Space Move" with "hide(), display(yes), mainwin(11), noresync(yes)")
					

Growth, 10/20, mods(Growth), page(B58), cat(Exotic, Physical)
Hermaphromorph, 5, page(B59), cat(Exotic, Physical)
Hyperspectral Vision, 25, mods(Hyperspectral Vision), page(B60), cat(Exotic, Physical), taboo(AD:Infravision, AD:Ultravision, DI:Blindness),
	gives(+3 to ST:Vision, +3 to SK:Tracking), conditional(+3 to GR:Hyperspectral Vision when "spotting hidden clues or objects"),
	skillused(ST:Perception+3, ST:Vision), mode(See)
Infravision, 10, mods(Infravision), page(B60), cat(Exotic, Physical), taboo(AD:Hyperspectral Vision, DI:Blindness),
	conditional(+3 to SK:Tracking when "heat trail is less than an hour old", +2 to ST:Vision when "target emits heat", +2 to AD:Infravision when "target emits heat"),
	skillused(ST:Perception, ST:Vision), mode(See)
Injury Tolerance, 0, displaycost(variable), mods(Injury Tolerance), page(B60), cat(Exotic, Physical), x(#buildit)
					

************************************************************************************************************************
* INNATE ATTACKS
************************************************************************************************************************
*respond 1 for Based On gives _None of these
*respond 2 for Based On gives Will
*respond 3 for Based On gives DX, Brawling
*respond 4 for Based On gives Innate Attack (Beam)
*respond 5 for Based On gives Innate Attack (Breath)
*respond 6 for Based On gives Innate Attack (Gaze)
*respond 7 for Based On gives Innate Attack (Projectile)
					

Burning Attack, 5/10, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Burning Attack Enhancements, Burning Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(bu), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Burning Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these", 
				"Will",
				"DX, Brawling", 
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)					

Corrosion Attack, 10/20, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Corrosion Attack Enhancements, Corrosion Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(cor), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Corrosion Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Crushing Attack, 5/10, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Crushing Attack Enhancements, Crushing Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(cr), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(n/a), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Crushing Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Cutting Attack, 7/14, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Cutting Attack Enhancements, Cutting Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(cut), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Cutting Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Fatigue Attack, 10/20, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Fatigue Attack Enhancements, Fatigue Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(fat), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Fatigue Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 

			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Impaling Attack, 8/16, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Impaling Attack Enhancements, Impaling Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(imp), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Impaling Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 
			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Small Piercing Attack, 3/6, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Small Piercing Attack Enhancements, Small Piercing Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(pi-), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Small Piercing Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 
			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Piercing Attack, 5/10, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Piercing Attack Enhancements, Piercing Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(pi), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Piercing Attack Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 
			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Large Piercing Attack, 6/12, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Large Piercing Attack Enhancements, Large Piercing Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(pi+), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Large Piercing Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 
			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Huge Piercing Attack, 8/16, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Huge Piercing Attack Enhancements, Huge Piercing Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(pi++), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Huge Piercing Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 
			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Toxic Attack, 4/8, page(B61), cat(Exotic, Physical, Innate Attack, Natural Attacks),
	mods(_Attack Enhancements, _Attack Limitations, Alternative Attack, Toxic Attack Enhancements, Toxic Attack Limitations, Innate Attack),
	upto(@if(@hasmod(Partial Dice (Does only 1 pt)) THEN 1)),
	damage($solver(%level)d), damtype(tox), acc(3), rangehalfdam(10), rangemax(100), rof(1), shots(), rcl(1), reach(), parry(0),
	skillused(%examplealiaslist%), mode(Primary), reachbasedon(0),
	x(#ChoiceList(_
			name(example),
			title(Toxic Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"DX, Brawling",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				), 
			aliaslist(_
				"",
				"ST:Will",
				"ST:DX, SK:Brawling", 
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2", 
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	), noresync(yes)
					

Lifting ST, 3/6, gives(+1 to ST:Lifting ST), conditional(+1 to ST:ST), mods(Lifting ST, No Fine Manipulator, Size), page(B65), cat(Exotic, Physical)
Metabolism Control, 5/10, mods(Metabolism Control), page(B68), cat(Exotic, Physical), taboo(TE:Machine)
Microscopic Vision, 5/10, page(B68), cat(Exotic, Physical), taboo(DI:Blindness)
Nictitating Membrane, 1/2, page(B71), cat(Exotic, Physical)
Obscure, 2/4, mods(Obscure), page(B72), cat(Exotic, Physical), upto(10), radius(2),
	x(#InputToTag("You must pick a sense which Obscure ''jams'':", nameext, , "Obscure"))
Parabolic Hearing, 4/8, page(B72), cat(Exotic, Physical), taboo(DI:Deafness)
Payload, 1/2, mods(Payload), page(B74), cat(Exotic, Physical)
Penetrating Vision, 10/20, mods(Penetrating Vision), page(B74), cat(Exotic, Physical), taboo(DI:Blindness)
Permeation, 5/10/20/40, mods(Permeation), levelnames(Rare, Occasional, Common, Very Common), page(B75), upto(4), cat(Exotic, Physical)
Pressure Support, 5/10, page(B77), upto(3), cat(Exotic, Physical)
Protected [Sense], 5, page(B78), cat(Exotic, Physical),
	x(#InputReplace("Please enter the sense that is protected:", "[Sense]", "Sense", "Protected Sense"))
Radiation Tolerance, 5/10, page(B79), upto(9), cat(Exotic, Physical),
	levelnames(PF 2, PF 5, PF 10, PF 20, PF 50, PF 100, PF 200, PF 500, "PF 1,000")
Recovery, 10, page(B80), cat(Exotic, Physical)
Regeneration, 10/25/50/100/150, levelnames(Slow: 1HP/12Hr, Regular: 1HP/Hr, Fast: 1HP/Min, Very Fast: 1HP/Sec, Extreme: 10 HP/Sec), mods(Regeneration), page(B80), upto(5), cat(Exotic, Physical), taboo(DI:Slow Healing, DI:Unhealing, AD:Rapid Healing)
Regrowth, 40, mods(Regrowth), page(B80), cat(Exotic, Physical),
	taboo(DI:Missing Digit,
		DI:One Eye::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:One Arm::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:Lame (Crippled Legs)::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:Lame (Legless)::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:Lame (Missing Legs)::level > @if(@hasmod(Minor) THEN 1 ELSE 0),
		DI:One Hand::level > @if(@hasmod(Minor) THEN 1 ELSE 0) _
		)
					

Radar, 20, mods(Scanning Sense), page(B81), cat(Exotic, Physical), rangehalfdam(2000),
	skillused(ST:Perception), mode(''See'')
Imaging Radar, 20, mods(Scanning Sense), page(B81), cat(Exotic, Physical), rangehalfdam(200),
	skillused(ST:Perception), mode(''See'')
Ladar, 20, mods(Scanning Sense), page(B81), cat(Exotic, Physical), rangehalfdam(200),
	skillused(ST:Perception), mode(''See'')
Para-Radar, 40, mods(Scanning Sense), page(B81), cat(Exotic, Physical), rangehalfdam(200),
	skillused(ST:Perception), mode(''See'')
Sonar, 20, mods(Scanning Sense), page(B81), cat(Exotic, Physical), rangehalfdam(20), rangemax(2000),
	skillused(ST:Perception), mode(''See'')
					

Sealed, 15, page(B82), cat(Exotic, Physical)
See Invisible, 15, page(B83), cat(Exotic, Physical),
	x(#InputToTag("Specify the type of Invisibility you can see (e.g. electromagnetic vision, sonar, magnetic fields, etc.):", nameext, , "See Invisible"))
Sensitive Touch, 10, page(B83), cat(Exotic, Physical), taboo(DI:Numb)
Shadow Form, 50, mods(Shadow Form Advantage), page(B83), cat(Exotic, Physical), taboo(DI:Shadow Form)
					

Alternate Form, 15/30, mods(Alternate Form), page(B83), cat(Exotic, Physical), levelnames(,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100),
	x(_
		#InputToTagReplace("Please specify the form or forms you can change into:", nameext, , "Alternate Form"),
		#buildit_
	)
Alternate Form (Cosmetic), 15/30, displaycost(8/15/+), page(B83), cat(Exotic, Physical),
	x(#InputToTagReplace("Please specify the form or forms you can change into:", nameext, , "Alternate Form (Cosmetic)")), levelnames(,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100),
	initmods(Cosmetic, -50%, group(Alternate Form))
Morph, 100, mods(Morph), page(B83), cat(Exotic, Physical), taboo(AD:Morph (Cosmetic))
Morph (Cosmetic), 100, displaycost(50), page(B83), cat(Exotic, Physical),
	initmods(Cosmetic, -50%, group(Morph))
					

Shrinking, 5/10, mods(Shrinking), page(B85), cat(Exotic, Physical)
					

Silence, 5/10, page(B85), cat(Exotic, Physical), taboo(DI:Noisy),
	conditional(+1 to SK:Stealth when "moving, vs. hearing only", +2 to SK:Stealth when "standing still, vs. hearing only")
					

Slippery, 2/4, page(B85), cat(Exotic, Physical),
	conditional(_
			+1 to ST:ST when "slipping restraints, breaking free in close combat, or squeezing through narrow openings",
			+1 to ST:DX when "slipping restraints, breaking free in close combat, or squeezing through narrow openings",
			+1 to SK:Escape when "slipping restraints, breaking free in close combat, or squeezing through narrow openings" _
			)
Speak Underwater, 5, mods(Speak Underwater), page(B87), cat(Exotic, Physical), taboo(DI:Mute, DI:Cannot Speak)
Short Spines, 1, page(B88), cat(Exotic, Physical, Natural Attacks), taboo(AD:Long Spines),
	damage(1d-2), damtype(imp), reach(C), reachbasedon(0), skillused(ST:DX-4), mode(Primary), parry(No)
Long Spines, 3, page(B88), cat(Exotic, Physical, Natural Attacks), taboo(AD:Short Spines),
	damage(1d), damtype(imp), reach(C), reachbasedon(0), skillused(ST:DX-4), mode(Primary), parry(No)
Stretching, 6/12, page(B88), cat(Exotic, Physical)
					

Striker (Crushing), 5/10, displaycost(5), mods(Striker, Alternative Attack), page(B88), cat(Exotic, Physical, Natural Attacks),
	levelnames([Description],2 [Description],3 [Description],4 [Description],5 [Description],6 [Description],7 [Description],8 [Description],9 [Description],10 [Description],11 [Description],12 [Description],13 [Description],14 [Description],15 [Description],16 [Description],17 [Description],18 [Description],19 [Description],20 [Description],21 [Description],22 [Description],23 [Description],24 [Description],25 [Description],26 [Description],27 [Description],28 [Description],29 [Description],30 [Description],31 [Description],32 [Description],33 [Description],34 [Description],35 [Description],36 [Description],37 [Description],38 [Description],39 [Description],40 [Description],41 [Description],42 [Description],43 [Description],44 [Description],45 [Description],46 [Description],47 [Description],48 [Description],49 [Description],50 [Description],51 [Description],52 [Description],53 [Description],54 [Description],55 [Description],56 [Description],57 [Description],58 [Description],59 [Description],60 [Description],61 [Description],62 [Description],63 [Description],64 [Description],65 [Description],66 [Description],67 [Description],68 [Description],69 [Description],70 [Description],71 [Description],72 [Description],73 [Description],74 [Description],75 [Description],76 [Description],77 [Description],78 [Description],79 [Description],80 [Description],81 [Description],82 [Description],83 [Description],84 [Description],85 [Description],86 [Description],87 [Description],88 [Description],89 [Description],90 [Description],91 [Description],92 [Description],93 [Description],94 [Description],95 [Description],96 [Description],97 [Description],98 [Description],99 [Description],100 [Description]),
	x(#InputReplace("Describe this striker","[Description]",,Striker (Crushing))),
	damage(thr+@if(@hasmod(Weak) then 0 else owner::basethdice) + _
		@max(_
				@if("SK:Brawling::level" > ST:DX+1 then owner::basethdice else 0), 
				@if("SK:Karate::level" = ST:DX then owner::basethdice else @if("SK:Karate::level" > ST:DX then 2 * owner::basethdice else 0))_
		)),
	damtype(cr), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Karate), reachbasedon(0), mode([Description])
Striker (Piercing), 5/10, displaycost(10), mods(Striker, Alternative Attack), page(B88), cat(Exotic, Physical, Natural Attacks),
	levelnames([Description],2 [Description],3 [Description],4 [Description],5 [Description],6 [Description],7 [Description],8 [Description],9 [Description],10 [Description],11 [Description],12 [Description],13 [Description],14 [Description],15 [Description],16 [Description],17 [Description],18 [Description],19 [Description],20 [Description],21 [Description],22 [Description],23 [Description],24 [Description],25 [Description],26 [Description],27 [Description],28 [Description],29 [Description],30 [Description],31 [Description],32 [Description],33 [Description],34 [Description],35 [Description],36 [Description],37 [Description],38 [Description],39 [Description],40 [Description],41 [Description],42 [Description],43 [Description],44 [Description],45 [Description],46 [Description],47 [Description],48 [Description],49 [Description],50 [Description],51 [Description],52 [Description],53 [Description],54 [Description],55 [Description],56 [Description],57 [Description],58 [Description],59 [Description],60 [Description],61 [Description],62 [Description],63 [Description],64 [Description],65 [Description],66 [Description],67 [Description],68 [Description],69 [Description],70 [Description],71 [Description],72 [Description],73 [Description],74 [Description],75 [Description],76 [Description],77 [Description],78 [Description],79 [Description],80 [Description],81 [Description],82 [Description],83 [Description],84 [Description],85 [Description],86 [Description],87 [Description],88 [Description],89 [Description],90 [Description],91 [Description],92 [Description],93 [Description],94 [Description],95 [Description],96 [Description],97 [Description],98 [Description],99 [Description],100 [Description]),
	x(#InputReplace("Describe this striker","[Description]",,Striker (Piercing))),
	damage(thr+@if(@hasmod(Weak) then 0 else owner::basethdice) + _
		@max(_
				@if("SK:Brawling::level" > ST:DX+1 then owner::basethdice else 0), 
				@if("SK:Karate::level" = ST:DX then owner::basethdice else @if("SK:Karate::level" > ST:DX then 2 * owner::basethdice else 0))_
		)),
	damtype(pi), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Karate), mode([Description]), reachbasedon(0)
Striker (Large Piercing), 6/12, displaycost(6), mods(Striker, Alternative Attack), page(B88), cat(Exotic, Physical, Natural Attacks),
	levelnames([Description],2 [Description],3 [Description],4 [Description],5 [Description],6 [Description],7 [Description],8 [Description],9 [Description],10 [Description],11 [Description],12 [Description],13 [Description],14 [Description],15 [Description],16 [Description],17 [Description],18 [Description],19 [Description],20 [Description],21 [Description],22 [Description],23 [Description],24 [Description],25 [Description],26 [Description],27 [Description],28 [Description],29 [Description],30 [Description],31 [Description],32 [Description],33 [Description],34 [Description],35 [Description],36 [Description],37 [Description],38 [Description],39 [Description],40 [Description],41 [Description],42 [Description],43 [Description],44 [Description],45 [Description],46 [Description],47 [Description],48 [Description],49 [Description],50 [Description],51 [Description],52 [Description],53 [Description],54 [Description],55 [Description],56 [Description],57 [Description],58 [Description],59 [Description],60 [Description],61 [Description],62 [Description],63 [Description],64 [Description],65 [Description],66 [Description],67 [Description],68 [Description],69 [Description],70 [Description],71 [Description],72 [Description],73 [Description],74 [Description],75 [Description],76 [Description],77 [Description],78 [Description],79 [Description],80 [Description],81 [Description],82 [Description],83 [Description],84 [Description],85 [Description],86 [Description],87 [Description],88 [Description],89 [Description],90 [Description],91 [Description],92 [Description],93 [Description],94 [Description],95 [Description],96 [Description],97 [Description],98 [Description],99 [Description],100 [Description]),
	x(#InputReplace("Describe this striker","[Description]",,Striker (Large Piercing))),
	damage(thr+@if(@hasmod(Weak) then 0 else owner::basethdice) + _
		@max(_
				@if("SK:Brawling::level" > ST:DX+1 then owner::basethdice else 0), 
				@if("SK:Karate::level" = ST:DX then owner::basethdice else @if("SK:Karate::level" > ST:DX then 2 * owner::basethdice else 0))_
		)),
	damtype(pi+), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Karate),mode([Description]), reachbasedon(0)
Striker (Cutting), 7/14, displaycost(7), mods(Striker, Alternative Attack), page(B88), cat(Exotic, Physical, Natural Attacks),
	levelnames([Description],2 [Description],3 [Description],4 [Description],5 [Description],6 [Description],7 [Description],8 [Description],9 [Description],10 [Description],11 [Description],12 [Description],13 [Description],14 [Description],15 [Description],16 [Description],17 [Description],18 [Description],19 [Description],20 [Description],21 [Description],22 [Description],23 [Description],24 [Description],25 [Description],26 [Description],27 [Description],28 [Description],29 [Description],30 [Description],31 [Description],32 [Description],33 [Description],34 [Description],35 [Description],36 [Description],37 [Description],38 [Description],39 [Description],40 [Description],41 [Description],42 [Description],43 [Description],44 [Description],45 [Description],46 [Description],47 [Description],48 [Description],49 [Description],50 [Description],51 [Description],52 [Description],53 [Description],54 [Description],55 [Description],56 [Description],57 [Description],58 [Description],59 [Description],60 [Description],61 [Description],62 [Description],63 [Description],64 [Description],65 [Description],66 [Description],67 [Description],68 [Description],69 [Description],70 [Description],71 [Description],72 [Description],73 [Description],74 [Description],75 [Description],76 [Description],77 [Description],78 [Description],79 [Description],80 [Description],81 [Description],82 [Description],83 [Description],84 [Description],85 [Description],86 [Description],87 [Description],88 [Description],89 [Description],90 [Description],91 [Description],92 [Description],93 [Description],94 [Description],95 [Description],96 [Description],97 [Description],98 [Description],99 [Description],100 [Description]),
	x(#InputReplace("Describe this striker","[Description]",,Striker (Cutting))),
	 damage(thr+@if(@hasmod(Weak) then 0 else owner::basethdice) + _
		@max(_
				@if("SK:Brawling::level" > ST:DX+1 then owner::basethdice else 0), 
				@if("SK:Karate::level" = ST:DX then owner::basethdice else @if("SK:Karate::level" > ST:DX then 2 * owner::basethdice else 0))_
		)),
	damtype(cut), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Karate), mode([Description]), reachbasedon(0)
Striker (Impaling), 8/16, displaycost(8), mods(Striker, Alternative Attack), page(B88), cat(Exotic, Physical, Natural Attacks),
	levelnames([Description],2 [Description],3 [Description],4 [Description],5 [Description],6 [Description],7 [Description],8 [Description],9 [Description],10 [Description],11 [Description],12 [Description],13 [Description],14 [Description],15 [Description],16 [Description],17 [Description],18 [Description],19 [Description],20 [Description],21 [Description],22 [Description],23 [Description],24 [Description],25 [Description],26 [Description],27 [Description],28 [Description],29 [Description],30 [Description],31 [Description],32 [Description],33 [Description],34 [Description],35 [Description],36 [Description],37 [Description],38 [Description],39 [Description],40 [Description],41 [Description],42 [Description],43 [Description],44 [Description],45 [Description],46 [Description],47 [Description],48 [Description],49 [Description],50 [Description],51 [Description],52 [Description],53 [Description],54 [Description],55 [Description],56 [Description],57 [Description],58 [Description],59 [Description],60 [Description],61 [Description],62 [Description],63 [Description],64 [Description],65 [Description],66 [Description],67 [Description],68 [Description],69 [Description],70 [Description],71 [Description],72 [Description],73 [Description],74 [Description],75 [Description],76 [Description],77 [Description],78 [Description],79 [Description],80 [Description],81 [Description],82 [Description],83 [Description],84 [Description],85 [Description],86 [Description],87 [Description],88 [Description],89 [Description],90 [Description],91 [Description],92 [Description],93 [Description],94 [Description],95 [Description],96 [Description],97 [Description],98 [Description],99 [Description],100 [Description]),
	x(#InputReplace("Describe this striker","[Description]",,Striker (Impaling))),
	damage(thr+@if(@hasmod(Weak) then 0 else owner::basethdice) + _
		@max(_
				@if("SK:Brawling::level" > ST:DX+1 then owner::basethdice else 0), 
				@if("SK:Karate::level" = ST:DX then owner::basethdice else @if("SK:Karate::level" > ST:DX then 2 * owner::basethdice else 0))_
		)),
	damtype(imp), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Karate), mode([Description]), reachbasedon(0)
					

Striking ST, 5/10, gives(+1 to ST:Striking ST), mods(Striking ST, No Fine Manipulator, Size), page(B89), cat(Exotic, Physical), conditional(+1 to ST:ST)
					

Subsonic Hearing, 5, mods(Subsonic Hearing), page(B89), cat(Exotic, Physical), taboo(AD:Subsonic Speech, DI:Deafness),
	conditional(+1 to SK:Tracking when "quarry is moving on the ground"),
	skillused(ST:Perception, ST:Hearing), mode(Hear)
Subsonic Speech, 10, mods(Subsonic Speech), page(B89), cat(Exotic, Physical), taboo(AD:Subsonic Hearing, DI:Deafness),
	conditional(_
			+1 to SK:Tracking when "quarry is moving on the ground",
			-2 to SK:Fast-Talk _
			),
	skillused(ST:Perception, ST:Hearing), mode(Hear)
					

Super Climbing, 3/6, page(B89), cat(Exotic, Physical)
Super Jump, 10/20, page(B89), cat(Exotic, Physical), gives(+1 to ST:Super Jump)
					

Teeth (Blunt Teeth), 0, page(B91), cat(Exotic, Physical, Natural Attacks), taboo("AD:Teeth (Sharp Teeth)", "AD:Teeth (Sharp Beak)", "AD:Teeth (Fangs)")
Teeth (Sharp Teeth), 1, page(B91), cat(Exotic, Physical, Natural Attacks), taboo("AD:Teeth (Blunt Teeth)", "AD:Teeth (Sharp Beak)", "AD:Teeth (Fangs)", "AD:Vampiric Bite")
Teeth (Sharp Beak), 1, page(B91), cat(Exotic, Physical, Natural Attacks), taboo("AD:Teeth (Blunt Teeth)", "AD:Teeth (Sharp Teeth)", "AD:Teeth (Fangs)", "AD:Vampiric Bite")
Teeth (Fangs), 2, page(B91), cat(Exotic, Physical, Natural Attacks), taboo("AD:Teeth (Blunt Teeth)", "AD:Teeth (Sharp Teeth)", "AD:Teeth (Sharp Beak)")
					

Telescopic Vision, 5/10, mods(Telescopic Vision), page(B92), cat(Exotic, Physical), taboo(DI:Blindness)
Terrain Adaptation, 5, mods(Terrain Adaptation), page(B93), cat(Exotic, Physical),
	x(#InputToTag("Specify the type of terrain to which you are adapted (ice, sand, snow, etc.):", nameext, , "Terrain Adaptation"))
					

Tunneling, 30, displaycost(30/35/+), mods(Tunneling), page(B94), cat(Exotic, Physical),
	replacetags(in "ST:Tunneling Move" with "hide(), display(yes), mainwin(11), noresync(yes)"),
	initmods(Tunneling Move, +5/+10, group(Tunneling), page(B94)),
	x(#buildit)
*, gives(+1 To ST:Tunneling Move)
					

Ultrahearing, 5, mods(Ultrahearing), page(B89), cat(Exotic, Physical), taboo(AD:Ultrasonic Speech, DI:Deafness),
	skillused(ST:Perception, ST:Hearing), mode(Hear)
Ultrasonic Speech, 10, mods(Ultrasonic Speech), page(B89), cat(Exotic, Physical), taboo(AD:Ultrahearing, DI:Deafness),
	skillused(ST:Perception, ST:Hearing), mode(Hear)
					

Ultravision, 10, mods(Ultravision), page(B94), cat(Exotic, Physical), taboo(AD:Hyperspectral Vision, DI:Blindness),
	conditional(_
			+2 to ST:Vision when "UV is present, to spot clues or hidden objects",
			+3 to GR:Hyperspectral Vision when "UV is present, to spot clues or hidden objects" _
			),
	skillused(ST:Perception+2, ST:Vision+2), mode(See)
					

Unaging, 15, mods(Unaging), page(B95), cat(Exotic, Physical), taboo(AD:Extended Lifespan, DI:Short Lifespan, DI:Self-Destruct, DI:Terminally Ill, AD:Longevity)
Universal Digestion, 5, page(B95), cat(Exotic, Physical), taboo(AD:Doesn't Eat or Drink, DI:Restricted Diet)
Unkillable, 50/100, mods(Unkillable), page(B95), upto(3), cat(Exotic, Physical), taboo(DI:Fragile (Unnatural), AD:Hard to Kill, DI:Easy to Kill), conditional(=-ST:Death Check to ST:Death Check when "you automatically succeed at all Death Checks")
Vacuum Support, 5, page(B96), cat(Exotic, Physical)
Vampiric Bite, 30/35, page(B96), cat(Exotic, Physical, Natural Attacks), taboo("AD:Teeth (Sharp Teeth)", "AD:Teeth (Sharp Beak)"),
	replacetags(in "ST:Bite" with "damtype(cut)"),
	reach(C), reachbasedon(ST:Neck Reach), damage($solver(me::level)), damtype(HP/sec),
	levelnames(1HP/sec, 2HP/sec, 3HP/sec, 4HP/sec, 5HP/sec, 6HP/sec, 7HP/sec, 8HP/sec, 9HP/sec, 10HP/sec, 11HP/sec, 12HP/sec, 13HP/sec, 14HP/sec, 15HP/sec, 16HP/sec, 17HP/sec, 18HP/sec, 19HP/sec, 20HP/sec, 21HP/sec, 22HP/sec, 23HP/sec, 24HP/sec, 25HP/sec, 26HP/sec, 27HP/sec, 28HP/sec, 29HP/sec, 30HP/sec, 31HP/sec, 32HP/sec, 33HP/sec, 34HP/sec, 35HP/sec, 36HP/sec, 37HP/sec, 38HP/sec, 39HP/sec, 40HP/sec, 41HP/sec, 42HP/sec, 43HP/sec, 44HP/sec, 45HP/sec, 46HP/sec, 47HP/sec, 48HP/sec, 49HP/sec, 50HP/sec, 51HP/sec, 52HP/sec, 53HP/sec, 54HP/sec, 55HP/sec, 56HP/sec, 57HP/sec, 58HP/sec, 59HP/sec, 60HP/sec, 61HP/sec, 62HP/sec, 63HP/sec, 64HP/sec, 65HP/sec, 66HP/sec, 67HP/sec, 68HP/sec, 69HP/sec, 70HP/sec, 71HP/sec, 72HP/sec, 73HP/sec, 74HP/sec, 75HP/sec, 76HP/sec, 77HP/sec, 78HP/sec, 79HP/sec, 80HP/sec, 81HP/sec, 82HP/sec, 83HP/sec, 84HP/sec, 85HP/sec, 86HP/sec, 87HP/sec, 88HP/sec, 89HP/sec, 90HP/sec, 91HP/sec, 92HP/sec, 93HP/sec, 94HP/sec, 95HP/sec, 96HP/sec, 97HP/sec, 98HP/sec, 99HP/sec, 100HP/sec)
					

Vibration Sense, 10, mods(Vibration Sense), page(B96), cat(Exotic, Physical),
	skillused(ST:Perception), mode(''See'')
Walk on Air, 20, page(B97), cat(Exotic, Physical)
Walk on Liquid, 15, page(B97), cat(Exotic, Physical)
					

<Exotic Mental>
Altered Time Rate, 100/200, page(B38), cat(Exotic, Mental), taboo(DI:Decreased Time Rate)
Compartmentalized Mind, 50/100, mods(Compartmentalized Mind), page(B43), cat(Exotic, Mental)
					

Detect, 5/10/20/30, mods(Detect), levelnames(Rare, Occasional, Common, Very Common),
	upto(4), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	x(#InputToTag("Specify the specific substance or condition which you can detect:", nameext, , "Detect")),
	mode(Perceive|Analyze), skillused(ST:Perception|ST:IQ)
					

Duplication, 35/70, mods(Duplication), page(B50), cat(Exotic Physical, Exotic, Mental, Physical)
Enhanced Time Sense, 45, gives(+1 To GR:Combat Reflexes, +2 to ST:Fright Check), page(B52), cat(Exotic, Mental), taboo(AD:Combat Reflexes)
Extra Life, 25/50, mods(Extra Life), page(B55), cat(Exotic, Mental)
Insubstantiality, 80, mods(Insubstantiality), page(B62), cat(Exotic Physical, Exotic, Mental, Physical)
Invisibility, 40, mods(Invisibility), page(B63), cat(Exotic, Mental),
	conditional(+9 to SK:Stealth when "being seen would matter"),
	x(#InputToTag("Specify the vision type you're invisible to (e.g. electromagnetic vision, sonar, magnetic fields, etc.):", nameext, "electromagnetic", "Invisibility"))
					

Mimicry, 10, page(B68), cat(Exotic, Mental),
	skillused(ST:IQ), mode(Mimic/Memorize)
					

Mind Control, 50, mods(Mind Control), page(B68), cat(Exotic, Mental),
	skillused(ST:IQ), mode(Controk; R-Will)
Mind Probe, 20, mods(Mind Probe/Reading), page(B69), cat(Exotic, Mental),
	skillused(ST:IQ, SK:Interrogation), mode(Probe; R-Will)
Mind Reading, 30, mods(Mind Probe/Reading), page(B69), cat(Exotic, Mental),
	skillused(ST:IQ), mode(Mind Read; R-Will)
Mind Shield, 4/8, mods(Mind Shield), page(B70), cat(Exotic, Mental)
					

Modular Abilities (Computer Brain), 0, displaycost(6+4/point), mods(Computer Brain, Modular Ability), page(B71), cat(Exotic Physical, Exotic, Mental, Physical),
	x(_
		#InputReplace("Specify the name of this Modular slot","_Per point of abilities","Slot 1",Computer Brain),
		#InputReplace("How many points does this Modular slot have:","[level]","1",Computer Brain),
		#buildit _
	),
	initmods( _Per point of abilities, 6+4/point, formula(6+(me::level*4)), forceformula(yes), group(Computer Brain), page(B71), mods(Modular Abilities), level([level]) )
Modular Abilities (Chip Slots), 0, displaycost(5+3/point), mods(Chip Slots, Modular Ability), page(B71), cat(Exotic Physical, Exotic, Mental, Physical),
	x(_
		#InputReplace("Specify the name of this Modular slot","_Per point of abilities","Slot 1",Chip Slots),
		#InputReplace("How many points does this Modular slot have:","[level]","1",Chip Slots),
		#buildit _
	),
	initmods( _Per point of abilities, 5+3/point, formula(5+(me::level*3)), forceformula(yes), group(Chip Slots), page(B71), mods(Modular Abilities), level([level]) )
Modular Abilities (Super-Memorization), 0, displaycost(5+3/point), mods(Super-Memorization, Modular Ability), page(B71), cat(Exotic Physical, Exotic, Mental, Physical),
	x(_
		#InputReplace("Specify the name of this Modular slot","_Per point of abilities","Slot 1",Super-Memorization),
		#InputReplace("How many points does this Modular slot have:","[level]","1",Super-Memorization),
		#buildit _
	),
	initmods( _Per point of abilities, 5+3/point, formula(5+(me::level*3)), forceformula(yes), group(Super-Memorization), page(B71), mods(Modular Abilities), level([level]) )
Modular Abilities (Cosmic Power), 0, displaycost(10/point), mods(Cosmic Power, Modular Ability), page(B71), cat(Exotic Physical, Exotic, Mental, Physical),
	x(_
		#InputReplace("How many points does this Modular slot have:","[level]","1",Cosmic Power),
		#buildit _
		),
	initmods( Per point of abilities, 10/20, group(Cosmic Power), page(B71), level([level]) )
					

Neutralize, 50, mods(Neutralize), page(B71), cat(Exotic, Mental)
Possession, 100, mods(Possession), page(B75), cat(Exotic, Mental),
	skillused(ST:IQ), mode(Possess; R-Will)
Racial Memory, 15/40, levelnames(Passive, Active), page(B78), upto(2), cat(Exotic, Mental),
	skillused(ST:IQ), mode(Remember)
Snatcher, 80, mods(Snatcher), page(B86), cat(Exotic, Mental),
	skillused(ST:IQ), mode(Snatch)
					

Speak With Animals, 25, mods(Speak With Animals), page(B87), cat(Exotic, Mental)
Speak With Plants, 15, page(B87), cat(Exotic, Mental)
					

Telecommunication (Infrared Communication), 10, mods(Telecommunication, Infrared Communication), page(B91), cat(Exotic Physical, Exotic, Mental, Physical), rangehalfdam(500),
	skillused(ST:IQ), mode(Communicate)
Telecommunication (Laser Communication), 15, mods(Telecommunication, Laser Communication), page(B91), cat(Exotic Physical, Exotic, Mental, Physical), rangehalfdam(50 mi.),
	skillused(ST:IQ), mode(Communicate)
Telecommunication (Radio), 10, mods(Telecommunication, Radio), page(B91), cat(Exotic Physical, Exotic, Mental, Physical), rangehalfdam(10 mi.),
	skillused(ST:IQ), mode(Communicate)
Telecommunication (Telesend), 30, mods(Telecommunication, Telesend), page(B91), cat(Exotic Physical, Exotic, Mental, Physical), rangehalfdam(),
	skillused(ST:IQ), mode(Communicate)
					

Telekinesis, 5/10, mods(Telekinesis), page(B92), cat(Exotic Physical, Exotic, Mental, Physical, Natural Attacks),
		gives(+1 to ST:TK ST, +1 to ST:TK Move),
	conditional(_
			=+4 to GR:High Manual Dexterity when "performing DX-based tasks",
			=+4 to SK:Machinist when "performing fine DX-based tasks",
			=+4 to SK:Mechanic when "performing fine DX-based tasks" _
			),
	replacetags(_
			in "ST:TK ST" with "hide(), display(yes), mainwin(11), noresync(yes)",
			in "ST:TK Basic Lift" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Move" with "hide(), display(yes), mainwin(11), noresync(yes)",
			in "ST:TK No Encumbrance" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Light Encumbrance" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Medium Encumbrance" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Heavy Encumbrance" with "hide(), display(yes), noresync(yes)",
			in "ST:TK X-Heavy Encumbrance" with "hide(), display(yes), noresync(yes)",
			in "ST:TK No Encumbrance Move" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Light Encumbrance Move" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Medium Encumbrance Move" with "hide(), display(yes), noresync(yes)",
			in "ST:TK Heavy Encumbrance Move" with "hide(), display(yes), noresync(yes)",
			in "ST:TK X-Heavy Encumbrance Move" with "hide(), display(yes), noresync(yes)" _
			),
	rangemax(10), mode(thrust|swing), damage(thr|sw), damtype(cr), skillused(ST:DX), parry(0), damagebasedon(ST:TK ST)
					

Temperature Control, 5/10, mods(Temperature Control), page(B92), cat(Exotic Physical, Exotic, Mental, Physical)
					

<Supernatural Physical>
Supernatural Durability, 150, page(B89), cat(Supernatural, Physical), taboo(DI:Low Pain Threshold, AD:High Pain Threshold),
	skillused(ST:Will+3), mode(ignore pain)
					

<Supernatural Mental>
Blessed, 10, page(B40), cat(Supernatural, Mental),
	conditional(+1 to ST:Reaction when "from worshipers of the same religion"),
	skillused(ST:IQ), mode(gain useful insight)
Blessed (Very Blessed), 20, page(B40), cat(Supernatural, Mental),
	conditional(+2 to ST:Reaction when "from worshipers of the same religion"),
	skillused(ST:IQ+5), mode(gain useful insight)
Blessed (Heroic Feat; [Attribute]), 10, page(B40), cat(Supernatural, Mental), conditional(+1d to ST:[Attribute]),
		x(#InputReplace("You must specify an attribute (or with GM approval sub-attribute) which can be increased with Blessed (Heroic Feat):","[Attribute]","","Blessed (Heroic Feat)"))
					

Channeling, 10, page(B41), cat(Supernatural, Mental)
Clairsentience, 50, mods(Clairsentience), page(B42), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(Sense)
Destiny, 5/10/15, levelnames(Minor, Major, Great), page(B48), upto(3), cat(Supernatural, Mental)
Dominance, 20, page(B50), cat(Supernatural, Mental)
Healing, 30, mods(Healing), page(B59), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(Heal)
Higher Purpose, 5, page(B59), cat(Supernatural, Mental),
	x(_
		#InputToTag("Describe your Higher Purpose:" , nameext, , "Higher Purpose") _
	)
					

Illuminated, 15, page(B60), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(Discern Illumiated event)
Jumper (Time), 100, mods(Jumper), page(B64), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(Time Jump)
Jumper (World), 100, mods(Jumper), page(B64), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(World Jump)
Magery 0, 5, mods(Magery 0), page(B66), cat(Supernatural, Mental), taboo(@if(@itemhasmod(AD:Magic Resistance, Improved) THEN 0 ELSE AD:Magic Resistance), AD:Mana Damper),
	gives(+1 to ST:Magery 0, +AD:Magery::level to me::skillscore),
	skillused(ST:Perception), mode(detect Magic Items with Mage Sense),
	description(_
			Magery 0 is included as a separate item from the normal Magery advantage, due to the fact that many kinds of enhancements and limitations are meant to only affect the levels above 0, not the base 5 points from Magery 0. The Magery advantage is set to have Magery 0 as a pre-req. _
			WARNING: Always use the Magery modifiers with Magery and the Magery 0 modifiers with Magery 0. Using the Magery modifiers with any other item can cause your spells to be miscalculated._
			)
Magery, 10/20, gives(+1 to ST:Magery, +1 to SK:Thaumatology), mods(Magery, Talents), needs(AD:Magery 0), page(B66), cat(Supernatural, Mental),
	taboo(@if(@itemhasmod(AD:Magic Resistance, Improved) THEN 0 ELSE AD:Magic Resistance), AD:Mana Damper),
	description(WARNING: Always use the Magery modifiers with Magery and the Magery 0 modifiers with Magery 0. Using the Magery modifiers with any other trait can cause your spells to be miscalculated. For standard magic use Magery, for Ritual Magic use Ritual Magery, for Wildcard! magic use Wildcard Magery!, for Clerical Magic use Power Investiture)
					

Wildcard Magery!, 10/20, gives(+1 to SK:Thaumatology, +1 to CL:Wildcard! - Magic), mods(Magery), needs(AD:Magery 0), page(B66), cat(Supernatural, Mental), description(For standard magic use Magery, for Ritual Magic use Ritual Magery, for Wildcard! magic use Wildcard Magery!, for Clerical Magic use Power Investiture)
					

Ritual Magery 0, 5, page(B66), cat(Supernatural, Mental), description(Magery 0 is included as a separate item from the normal Magery advantage, due to the fact that many kinds of enhancements and limitations are meant to only affect the levels above 0, not the base 5 points from Magery 0. The Magery advantage is set to have Magery 0 as a pre-req.)
Ritual Magery ([skill]), 10/20, gives(+1 to SK:[skill], +1 CL:Ritual Magic Paths), needs(AD:Ritual Magery 0), page(B66), cat(Supernatural, Mental), description(For standard magic use Magery, for Ritual Magic use Ritual Magery, for Wildcard! magic use Wildcard Magery!, for Clerical Magic use Power Investiture),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magery") )
Ritual Magery (%skilllist%), 10/20, gives(+1 to SK:%skilllist%, +1 CL:Ritual Magic Paths), needs(AD:Ritual Magery 0), page(B66), cat(Supernatural, Mental), description(For standard magic use Magery, for Ritual Magic use Ritual Magery, for Wildcard! magic use Wildcard Magery!, for Clerical Magic use Power Investiture),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magery),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					)_
				)_
	)
					
					
					

Magic Resistance, 2/4, mods(Magic Resistance), page(B67), cat(Supernatural, Mental), taboo(DI:Magic Susceptibility, AD:Magery 0::level > @if(@hasmod(Improved) THEN 1 ELSE 0), AD:Mana Enhancer)
Mana Damper, 10/20, mods(Mana Damper/Enhancer), page(B67), upto(3), cat(Supernatural, Mental), taboo(AD:Magery, AD:Mana Enhancer)
Mana Enhancer, 50/100, mods(Mana Damper/Enhancer), page(B68), upto(2), cat(Supernatural, Mental), taboo(AD:Mana Damper, AD:Magic Resistance)
Medium, 10, page(B68), cat(Supernatural, Mental)
Mindlink, 5/10/20/30, page(B70), cat(Supernatural, Mental),
	levelnames(1 person, 2-9 people, 10-99 people, 100-999 people, "1,000-9,999 people", "10,000-99,999 people", "100,000-999,999 people", "1,000,000-9,999,999 people", "10,000,000-99,999,999 people", up to 1 Billion people, up to 10 Billion people, up to 100 Billion people, up to 1 Trillion people, up to 10 Trillion people, up to 100 Trillion people, 16, 17, 18, 19, 20)
					

Oracle, 15, page(B72), cat(Supernatural, Mental),
	mode(Discover|Interpret), skillused(ST:Perception|ST:IQ)
Power Investiture, 10/20, page(B77), gives(+1 to CO:~Clerical), cat(Supernatural, Mental), mods(_Talents), description(For standard magic use Magery, for Ritual Magic use Ritual Magery, for Wildcard! magic use Wildcard Magery!, for Clerical Magic use Power Investiture, for Syntactic magic use Syntactic Magery)
Precognition, 25, mods(Precognition), page(B77), cat(Supernatural, Mental), taboo(AD:Danger Sense),
	skillused(ST:IQ), mode(glimpse future)
Psi Static, 30, mods(Psi Static), page(B78), cat(Supernatural, Mental)
Psychometry, 20, page(B78), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(sense history)
					

Puppet, 5, needs(AD:Possession, (AD:Ally | DI:Dependent)), page(B78), cat(Supernatural, Mental)
Puppet (Group of Related Allies), 10, needs(AD:Possession, (AD:Ally | DI:Dependent)), page(B78), cat(Supernatural, Mental)
					

Reawakened, 10, page(B80), cat(Supernatural, Mental)
Special Rapport, 5, page(B88), cat(Supernatural, Mental)
Spirit Empathy, 10, mods(Spirit Empathy), page(B88), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(empathize)
Super Luck, 100, page(B89), cat(Supernatural, Mental)
Temporal Inertia, 15, page(B93), cat(Supernatural, Mental), taboo(DI:Unique),
	skillused(ST:IQ), mode(distinguish between timelines)

Terror, 30/40, mods(Terror), page(B93), cat(Supernatural, Mental),
	levelnames(Will-0, Will-1, Will-2, Will-3, Will-4, Will-5, Will-6, Will-7, Will-8, Will-9, Will-10, Will-11, Will-12, Will-13, Will-14, Will-15, Will-16, Will-17, Will-18, Will-19, Will-20, Will-21, Will-22, Will-23, Will-24, Will-25, Will-26, Will-27, Will-28, Will-29, Will-30, Will-31, Will-32, Will-33, Will-34, Will-35, Will-36, Will-37, Will-38, Will-39, Will-40, Will-41, Will-42, Will-43, Will-44, Will-45, Will-46, Will-47, Will-48, Will-49, Will-50, Will-51, Will-52, Will-53, Will-54, Will-55, Will-56, Will-57, Will-58, Will-59, Will-60, Will-61, Will-62, Will-63, Will-64, Will-65, Will-66, Will-67, Will-68, Will-69, Will-70, Will-71, Will-72, Will-73, Will-74, Will-75, Will-76, Will-77, Will-78, Will-79, Will-80, Will-81, Will-82, Will-83, Will-84, Will-85, Will-86, Will-87, Will-88, Will-89, Will-90, Will-91, Will-92, Will-93, Will-94, Will-95, Will-96, Will-97, Will-98, Will-99, Will-100)
True Faith, 15, page(B94), cat(Supernatural, Mental)
Visualization, 10, page(B96), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(vizualize)
Warp, 100, mods(Warp), page(B98), cat(Supernatural, Mental),
	skillused(ST:IQ), mode(Teleport)
Wild Talent, 20/40, mods(Wild Talent), page(B99), cat(Supernatural, Mental)
					

ESP Talent, 5/10, page(B256), cat(Supernatural, Mental, Talents - Powers), mods(_Talents, _Power Talents), x(#buildit), upto(4), gives(+1 to SK:Skill Name Here, +1 to SK:Skill Name Here)
Psychic Healing Talent, 5/10, page(B256), cat(Supernatural, Mental, Talents - Powers), mods(_Talents, _Power Talents), x(#buildit), upto(4), gives(+1 to SK:Skill Name Here, +1 to SK:Skill Name Here)
PK Talent, 5/10, page(B256), cat(Supernatural, Mental, Talents - Powers), mods(_Talents, _Power Talents), x(#buildit), upto(4), gives(+1 to SK:Skill Name Here, +1 to SK:Skill Name Here)
Telepathy Talent, 5/10, page(B256), cat(Supernatural, Mental, Talents - Powers), upto(4), mods(_Talents, _Power Talents), x(#buildit), gives(+1 to SK:Skill Name Here, +1 to SK:Skill Name Here)
Teleportation Talent, 5/10, page(B256), cat(Supernatural, Mental, Talents - Powers), mods(_Talents, _Power Talents), x(#buildit), upto(4), gives(+1 to SK:Skill Name Here, +1 to SK:Skill Name Here)
					

<Mundane Physical>
Appearance, 4/12/12/16/16/20, mods(Attractive, Appearance), upto(6), page(B21),
	levelnames([Average], Attractive, Beautiful, Handsome, Very Beautiful, Very Handsome, Transcendent),
	cat(Mundane, Physical, Physical Appearance), taboo(DI:Appearance),
	gives(_
		=@if(_
			(@hasmod(Androgynous) | @hasmod(Impressive) | @hasmod(Universal)) & %level >= 2 _
			then _
				@indexedvalue(%level, 0, 3, 3, 4, 4, 5) _
			else _
				@indexedvalue(%level, 1, 2, 2, 2, 2, 2) _
			) to ST:Unappealing,
		=@if(_
			(@hasmod(Androgynous) | @hasmod(Impressive) | @hasmod(Universal)) & %level >= 2 _
			then _
				@indexedvalue(%level, 0, 3, 3, 4, 4, 5) _
			else _
				@indexedvalue(%level, 1, 4, 4, 6, 6, 8) _
			) to ST:Appealing,
		=@if(_
			(@hasmod(Androgynous) | @hasmod(Impressive) | @hasmod(Universal)) & %level >= 2 _
			then _
				@indexedvalue(%level, 0, 3, 3, 4, 4, 5) _
			else _
				@indexedvalue(%level, 1, 4, 4, 6, 6, 8) _
			) to SK:Sex Appeal _
		)
					

Absolute Direction, 5/10, displaycost(5), upto(2), levelnames(,3D Spatial Sense), gives(=+3 To GR:Absolute Direction, =+@indexedvalue(me::level, 0, 1) To SK:Piloting, =+@indexedvalue(me::level, 0, 2) To GR:3D Spatial Sense), mods(Absolute Direction), page(B34), cat(Mundane Mental, Mundane, Physical, Mental), taboo(AD:3D Spatial Sense)
3D Spatial Sense, 10, gives(+1 To SK:Piloting, +2 To GR:3D Spatial Sense, +3 To GR:Absolute Direction), mods(Absolute Direction), page(B34), cat(Mundane Mental, Mundane, Physical, Mental), taboo(AD:Absolute Direction)
Acute Hearing, 2/4, gives(+1 To ST:Hearing), skillused(ST:Hearing), mode(hear), page(B35), cat(Mundane, Physical), taboo(DI:Deafness)
Acute Taste and Smell, 2/4, gives(+1 To ST:Taste/Smell), skillused(ST:Taste/Smell), mode(taste/smell), page(B35), cat(Mundane, Physical), taboo("DI:No Sense of Smell/Taste")
Acute Touch, 2/4, gives(+1 To ST:Touch), skillused(ST:Touch), mode(feel), page(B35), cat(Mundane, Physical), taboo(DI:Numb)
Acute Vision, 2/4, gives(+1 To ST:Vision, +1 To SK:Observation), skillused(ST:Vision), mode(see), conditional(+1 To SK:Tracking when "vision is a factor"), page(B35), cat(Mundane, Physical), taboo(DI:Blindness)
Ambidexterity, 5, page(B39), cat(Mundane, Physical), taboo(DI:One Arm, DI:One Hand)
Extra Attack, 25/50, page(B54), cat(Mundane, Physical)
Fit, 5/15, displaycost(5), upto(2), levelnames(,Very Fit), page(B55), cat(Mundane, Physical), taboo(AD:Very Fit, DI:Unfit, DI:Very Unfit), conditional(+1 to ST:HT), gives(+1 to ST:Consciousness Check, +1 to ST:Death Check)
Very Fit, 15, page(B55), cat(Mundane, Physical), taboo(AD:Fit, DI:Unfit, DI:Very Unfit), conditional(+2 to ST:HT), gives(+2 to ST:Consciousness Check, +2 to ST:Death Check)
Flexibility, 5/15, displaycost(5), upto(2), levelnames(,Double-Jointed), conditional(=@indexedvalue(me::level, 3, 5) To ST:DX when "ignoring penalties for working in close quarters"), gives(=@indexedvalue(me::level, 3, 5) To GR:Flexibility), page(B56), cat(Mundane, Physical), taboo(AD:Double-Jointed)
Double-Jointed, 15, conditional(+5 To ST:DX when "ignoring penalties for working in close quarters"), gives(+5 To GR:Flexibility), page(B56), cat(Mundane, Physical), taboo(AD:Flexibility)
Hard to Kill, 2/4, page(B58), cat(Mundane, Physical), taboo(DI:Easy to Kill, AD:Unkillable, DI:Fragile (Unnatural)), gives(+1 to ST:Death Check)
Hard to Subdue, 2/4, page(B59), cat(Mundane, Physical), gives(+1 to ST:Consciousness Check)
High Manual Dexterity, 5/10, page(B59), cat(Mundane, Physical), taboo("DI:Ham-Fisted", DI:No Fine Manipulators, DI:No Manipulators),
	conditional(_
			+1 to GR:High Manual Dexterity when "performing DX-based tasks",
			+1 to SK:Machinist when "performing fine DX-based tasks",
			+1 to SK:Mechanic when "performing fine DX-based tasks" _
			)
High Pain Threshold, 10, page(B59), cat(Mundane, Physical), taboo(DI:Low Pain Threshold, AD:Supernatural Durability),
	skillused(ST:Will+3), mode(ignore pain)
Improved G-Tolerance, 5/10, upto(5), page(B60), levelnames(0.3G, 0.5G, 1G, 5G, 10G), cat(Mundane, Physical), taboo(DI:G-Intolerance)
Less Sleep, 2/4, page(B65), cat(Mundane, Physical), taboo(AD:Doesn't Sleep, DI:Extra Sleep)
Longevity, 2, page(B66), cat(Mundane, Physical), taboo(AD:Unaging)
Night Vision, 1/2, page(B71), upto(9), cat(Mundane, Physical), taboo(DI:Blindness, DI:Night Blindness, AD:Dark Vision)
Perfect Balance, 15, gives(+1 To GR:Perfect Balance, +4 to SK:Immovable Stance), page(B74), cat(Mundane, Physical)
Peripheral Vision, 15, mods(Peripheral Vision), page(B74), cat(Mundane, Physical), taboo(DI:Blindness, AD:360° Vision)
Rapid Healing, 5/15, displaycost(5), upto(2), levelnames(,Very Rapid Healing), needs(ST:HT = 10), page(B79), cat(Mundane, Physical), taboo(AD:Very Rapid Healing, DI:Slow Healing, AD:Regeneration)
Very Rapid Healing, 15, needs(ST:HT = 12), page(B79), cat(Mundane, Physical), taboo(AD:Rapid Healing, DI:Slow Healing)
Reduced Consumption, 2/4, mods(Reduced Consumption), page(B80), cat(Mundane, Physical), taboo(AD:Doesn't Eat or Drink, DI:Increased Consumption)
					

Resistant, 5/10/15/30, mods(Resistant), levelnames(Rare, Occasional, Common, Very Common),
	page(B80), upto(4), cat(Mundane, Physical),
	initmods( Degree: Immunity, *1, shortname(Immunity), group(Resistant) ),
	x(_
		#InputToTagReplace("Please specify the noxious item or substance you are Resistant or Immune to:" , nameext, , "Resistant"),
		#buildit _
	)
Temperature Tolerance, 1/2, page(B93), cat(Mundane, Physical)
Voice, 10, gives(+2 To GR:Voice), page(B97), cat(Mundane, Physical), taboo(DI:Mute, DI:Disturbing Voice, DI:Stuttering),
	conditional(+2 to ST:Reaction when "your voice can be heard")
					

<Mundane Mental>
Absolute Timing, 2/5, displaycost(2), levelnames(,Chronolocation), upto(2), page(B35), cat(Mundane, Mental), taboo(AD:Chronolocation)
Chronolocation, 5, page(B35), cat(Mundane, Mental), taboo(AD:Absolute Timing)
Animal Empathy, 5, page(B40), cat(Mundane, Mental), taboo(DI:Frightens Animals),
	skillused(ST:IQ), mode(empathize)
Charisma, 5/10, gives(+1 to ST:Reaction, +1 To GR:Charisma), conditional(+1 to GR:Influence Skills when "making Influence rolls"), page(B41), cat(Mundane, Mental)
Combat Reflexes, 15/45, displaycost(15), levelnames(,Enhanced Time Sense), upto(2), gives(=+1 To GR:Combat Reflexes, =+2 To Fright Check), page(B43), cat(Mundane, Mental), taboo(DI:Combat Paralysis, AD:Enhanced Time Sense)
Common Sense, 10, page(B43), cat(Mundane, Mental),
	skillused(ST:IQ), mode(avoid stupidity)
Cultural Adaptability, 10/20, upto(2), levelnames( , Xeno-Adaptability), page(B46), cat(Mundane, Mental)
Xeno-Adaptability, 20, page(B46), cat(Mundane, Mental)
Danger Sense, 15, mods(Danger Sense), page(B47), cat(Mundane, Mental), taboo(AD:Precognition),
	skillused(ST:Perception), mode(sense danger)
Daredevil, 15, page(B47), cat(Mundane, Mental)
Eidetic Memory, 5/10, displaycost(5), levelnames(,"Photographic"), upto(2), page(B51), cat(Mundane, Mental), taboo(AD:Photographic Memory),
	skillused(ST:IQ), mode(recall)
Photographic Memory, 10, page(B51), cat(Mundane, Mental), taboo(AD:Eidetic Memory),
	skillused(ST:IQ), mode(recall)
Sensitive, 5, gives(+1 To GR:Empathy), conditional(+1 to SK:Psychology when "you can converse with subject"), page(B51), cat(Mundane, Mental), taboo(DI:Low Empathy),
	skillused(ST:IQ), mode(empathize)
Empathy, 15, gives(+3 To GR:Empathy), conditional(+3 to SK:Psychology when "you can converse with subject"), page(B51), cat(Mundane, Mental), taboo(DI:Low Empathy),
	skillused(ST:IQ), mode(empathize)
Enhanced Block, 5/10, gives(+1 To Block), page(B51), cat(Mundane, Mental, Attributes)
Enhanced Dodge, 15/30, gives(+1 To Dodge), page(B51), cat(Mundane, Mental, Attributes)
Enhanced Parry (bare hands), 5/10, page(B51), cat(Mundane, Mental, Attributes),
	gives(_
		+1 to ST:DX::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Judo::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Sumo Wrestling::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Wrestling::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Boxing::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Brawling::parryat listAs "Enhanced Parry (bare hands)",
		+1 to SK:Karate::parryat listAs "Enhanced Parry (bare hands)" _
		)
Enhanced Parry (%One-Handed Melee WeaponList%), 5/10, page(B51), cat(Mundane, Mental, Attributes),
	gives(+1 to "SK:%One-Handed Melee WeaponList%::parryat" listAs "Enhanced Parry (%One-Handed Melee WeaponList%)"),
	x(#ChoiceList(_
			name(One-Handed Melee Weapon),
			title(Enhanced Parry: Choose a Melee Weapon),
			text(Choose a Melee Weapon skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Axe/Mace",
				"Broadsword",
				"Flail",
				"Force Sword",
				"Force Whip",
				"Garrote",
				"Jitte/Sai",
				"Knife",
				"Kusari",
				"Lance",
				"Main-Gauche",
				"Monowire Whip",
				"Parry Missile Weapons",
				"Polearm",
				"Rapier",
				"Saber",
				"Shortsword",
				"Smallsword",
				"Spear",
				"Staff",
				"Sumo Wrestling",
				"Tonfa",
				"Two-Handed Axe/Mace",
				"Two-Handed Flail",
				"Two-Handed Sword",
				"Whip" _
			)_
			)_
	), noresync(yes)
					

Enhanced Parry (%One-Handed Melee Weapon ArtList%), 5/10, page(B51), cat(Mundane, Mental, Attributes),
	gives(+1 to "SK:%One-Handed Melee Weapon ArtList%::parryat" listAs "Enhanced Parry (%One-Handed Melee Weapon ArtList%)"),
	x(#ChoiceList(_
			name(One-Handed Melee Weapon Art),
			title(Enhanced Parry: Choose a Melee Weapon),
			text(Choose a Melee Weapon skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Axe/Mace Art",
				"Broadsword Art",
				"Flail Art",
				"Force Sword Art",
				"Force Whip Art",
				"Garrote Art",
				"Jitte/Sai Art",
				"Knife Art",
				"Kusari Art",
				"Lance Art",
				"Main-Gauche Art",
				"Monowire Whip Art",
				"Parry Missile Weapons Art",
				"Polearm Art",
				"Rapier Art",
				"Saber Art",
				"Shortsword Art",
				"Smallsword Art",
				"Spear Art",
				"Staff Art",
				"Sumo Wrestling Art",
				"Tonfa Art",
				"Two-Handed Axe/Mace Art",
				"Two-Handed Flail Art",
				"Two-Handed Sword Art",
				"Whip Art" _
			)_
		)_
	), noresync(yes)
					

Enhanced Parry (%One-Handed Melee Weapon SportList%), 5/10, page(B51), cat(Mundane, Mental, Attributes),
	gives(+1 to "SK:%One-Handed Melee Weapon SportList%::parryat" listAs "Enhanced Parry (%One-Handed Melee Weapon SportList%)"),
	x(#ChoiceList(_
			name(One-Handed Melee Weapon Sport),
			title(Enhanced Parry: Choose a Melee Weapon),
			text(Choose a Melee Weapon skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Axe/Mace Sport",
				"Broadsword Sport",
				"Flail Sport",
				"Force Sword Sport",
				"Force Whip Sport",
				"Garrote Sport",
				"Jitte/Sai Sport",
				"Knife Sport",
				"Kusari Sport",
				"Lance Sport",
				"Main-Gauche Sport",
				"Monowire Whip Sport",
				"Parry Missile Weapons Sport",
				"Polearm Sport",
				"Rapier Sport",
				"Saber Sport",
				"Shortsword Sport",
				"Smallsword Sport",
				"Spear Sport",
				"Staff Sport",
				"Sumo Wrestling Sport",
				"Tonfa Sport",
				"Two-Handed Axe/Mace Sport",
				"Two-Handed Flail Sport",
				"Two-Handed Sword Sport",
				"Whip Sport" _
			)_
		)_
	), noresync(yes)
Enhanced Parry (all parries), 10/20, gives(+1 To Parry), page(B51), cat(Mundane, Mental, Attributes)
Fearlessness, 2/4, gives(+1 To ST:Fright Check), page(B55), cat(Mundane, Mental), taboo(DI:Fearfulness, DI:Cowardice, AD:Unfazeable)
Gadgeteer, 25/50, page(B56), cat(Mundane, Mental), upto(2), levelnames( , Quick)
					

G-Experience, 1/2, upto(10), page(B57), cat(Mundane, Mental)
					

Gizmo, 5/10, page(B58), cat(Mundane, Mental)
Gunslinger, 25, page(B58), cat(Mundane, Mental)
Indomitable, 15, page(B60), cat(Mundane, Mental)
Intuition, 15, page(B63), cat(Mundane, Mental),
	skillused(ST:IQ), mode(guess correctly)
Language Talent, 10, gives(+1 To CA:Language), page(B65), cat(Mundane, Mental)
Lightning Calculator, 2/5, displaycost(2), upto(2), levelnames(, Intuitive Mathematician), page(B66), cat(Mundane, Mental), taboo(AD:Intuitive Mathematician, DI:Innumerate)
Intuitive Mathematician, 5, page(B66), cat(Mundane, Mental), taboo(AD:Lightning Calculator, DI:Innumerate)
Luck, 15/30/60, mods(Luck), levelnames( , Extraordinary, Ridiculous), page(B66), upto(3), cat(Mundane, Mental)
Plant Empathy, 5, page(B75), cat(Mundane, Mental),
	skillused(ST:IQ), mode(empathize)
Rapier Wit, 5, page(B79), cat(Mundane, Mental),
	skillused(ST:IQ-5, SK:Public Speaking, SK:Acting-5, SK:Performance-2, SK:Politics-5), mode(outwit)
Serendipity, 15/30, page(B83), cat(Mundane, Mental)
Single-Minded, 5, page(B85), cat(Mundane, Mental), taboo(DI:Short Attention Span)
Social Chameleon, 5, page(B86), cat(Mundane, Mental), conditional(+1 to ST:Reaction when "from those who demand respect (priests, kings, etc.)")
					

* Talents
Animal Friend, 5/10, gives(+1 To GR:Animal Friend), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Animal Handling, Falconry, Packing, Riding, Teamster, Veterinary)
Artificer, 10/20, gives(+1 To GR:Artificer), page(B90), upto(4), cat(Mundane Mental, Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Armoury, Carpentry, Electrician, Electronics Repair, Engineer, Machinist, Masonry, Mechanic, Smith)
Business Acumen, 10/20, gives(+1 To GR:Business Acumen), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Accounting, Administration, Economics, Finance, Gambling, Market Analysis, Merchant, Propaganda)
Gifted Artist, 5/10, gives(+1 To GR:Gifted Artist), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Artist, Jeweler, Leatherworking, Photography, Sewing)
Green Thumb, 5/10, gives(+1 To GR:Green Thumb), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Biology, Farming, Gardening, Herb Lore, Naturalist)
Healer, 10/20, gives(+1 To GR:Healer), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Diagnosis, Esoteric Medicine, First Aid, Pharmacy, Physician, Physiology, Psychology, Surgery, Veterinary)
Mathematical Ability, 10/20, gives(+1 To GR:Mathematical Ability), page(B90), upto(4), cat(Mundane, Mental, Talents), taboo(DI:Innumerate), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Accounting, Astronomy, Cryptography, Engineer, Finance, Market Analysis, Mathematics, Physics)
Musical Ability, 5/10, gives(+1 To GR:Musical Ability), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Group Performance (Conducting), Musical Composition, Musical Influence, Musical Instrument, Singing)
Outdoorsman, 10/20, gives(+1 To GR:Outdoorsman), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Camouflage, Fishing, Mimicry, Naturalist, Navigation, Survival, Tracking)
Smooth Operator, 15/30, gives(+1 To GR:Smooth Operator), page(B90), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	conditional(+1 to ST:Reaction), description(Acting, Carousing, Detect Lies, Diplomacy, Fast-Talk, Intimidation, Leadership, Panhandling, Politics, Public Speaking, Savoir-Faire, Sex Appeal, Streetwise)
					

_New Talent, %Costaliaslist%, displaycost(varies), page(B89), upto(4), cat(Mundane, Mental, Talents), mods(_Talents),
	gives(%skillsaliaslist%), conditional(+1 to ST:Reaction when "[bonus]"), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Talent here:" , name, , "New Talent"),
	#InputReplace("Please describe when the reaction bonus for this talent applies. e.g. if you type in ''recognized by an Engineer'' the bonus will be listed as ''+1 from Engineering Talent when recognized by an Engineer'':", "[bonus]", "talent matters", "New Talent"),
	#ChoiceList(_
			name(Cost),
			title(New Talent: Cost),
			text(Choose the point cost and number of affected skills for this talent.),
			picksallowed(1),
			method(bynumber),
			list(_
				" 5/level (6 or fewer related skills)"=6,
				"10/level (7 to 12 related skills)"=12,
				"15/level (13 or more related skills)"=100 _
				), 
			aliaslist(_
					5/10,
					10/20,
					15/30_
				)_
			),
	#ChoiceList(_
			name(skills),
			title(New Talent: Choose Skills),
			text(Choose which skills will receive a bonus from this Talent. NOTE: Additional skill specialties may be specified later by adding the appropriate modifier to this Talent.),
			picksallowed(atleast 1, upto %Costcostlist%),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				), 

			aliaslist(_
				#grouplist(GR:AllSkills, prepend(+1 to "), append("))_
					)_
			),
	#edit)
	

Trained By A Master, 30, page(B93), cat(Mundane, Mental)
Unfazeable, 15, page(B95), cat(Mundane, Mental), taboo(AD:Fearlessness, DI:Fearfulness)
Unusual Background, [cost], displaycost(varies), page(B96), cat(Mundane, Mental), noresync(yes),
	x(#InputToTagReplace("Please describe the Unusual Background:" , nameext, ,"Unusual Background"),
	#InputReplace("Please enter the Cost of this advantage:", "[cost]", "10", "Unusual Background")_
		)
					

Versatile, 5, page(B96), cat(Mundane, Mental)
Weapon Master, 20/25/30/35/40/45, levelnames(one specific weapon, two weapons normally used together, a small class of weapons, a medium class of weapons, a large class of weapons, all muscle powered weapons), page(B99), upto(6), cat(Mundane, Physical),
	x(_
		#InputToTagReplace("Please specify the weapon, weapons, or class of weapons you have Mastery of:", nameext, , "Weapon Master"),
		#Message(In order for the Damage Bonus to be applied to the characters weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.)_
		)
					

<Wealth>
Trading Character Points for Money, 1/2, gives(+@indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000) to ST:Money, +@indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000) to ST:Remaining Funds), page(B26), cat(Wealth)
					
					

<Mundane Social>
Fashion Sense, 5, page(B21), conditional(+1 to ST:Reaction when "in social situations, when you have a chance to plan your attire in advance"), cat(Mundane, Social, Other Physical Features)
Pitiable, 5, page(B22), cat(Mundane, Social, Other Physical Features),
	gives(+1 to SK:Panhandling),
	conditional(+3 to ST:Reaction when "you appear to be in a position of helplessness, weakness, or need")
					

Cultural Familiarity, 1, page(B23), mods(Cultural Familiarity), cat(Mundane, Social, Cultural Familiarity, Social Background), taboo(Native Cultural Familiarities > 1),
	x(#InputToTagReplace("Specify the culture you're familiar with here:", name, , "Cultural Familiarity"))
Cultural Familiarity (Alien Culture), 2, page(B23), cat(Mundane, Social, Cultural Familiarity, Social Background), taboo(Native Cultural Familiarities > 1),
	x(#InputToTagReplace("Specify the culture you're familiar with here:", name, , "Cultural Familiarity (Alien Culture)"))
Cultural Familiarity (Native), 0, page(B23), cat(Mundane, Social, Cultural Familiarity, Social Background), gives(+1 to ST:Native Cultural Familiarities), taboo(Native Cultural Familiarities > 1),
	x(#InputToTagReplace("Specify the culture you're familiar with here:", name, "Western", "Cultural Familiarity (Native)"))
					

Language, 2/4, page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background), taboo(Native Languages > 1),
	x(#InputToTagReplace("Specify the language here:", name, , "Language"))
Language (Spoken), 1/2, page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Social Background), taboo(Native Languages > 1),
	x(#InputToTagReplace("Specify the language here:", name, , "Language (Spoken)"))
Language (Written), 1/2, page(B24), upto(3 LimitingTotal), mods(Language), levelnames([Illiterate], Semi-Literate, Literate, Native), cat(Mundane, Social, Language, Language Written, Social Background), taboo(Native Languages > 1),
	ndl(@if(ST:Tech Level::basescore <=4 THEN 1 ELSE 0)),
	description(At TL 3 and below Illiteracy doesn't count against the Disadvantage Limit. This can be changed by checking (or unchecking) the 'Do Not Count Against Disadvantage Limit' box in the Edit window.),
	x(#InputToTagReplace("Specify the language here:", name, , "Language (Written)"))
					

Language - Native, 2/4, displaycost(0/-2/+), init(3), page(B24), upto(3), mods(Language, Native Language), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background), taboo(Native Languages > 1),
	x(#InputToTagReplace("Specify the language here:", name, "English", "Language - Native")),
	initmods(Native Language, -6, gives(=+1 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level), group(Native Language), page(B23))
Language - Native (Spoken), 1/2, displaycost(0/-1/+), init(3), page(B24), upto(3), mods(Language, Native Language), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Social Background), taboo(Native Languages > 1),
	x(#InputToTagReplace("Specify the language here:", name, "English", "Language - Native (Spoken)")),
	initmods(Native Speaker, -3, gives(=+0.5 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level), group(Native Language), page(B23))
Language - Native (Written), 1/2, displaycost(-3/-2/+), init(0), page(B24), upto(3), mods(Language, Native Language), levelnames([Illiterate], Semi-Literate, Literate, Native), cat(Mundane, Social, Language, Language Written, Social Background), taboo(Native Languages > 1),
	ndl(@if(ST:Tech Level::basescore <=4 THEN 1 ELSE 0)),
	description(At TL 3 and below Illiteracy doesn't count against the Disadvantage Limit. This can be changed by checking (or unchecking) the 'Do Not Count Against Disadvantage Limit' box in the Edit window.),
	x(#InputToTagReplace("Specify the language here:", name, "English", "Language - Native (Written)")),
	initmods(Native Writer, -3, gives(=+0.5 to ST:Native Languages, =-"AD:Language Talent::level" to owner::level), group(Native Language), page(B23))
					

*Language - Native, 2/4, displaycost(0/-2/+), init(3), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background), taboo(Native Languages > 1),
*x(#InputToTagReplace("Specify the language here:", name, "English", "Language - Native")),
*initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23))
*Language - Native (Spoken), 1/2, displaycost(0/-1/+), init(3), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Social Background), taboo(Native Languages > 1),
*x(#InputToTagReplace("Specify the language here:", name, "English", "Language - Native (Spoken)")),
*initmods(Native Speaker, -3, gives(=+0.5 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 2 else 3)), forceformula(yes), group(Language), page(B23))
*Language - Native (Written), 1/2, displaycost(-3/-2/+), init(0), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([Illiterate], Semi-Literate, Literate, Native), cat(Mundane, Social, Language, Language Written, Social Background), taboo(Native Languages > 1),
*ndl(@if(ST:Tech Level::basescore <=4 THEN 1 ELSE 0)),
*description(At TL 3 and below Illiteracy doesn't count against the Disadvantage Limit. This can be changed by checking (or unchecking) the 'Do Not Count Against Disadvantage Limit' box in the Edit window.),
*x(#InputToTagReplace("Specify the language here:", name, "English", "Language - Native (Written)")),
*initmods(Native Writer, -3, gives(=+0.5 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 2 else 3)), forceformula(yes), group(Language), page(B23))
					

Wealth, 10/20/30/50/75, upto(15), page(B25), mods(Wealth),
	levelnames([Average], Comfortable, Wealthy, Very Wealthy, Filthy Rich, Multimillionaire 1, Multimillionaire 2, Multimillionaire 3, Multimillionaire 4, Multimillionaire 5, Multimillionaire 6, Multimillionaire 7, Multimillionaire 8, Multimillionaire 9, Multimillionaire 10, Multimillionaire 11, Multimillionaire 12),
	taboo(DI:Wealth, AD:Wealth > me::level, AD:Wealth < me::level, AD:Wealth > @if(@itemhasmod(AD:Wealth, Heir) = 0 THEN 100 ELSE @itemhasmod(AD:Wealth, Heir)-1) ), cat(Mundane, Social, Wealth),
	gives(_
			=@indexedvalue(%level, 10, 40, 190, @power(10, (me::level-1))-10) To ST:Wealth Modifier,
			=@if(AD:Status::level = 0 THEN @if(DI:Status::baselevel = 0 THEN @indexedvalue(%level, 0, 1, 1, 1, 2, 3) ELSE 0) ELSE 0) To ST:Status,
			=@if(AD:Status::level > 0 THEN @indexedvalue(%level, 0, 1, 1, 1, 2, 3) ELSE 0) To AD:Status,
			=@if(AD:Status::level = 0 THEN -@indexedvalue(%level, 0, 1, 1, 1, 2, 3) ELSE 0) To DI:Status_
		)
					
Independent Income, 1/2, page(B26), upto(20), cat(Mundane, Social, Wealth),
	gives(_
			=+(ST:Starting Wealth * @indexedvalue(%level, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2)) _
				to ST:Monthly Pay _
		)

Reputation, 5/10, mods(Reputation Advantage), page(B27), upto(4), cat(Mundane, Social, Influence),
	initmods(_
			People Affected: Almost everyone in your game world, *1, shortname(Almost everyone), group(Reputation) _
			| Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation) _
			),
	conditional(+1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you"),
	x(#InputToTag("Please describe the reason for your reputation:", nameext, , "Reputation"))

Status, 5/10, page(B28), upto(8 limitingtotal), gives(+1 to ST:Status), cat(Mundane, Social, Influence), mods(Status), taboo(DI:Status),
	levelnames(+1, +2, +3, +4, +5, +6, +7, +8)
Rank, 5/10, mods(Rank), page(B29), upto(8), cat(Mundane, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to AD:Status),
	x(#InputToTagReplace("Please describe the nature of the Rank:", name, " Rank", "Rank"))
					

Administrative Rank, 5/10, mods(Rank), page(B29), upto(8), cat(Mundane, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to AD:Status)
Merchant Rank, 5/10, mods(Rank), page(B29), upto(8), cat(Mundane, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to AD:Status)
Military Rank, 5/10, mods(Rank), page(B29), upto(8), cat(Mundane, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to AD:Status)
Police Rank, 5/10, mods(Rank), page(B29), upto(8), cat(Mundane, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to AD:Status)
Religious Rank, 5/10, mods(Rank), page(B29), upto(8), cat(Mundane, Social, Influence),
	gives(=@if(AD:Status::level = 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to ST:Status, =@if(AD:Status::level > 0 THEN @if(@hasmod(Rank replaces Status) THEN %level ELSE @int(0.34+(%level/3))) ELSE 0) to AD:Status)
Courtesy Rank, 1/2, page(B29), upto(8), cat(Mundane, Social, Influence),
	x(#InputToTag("Please describe the nature of the Courtesy Rank:", nameext, , "Courtesy Rank"))
					

Ally, 1/2/3/5/10, upto(@if(@hasmod(Non-Sapient) THEN 0 ELSE 5)),
	x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),
	levelnames("25% of starting points", "50% of starting points", "75% of starting points", "100% of starting points", "150% of starting points",
	"200% of starting points", "250% of starting points", "300% of starting points", "350% of starting points", "400% of starting points", "450% of starting points", "500% of starting points",
	"550% of starting points", "600% of starting points", "650% of starting points", "700% of starting points", "750% of starting points", "800% of starting points", "850% of starting points",
	"900% of starting points", "950% of starting points", "1,000% of starting points", "1,050% of starting points", "1,100% of starting points", "1,150% of starting points", "1,200% of starting points",
	"1,250% of starting points", "1,300% of starting points", "1,350% of starting points", "1,400% of starting points", "1,450% of starting points", "1,500% of starting points",
	"1,550% of starting points", "1,600% of starting points", "1,650% of starting points", "1,700% of starting points", "1,750% of starting points", "1,800% of starting points",
	"1,850% of starting points", "1,900% of starting points", "1,950% of starting points", "2,000% of starting points", "2,050% of starting points", "2,100% of starting points",
	"2,150% of starting points", "2,200% of starting points", "2,250% of starting points", "2,300% of starting points", "2,350% of starting points", "2,400% of starting points",
	"2,450% of starting points", "2,500% of starting points", "2,550% of starting points", "2,600% of starting points", "2,650% of starting points", "2,700% of starting points",
	"2,750% of starting points", "2,800% of starting points", "2,850% of starting points", "2,900% of starting points", "2,950% of starting points", "3,000% of starting points",
	"3,050% of starting points", "3,100% of starting points", "3,150% of starting points", "3,200% of starting points", "3,250% of starting points", "3,300% of starting points",
	"3,350% of starting points", "3,400% of starting points", "3,450% of starting points", "3,500% of starting points", "3,550% of starting points", "3,600% of starting points",
	"3,650% of starting points", "3,700% of starting points", "3,750% of starting points", "3,800% of starting points", "3,850% of starting points", "3,900% of starting points",
	"3,950% of starting points", "4,000% of starting points", "4,050% of starting points", "4,100% of starting points", "4,150% of starting points", "4,200% of starting points",
	"4,250% of starting points", "4,300% of starting points", "4,350% of starting points", "4,400% of starting points", "4,450% of starting points", "4,500% of starting points",
	"4,550% of starting points", "4,600% of starting points", "4,650% of starting points", "4,700% of starting points", "4,750% of starting points", "4,800% of starting points",
	"4,850% of starting points", "4,900% of starting points", "4,950% of starting points", "5,000% of starting points"),
	mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social),
	initmods(_
			Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			)
					

Alternate Identity, 5/15, levelnames(Legal, Illegal), page(B39), upto(2), cat(Mundane, Social)
Claim to Hospitality, 1/2/5/10, page(B41), upto(4), cat(Mundane, Social), conditional(=+3 to ST:Reaction when "members of same group"),
	x(#InputToTag("Please describe the nature of the Claim to Hospitality:", nameext, , "Claim to Hospitality"))
Clerical Investment, 5, page(B43), cat(Mundane, Social), conditional(+1 to ST:Reaction)
					

Contact Group, 5/10/15/20, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),
	x(#InputToTag("Please describe the nature of the Contact Group:", nameext, , "Contact Group")),
	upto(4), cat(Mundane, Social), mods(Contact Group, Frequency of Appearance, Reliability, Favor), page(B44),
	initmods(_
			Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
			| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			)
Contact, 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),
	x(#InputToTag("Please describe the nature of the Contact:", nameext, , "Contact")),
	upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),
	initmods(_
			Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
			| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			)
					

Legal Enforcement Powers, 5/10, page(B65), upto(3), cat(Mundane, Social)
					

Legal Immunity, 5/10, mods(Legal Immunity), page(B65), upto(3), cat(Mundane, Social)
Diplomatic Immunity, 20, mods(Legal Immunity), page(B65), upto(3), cat(Mundane, Social)
Bardic Immunity, 10, mods(Legal Immunity), page(B65), upto(3), cat(Mundane, Social)
					

Patrons, 10/15/20/25/30, mods(Frequency of Appearance, Patron, Favor), page(B72), cat(Mundane, Social), upto(5),
	levelnames(,,,,), init(%PatronAliasList%),
	x(_
		#InputToTag("Please describe the nature of the Patron:", nameext, , "Patrons"),
		#ChoiceList(_
				name(Patron),
				title(Patron Power),
				text(Select the power level of your Patron:),
				picksallowed(1),
				method(bynumber),
				list(_
					"[10] A powerful individual (usually built on at least 150% of the PC's starting points)",
					"[10] Fairly powerful organization (assets of at least 1,000 times starting wealth for the world)",
					"[15] An extremely powerful individual (built on at least twice the PC's starting points)",
					"[15] A powerful organization (assets of at least 10,000 times starting wealth)",
					"[20] An ultra-powerful individual (based on as many points as the GM wants!)",
					"[20] A very powerful organization (assets of at least 100,000 times starting wealth)",
					"[25] An extremely powerful organization (assets of at least 1 million times starting wealth)",
					"[30] A national government or giant multinational organization (net worth incalculable)",
					"[30] A true god who appears personally to intervene on your behalf"_
				),
			aliaslist(_
					"1",
					"1",
					"2",
					"2",
					"3",
					"3",
					"4",
					"5",
					"5",
					)_
				)_
			),
	initmods(_
		Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
		),
	description(_
			A powerful individual (usually built on at least 150% of the PC's starting points) or a fairly powerful organization (assets of at least 1,000 times starting wealth for the world): 10 POINTS _
			\par An extremely powerful individual (built on at least twice the PC's starting points) or a powerful organization (assets of at least 10,000 times starting wealth): 15 POINTS _
			\parAn ultra-powerful individual (based on as many points as the GM wants!) or a very powerful organization (assets of at least 100,000 times starting wealth): 20 POINTS _
			\parAn extremely powerful organization (assets of at least 1 million times starting wealth): 25 POINTS _
			\parA national government or giant multinational organization (net worth incalculable), or a true god who appears personally to intervene on your behalf: 30 POINTS _
			)
					

Security Clearance, 5/10/10/15, mods(Security Clearance), page(B82), upto(4), cat(Mundane, Social),
	x(#InputToTag("Please describe the nature of the clearance:", nameext, , "Security Clearance")),
	levelnames(_
			''Need to know'' access to a narrow range of secrets,
			''Need to know'' access to a broad range of secrets,
			Free access to a narrow range of secrets,
			Free access to a broad range of secrets _
			)
Signature Gear, 1/2, page(B85), cat(Mundane, Social, Wealth), gives(+(5* @indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000)) to ST:Signature Gear), taboo(ST:Signature Gear < 0),
	x(#InputToTag("Please describe the nature of the Signature Gear:", nameext, , "Signature Gear")),
	replacetags(in "ST:Signature Gear" with "mainwin(15), hide(), noresync(yes)")
					

Social Regard, 5/10, mods(Social Regard), gives(+1 to ST:Reaction), page(B86), upto(4), cat(Mundane, Social),
	x(#InputToTag("Please describe the nature of the Social Regard:", nameext, , "Social Regard"))
					

Social Regard (Feared), 5/10, mods(Social Regard), gives(+1 to ST:Reaction), page(B86), upto(4), cat(Mundane, Social)
Social Regard (Respected), 5/10, mods(Social Regard), gives(+1 to ST:Reaction), page(B86), upto(4), cat(Mundane, Social)
Social Regard (Venerated), 5/10, mods(Social Regard), gives(+1 to ST:Reaction), page(B86), upto(4), cat(Mundane, Social)
Tenure, 5, page(B93), cat(Mundane, Social),
	x(#InputToTag("Please describe the nature of the Tenure:", nameext, , "Tenure"))
					

Zeroed, 10, page(B100), cat(Mundane, Social)

************************************************************************************************************************
[PERKS]
************************************************************************************************************************
<Perks>
_New Perk, 1, noresync(yes), x(#InputToTagReplace("Please enter the name of this Perk:" , name, , "New Perk")), x(#edit)
Accessory, 1, page(B100)
Alcohol Tolerance, 1, page(B100)
Autotrance, 1, page(B100)
Deep Sleeper, 1, page(B100), taboo(DI:Light Sleeper)
Fur, 1, page(B100)
Honest Face, 1, page(B100)
No Hangover, 1, page(B100)
Penetrating Voice, 1, page(B100), taboo(DI:Mute)
Sanitized Metabolism, 1, page(B100)
Shtick, 1, page(B100),
	x(InputToTagReplace("Please describe the Shtick:", nameext, , "Shtick"))

************************************************************************************************************************
[DISADVANTAGES]
************************************************************************************************************************
<Attributes>
Reduced ST, -10/-20, page(B14), mods(Reduced ST, Size, No Fine Manipulators), initmods(Affects displayed ST score, +0%, shortname(Affects ST), gives(-owner::Level to ST:ST), group(Reduced ST), description(This modifier causes the Reduced ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced ST disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced DX, -20/-40, page(B15), mods(Reduced DX, No Fine Manipulators), initmods(Affects displayed DX score, +0%, shortname(Affects DX), gives(-owner::Level to ST:DX), group(Reduced DX), description(This modifier causes the Reduced DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced DX disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced IQ, -20/-40, page(B15), mods(Reduced IQ), initmods(Affects displayed IQ score, +0%, shortname(Affects IQ), gives(-owner::Level to ST:IQ), group(Reduced IQ), description(This modifier causes the Reduced IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced IQ disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced HT, -10/-20, page(B15), mods(Reduced HT), initmods(Affects displayed HT score, +0%, shortname(Affects HT), gives(-owner::Level to ST:HT), group(Reduced HT), description(This modifier causes the Reduced HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced HT disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Will, -5/-10, page(B16), mods(Reduced Will), initmods(Affects displayed Will score, +0%, shortname(Affects Will), gives(-owner::Level to ST:Will), group(Reduced Will), description(This modifier causes the Reduced Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Will disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced Perception, -5/-10, page(B16), mods(Reduced Perception), initmods(Affects displayed Per score, +0%, shortname(Affects Per), gives(-owner::Level to ST:Perception), group(Reduced Perception), description(This modifier causes the Reduced Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Perception disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced Hit Points, -2/-4, page(B16), mods(Reduced Hit Points, Size), initmods(Affects displayed HP score, +0%, shortname(Affects HP), gives(-owner::Level to ST:Hit Points), group(Reduced Hit Points), description(This modifier causes the Reduced Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Hit Points disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced Fatigue Points, -3/-6, page(B16), mods(Reduced Fatigue Points), initmods(Affects displayed FP score, +0%, shortname(Affects FP), gives(-owner::Level to ST:Fatigue Points), group(Reduced Fatigue Points), description(This modifier causes the Reduced Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Fatigue disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Fatigue advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

Reduced Basic Move, -5/-10, page(B17), mods(Reduced Basic Move), initmods(Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(-owner::Level to ST:Basic Move), group(Reduced Basic Move), description(This modifier causes the Reduced Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Basic Move disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced Basic Speed, -5/-10, page(B17), mods(Reduced Basic Speed), upto(80), initmods(Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(-(Owner::Level/4) to ST:Basic Speed), group(Reduced Basic Speed), description(This modifier causes the Reduced Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Basic Speed disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.),
	levelnames(_
			-0.25, -0.5, -0.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -4, -4.25, -4.5, -4.75, -5, -5.25, -5.5, -5.75, -6, -6.25, -6.5, -6.75, -7, -7.25, -7.5, -7.75, -8, -8.25, -8.5, -8.75, -9, -9.25, -9.5, -9.75, -10,
			-10.25, -10.5, -10.75, -11, -11.25, -11.5, -11.75, -12, -12.25, -12.5, -12.75, -13, -13.25, -13.5, -13.75, -14, -14.25, -14.5, -14.75, -15, -15.25, -15.5, -15.75, -16, -16.25, -16.5, -16.75, -17, -17.25, -17.5, -17.75, -18, -18.25, -18.5, -18.75, -19, -19.25, -19.5, -19.75, -20 _
			)
Reduced Water Move, -5/-10, page(B18), mods(Reduced Water Move), initmods(Affects displayed Water Move score, +0%, shortname(Affects Water Move), gives(-owner::Level to ST:Basic Water Move), group(Reduced Water Move), description(This modifier causes the Reduced Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Water Move disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Reduced Air Move, -2/-4, page(B18), mods(Reduced Air Move), initmods(Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(-owner::Level to ST:Basic Air Move), group(Reduced Air Move), description(This modifier causes the Reduced Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),
	description(The Reduced Air Move disadvantage allows you to take reduced levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Reduced Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)
Low TL, -5/-10, page(B22), gives(-1 to ST:Tech Level), cat(Mundane, Social, Mundane Social)
Reduced SM, 0/0, gives(-1 to ST:Size Modifier), page(B19)
Reduced Ground Move, 0/0, page(B18), gives(-1 to ST:Ground Move), replacetags(in "ST:Ground Move" with "hide(), display(yes), mainwin(11), noresync(yes)")

<General>
_New Disadvantage, [cost], displaycost(varies), noresync(yes),
	x(#InputToTagReplace("Please enter the name of this Advantage:" , name, ,"New Advantage"),
	#InputReplace("Please enter the Cost of this disadvantage:", "[cost]", , "New Disadvantage"),
	#edit_
		)

_New Parent Item, 0, isparent(yes),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, , "New Parent Item"))

<Exotic Physical>
Cannot Kick, -5, page(B55), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:No Legs, DI:Quadriplegic)

No Physical Attack (1 Arm), -5, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:No Physical Attack (2 Arms))
No Physical Attack (2 Arms), -10, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:No Physical Attack (1 Arm), DI:One Arm)
Short Arms (1 Arm), -5, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:Short Arms (2 Arms), AD:Long Arms)
Short Arms (2 Arms), -10, page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:Short Arms (1 Arm), AD:Long Arms, DI:One Arm)
Weak Arms (1 Arm), -2/-5, page(B53), cat(Exotic, Physical, Extra Arms/Legs), levelnames(1/2 ST, 1/4 ST), upto(2), taboo(DI:Weak Arms (2 Arms), AD:Arm ST),
		gives(_
			=-(ST:Two Arm Lifting ST::basescore * @if(me::level = 1 THEN 0.5 ELSE 0.75)) to ST:Two Arm Lifting ST, 
			=-(ST:Two Arm Striking ST::basescore * @if(me::level = 1 THEN 0.5 ELSE 0.75)) to ST:Two Arm Striking ST _
			)
Weak Arms (2 Arms), -5/-10, page(B53), cat(Exotic, Physical, Extra Arms/Legs), levelnames(1/2 ST, 1/4 ST), upto(2), taboo(DI:Weak Arms (1 Arm), AD:Arm ST, DI:One Arm, DI:One Arm),
		gives(_
			=-(ST:One Arm Lifting ST::basescore * @if(me::level = 1 THEN 0.5 ELSE 0.75)) to ST:One Arm Lifting ST,
			=-(ST:One Arm Striking ST::basescore * @if(me::level = 1 THEN 0.5 ELSE 0.75)) to ST:One Arm Striking ST,
			=-(ST:Two Arm Lifting ST::basescore * @if(me::level = 1 THEN 0.5 ELSE 0.75)) to ST:Two Arm Lifting ST,
			=-(ST:Two Arm Striking ST::basescore * @if(me::level = 1 THEN 0.5 ELSE 0.75)) to ST:Two Arm Striking ST _
			)
Weapon Mount (1 Arm), -8, gives(-ST:Two Arm Lifting ST::basescore to ST:Two Arm Lifting ST, -ST:Two Arm Striking ST::basescore to ST:Two Arm Striking ST), page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:Weapon Mount (2 Arms), DI:One Arm, DI:Quadriplegic)
Weapon Mount (2 Arms), -16, gives(-ST:One Arm Lifting ST::basescore to ST:One Arm Lifting ST, -ST:One Arm Striking ST::basescore to ST:One Arm Striking ST, -ST:Two Arm Lifting ST::basescore to ST:Two Arm Lifting ST, -ST:Two Arm Striking ST::basescore to ST:Two Arm Striking ST), page(B53), cat(Exotic, Physical, Extra Arms/Legs), taboo(DI:Weapon Mount (1 Arm), DI:One Arm, DI:Quadriplegic)

Shadow Form, -20, mods(Shadow Form Disadvantage), page(B83), cat(Exotic, Physical), taboo(AD:Shadow Form)
Cold-Blooded, -5/-10, upto(2), page(B127), cat(Exotic, Physical),
	levelnames(You "stiffen up" below 50°, You "stiffen up" below 65°),
	conditional(=+2 to ST:HT when "resisting effects of temperature")

Dependency, -5/-10/-20/-30, mods(Dependency), levelnames(Very Common, Common, Occasional, Rare), 
	page(B130), upto(4), cat(Exotic, Physical),
	initmods(_
			Frequency Needed: Monthly, *1, shortname(Monthly), group(Dependency) _
			),
	x(#InputToTag("Specify the substance which you're Dependent on:", nameext, , "Dependency"))

Electrical, -20, page(B134), cat(Exotic, Physical)

Fragile, -5/-10, page(B136), cat(Exotic, Physical), levelnames(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,),
	x( #InputToTag("Specify the type of fragility:", nameext, , "Fragile"))
Fragile (Brittle), -15, page(B136), cat(Exotic, Physical)
Fragile (Combustible), -5, page(B136), cat(Exotic, Physical)
Fragile (Explosive), -15, page(B136), cat(Exotic, Physical)
Fragile (Flammable), -10, page(B136), cat(Exotic, Physical)
Fragile (Unnatural), -50, page(B136), cat(Exotic, Physical), taboo(AD:Unkillable, AD:Hard to Kill, DI:Easy to Kill), conditional(-ST:Death Check to ST:Death Check when "you automatically fail all Death Checks")

Horizontal, -10, page(B138), cat(Exotic, Physical), taboo(DI:Semi-Upright)
Invertebrate, -20, page(B140), cat(Exotic, Physical),
	gives(=-(0.75 * "ST:No Encumbrance::basescore") to "ST:No Encumbrance", =-(0.75 * "ST:Light Encumbrance::basescore") to "ST:Light Encumbrance", =-(0.75 * "ST:Medium Encumbrance::basescore") to "ST:Medium Encumbrance", =-(0.75 * "ST:Heavy Encumbrance::basescore") to "ST:Heavy Encumbrance", =-(0.75 * "ST:X-Heavy Encumbrance::basescore") to "ST:X-Heavy Encumbrance", =-(0.75 * "ST:One-Handed Lift::basescore") to "ST:One-Handed Lift", =-(0.75 * "ST:Two-Handed Lift::basescore") to "ST:Two-Handed Lift", =-(0.75 * "ST:Carry on Back::basescore") to "ST:Carry on Back")

No Fine Manipulators, -30, gives(+1 to ST:No Fine Manipulators), taboo(DI:One Arm, DI:Bad Grip, AD:High Manual Dexterity, "DI:Ham-Fisted", DI:No Manipulators), page(B145), cat(Exotic, Physical)
No Manipulators, -50, gives(+1 to ST:No Fine Manipulators), taboo(DI:One Arm, DI:Bad Grip, AD:High Manual Dexterity, "DI:Ham-Fisted", DI:No Fine Manipulators), page(B145), cat(Exotic, Physical)

No Legs (Aerial), 0, page(B145), cat(Exotic, Physical), needs(AD:Flight), taboo(DI:Cannot Kick, DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Ground Move" with "mainwin(11), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Aquatic), 0, mods(No Legs), page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Water Move" with "mainwin(11), noresync(yes)", in "ST:Ground Move" with "mainwin(11), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Bounces), 0, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Kick" with "hide(yes), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Rolls), 0, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Kick" with "hide(yes), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Slithers), 0, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Kick" with "hide(yes), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Semi-Aquatic), 0, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Sessile), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Water Move" with "mainwin(11), noresync(yes)", in "ST:Ground Move" with "mainwin(11), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Sessile), -50, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Tracked), DI:No Legs (Wheeled)),
	replacetags(in "ST:Basic Move" with "basevalue(0), noresync(yes), minscore(0)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Tracked), -20, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Wheeled)),
	replacetags(in "ST:Kick" with "hide(yes), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)
No Legs (Wheeled), -20, page(B145), cat(Exotic, Physical), taboo(DI:Cannot Kick, DI:No Legs (Aerial), DI:No Legs (Aquatic), DI:No Legs (Bounces), DI:No Legs (Rolls), DI:No Legs (Slithers), DI:No Legs (Semi-Aquatic), DI:No Legs (Sessile), DI:No Legs (Tracked)),
	replacetags(in "ST:Kick" with "hide(yes), noresync(yes)"),
	gives(=nobase to ST:Kick::reach$)

Nocturnal, -20, mods(Nocturnal), page(B146), cat(Exotic, Physical)
Self-Destruct, -10, page(B153), cat(Exotic, Physical), taboo(AD:Unaging, DI:Terminally Ill)
Semi-Upright, -5, page(B153), cat(Exotic, Physical), taboo(DI:Horizontal)
Short Lifespan, -10/-20, page(B154), upto(4), cat(Exotic, Physical), taboo(AD:Extended Lifespan, AD:Unaging, DI:Terminally Ill)

Sleepy, -8/-16/-20/-26, upto(4), page(B154), cat(Exotic, Physical), taboo(AD:Doesn't Sleep),
	levelnames(_
			Asleep 1/2 of the time, Asleep 2/3 of the time, 
			Asleep 3/4 of the time, Asleep 7/8 of the time_
			)

Slow Eater, -10, page(B155), cat(Exotic, Physical), taboo(AD:Doesn't Eat or Drink)
Unhealing, -20/-30, levelnames(Partial, Total), page(B160), upto(2), cat(Exotic, Physical), taboo(AD:Regeneration)
Unusual Biochemistry, -5, page(B160), cat(Exotic, Physical)

Vulnerability, -10/-20/-30/-40, displaycost(variable), upto(4), 
	levelnames(Rare, Occasional, Common, Very Common), mods(Vulnerability), 
	page(B161), cat(Exotic, Physical),
	x(_
		#InputToTag("Specify the type of attack you take extra damage from:", nameext, , "Vulnerability"),
		#buildit _
		)

Weak Bite, -2, page(B161), cat(Exotic, Physical)

Weakness, -5/-10/-20, upto(3), levelnames(1d per 30 minutes, 1d per 5 minutes, 1d per minute),
	mods(Weakness), page(B161), cat(Exotic, Physical),
	initmods(_
			Rarity: Occasional, *1, shortname(Occasional), group(Weakness) _
			)

<Exotic Mental>
Bestial, -10, mods(Bestial), page(B124), cat(Exotic, Mental)
Decreased Time Rate, -100, page(B129), cat(Exotic, Mental), taboo(AD:Altered Time Rate)
Reprogrammable, -10, page(B150), cat(Exotic, Mental)

Stress Atavism, -10/-15/-20, mods(Self-Control), levelnames(Mild, Moderate, Severe), 
	page(B156), upto(3), cat(Exotic, Mental),
	initmods(_
			You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) _
			)

<Supernatural Physical>
Draining, -5/-10/-15, mods(Draining), levelnames(Common, Occasional, Rare), upto(3), page(B132), cat(Supernatural, Physical)

Infectious Attack, -5, page(B140), cat(Supernatural, Physical)
Revulsion, -5/-10/-15, levelnames(Occasional, Common, Very Common), upto(3), page(B151), cat(Supernatural, Physical)

Supernatural Feature, 0, displaycost(variable), mods(Supernatural Feature), page(B157), cat(Supernatural, Physical), x(#buildit), taboo(DI:Appearance::level >= 4)

<Supernatural Mental>
Cursed, -75, page(B129), cat(Supernatural, Mental)

Destiny, -5/-10/-15, levelnames(Minor, Major, Great), upto(3), page(B131), cat(Supernatural, Mental)

Divine Curse, -1/-2, page(B132), cat(Supernatural, Mental), levelnames(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,)
Dread, -10, mods(Dread), page(B133), cat(Supernatural, Mental),
	initmods(_
			Rarity: Occasional, *1, shortname(Occasional), group(Dread) _
			)
Frightens Animals, -10, page(B137), cat(Supernatural, Mental), taboo(AD:Animal Empathy),
	conditional(-4 to ST:Reaction when "animal is reacting", -1 to ST:Reaction when "someone sees how animals react to you, or has Animal Empathy")
Lifebane, -10, page(B142), cat(Supernatural, Mental),
	conditional(-2 to ST:Reaction)
Magic Susceptibility, -3/-6, page(B143), cat(Supernatural, Mental), taboo(AD:Magic Resistance)
Supersensitive, -15, page(B158), cat(Supernatural, Mental)

Uncontrollable Appetite, -15, mods(Self-Control), page(B159), cat(Supernatural, Mental),
	initmods(_
			You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) _
			),
	x(#InputToTag("Specify the substance you must consume:", nameext, , "Uncontrollable Appetite"))

Unique, -5, page(B160), cat(Supernatural, Mental), taboo(AD:Temporal Inertia)
Weirdness Magnet, -15, page(B162), cat(Supernatural, Mental)

<Mundane Physical>
Skinny, -5, gives(-2 To SK:Disguise), 
	conditional(-2 to ST:ST when "you resist knockback", -2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	needs(HT < 15), page(B18), cat(Mundane, Physical, Build), taboo(DI:Overweight, DI:Fat, DI:Very Fat)
Overweight, -1, gives(-1 To SK:Disguise, +1 To SK:Swimming), 
	conditional(+1 to ST:ST when "you resist knockback", -1 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	page(B19), cat(Mundane, Physical, Build), taboo(DI:Skinny, DI:Fat, DI:Very Fat)
Fat, -3, gives(-2 To SK:Disguise, +3 To SK:Swimming), 
	conditional(+2 to ST:ST when "you resist knockback", -2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	needs(HT < 16), page(B19), cat(Mundane, Physical, Build), taboo(DI:Skinny, DI:Overweight, DI:Very Fat)
Very Fat, -5, gives(-3 To SK:Disguise, +5 To SK:Swimming), 
	conditional(+3 to ST:ST when "you resist knockback", -3 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	needs(HT < 14), page(B19), cat(Mundane, Physical, Build), taboo(DI:Skinny, DI:Overweight, DI:Fat)
Dwarfism, -15, gives(-1 To ST:Basic Move, -2 To SK:Disguise, -1 To ST:Size Modifier), 
	conditional(-2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	page(B19), cat(Mundane, Physical, Build, Size Modifier), taboo(DI:Gigantism)
Gigantism, 0, gives(-2 To SK:Disguise, +1 to ST:Size Modifier, +1 to ST:Basic Move), 
	conditional(-2 to SK:Shadowing when "you are trying to follow someone in a crowd"),
	page(B20), cat(Mundane, Physical, Build, Size Modifier), taboo(DI:Dwarfism)
Appearance, -4/-8/-16/-20/-24, mods(Appearance), upto(5), page(B21),
	levelnames([Average], Unattractive, Ugly, Hideous, Monstrous, Horrific), 
 	page(B21), cat(Mundane, Physical, Physical Appearance), taboo(AD:Appearance),
	gives(_
		=@indexedvalue(%level, 0, 0, +2, +3, +4) to SK:Intimidation,
		=@indexedvalue(%level, -1, -2, -4, -5, -6) To GR:Appeal,
		=@indexedvalue(%level, -2, -4, -8, -10, -12) To SK:Sex Appeal _
		)

Unnatural Feature, -1/-2, upto(5), gives(-1 To SK:Disguise, -1 To SK:Shadowing), page(B22), cat(Mundane, Physical, Other Physical Features),
	x(#InputToTagReplace("Please describe the feature:", nameext, , "Unnatural Feature"))

Addiction ([Physiological]), -5/-10/-20, upto(3), 
	levelnames(Cheap, Expensive, Very Expensive),
	mods(Addiction), page(B122), cat(Mundane, Physical),
	x( #InputReplace("Specify the drug to which you are addicted:", "[Physiological]", , "Addiction (Physiological)"))

Addiction (Tobacco), -5, levelnames(Cheap),
	mods(Addiction), page(B122), cat(Mundane, Physical),
	initmods(_
			Effect: Highly addictive (-5 on withdrawal roll), -5, shortname(Highly addictive), group(Addiction), page(B122) | _
			Legality: Legal, +5, shortname(Legal), group(Addiction), page(B122) _
			)

Addiction (Heroin), -20, displaycost(-40), levelnames(Cheap, Expensive, Very Expensive),
	mods(Addiction), page(B122), cat(Mundane, Physical),
	initmods(_
			Effect: Incapacitating, -10, shortname(Incapacitating), group(Addiction), page(B122) | _
			Effect: Totally addictive (-10 on withdrawal roll), -10, shortname(Totally addictive), group(Addiction), page(B122) | _
			Legality: Illegal, +0, shortname(Illegal), group(Addiction), page(B122) _
			)

Alcoholism, -15, mods(Alcoholism), page(B122), cat(Mundane, Physical)
Bad Back, -15/-25, levelnames(Mild, Severe), page(B123), upto(2), cat(Mundane, Physical)
Bad Grip, -5/-10, page(B123), cat(Mundane, Physical), taboo(DI:No Fine Manipulators, DI:No Manipulators)
Bad Sight (Nearsighted), -25, page(B123), cat(Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Farsighted), AD:Acute Vision), mods(Bad Sight),
	conditional(_
			-6 to ST:Vision when "item is more than 1 yard away",
			-2 to "CL:Combat/Weapons - Melee Combat",
			*2 to "CL:Combat/Weapons - Ranged Combat" when "calculating range penalties" _
			)
Bad Sight (Farsighted), -25, page(B123), cat(Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Nearsighted), AD:Acute Vision), mods(Bad Sight),
	conditional(_
			-6 to ST:Vision when "item is within 1 yard",
			-3 to ST:DX when "performing close manual tasks",
			-3 to "CL:Combat/Weapons - Melee Combat" when "in Close Combat" _
			)
Bad Smell, -10, page(B124), cat(Mundane, Physical), gives(-2 to ST:Reaction)
Blindness, -50, page(B124), cat(Mundane, Physical), mods(Blindness), taboo(AD:Acute Vision, AD:360° Vision, AD:Hyperspectral Vision, AD:Infravision, AD:Penetrating Vision, AD:Telescopic Vision, AD:Ultravision, AD:Night Vision, AD:Peripheral Vision, AD:Dark Vision, DI:Colorblindness, DI:Night Blindness, DI:No Depth Perception, DI:One Eye, DI:Bad Sight, AD:Microscopic Vision, DI:Dyslexia, DI:Restricted Vision),
	gives(-4 to ST:Dodge, -6 to CL:Combat/Weapons - Melee Combat, -6 to CL:Combat/Weapons - Ranged Combat, -6 to CL:Athletic - Combat Art/Sport, -ST:Vision::basescore to ST:Vision)
Cannot Speak, -15, page(B125), cat(Mundane, Physical), taboo(DI:Stuttering, DI:Mute, AD:Speak Underwater)
Mute, -25, page(B125), cat(Mundane, Physical), taboo(DI:Stuttering, AD:Voice, PE:Penetrating Voice, DI:Cannot Speak, AD:Speak Underwater)

Chronic Pain, -5/-10/-15, upto(3), levelnames(Mild, Severe, Agonizing), 
	mods(Chronic Pain), page(B126), cat(Mundane, Physical), 
	initmods(_
			Interval: 2 hours, *1, shortname(2 hours), group(Chronic Pain) _
			| Frequency: Attack occurs on a roll of 9 or less, *1, shortname(9 or less), group(Chronic Pain) _
			)   

Colorblindness, -10, page(B127), cat(Mundane, Physical), taboo(DI:Blindness),
	conditional(-1 to SK:Artist, -1 to SK:Chemistry, -1 to SK:Driving, -1 to SK:Merchant, -1 to SK:Piloting, -1 to SK:Tracking)
Combat Paralysis, -15, gives(-2 to ST:Fright Check), page(B127), cat(Mundane, Physical), taboo(AD:Combat Reflexes)
Deafness, -20, page(B129), cat(Mundane, Physical), mods(Deafness), taboo(AD:Discriminatory Hearing, AD:Parabolic Hearing, AD:Subsonic Hearing, AD:Subsonic Speech, AD:Ultrahearing, AD:Ultrasonic Speech, AD:Acute Hearing),
	gives(-ST:Perception to ST:Hearing)
Disturbing Voice, -10, page(B132), cat(Mundane, Physical), taboo(AD:Voice, DI:Mute),
	gives(-2 to GR:Stuttering), conditional(-2 to ST:Reaction)
Easy to Kill, -2/-4, page(B134), upto(ST:HT - 3), cat(Mundane, Physical), taboo(AD:Hard To Kill, DI:Fragile (Unnatural), AD:Unkillable), gives(-1 to ST:Death Check)
Epilepsy, -30, page(B136), cat(Mundane, Physical)
Extra Sleep, -2/-4, page(B136), cat(Mundane, Physical), taboo(AD:Doesn't Sleep, DI:Less Sleep)
G-Intolerance, -10/-20, upto(2), levelnames(0.1G, 0.05G), cat(Mundane, Physical), page(B137), taboo("AD:Improved G-Tolerance")
Ham-Fisted, -5/-10, page(B138), cat(Mundane, Physical), taboo(AD:High Manual Dexterity, DI:No Fine Manipulators, DI:No Manipulators),
	upto(2), gives(-3 to SK:Fast-Draw, -3 to GR:High Manual Dexterity), conditional(-1 to ST:Reaction when "being tidy or well-groomed matters")
Hard of Hearing, -10, gives(-4 To ST:Hearing), page(B138), cat(Mundane, Physical), mods(Hard of Hearing), taboo(DI:Deafness)
Hemophilia, -30, needs(HT <= 10), page(B138), cat(Mundane, Physical)
Hunchback, -10, gives(-1 to ST:Reaction, -3 To GR:Hunchback), page(B139), cat(Mundane, Physical)
Increased Consumption, -10/-20, page(B139), cat(Mundane, Physical), taboo(AD:Doesn't Eat or Drink, AD:Reduced Consumption)

Increased Life Support, -10, page(B139), cat(Mundane, Physical),
	x( #InputToTag("Specify the environmental requirement:", nameext, , "Increased Life Support") )
Increased Life Support (Extreme Heat/Cold), -10, page(B139), cat(Mundane, Physical)
Increased Life Support (Massive), -10, page(B139), cat(Mundane, Physical)
Increased Life Support (Pressurized), -10, page(B139), cat(Mundane, Physical)
Increased Life Support (Radioactive), -10, page(B139), cat(Mundane, Physical)

Insomniac, -10/-15, levelnames(Mild, Severe), upto(2), page(B140), cat(Mundane, Physical), taboo(AD:Doesn't Sleep)
Killjoy, -15, gives(-3 To GR:Killjoy), page(B140), cat(Mundane, Physical),
	conditional(-1 to ST:Reaction when "lack of appreciation becomes obvious (upto -3)")
Klutz, -5/-15, levelnames( , Total), needs(DX <= 13), page(B141), upto(2), cat(Mundane, Physical)

Lame (Crippled Legs), -10, page(B141), cat(Mundane, Physical), taboo(ST:Basic Move > @int(ST:Basic Speed/2)), sets(ST:Basic Move = @int(ST:Basic Speed/2)), taboo(DI:Cannot Kick, DI:No Legs, DI:Lame (Missing Legs), DI:Lame (Legless), DI:Lame (Paraplegic), @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	gives(-3 to "CL:Combat/Weapons - Melee Combat")
Lame (Missing Legs), -20, page(B141), cat(Mundane, Physical), taboo(ST:Basic Move > 2), sets(ST:Basic Move = 2), taboo(DI:Cannot Kick, DI:No Legs, DI:Lame (Crippled Legs), DI:Lame (Legless), DI:Lame (Paraplegic), @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	conditional(-6 to ST:DX when "using any skill which requires your legs"), mods(Missing Legs),
	gives(-6 to "CL:Combat/Weapons - Melee Combat")
Lame (Legless), -30, page(B141), cat(Mundane, Physical), taboo(ST:Basic Move > 0), sets(ST:Basic Move = 0), taboo(DI:Cannot Kick, DI:No Legs, DI:Lame (Crippled Legs), DI:Lame (Missing Legs), DI:Lame (Paraplegic), @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	conditional(-6 to ST:DX when "using any skill which requires your legs"), mods(Missing Legs),
	gives(-6 to "CL:Combat/Weapons - Melee Combat")
Lame (Paraplegic), -30, page(B141), cat(Mundane, Physical), needs(ST:Basic Move <= 0), sets(ST:Basic Move = 0), taboo(DI:Lame (Crippled Legs), DI:Lame (Missing Legs), DI:Lame (Legless), DI:Quadriplegic),
	conditional(-6 to ST:DX when "using any skill which requires your legs"),
	gives(-6 to "CL:Combat/Weapons - Melee Combat")

Light Sleeper, -5, page(B142), cat(Mundane, Physical), taboo(PE:Deep Sleeper)
Low Pain Threshold, -10, page(B142), cat(Mundane, Physical), taboo(AD:High Pain Threshold, AD:Supernatural Durability),
	conditional(-1 to ST:Reaction when "from ''macho'' individuals")

Maintenance, -10/-20, mods(Maintenance), page(B143), cat(Mundane, Physical), 
	levelnames(1 person, 2 people, 3-5 people, 6-10 people, 11-20 people, 21-50 people, 51-100 people, 51-100 people doubled 1),
	initmods( Maintenance Interval: Daily, *1, shortname(Daily), group(Maintenance) ),
	x(#InputToTag("Specify the type of maintenance required:", nameext, , "Maintenance"))
   
Missing Digit, -2/-5, levelnames(Finger, Thumb), page(B144), upto(2), cat(Mundane, Physical), taboo(AD:Regrowth)
Motion Sickness, -10, page(B144), cat(Mundane, Physical)
Neurological Disorder, -15/-35/-55, levelnames(Mild, Severe, Crippling), page(B144), upto(3), cat(Mundane, Physical),
	gives(-2 to GR:High Manual Dexterity),
	conditional(-2 to CL:Social when "your condition becomes known", -2 to SK:Performance when "your condition becomes known")
Night Blindness, -10, page(B144), cat(Mundane, Physical), taboo(DI:Blindness, AD:Night Vision, AD:Dark Vision),
	conditional(-3 to ST:Vision when "a darkness penalty applies; or double the darkness penalty, whichever is worse")
No Depth Perception, -15, page(B145), cat(Mundane, Physical), taboo(DI:One Eye, DI:Blindness)
No Sense of Smell/Taste, -5, page(B146), mods(No Sense of Smell/Taste), cat(Mundane, Physical), taboo(AD:Discriminatory Smell, AD:Acute Taste and Smell), gives(-"ST:Taste/Smell::basescore" to "ST:Taste/Smell")
Noisy, -2/-4, page(B146), cat(Mundane, Physical), taboo(AD:Silence), conditional(-1 to ST:Reaction)
Numb, -20, page(B146), cat(Mundane, Physical), taboo(AD:Acute Touch, AD:Sensitive Touch)
One Arm, -20, page(B147), gives(-ST:Two Arm Lifting ST::basescore to ST:Two Arm Lifting ST, -ST:Two Arm Striking ST::basescore to ST:Two Arm Striking ST), cat(Mundane, Physical),
	taboo(DI:No Fine Manipulators, DI:No Manipulators, AD:Long Arms (2 Arms), AD:Extra-Flexible Arms (2 Arms), DI:Short Arms (2 Arms), DI:Weapon Mount (2 Arms), DI:No Physical Attack (2 Arms), AD:Extra Arms, DI:Weak Arms (2 Arms), DI:One Hand, AD:Ambidexterity, DI:Quadriplegic, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level)
One Eye, -15, page(B147), cat(Mundane, Physical), taboo(DI:No Depth Perception, DI:Blindness, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level),
	conditional(-3 to CL:Combat/Weapons - Ranged Combat when "not aiming"), gives(-1 to CL:Combat/Weapons - Melee Combat)
One Hand, -15, page(B148), cat(Mundane, Physical), taboo(DI:One Arm, AD:Ambidexterity, DI:Quadriplegic, @if(@itemhasmod(AD:Regrowth, Minor) THEN 0 ELSE 1) * AD:Regrowth::level)
Quadriplegic, -80, page(B150), cat(Mundane, Physical), taboo(DI:Lame, DI:One Arm, DI:One Hand, AD:Extra Arms, AD:Extra Legs, AD:Long Legs, DI:Cannot Kick)
Restricted Diet, -10/-20/-30/-40, mods(Restricted Diet), levelnames(Very Common, Common, Occasional, Rare), page(B151), upto(4), cat(Mundane, Physical), taboo(AD:Doesn't Eat or Drink, AD:Universal Digestion)
Restricted Vision, -15/-30, levelnames(No Peripheral Vision, Tunnel Vision), upto(2), page(B151), cat(Mundane, Physical), taboo(DI:Blindness)
Slow Healing, -5/-10, page(B155), upto(3), cat(Mundane, Physical), taboo(AD:Regeneration, AD:Rapid Healing, AD:Very Rapid Healing)
Slow Riser, -5, page(B155), cat(Mundane, Physical), taboo(AD:Doesn't Sleep)
Social Disease, -5, page(B155), cat(Mundane, Physical), conditional(-1 to ST:Reaction)
Space Sickness, -10, page(B156), cat(Mundane, Physical)
Stuttering, -10, gives(-2 To GR:Stuttering), page(B157), cat(Mundane, Physical), taboo(DI:Mute), conditional(-2 to ST:Reaction)

Susceptible to [Very Common], -4/-8, page(B158), upto(@min(5, ST:HT - 3)), cat(Mundane, Physical),
	x( #InputReplace("Specify the environmentally Very Common class of noxious items or substances to which the character is susceptible:", "[Very Common]", , "Susceptible to [Very Common]") )
Susceptible to [Common], -2/-4, page(B158), upto(@min(5, ST:HT - 3)), cat(Mundane, Physical),
	x( #InputReplace("SUSCEPTIBLE: Specify the environmentally Common class of noxious items or substances to which the character is susceptible:", "[Common]", , "Susceptible to [Common]") )
Susceptible to [Occasional], -1/-2, page(B158), upto(@min(5, ST:HT - 3)), cat(Mundane, Physical),
	x( #InputReplace("SUSCEPTIBLE: Specify the environmentally Occasional class of noxious items or substances to which the character is susceptible:", "[Occasional]", , "Susceptible to [Occassional]") )

Terminally Ill, -50/-75/-100, levelnames(Up to two years, Up to one year, Up to one month), page(B158), upto(3), cat(Mundane, Physical), taboo(AD:Unaging, DI:Self-Destruct, AD:Extended Lifespan, DI:Short Lifespan)
Timesickness, -10, page(B158), cat(Mundane, Physical)
Unfit, -5, page(B160), cat(Mundane, Physical), taboo(DI:Very Unfit, AD:Fit, AD:Very Fit), conditional(-1 to ST:HT), gives(-1 to ST:Death Check, -1 to ST:Consciousness Check)
Very Unfit, -15, page(B160), cat(Mundane, Physical), taboo(DI:Unfit, AD:Fit, AD:Very Fit), conditional(-2 to ST:HT), gives(-2 to ST:Death Check, -2 to ST:Consciousness Check)
Wounded, -5, page(B162), cat(Mundane, Physical)

<Mundane Mental>
Absent-Mindedness, -15, page(B122), cat(Mundane, Mental), conditional(-5 to ST:IQ when "concentrating on another task")

Addiction ([Psychological]), -5/-10/-20, upto(3), 
	levelnames(Cheap, Expensive, Very Expensive),
	mods(Addiction), page(B122), cat(Mundane, Mental),
	x( #InputReplace("Specify the activity to which you are addicted:", "[Psychological]", , "Addiction (Psychological)") )

Amnesia (Partial), -10, page(B123), cat(Mundane, Mental), taboo(DI:Amnesia (Total))
Amnesia (Total), -25, page(B123), cat(Mundane, Mental), taboo(DI:Amnesia (Partial))

Bad Temper, -10, mods(Self-Control), page(B124), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Berserk, -10, mods(Self-Control, Berserk), page(B124), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Bloodlust, -10, mods(Self-Control), page(B125), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Bully, -10, mods(Self-Control), page(B125), cat(Mundane, Mental), gives(-2 to ST:Reaction),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Callous, -5, gives(-3 To SK:Teaching), page(B125), cat(Mundane, Mental),
	conditional(-1 to ST:Reaction when "past victim, or has Empathy", -3 to SK:Psychology when "attempting to help people", +1 to SK:Interrogation when "you use threats or torture", +1 to SK:Intimidation when "you use threats or torture")
   
Cannot Learn, -30, page(B125), cat(Mundane, Mental)

Charitable, -15, mods(Self-Control), page(B125), cat(Mundane, Mental), taboo(DI:Greed),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Chronic Depression, -15, mods(Self-Control), page(B126), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Chummy, -5, page(B126), cat(Mundane, Mental), taboo(DI:Loner, DI:Gregarious), conditional(-1 to ST:IQ when "alone")
Gregarious, -10, page(B126), cat(Mundane, Mental), taboo(DI:Chummy, DI:Loner), conditional(-1 to ST:IQ when "in a group of four or less", -4 to ST:IQ when "alone")

Clueless, -10, gives(-4 To SK:Savoir-Faire, -2 to ST:Reaction), page(B126), cat(Mundane, Mental)

Code of Honor, -5/-10, page(B127), upto(3), cat(Mundane, Mental), levelnames(,,),
	x(#InputToTag("Specify the type of Code of Honor:", nameext, , "Code of Honor"))
Code of Honor (Pirate's), -5, page(B127), cat(Mundane, Mental)
Code of Honor (Professional), -5, page(B127), cat(Mundane, Mental)
Code of Honor (Gentleman's), -10, page(B127), cat(Mundane, Mental)
Code of Honor (Soldier's), -10, page(B127), cat(Mundane, Mental)
Code of Honor (Chivalry), -15, page(B127), cat(Mundane, Mental)

Compulsive Behavior, -5/-10, mods(Self-Control), page(B128), upto(3), cat(Mundane, Mental), levelnames(,,), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	x( #InputToTag("Specify the type of compulsive behavior:", nameext, , "Compulsive Behavior") )
Compulsive Carousing, -5, mods(Self-Control), page(B128), cat(Mundane, Mental),
	conditional(+1 to ST:Reaction when "from like-minded extroverts", -1 to ST:Reaction when "from sober-minded citizens (upto -4)"),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Compulsive Gambling, -5, mods(Self-Control), page(B128), cat(Mundane, Mental), 
	conditional(=$solver(@int(me::points/5)) to ST:Reaction),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Compulsive Generosity, -5, mods(Self-Control), page(B128), cat(Mundane, Mental), taboo(DI:Miserliness), 
	conditional(+1 to ST:Reaction when "from pios folks"),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Compulsive Lying, -15, mods(Self-Control), page(B128), cat(Mundane, Mental), taboo(DI:Truthfulness), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Compulsive Spending, -5, mods(Self-Control), page(B128), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to SK:Merchant when "you bargain or haggle",
			=@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to SK:Merchant when "you bargain or haggle",
			=@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to SK:Merchant when "you bargain or haggle",
			=@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to SK:Merchant when "you bargain or haggle" _
			)

Compulsive Vowing, -5, mods(Self-Control), page(B128), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Confused, -10, mods(Self-Control), page(B129), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Cowardice, -10, mods(Self-Control), page(B129), cat(Mundane, Mental), taboo(AD:Fearlessness),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	gives(_
		=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Fright Check,
		=@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Fright Check,
		=@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Fright Check,
		=@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Fright Check_
	),
	conditional(_
			=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Reaction when "from trained fighters, when cowadice matters",
			=@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Reaction when "from trained fighters, when cowadice matters",
			=@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Reaction when "from trained fighters, when cowadice matters",
			=@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Reaction when "from trained fighters, when cowadice matters" _
			)

Curious, -5, mods(Self-Control), page(B129), cat(Mundane, Mental), taboo(DI:Incurious),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Delusion, -5/-10/-15, upto(3), levelnames(Minor, Major, Severe), page(B130), 
	cat(Mundane, Mental), gives(-1 to ST:Reaction),
	x(#InputToTag("Specify your delusion here:", nameext, , "Delusion"))

Discipline of Faith, -5/-10, upto(3), page(B132), cat(Mundane, Mental), levelnames(,,),
	x(#InputToTag("Specify your set of rules here:", nameext, , "Discipline of Faith"))
Discipline of Faith (Asceticism), -15, page(B132), cat(Mundane, Mental), taboo(AD:Wealth, AD:Status::baselevel > 0)
Discipline of Faith (Monasticism), -10, page(B132), cat(Mundane, Mental), taboo(AD:Wealth, AD:Status::baselevel > 0)
Discipline of Faith (Mysticism), -10, page(B132), cat(Mundane, Mental), conditional(-2 to ST:Reaction when "not a devout co-religionist")
Discipline of Faith (Ritualism), -5, page(B132), cat(Mundane, Mental)

Dyslexia, -10, page(B134), cat(Mundane, Mental), taboo(CA:Language - Written > 0, DI:Blindness)
Easy to Read, -10, page(B134), cat(Mundane, Mental)
Fanaticism, -15/-15, levelnames( , Extreme), page(B136), upto(2), cat(Mundane, Mental),
	x(#InputToTag("Specify the country, organization, philosiphy, or religion that you put ahead of everything else:", nameext, , "Fanaticism")),
	conditional(=+@if(%level = 2 THEN 3) to ST:Will when "resisting Brainwashing, Interrogation, and Mind Control")
Fearfulness, -2/-4, gives(-1 To Fright Check), page(B136), upto(ST:Will - 3), cat(Mundane, Mental), taboo(AD:Fearlessness, AD:Unfazeable)
Flashbacks, -5/-10/-20, levelnames(Mild, Severe, Crippling), upto(3), page(B136), cat(Mundane, Mental)

Gluttony, -5, mods(Self-Control), page(B137), cat(Mundane, Mental), taboo(AD:Doesn't Eat or Drink),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Greed, -15, mods(Self-Control), page(B137), cat(Mundane, Mental), taboo(DI:Charitable),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Guilt Complex, -5, page(B137), cat(Mundane, Mental)

Gullibility, -10, gives(-3 To SK:Merchant), mods(Self-Control), page(B137), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	taboo(SK:Detect Lies)

Hidebound, -5, page(B138), cat(Mundane, Mental),
	conditional(-2 to SK:Artist when "creativity matters", -2 to SK:Engineer when "making a new invention")

Honesty, -10, mods(Self-Control), page(B138), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	conditional(+1 to ST:Reaction when "honesty becomes known", +3 to ST:Reaction when "a question of honor or trust is involved")

Impulsiveness, -10, mods(Self-Control), page(B139), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Incurious, -5, mods(Self-Control), page(B140), cat(Mundane, Mental), taboo(DI:Curious),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Indecisive, -10, mods(Self-Control), page(B140), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Innumerate, -5, page(B140), cat(Mundane, Mental), taboo(AD:Lightning Calculator, AD:Intuitive Mathematician, AD:Mathematical Ability),
	ndl(@if(ST:Tech Level::basescore <=4 THEN 1 ELSE 0)),
	description(At TL 3 and below Innumerate doesn't count against the Disadvantage Limit. This can be changed by checking (or unchecking) the 'Do Not Count Against Disadvantage Limit' box in the Edit window.)

Intolerance, -5/-10, upto(2), page(B140), cat(Mundane, Mental),
	levelnames(One group, Total Intolerance),
	x(#InputToTag("Specify the group or groups you are Intolerance of:", nameext, , "Intolerance"))

Jealousy, -10, page(B140), cat(Mundane, Mental)

Kleptomania, -15, mods(Self-Control), page(B141), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Laziness, -10, page(B142), cat(Mundane, Mental), taboo(DI:Workaholic)

Lecherousness, -15, mods(Self-Control), page(B142), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Loner, -5, mods(Self-Control), page(B142), cat(Mundane, Mental), taboo(DI:Chummy, DI:Gregarious), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Low Empathy, -20, gives(-3 To GR:Low Empathy), page(B142), cat(Mundane, Mental), taboo(AD:Empathy, AD:Sensitive)
Low Self-Image, -10, page(B143), cat(Mundane, Mental), taboo(DI:Overconfidence)
Lunacy, -10, page(B143), cat(Mundane, Mental),
	conditional(-2 to ST:Will when "it's a full moon")
Manic-Depressive, -20, page(B143), cat(Mundane, Mental)
Megalomania, -10, page(B144), cat(Mundane, Mental),
	conditional(+2 to ST:Reaction when "young or naive individuals", -2 to ST:Reaction when "experienced NPCs")

Miserliness, -10, mods(Self-Control), page(B144), cat(Mundane, Mental), taboo(DI:Compulsive Generosity, DI:Compulsive Spending),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Mundane Background, -10, page(B144), cat(Mundane, Mental)

Nightmares, -5, mods(Self-Control), page(B145), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

No Sense of Humor, -10, page(B146), cat(Mundane, Mental), conditional(-2 to ST:Reaction)
Non-Iconographic, -10, page(B146), cat(Mundane, Mental)
Oblivious, -5, gives(-1 To GR:Oblivious), page(B146), cat(Mundane, Mental)

Obsession, -5/-10, mods(Self-Control), levelnames(Short-Term Goal, Long-Term Goal), upto(2), page(B146), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	x(#InputToTagReplace("Describe your Obsession:", nameext, , "Obsession"))

On the Edge, -15, mods(Self-Control), page(B147), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	conditional(-2 to ST:Reaction when "people witness behavior", +2 to ST:Reaction when "witnessed by people who value bravery over self-preservation")

Overconfidence, -5, mods(Self-Control), page(B148), cat(Mundane, Mental), taboo(DI:Low Self-Image),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	conditional(+2 to ST:Reaction when "young or naive individuals", -2 to ST:Reaction when "experienced NPCs")

Pacifism (Reluctant Killer), -5, page(B148), cat(Mundane, Mental), taboo(DI:Pacifism (Cannot Harm Innocents), DI:Pacifism (Cannot Kill), DI:Pacifism (Self-Defense Only), DI:Pacifism (Total Nonviolence))
Pacifism (Cannot Harm Innocents), -10, page(B148), cat(Mundane, Mental), taboo(DI:Pacifism (Reluctant Killer), DI:Pacifism (Cannot Kill), DI:Pacifism (Self-Defense Only), DI:Pacifism (Total Nonviolence))
Pacifism (Cannot Kill), -15, page(B148), cat(Mundane, Mental), taboo(DI:Pacifism (Reluctant Killer), DI:Pacifism (Cannot Harm Innocents), DI:Pacifism (Self-Defense Only), DI:Pacifism (Total Nonviolence))
Pacifism (Self-Defense Only), -15, page(B148), cat(Mundane, Mental), taboo(DI:Pacifism (Reluctant Killer), DI:Pacifism (Cannot Harm Innocents), DI:Pacifism (Cannot Kill), DI:Pacifism (Total Nonviolence))
Pacifism (Total Nonviolence), -30, page(B148), cat(Mundane, Mental), taboo(DI:Pacifism (Reluctant Killer), DI:Pacifism (Cannot Harm Innocents), DI:Pacifism (Cannot Kill), DI:Pacifism (Self-Defense Only))

Paranoia, -10, page(B148), cat(Mundane, Mental), conditional(-2 to ST:Reaction)
Phantom Voices, -5/-10/-15, levelnames(Annoying, Disturbing, Diabolical), page(B148), upto(3), cat(Mundane, Mental)

Phobia, -5/-10, upto(4), mods(Self-Control), page(B148), cat(Mundane, Mental), levelnames(,,,), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	x(#InputToTag("Specify what you're afraid of here:", nameext, , "Phobia"))

Phobia (%examplelist%), %examplecostlist%, displaycost(variable), mods(Self-Control), page(B148), cat(Mundane, Mental),   
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	x(#ChoiceList(_
			name(example),
			title(Phobia: Choose a Phobia),
			text(Choose a phobia from the list of examples provided:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Autophobia: Being Alone"=-15,
				"Hemophobia: Blood"=-10,
				"Ailurophobia: Cats"=-5,
				"Demophobia: Crowds"=-15,
				"Scotophobia: Darkness"=-15,
				"Necrophobia: Death and the Dead"=-10,
				"Mysophobia: Dirt"=-10,
				"Cynophobia: Dogs"=-5,
				"Claustrophobia: Enclosed Spaces"=-15,
				"Pyrophobia: Fire"=-5,
				"Acrophobia: Heights"=-10,
				"Entomophobia: Insects"=-10,
				"Brontophobia: Loud Noises"=-10,
				"Technophobia: Machinery (TL4-)"=-5,
				"Technophobia: Machinery (TL5+)"=-15,
				"Manaphobia: Magic (common magic)"=-15,
				"Manaphobia: Magic (uncommon magic)"=-10,
				"Manaphobia: Magic (unknown magic)"=-5,
				"Teratophobia: Monsters"=-15,
				"Triskaidekaphobia: The Number 13"=-5,
				"Thalassophobia: Oceans"=-10,
				"Agoraphobia: Open Spaces"=-10,
				"Psionophobia: Psionic Powers (common psi powers)"=-15,
				"Psionophobia: Psionic Powers (uncommon psi powers)"=-10,
				"Psionophobia: Psionic Powers (unknown psi powers)"=-5,
				"Herpetophobia: Reptiles"=-10,
				"Coitophobia: Sex"=-10,
				"Aichmophobia: Sharp Things (TL5-)"=-15,
				"Aichmophobia: Sharp Things (TL6+)"=-10,
				"Arachnophobia: Spiders"=-5,
				"Xenophobia: Strange and Unknown Things"=-15,
				"Heliophobia: The Sun"=-15,
				"Hoplophobia: Weapons"=-20_
			)_
			)_
	), noresync(yes)

Post-Combat Shakes, -5, mods(Self-Control), page(B150), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Pyromania, -5, mods(Self-Control), page(B150), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Sadism, -15, mods(Self-Control), page(B152), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	conditional(-3 to ST:Reaction)

Selfish, -5, mods(Self-Control), page(B153), cat(Mundane, Mental), taboo(DI:Selfless),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Selfless, -5, mods(Self-Control), page(B153), cat(Mundane, Mental), taboo(DI:Selfish),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Sense of Duty, -2/-5/-10/-15/-20, levelnames(Individual, Small Group, Large Group, Entire Race, Every Living Being), page(B153), upto(5), cat(Mundane, Mental),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known"),
	x(#InputToTag("Specify the person or group you have a Sense of Duty towards:", nameext, , "Sense of Duty"))

Short Attention Span, -10, mods(Self-Control), page(B153), cat(Mundane, Mental), taboo("AD:Single-Minded")
Shyness, -5/-10/-20, gives(=@indexedvalue(%level, -1, -2, -4) To GR:Shyness), levelnames(Mild, Severe, Crippling), page(B154), upto(3), cat(Mundane, Mental)
Slave Mentality, -40, page(B154), cat(Mundane, Mental)

Sleepwalker, -5, mods(Self-Control), page(B154), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Split Personality, -15, mods(Self-Control), page(B156), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ),
	gives(-1 to ST:Reaction), conditional(-3 to ST:Reaction when "others witness a personality shift")

Squeamish, -10, mods(Self-Control), page(B156), cat(Mundane, Mental), 
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Stubbornness, -5, page(B157), cat(Mundane, Mental), conditional(-1 to ST:Reaction)
Trademark, -5/-10/-15, levelnames(Simple, Complex, Elaborate), page(B159), upto(3), cat(Mundane, Mental),
	x(#InputToTag("Specify your Trademark:", nameext, , "Trademark"))

Trickster, -15, mods(Self-Control), page(B159), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Truthfulness, -5, mods(Self-Control), page(B159), cat(Mundane, Mental), taboo(DI:Compulsive Lying), 
	gives(-5 to SK:Fast-Talk),
	conditional(-5 to SK:Acting when "your purpose is to deceive"),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

Unluckiness, -10, page(B160), cat(Mundane, Mental)
Vow, -5/-10/-15, levelnames(Minor, Major, Great), page(B160), upto(3), cat(Mundane, Mental),
	x(#InputToTag("Please describe the nature of your Vow:", nameext, , "Vow"))
Workaholic, -5, page(B162), cat(Mundane, Mental), conditional(+1 to ST:Reaction, -1 to ST:Reaction), taboo(DI:Laziness)

Xenophilia, -10, mods(Self-Control), page(B162), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )

<Mundane Social>
Mistaken Identity, -5, page(B21), cat(Mundane, Social, Other Physical Features)
Odious Personal Habit, -5/-10, upto(3), page(B22), cat(Mundane, Social, Other Physical Features),
	conditional(-1 to ST:Reaction when "people notice your problem"),
	x(#InputToTag("Specify the Odious Personal Habit:", nameext, , "Odious Personal Habit"))
Wealth, -10/-15/-25, upto(3), page(B25), levelnames([Average], Struggling, Poor, Dead Broke), cat(Mundane, Social, Wealth),
	gives(=@indexedvalue(%level, -5, -8, -10) To ST:Wealth Modifier),
	taboo(AD:Wealth, DI:Wealth > me::level, DI:Wealth < me::level)
Debt, -1/-2, page(B26), upto(20), cat(Mundane, Social, Wealth)

Reputation, -5/-10, mods(Reputation Disadvantage), page(B27), upto(4), cat(Mundane, Social, Influence),
	x(#InputToTag("Please describe the nature of the Reputation:", nameext, , "Reputation")),
	initmods(_
			People Affected: Almost everyone in your game world, *1, shortname(Almost everyone), group(Reputation) _
			| Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation) _
			),
	conditional(-1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you")

Status, -5/-10, page(B28), gives(-1 to ST:Status), cat(Mundane, Social, Influence), taboo(AD:Status),
	upto(2 + @indexedvalue(AD:Wealth::level, 0, 1, 1, 1, 2, 3))

Dependent, -1/-2/-5/-10/-15, upto(5),
	mods(Dependent, Frequency of Appearance), page(B131), cat(Mundane, Social),
	levelnames(No more than 100%, No more than 75%, No more than 50%, No more than 25%, 0 or fewer points), 
	initmods(_
			Importance: Friend, *1, shortname(Friend), group(Dependent) _
			| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			),
	x(#InputToTag("Name or describe your Dependent:", nameext, , "Dependent"))

Duty, -2/-5/-10/-15, mods(Duty), page(B134), cat(Mundane, Social), upto(4),
	levelnames("6 or less (quite rarely)", "9 or less (fairly often)", "12 or less (quite often)", "15 or less (almost always)"),
	x(#InputToTag("Please describe the nature of your Duty:", nameext, , "Duty"))

Enemy (One Person), -5/-10/-20, upto(3), mods(Enemy, Evil Twin, Frequency of Appearance), 
   page(B135), cat(Mundane, Social),
   levelnames("Less powerful than the PC", "Equal in power to the PC", "More powerful than the PC"),
   initmods(_
		Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
		),
	x(#InputToTagReplace("Name or describe your Enemy:", nameext, , "Enemy (One Person)"))

Enemy (Less powerful group), -10/-20/-30, upto(3), mods(Enemy, Frequency of Appearance), 
	page(B135), cat(Mundane, Social),
	levelnames("Small group (3-5 people)", "Medium-sized group (6-20 people)", "A large group (21-1,000 people)"),
	initmods(_
			Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			),
	x(#InputToTagReplace("Name or describe your Enemy Group:", nameext, , "Enemy (Less powerful group)"))

Enemy (Formidable group), -30/-40, upto(2), mods(Enemy, Frequency of Appearance), 
	page(B135), cat(Mundane, Social),
	levelnames("medium-sized group, some formidable or super-human", "utterly formidable group"),
	initmods(_
			Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) _
			),
	x(#InputToTagReplace("Name or describe your Enemy Group:", nameext, , "Enemy (Formidable group)"))

Secret, -5/-10/-20/-30, upto(4), page(B152), cat(Mundane, Social),
	levelnames("Serious Embarrassment", "Utter Rejection", "Imprisonment or Exile", "Possible Death"),
	x(#InputToTag("Please describe the nature of your Secret:", nameext, , "Secret"))

Secret Identity, -5/-10/-20/-30, mods(Secret Identity), page(B153), cat(Mundane, Social),
	levelnames("Serious Embarrassment", "Utter Rejection", "Imprisonment or Exile", "Possible Death")

Social Stigma, -5/-10, upto(4), page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction),
	x( #InputToTag("Please describe the nature of your social stigma:", nameext, , "Social Stigma") )

Social Stigma (Criminal Record), -5, page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Disowned), -5, page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Publically disowned), -10, page(B155), cat(Mundane, Social),
	conditional(-2 to ST:Reaction)
Social Stigma (Excommunicated), -5, page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Ignorant), -5, page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Minor), -5, page(B155), cat(Mundane, Social),
	conditional(-2 to ST:Reaction when "dealing with others as an Adult")
Social Stigma (Minority Group), -10, page(B155), cat(Mundane, Social),
	conditional(-2 to ST:Reaction)
Social Stigma (Monster), -15, page(B155), cat(Mundane, Social),
	conditional(-3 to ST:Reaction)
Social Stigma (Second-Class Citizen), -5, page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Subjugated), -20, page(B155), cat(Mundane, Social),
	conditional(-4 to ST:Reaction)
Social Stigma (Uneducated), -5, page(B155), cat(Mundane, Social),
	conditional(-1 to ST:Reaction)
Social Stigma (Valuable Property), -10, page(B155), cat(Mundane, Social),
	conditional(-2 to ST:Reaction)

************************************************************************************************************************
[QUIRKS]
************************************************************************************************************************

<General>
_New Quirk, -1, noresync(yes), x(#edit)

_Unused Quirk 1, -1, page(B163)
_Unused Quirk 2, -1, page(B163)
_Unused Quirk 3, -1, page(B163)
_Unused Quirk 4, -1, page(B163)
_Unused Quirk 5, -1, page(B163)

<Mental>
Attentive, -1, page(B164)
Broad-Minded, -1, page(B164)
Careful, -1, page(B164)
Chauvinistic, -1, page(B164)
Code of Honor, -1, page(B164)
Congenial, -1, page(B164)
Delusion, -1, page(B164)
Dislikes [specify], -1, page(B164), x( #InputReplace("Specify what the character dislikes:", "[specify]", , "Dislikes") )
Distractible, -1, page(B164)
Dreamer, -1, page(B164)
Dull, -1, page(B164)
Habit, -1, page(B164), x( #InputToTag("Specify what the character's habit is:", nameext, , "Habit") )
Expression, -1, page(B164), x( #InputToTag("Specify what the character's expression is:", nameext, , "Expression") )
Humble, -1, page(B164)
Imaginative, -1, page(B164)
Incompetence ([skill]), -1, page(B164),
	gives(-4 to SK:[skill]), noresync(yes),
	x(#InputReplace("Specify the skill the character is incompetent with:", "[skill]", ,"Incompetence"))
Incompetence (%skillslist%), -1, page(B164),
	gives(-4 to SK:%skillslist%), noresync(yes),
	x(#ChoiceList(_
			name(skills),
			title(Incompetence: Choose a Skill),
			text(Choose which skill the Incompetence is for:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				)_
			)_
		)

Likes [specify], -1, page(B164), x( #InputReplace("Specify what the character likes:", "[specify]", , "Likes") )
Nosy, -1, page(B164)
Obsession, -1, page(B164)
Personality Change, -1, page(B164)
Proud, -1, page(B164)
Responsive, -1, page(B164)
Staid, -1, page(B164)
Trademark, -1, page(B164)
Uncongenial, -1, page(B165)
Vow, -1, page(B165)

<Physical>
Acceleration Weakness, -1, page(B165)
Alcohol Intolerance, -1, page(B165)
Bowlegged, -1, page(B165)
Cannot Float, -1, page(B165)
Distinctive Feature, -1, page(B165)
Horrible Hangovers, -1, page(B165)
Minor Handicap, -1, page(B165)
Nervous Stomach, -1, page(B165)
Neutered, -1, page(B165)
Sexless, -1, page(B165)

************************************************************************************************************************
[SKILLS]
************************************************************************************************************************
<_New Skills>
_New Parent Item, N/A, isparent(yes), upto(0 LimitingTotal), cat(_General, _New Skills),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, , "New Parent Item"))

_New Parent Technique, N|A, isparent(yes), upto(0 LimitingTotal), cat(_General, _New Skills, Techniques),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, , "New Parent Technique"))

_New Wildcard Skill, %typelist%, page(B175), cat(_General, _New Skills, Wildcard!),
	x(#InputToTagReplace("Please enter the name of this Wildcard Skill:" , name, , "New Wildcard Skill"),
	#ChoiceList(_
			name(parry),
			title(New Skill: Can this skill be used to parry in combat?),
			text(Can this skill be used to parry in combat? Choose one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"_No Parry",
				"Normal Parry",
				"Knife Parry"=-1,
				"Staff Parry"=+2_
			),
			aliaslist(_
				"",
				"@int(%level/2)+3",
				"@int(%level/2)+3-1",
				"@int(%level/2)+3+2"_
			)_
			),
	#ChoiceList(_
			name(block),
			title(New Skill: Can this skill be used to Block in combat?),
			text(Can this skill be used to block in combat? Choose one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"_No Block",
				"Normal Block"_
			),
			aliaslist(_
				"",
				"@int(%level/2)+3"_
			)_
			),
	#ChoiceList(_
			name(type),
			title(New Wildcard Skill: Choose a Skill Type),
			text(Choose the type of skill from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"DX/WC",
				"IQ/WC",
				"HT/WC",
				"Will/WC",
				"Per/WC"_
			)_
			),
	#edit _
	), noresync(yes), parryat(%parryaliaslist%), blockat(%blockaliaslist%)

_New Technique (%SkillList%), %typelist%, default("SK:%SkillList%%blockparryaliaslist%" %penaltylist%), needs("SK:%SkillList%"), page(B229), cat(_General, _New Skills, Techniques),
	x(#InputToTagReplace("Please enter the name of this Technique:" , name, , "New Technique"),
		#ChoiceList(_
			name(skill),
			title(New Technique: Choose a base skill),
			text(Please select the skill this Technique is based on:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				)_
			),
		#ChoiceList(_
			name(penalty),
			title(New Technique: Choose a base skill),
			text(Please select the skills default penalty:),
			picksallowed(1),
			method(bynumber),
			list(_
				+4,
				+3,
				+2,
				+1,
				+0,
				-1,
				-2,
				-3,
				-4,
				-5,
				-6,
				-7,
				-8,
				-9,
				-10,
				-11,
				-12,
				-13,
				-14,
				-15_
				)_
			),
			#ChoiceList(_
			name(blockparry),
			title(New Technique: Choose a Technique difficulty),
			text(Does this Technique default from the Skill's Level, it's Block or it's Parry?:),
			picksallowed(1),
			method(bynumber),
			default(2),
			list(_
				"Block Level",
				"_Skill Level",
				"Parry Level"_
			),
			aliaslist(_
				"::blocklevel",
				"::level",
				"::parrylevel"_
				)_
			),
	#ChoiceList(_
			name(type),
			title(New Technique: Choose a Technique difficulty),
			text(Choose the difficulty of the Technique from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Tech/A",
				"Tech/H"_
			)_
			)_
	), noresync(yes)
	
	
_New Technique ([skill]), %typelist%, default("SK:[skill]%blockparryaliaslist%" [default]), needs("SK:[skill]"), page(B229), cat(_General, _New Skills, Techniques),
	x(#InputToTagReplace("Please enter the name of this Technique:" , name, , "New Technique"),
	#InputReplace("Please enter the name of the skill that this Technique defaults from. _
			Please include any name extension; e.g. Driving (Automobile)" , "[skill]", , "New Technique"),
	#InputReplace("Please enter the default penalty for this Technique. _
			Please include the negative (or positive) sign; e.g. -4 or +0" , "[default]", , "New Technique"), 
	#ChoiceList(_
			name(blockparry),
			title(New Technique: Choose a Technique difficulty),
			text(Does this Technique default from the Skill's Level, it's Block or it's Parry?:),
			picksallowed(1),
			method(bynumber),
			default(2),
			list(_
				"Block Level",
				"_Skill Level",
				"Parry Level"_
				),
			aliaslist(_
				"::blocklevel",
				"::level",
				"::parrylevel"_
				)_
			),
	#ChoiceList(_
			name(type),
			title(New Technique: Choose a Technique difficulty),
			text(Choose the difficulty of the Technique from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Tech/A",
				"Tech/H"_
			)_
			),
	#edit_
	), noresync(yes)
	

_New Skill, %typelist%, page(B175), cat(_General, _New Skills),
	x(#InputToTagReplace("Please enter the name of this Skill:" , name, , "New Skill"),
	#ChoiceList(_
			name(parry),
			title(New Skill: Can this skill be used to parry in combat?),
			text(Can this skill be used to parry in combat? Choose one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"_No Parry",
				"Normal Parry",
				"Knife Parry"=-1,
				"Staff Parry"=+2_
			),
			aliaslist(_
				"",
				"@int(%level/2)+3",
				"@int(%level/2)+3-1",
				"@int(%level/2)+3+2"_
			)_
			),
	#ChoiceList(_
			name(block),
			title(New Skill: Can this skill be used to Block in combat?),
			text(Can this skill be used to block in combat? Choose one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"_No Block",
				"Normal Block"_
			),
			aliaslist(_
				"",
				"@int(%level/2)+3"_
			)_
			),
	#ChoiceList(_
			name(type),
			title(New Skill: Choose a Skill Type),
			text(Choose the type of skill from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"DX/E",
				"DX/A",
				"DX/H",
				"DX/VH",
				"IQ/E",
				"IQ/A",
				"IQ/H",
				"IQ/VH",
				"HT/E",
				"HT/A",
				"HT/H",
				"HT/VH",
				"Will/E",
				"Will/A",
				"Will/H",
				"Will/VH",
				"Per/E",
				"Per/A",
				"Per/H",
				"Per/VH"_
			)_
			),
	#edit _
	), noresync(yes), parryat(%parryaliaslist%), blockat(%blockaliaslist%)

<Animal>
Animal Handling, IQ/A, default(IQ - 5), page(B175), cat(_General, Animal),
	x(#InputToTag("You must specialize in a category of animals:", nameext, , "Animal Handling"))

Animal Handling (Big Cats), IQ/A, default(IQ - 5), page(B175), cat(_General, Animal)
Animal Handling (Dogs), IQ/A, default(IQ - 5), page(B175), cat(_General, Animal)
Animal Handling (Equines), IQ/A, default(IQ - 5), page(B175), cat(_General, Animal)
Animal Handling (Raptors), IQ/A, default(IQ - 5), page(B175), cat(_General, Animal)
Falconry, IQ/A, default(IQ - 5, "SK:Animal Handling (Raptors)" - 3), page(B194), cat(_General, Animal)
Mimicry (Animal Sounds), IQ/H, default(IQ - 6, SK:Naturalist - 6, "SK:Mimicry (Bird Calls)" - 6), page(B210), cat(_General, Animal, Arts/Entertainment, Outdoor/Exploration)
Mimicry (Bird Calls), IQ/H, default(IQ - 6, SK:Naturalist - 6, "SK:Mimicry (Animal Sounds)" - 6), page(B210), cat(_General, Animal, Arts/Entertainment, Outdoor/Exploration)
Mount, DX/A, default(DX - 5), page(B210), cat(_General, Animal, Athletic)

Naturalist, IQ/H, default(IQ - 6, SK:Biology - 3, SK:Naturalist - 4), page(B211), cat(_General, Animal, Natural Sciences, Outdoor/Exploration, Plant),
	x(#InputToTag("You must specialize by planet:", nameext, "Earth", "Naturalist"))

Packing, IQ/A, default(IQ - 5, "SK:Animal Handling (Equines)" - 5), page(B212), cat(_General, Animal)

Riding, DX/A, default(DX - 5, SK:Riding - 10), page(B217), cat(_General, Animal),
	x(#InputToTag("You must specialize by riding beast:", nameext, "Equines", "Riding"))
Riding ([Mount]), DX/A, default(DX - 5, "SK:Animal Handling ([Mount])" - 3, SK:Riding - 10), page(B217), cat(_General, Animal),
	x(#InputReplace("You must specialize by riding beast:", "[Mount]", "Equines", "Riding"))

Teamster, IQ/A, default(IQ - 5, SK:Animal Handling - 4, SK:Riding - 2, SK:Teamster - 3), page(B225), cat(_General, Animal, Vehicle),
	x(#InputToTag("You must specialize by animal type:", nameext, "Equines", "Teamster"))

Veterinary, IQ/H, tl(0-12), default(SK:Animal Handling - 6, SK:Physician - 5, SK:Surgery - 5), page(B228), cat(_General, Animal, Medical)

<Arts/Entertainment>
Artist, IQ/H, default(IQ - 6), page(B179), cat(_General, Arts/Entertainment),
	x(#InputToTag("You must specialize in an art form:", nameext, , "Artist"))

Artist (Body Art), IQ/H, default(IQ - 6, "SK:Artist (Calligraphy)" - 4, "SK:Artist (Drawing)" - 4, "SK:Artist (Illumination)" - 4, SK:Artist - 6, "SK:Artist (Painting)" - 4), page(B179), cat(_General, Arts/Entertainment)
Artist (Calligraphy), IQ/H, default(IQ - 6, "SK:Artist (Body Art)" - 4, "SK:Artist (Drawing)" - 2, "SK:Artist (Illumination)" - 2, "SK:Artist (Painting)" - 2, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Drawing), IQ/H, default(IQ - 6, "SK:Artist (Body Art)" - 4, "SK:Artist (Calligraphy)" - 2, "SK:Artist (Illumination)" - 2, "SK:Artist (Painting)" - 2, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Illumination), IQ/H, default(IQ - 6, "SK:Artist (Body Art)" - 4, "SK:Artist (Calligraphy)" - 2, "SK:Artist (Drawing)" - 2, "SK:Artist (Painting)" - 2, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Illusion), IQ/H, default(IQ - 6, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Interior Decorating), IQ/H, default(IQ - 6, SK:Architecture - 3, "SK:Artist (Scene Design)" - 4, "SK:Artist (Woodworking)" - 4, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Painting), IQ/H, default(IQ - 6, "SK:Artist (Body Art)" - 4, "SK:Artist (Calligraphy)" - 2, "SK:Artist (Drawing)" - 2, "SK:Artist (Illumination)" - 2, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Pottery), IQ/H, default(IQ - 6, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment, Craft)
Artist (Scene Design), IQ/H, default(IQ - 6, SK:Architecture - 3, "SK:Artist (Interior Decorating)" - 4, "SK:Artist (Woodworking)" - 4, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment)
Artist (Sculpting), IQ/H, default(IQ - 6, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment, Craft)
Artist (Woodworking), IQ/H, default(IQ - 6, SK:Carpentry - 3, "SK:Artist (Interior Decorating)" - 4, "SK:Artist (Scene Design)" - 4, SK:Artist - 6), page(B179), cat(_General, Arts/Entertainment, Craft)

Connoisseur, IQ/A, default(IQ - 5), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social),
	x(#InputToTag("Specify the required specialty:", nameext, , "Connoisseur"))
   
Connoisseur (Dance), IQ/A, default(IQ - 5, SK:Dancing - 3), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social)
Connoisseur (Literature), IQ/A, default(IQ - 5, SK:Literature - 3, SK:Poetry - 3, SK:Writing - 3), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social)
Connoisseur (Music), IQ/A, default(IQ - 5, "SK:Group Performance (Conducting)" - 3, SK:Musical Composition - 3, SK:Musical Instrument - 3), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social)
Connoisseur (Visual Arts), IQ/A, default(IQ - 5, SK:Artist - 3), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social)
Connoisseur (Wine), IQ/A, default(IQ - 5), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social)
Current Affairs (High Culture), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Arts/Entertainment, Everyman, Knowledge, Social)
Current Affairs (Popular Culture), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Arts/Entertainment, Everyman, Knowledge, Social)
Dancing, DX/A, default(DX - 5), page(B187), cat(_General, Arts/Entertainment)
Electronics Operation (Media), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Media)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Arts/Entertainment, Technical)
Fire Eating, DX/A, page(B195), cat(_General, Arts/Entertainment)
Group Performance (Choreography), IQ/A, default(IQ - 5, SK:Dancing - 2), needs((SK:Diplomacy | SK:Intimidation | SK:Leadership), SK:Dancing), page(B198), cat(_General, Arts/Entertainment)
Group Performance (Conducting), IQ/A, default(IQ - 5, SK:Musical Instrument - 2, SK:Singing - 2), needs((SK:Diplomacy | SK:Intimidation | SK:Leadership), (2 GR:Musical Instrument | SK:Singing, 1 GR:Musical Instrument | 2 GR:Conducting)), page(B198), cat(_General, Arts/Entertainment)
Group Performance (Directing), IQ/A, default(IQ - 5, SK:Performance - 5), needs((SK:Diplomacy | SK:Intimidation | SK:Leadership), SK:Performance), page(B198), cat(_General, Arts/Entertainment)
Group Performance (Fight Choreography), IQ/A, default(IQ - 5, SK:Stage Combat - 2), needs((SK:Diplomacy | SK:Intimidation | SK:Leadership), SK:Stage Combat), page(B198), cat(_General, Arts/Entertainment)
Makeup, IQ/E, tl(0-12), default(IQ - 4, SK:Disguise - 2), page(B206), cat(_General, Arts/Entertainment)
Mimicry (Speech), IQ/H, default(IQ - 6, SK:Acting - 6, SK:Linguistics - 4), page(B210), cat(_General, Arts/Entertainment)
Musical Composition, IQ/H, default(SK:Musical Instrument - 2, SK:Poetry - 2), page(B210), cat(_General, Arts/Entertainment)

Musical Instrument, IQ/H, page(B211), cat(_General, Arts/Entertainment),
	x(#InputToTag("You must specialize in a particular instrument:", nameext, , "Musical Instrument"))

Performance, IQ/A, default(IQ - 5, SK:Acting - 2, SK:Public Speaking - 2), page(B212), cat(_General, Arts/Entertainment)
Photography, IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Media)" - 5), page(B213), cat(_General, Arts/Entertainment, Spy, Technical)
Poetry, IQ/A, default(IQ - 5, SK:Writing - 5), page(B214), cat(_General, Arts/Entertainment)
Singing, HT/E, default(HT - 4), page(B220), cat(_General, Arts/Entertainment)
Sleight of Hand, DX/H, default(SK:Filch - 5), page(B221), cat(_General, Arts/Entertainment, Criminal/Street)
Stage Combat, DX/A, default(SK:Combat Sport - 2, SK:Combat Art - 2, SK:Performance - 3), page(B222), cat(_General, Arts/Entertainment)
Ventriloquism, IQ/H, page(B228), cat(_General, Arts/Entertainment)
Writing, IQ/A, default(IQ - 5), page(B228), cat(_General, Arts/Entertainment, Scholarly)

<Athletic>
_Combat Art, %typelist%, page(B175), default("SK:_Combat" - 3, "SK:_Combat Sport" - 3), cat(_General, Athletic, Athletic - Combat Art/Sport), parryat(@int(%level/2)+3), blockat(@int(%level/2)+3),
	x(#InputReplace("Specify the name of the Combat skill here:", "_Combat", , "Combat Art"),
	#ChoiceList(_
			name(type),
			title(Combat Art: Choose a Skill Type),
			text(Choose the type of skill from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"DX/E",
				"DX/A",
				"DX/H"_
			)_
			)_
	), noresync(yes), x(#edit)

_Combat Sport, %typelist%, page(B175), default("SK:_Combat" - 3, "SK:_Combat Art" - 3), cat(_General, Athletic, Athletic - Combat Art/Sport), parryat(@int(%level/2)+3), blockat(@int(%level/2)+3),
	x(#InputReplace("Specify the name of the Combat skill here:", "_Combat", , "Combat Sport"),
	#ChoiceList(_
			name(type),
			title(Combat Sport: Choose a Skill Type),
			text(Choose the type of skill from the list below:),
			picksallowed(1),
			method(bynumber),
			list(_
				"DX/E",
				"DX/A",
				"DX/H"_
			)_
			)_
	), noresync(yes), x(#edit)

Acrobatics, DX/H, default(DX - 6, SK:Aerobatics - 4, SK:Aquabatics - 4), page(B174), cat(_General, Athletic)
Aerobatics, DX/H, default(DX - 6, SK:Acrobatics - 4, SK:Aquabatics - 4), page(B174), cat(_General, Athletic)
Aquabatics, DX/H, default(DX - 6, SK:Acrobatics - 4, SK:Aerobatics - 4), needs(SK:Swimming | AD:Amphibious | "DI:No Legs (Aquatic)"), page(B174), cat(_General, Athletic)
Bicycling, DX/E, default(DX - 4, "SK:Driving (Motorcycle)" - 4), page(B180), cat(_General, Athletic, Vehicle)
Body Sense, DX/H, default(DX - 6, SK:Acrobatics - 3), page(B181), cat(_General, Athletic)
Breath Control, HT/H, page(B182), cat(_General, Athletic)
Climbing, DX/A, default(DX - 5), page(B183), cat(_General, Athletic, Criminal/Street, Outdoor/Exploration)
Flight, HT/A, default(HT - 5), needs(AD:Flight), page(B195), cat(_General, Athletic)
Free Fall, DX/A, default(DX - 5, HT - 5), page(B197), cat(_General, Athletic)
Hiking, HT/A, default(HT - 5), page(B200), cat(_General, Athletic, Outdoor/Exploration)
Jumping, DX/E, page(B203), cat(_General, Athletic)
Lifting, HT/A, page(B205), cat(_General, Athletic)
Parachuting, DX/E, tl(0-12), default(DX - 4), page(B212), cat(_General, Athletic, Military, Technical)
Running, HT/A, default(HT - 5), page(B218), cat(_General, Athletic)
Scuba, IQ/A, tl(0-12), default(IQ - 5, SK:Diving Suit - 2), page(B219), cat(_General, Athletic, Military, Outdoor/Exploration, Technical)
Skating, HT/H, default(HT - 6), page(B220), cat(_General, Athletic, Outdoor/Exploration)
Skiing, HT/H, default(HT - 6), page(B221), cat(_General, Athletic, Outdoor/Exploration)

Sports, DX/A, default(DX - 5), page(B222), cat(_General, Athletic),
	x(#InputToTag("Please specify a particular sport here:", nameext, , "Sports"))

Swimming, HT/E, default(HT - 4), page(B224), cat(_General, Athletic, Outdoor/Exploration)
Throwing, DX/A, default(DX - 3, SK:Dropping - 4), page(B226), cat(_General, Athletic, Combat/Weapons - Ranged Combat)

<Athletic - Combat Art/Sport>
* Combat Art skills
Bolas Art, DX/A, default(DX - 6, SK:Bolas - 3, SK:Bolas Sport - 3), page(B181), cat(Athletic - Combat Art/Sport)
Bow Art, DX/A, default(DX - 5, SK:Bow - 3, SK:Bow Sport - 3), page(B182), cat(Athletic - Combat Art/Sport)
Boxing Art, DX/A, default(DX - 6, SK:Boxing - 3, SK:Boxing Sport - 3), page(B182), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Brawling Art, DX/E, page(B182), parryat(@int(%level/2)+3), default(SK:Brawling - 3, SK:Brawling Sport - 3), cat(Athletic - Combat Art/Sport)
Crossbow Art, DX/E, default(DX - 4, SK:Crossbow - 3, SK:Crossbow Sport - 3), page(B186), cat(Athletic - Combat Art/Sport)
Judo Art, DX/H, default(DX - 6, SK:Judo - 3, SK:Judo Sport - 3), page(B203), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Karate Art, DX/H, default(DX - 6, SK:Karate - 3, SK:Karate Sport - 3), page(B203), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Lance Art, DX/A, default(DX - 5, SK:Lance - 3, SK:Lance Sport - 3), needs(SK:Riding Sport), page(B204), cat(Athletic - Combat Art/Sport)
Lasso Art, DX/A, default(DX - 6, SK:Lasso - 3, SK:Lasso Sport - 3), page(B204), cat(Athletic - Combat Art/Sport)
Net Art, DX/H, default(DX - 6, SK:Net - 3, SK:Net Sport - 3), page(B211), cat(Athletic - Combat Art/Sport)
Sling Art, DX/H, default(DX - 6, SK:Sling - 3, SK:Sling Sport - 3), page(B221), cat(Athletic - Combat Art/Sport)
Main-Gauche Art, DX/A, default(DX - 5, "SK:Main-Gauche" - 3, "SK:Main-Gauche Sport" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Rapier Art, DX/A, default(DX - 5, SK:Rapier - 3, SK:Rapier Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Saber Art, DX/A, default(DX - 5, SK:Saber - 3, SK:Saber Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Smallsword Art, DX/A, default(DX - 5, SK:Smallsword - 3, SK:Smallsword Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Flail Art, DX/H, default(DX - 6, SK:Flail - 3, SK:Flail Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Two-Handed Flail Art, DX/H, default(DX - 6, "SK:Two-Handed Flail" - 3, "SK:Two-Handed Flail Sport" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Axe/Mace Art, DX/A, default(DX - 5, "SK:Axe/Mace" - 3, "SK:Axe/Mace Sport" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Two-Handed Axe/Mace Art, DX/A, default(DX - 5, "SK:Two-Handed Axe/Mace" - 3, "SK:Two-Handed Axe/Mace Sport" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Polearm Art, DX/A, default(DX - 5, SK:Polearm - 3, SK:Polearm Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Spear Art, DX/A, default(DX - 5, SK:Spear - 3, SK:Spear Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Staff Art, DX/A, default(DX - 5, SK:Staff - 3, SK:Staff Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3+2)
Broadsword Art, DX/A, default(DX - 5, SK:Broadsword - 3, SK:Broadsword Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Force Sword Art, DX/A, default(DX - 5, SK:Force Sword - 3, SK:Force Sword Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Jitte/Sai Art, DX/A, default(DX - 5, "SK:Jitte/Sai" - 3, "SK:Jitte/Sai Sport" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Knife Art, DX/E, default(DX - 4, SK:Knife - 3, SK:Knife Sport - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3-1)
Shortsword Art, DX/A, default(DX - 5, SK:Shortsword - 3, SK:Shortsword Sport - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Two-Handed Sword Art, DX/A, default(DX - 5, "SK:Two-Handed Sword" - 3, "SK:Two-Handed Sword Sport" - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Force Whip Art, DX/A, default(DX - 5, SK:Force Whip - 3, SK:Force Whip Sport - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Kusari Art, DX/H, default(DX - 6, SK:Kusari - 3, SK:Kusari Sport - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Monowire Whip Art, DX/H, default(DX - 6, SK:Monowire Whip - 3, SK:Monowire Whip Sport - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Whip Art, DX/A, default(DX - 5, SK:Whip - 3, SK:Whip Sport - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Tonfa Art, DX/A, default(DX - 5, SK:Tonfa - 3, SK:Tonfa Sport - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Wrestling Art, DX/A, default(SK:Wrestling - 3, SK:Wrestling Sport - 3), page(B228), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Sumo Wrestling Art, DX/A, default(SK:Sumo Wrestling - 3, SK:Sumo Wrestling Sport - 3), page(B223), parryat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Shield Art (Shield), DX/E, default(DX - 4, "SK:Shield (Shield)" - 3, "SK:Shield Sport (Shield)" - 3), page(B220), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Shield Art (Buckler), DX/E, default(DX - 4, "SK:Shield (Buckler)" - 3, "SK:Shield Sport (Buckler)" - 3), page(B220), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Shield Art (Force), DX/E, default(DX - 4, "SK:Shield (Force)" - 3, "SK:Shield Sport (Force)" - 3), page(B220), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Cloak Art, DX/A, default(DX - 5, SK:Cloak - 3, SK:Cloak Sport - 3), page(B184), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)

* Combat Sport skills
Bolas Sport, DX/A, default(DX - 6, SK:Bolas - 3, SK:Bolas Art - 3), page(B181), cat(Athletic - Combat Art/Sport)
Bow Sport, DX/A, default(DX - 5, SK:Bow - 3, SK:Bow Art - 3), page(B182), cat(Athletic - Combat Art/Sport)
Boxing Sport, DX/A, default(DX - 6, SK:Boxing - 3, SK:Boxing Art - 3), page(B182), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Brawling Sport, DX/E, page(B182), parryat(@int(%level/2)+3), default(SK:Brawling - 3, SK:Brawling Art - 3), cat(Athletic - Combat Art/Sport)
Crossbow Sport, DX/E, default(DX - 4, SK:Crossbow - 3, SK:Crossbow Art - 3), page(B186), cat(Athletic - Combat Art/Sport)
Judo Sport, DX/H, default(DX - 6, SK:Judo - 3, SK:Judo Art - 3), page(B203), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Karate Sport, DX/H, default(DX - 6, SK:Karate - 3, SK:Karate Art - 3), page(B203), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Lance Sport, DX/A, default(DX - 5, SK:Lance - 3, SK:Lance Art - 3), needs(SK:Riding), page(B204), cat(Athletic - Combat Art/Sport)
Lasso Sport, DX/A, default(DX - 6, SK:Lasso - 3, SK:Lasso Art - 3), page(B204), cat(Athletic - Combat Art/Sport)
Net Sport, DX/H, default(DX - 6, SK:Net - 3, SK:Net Art - 3), page(B211), cat(Athletic - Combat Art/Sport)
Sling Sport, DX/H, default(DX - 6, SK:Sling - 3, SK:Sling Art - 3), page(B221), cat(Athletic - Combat Art/Sport)
Main-Gauche Sport, DX/A, default(DX - 5, "SK:Main-Gauche" - 3, "SK:Main-Gauche Art" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Rapier Sport, DX/A, default(DX - 5, SK:Rapier - 3, SK:Rapier Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Saber Sport, DX/A, default(DX - 5, SK:Saber - 3, SK:Saber Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Smallsword Sport, DX/A, default(DX - 5, SK:Smallsword - 3, SK:Smallsword Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Flail Sport, DX/H, default(DX - 6, SK:Flail - 3, SK:Flail Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Two-Handed Flail Sport, DX/H, default(DX - 6, "SK:Two-Handed Flail" - 3, "SK:Two-Handed Flail Art" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Axe/Mace Sport, DX/A, default(DX - 5, "SK:Axe/Mace" - 3, "SK:Axe/Mace Art" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Two-Handed Axe/Mace Sport, DX/A, default(DX - 5, "SK:Two-Handed Axe/Mace" - 3, "SK:Two-Handed Axe/Mace Art" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Polearm Sport, DX/A, default(DX - 5, SK:Polearm - 3, SK:Polearm Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Spear Sport, DX/A, default(DX - 5, SK:Spear - 3, SK:Spear Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Staff Sport, DX/A, default(DX - 5, SK:Staff - 3, SK:Staff Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3+2)
Broadsword Sport, DX/A, default(DX - 5, SK:Broadsword - 3, SK:Broadsword Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Force Sword Sport, DX/A, default(DX - 5, SK:Force Sword - 3, SK:Force Sword Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Jitte/Sai Sport, DX/A, default(DX - 5, "SK:Jitte/Sai" - 3, "SK:Jitte/Sai Art" - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Knife Sport, DX/E, default(DX - 4, SK:Knife - 3, SK:Knife Art - 3), page(B208), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3-1)
Shortsword Sport, DX/A, default(DX - 5, SK:Shortsword - 3, SK:Shortsword Art - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Two-Handed Sword Sport, DX/A, default(DX - 5, "SK:Two-Handed Sword" - 3, "SK:Two-Handed Sword Art" - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Force Whip Sport, DX/A, default(DX - 5, SK:Force Whip - 3, SK:Force Whip Art - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Kusari Sport, DX/H, default(DX - 6, SK:Kusari - 3, SK:Kusari Art - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Monowire Whip Sport, DX/H, default(DX - 6, SK:Monowire Whip - 3, SK:Monowire Whip Art - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Whip Sport, DX/A, default(DX - 5, SK:Whip - 3, SK:Whip Art - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Tonfa Sport, DX/A, default(DX - 5, SK:Tonfa - 3, SK:Tonfa Art - 3), page(B209), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Wrestling Sport, DX/A, default(SK:Wrestling - 3, SK:Wrestling Art - 3), page(B228), cat(Athletic - Combat Art/Sport), parryat(@int(%level/2)+3)
Sumo Wrestling Sport, DX/A, default(SK:Sumo Wrestling - 3, SK:Sumo Wrestling Art - 3), page(B223), parryat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Shield Sport (Shield), DX/E, default(DX - 4, "SK:Shield (Shield)" - 3, "SK:Shield Art (Shield)" - 3), page(B220), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Shield Sport (Buckler), DX/E, default(DX - 4, "SK:Shield (Buckler)" - 3, "SK:Shield Art (Buckler)" - 3), page(B220), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Shield Sport (Force), DX/E, default(DX - 4, "SK:Shield (Force)" - 3, "SK:Shield Art (Force)" - 3), page(B220), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)
Cloak Sport, DX/A, default(DX - 5, SK:Cloak - 3, SK:Cloak Art - 3), page(B184), blockat(@int(%level/2)+3), cat(Athletic - Combat Art/Sport)

<Business>
Accounting, IQ/H, default(IQ - 6, SK:Finance - 4, "SK:Mathematics (Statistics)" - 5, SK:Merchant - 5), page(B174), cat(_General, Business)
Administration, IQ/A, default(IQ - 5, SK:Merchant - 3), page(B174), cat(_General, Business, Social)
Current Affairs (Business), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Business, Everyman, Knowledge, Social)
Diplomacy, IQ/H, default(IQ - 6, SK:Politics - 6), page(B187), cat(_General, Business, Police, Social), gives(=@if(me::level >= 20 then 2 else 0) to ST:Reaction)
Economics, IQ/H, default(IQ - 6, SK:Finance - 3, SK:Market Analysis - 5, SK:Merchant - 6), page(B189), cat(_General, Business, Social Sciences/Humanities)
Finance, IQ/H, default(SK:Accounting - 4, SK:Economics - 3, SK:Merchant - 6), page(B195), cat(_General, Business)

Law, IQ/H, default(IQ - 6), page(B204), cat(_General, Business, Police, Social Sciences/Humanities),
	x(#InputToTag("You must specialize in the laws of a particular political region, or in a specialized body of law not associated with a political region:", nameext, "local", "Law"))

Market Analysis, IQ/H, default(IQ - 6, SK:Economics - 5, SK:Merchant - 4), page(B207), cat(_General, Business)
Mathematics (Statistics), IQ/H, tl(0-12), default(IQ - 6, SK:Mathematics - 5), page(B207), cat(_General, Business, Natural Sciences)
Merchant, IQ/A, default(IQ - 5, SK:Finance - 6, SK:Market Analysis - 4), page(B209), cat(_General, Business, Social), conditional(=@if(me::level >= 20 then 2 else @if(me::basepoints > 0 then 1 else 0)) to ST:Reaction when "buying or selling")
Politics, IQ/A, default(IQ - 5, SK:Diplomacy - 5), page(B215), cat(_General, Business, Social)
Propaganda, IQ/A, tl(0-12), default(IQ - 5, SK:Merchant - 5, SK:Psychology - 4), page(B216), cat(_General, Business, Military, Social, Spy)
Public Speaking, IQ/A, default(IQ - 5, SK:Public Speaking, SK:Acting - 5, SK:Performance - 2, SK:Politics - 5), page(B216), cat(_General, Business, Scholarly, Social)
Public Speaking (Debate), IQ/E, basedon(Public Speaking), optspec(1), default(IQ - 5, SK:Acting - 5, SK:Performance - 2, SK:Politics - 5), page(B216), cat(_General, Business, Scholarly, Social)
Public Speaking (Oratory), IQ/E, basedon(Public Speaking), optspec(1), default(IQ - 5, SK:Acting - 5, SK:Performance - 2, SK:Politics - 5), page(B216), cat(_General, Business, Scholarly, Social)
Public Speaking (Rhetoric), IQ/E, basedon(Public Speaking), optspec(1), default(IQ - 5, SK:Acting - 5, SK:Performance - 2, SK:Politics - 5), page(B216), cat(_General, Business, Scholarly, Social)
Public Speaking (Punning), IQ/E, basedon(Public Speaking), optspec(1), default(IQ - 5, SK:Acting - 5, SK:Performance - 2, SK:Politics - 5), page(B216), cat(_General, Business, Scholarly, Social)
Public Speaking (Storytelling), IQ/E, basedon(Public Speaking), optspec(1), default(IQ - 5, SK:Acting - 5, SK:Performance - 2, SK:Politics - 5), page(B216), cat(_General, Business, Scholarly, Social)
Savoir-Faire (High Society), IQ/E, default(IQ - 4, "SK:Savoir-Faire (Servant)" - 2), page(B218), cat(_General, Business, Knowledge, Social)

<Combat/Weapons - Melee Combat>
Axe/Mace, DX/A, default(DX - 5, SK:Flail - 4, "SK:Two-Handed Axe/Mace" - 3, "SK:Axe/Mace Art" - 3, "SK:Axe/Mace Sport" - 3), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Broadsword, DX/A, default(DX - 5, SK:Force Sword - 4, SK:Rapier - 4, SK:Saber - 4, SK:Shortsword - 2, "SK:Two-Handed Sword" - 4, SK:Broadsword Art - 3, SK:Broadsword Sport - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Cloak, DX/A, default(DX - 5, SK:Net - 4, SK:Shield - 4, SK:Cloak Art - 3, SK:Cloak Sport - 3), page(B184), blockat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)

Fast-Draw, DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat),
	x(#InputToTag("You must specialize in a type of Weapon:", nameext, , "Fast-Draw"))

Fast-Draw (Force Sword), DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat), default(SK:Sword!)
Fast-Draw (Knife), DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat), default(SK:Sword!)
Fast-Draw (Sword), DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat), default(SK:Sword!)
Fast-Draw (Two-Handed Sword), DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat), default(SK:Sword!)
Flail, DX/H, default(DX - 6, "SK:Axe/Mace" - 4, "SK:Two-Handed Flail" -3, SK:Flail Art - 3, SK:Flail Sport - 3), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Force Sword, DX/A, default(DX - 5, SK:Broadsword - 3, "SK:Jitte/Sai" - 3, SK:Knife - 3, SK:Shortsword - 3, "SK:Two-Handed Sword" - 3, SK:Force Sword Art - 3, SK:Force Sword Sport - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Force Whip, DX/A, default(DX - 5, SK:Kusari - 3, SK:Monowire Whip - 3, SK:Whip - 3, SK:Force Whip Art - 3, SK:Force Whip Sport - 3), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Garrote, DX/E, default(DX - 4), page(B197), cat(_General, Combat/Weapons - Melee Combat)
Jitte/Sai, DX/A, default(DX - 5, SK:Force Sword - 4, "SK:Main-Gauche" - 4, SK:Shortsword - 3, "SK:Jitte/Sai Art" - 3, "SK:Jitte/Sai Sport" - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Knife, DX/E, default(DX - 4, SK:Force Sword - 3, "SK:Main-Gauche" - 3, SK:Shortsword - 3, SK:Knife Art - 3, SK:Knife Sport - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3-1), cat(_General, Combat/Weapons - Melee Combat)
Kusari, DX/H, default(DX - 6, "SK:Two-Handed Flail" - 4, SK:Force Whip - 3, SK:Monowire Whip - 3, SK:Whip - 3, SK:Kusari Art - 3, SK:Kusari Sport - 3), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Lance, DX/A, default(DX - 5, SK: Spear  - 3, SK:Lance Art - 3, SK:Lance Sport - 3), needs(SK:Riding), page(B204), cat(_General, Combat/Weapons - Melee Combat)
Main-Gauche, DX/A, default(DX - 5, "SK:Jitte/Sai" - 4, SK:Knife - 4, SK:Rapier - 3, SK:Saber - 3, SK:Smallsword - 3, "SK:Main-Gauche Art" - 3, "SK:Main-Gauche Sport" - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Monowire Whip, DX/H, default(DX - 6, SK:Force Whip - 3, SK:Kusari - 3, SK:Whip - 3, SK:Monowire Whip Art - 3, SK:Monowire Whip Sport - 3), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Parry Missile Weapons, DX/H, page(B212), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Polearm, DX/A, default(DX - 5, "SK:Two-Handed Axe/Mace" - 4, SK:Spear - 4, SK:Staff - 4, SK:Polearm Art - 3, SK:Polearm Sport - 3), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Rapier, DX/A, default(DX - 5, SK:Broadsword - 4, "SK:Main-Gauche" - 3, SK:Saber - 3, SK:Smallsword - 3, SK:Rapier Art - 3, SK:Rapier Sport - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Saber, DX/A, default(DX - 5, SK:Broadsword - 4, SK:Shortsword - 4, "SK:Main-Gauche" - 3, SK:Rapier - 3, SK:Smallsword - 3, SK:Saber Art - 3, SK:Saber Sport - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Shield (Shield), DX/E, default(DX - 4, "SK:Shield (Buckler)" - 2, "SK:Shield (Force)" - 2, "SK:Shield Art (Shield)" - 3, "SK:Shield Sport (Shield)" - 3), page(B220), blockat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Shield (Buckler), DX/E, default(DX - 4, "SK:Shield (Shield)" - 2, "SK:Shield (Force)" - 2, "SK:Shield Art (Buckler)" - 3, "SK:Shield Sport (Buckler)" - 3), page(B220), blockat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Shield (Force), DX/E, default(DX - 4, "SK:Shield (Shield)" - 2, "SK:Shield (Buckler)" - 2, "SK:Shield Art (Force)" - 3, "SK:Shield Sport (Force)" - 3), page(B220), blockat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Shortsword, DX/A, default(DX - 5, SK:Broadsword - 2, SK:Force Sword - 4, "SK:Jitte/Sai" - 3, SK:Knife - 4, SK:Saber - 4, SK:Smallsword - 4, SK:Tonfa - 3, SK:Shortsword Art - 3, SK:Shortsword Sport - 3, SK:Sword!), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Smallsword, DX/A, default(DX - 5, SK:Shortsword - 4, "SK:Main-Gauche" - 3, SK:Rapier - 3, SK:Saber - 3, SK:Smallsword Art - 3, SK:Smallsword Sport - 3, SK:Sword!), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Spear, DX/A, default(DX - 5, SK:Polearm - 4, SK:Staff - 2, SK:Spear Art - 3, SK:Spear Sport - 3), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Staff, DX/A, default(DX - 5, SK:Polearm - 4, SK:Spear - 2, SK:Staff Art - 3, SK:Staff Sport - 3), page(B208), parryat(@int(%level/2)+3+2), cat(_General, Combat/Weapons - Melee Combat)
Tonfa, DX/A, default(DX - 5, SK:Shortsword - 3, SK:Tonfa Art - 3, SK:Tonfa Sport - 3), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Two-Handed Axe/Mace, DX/A, default(DX - 5, SK:Polearm - 4, "SK:Two-Handed Flail" - 4, "SK:Axe/Mace" - 3, "SK:Two-Handed Axe/Mace Art" - 3, "SK:Two-Handed Axe/Mace Sport" - 3), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Two-Handed Flail, DX/H, default(DX - 6, SK:Kusari - 4, "SK:Two-Handed Axe/Mace" - 4, SK:Flail - 3, "SK:Two-Handed Flail Art" - 3, "SK:Two-Handed Flail Sport" - 3), page(B208), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Two-Handed Sword, DX/A, default(DX - 5, SK:Broadsword - 4, SK:Force Sword - 4, "SK:Two-Handed Sword Art" - 3, "SK:Two-Handed Sword Sport" - 3, SK:Sword!), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Whip, DX/A, default(DX - 5, SK:Force Whip - 3, SK:Kusari - 3, SK:Monowire Whip - 3, SK:Whip Art - 3, SK:Whip Sport - 3), page(B209), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)

Judo, DX/H, default(SK:Judo Art - 3, SK:Judo Sport - 3), page(B203), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Sumo Wrestling, DX/A, default(SK:Sumo Wrestling Art - 3, SK:Sumo Wrestling Sport - 3), page(B223), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)
Wrestling, DX/A, default(SK:Wrestling Art - 3, SK:Wrestling Sport - 3), page(B228), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat)

Boxing, DX/A, default(SK:Boxing Art - 3, SK:Boxing Sport - 3), page(B182), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat), mods(Punch/Kick),
	newmode(Punch, damage(_
				thr-1 + _
					@if(me::level = ST:DX+1 then @basethdice(ST:Punch) else @if(me::level > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) _
					), damtype(_
						$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
					), reach(C), parry(0), skillused(SK:Boxing),
				damagebasedon(ST:Punch), reachbasedon(ST:One Arm Reach)_
		),
	description(Notes: Calculated damage takes into account bonuses from Claws and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" to apply the +1 damage to Punch.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$)
//	replacetags(in "ST:Punch" with "hide(yes), reach()"),

Brawling, DX/E, page(B182), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat), mods(Punch/Kick), default(SK:Brawling Art - 3, SK:Brawling Sport - 3),
	newmode(Punch, damage(_
				thr-1 + _
					@if(me::level > ST:DX+1 then @basethdice(ST:Punch) else 0) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) _
					), damtype(_
						$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
					), reach(C), parry(0), skillused(SK:Brawling),
				damagebasedon(ST:Punch), reachbasedon(ST:One Arm Reach)_
		),
	newmode(Bite, damage(_
				thr-1 + _
				@if(me::level > ST:DX+1 then @basethdice(ST:Bite) else 0) + _
				-@if("DI:Weak Bite::level" = 1 then 2 * @basethdice(ST:Bite) else 0)_
				), damtype($if("AD:Teeth (Sharp Teeth)::level" = 1 THEN "cut" ELSE $if("AD:Teeth (Sharp Beak)::level" = 1 THEN "pi+" ELSE $if("AD:Teeth (Fangs)::level" = 1 THEN "imp" ELSE $if("AD:Vampiric Bite::level" = 1 THEN "cut" ELSE "cr"))))), reach(C), parry(No), skillused(SK:Brawling),
				damagebasedon(ST:Bite), reachbasedon(ST:Neck Reach)_
		),
	newmode(Kick, damage(_
				thr+ _
					@if(me::level > ST:DX+1 then @basethdice(ST:Kick) else 0) + _
					@if("DI:Horizontal::level" = 1 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0)))_
				), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(SK:Brawling-2, SK:Kicking (Brawling)),
				damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach) _
		),
	description(Notes: Calculated damage takes into account bonuses from Teeth, Weak Bite, Claws, and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" or "Has Boots" to apply the +1 damage to Punch or Kick, as appropriate.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Kick::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Bite::reach$)
//	replacetags(in "ST:Punch" with "hide(yes), reach()", in "ST:Kick" with "hide(yes), reach()", in "ST:Bite" with "hide(yes), reach()"),

Karate, DX/H, default(SK:Karate Art - 3, SK:Karate Sport - 3), page(B203), parryat(@int(%level/2)+3), cat(_General, Combat/Weapons - Melee Combat), mods(Punch/Kick),
	newmode(Punch, damage(_
				thr-1 + _
					@if(me::level = ST:DX then @basethdice(ST:Punch) else @if(me::level > ST:DX then 2 * @basethdice(ST:Punch) else 0)) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) _
					), damtype(_
						$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
					), reach(C), parry(0), skillused(SK:Karate),
				damagebasedon(ST:Punch), reachbasedon(ST:One Arm Reach) _
		),
	newmode(Kick, damage(_
				thr+ _ 
					@if(me::level = ST:DX then @basethdice(ST:Kick) else @if(me::level > ST:DX then 2 * @basethdice(ST:Kick) else 0)) + _
					@if("DI:Horizontal::level" = 1 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
					@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0)))_
				), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(SK:Karate-2, SK:Kicking (Karate)),
				damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach) _
			),
	description(Notes: Calculated damage takes into account bonuses from Claws and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" or "Has Boots" to apply the +1 damage to Punch or Kick, as appropriate.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Kick::reach$)
//	replacetags(in "ST:Punch" with "hide(yes), reach()", in "ST:Kick" with "hide(yes), reach()"),

<Combat/Weapons - Ranged Combat>
Artillery (Beams), IQ/A, tl(0-12), default(IQ - 5), page(B178), cat(_General, Combat/Weapons - Ranged Combat)
Artillery (Bombs), IQ/A, tl(0-12), default(IQ - 5), page(B178), cat(_General, Combat/Weapons - Ranged Combat)
Artillery (Cannon), IQ/A, tl(0-12), default(IQ - 5), page(B178), cat(_General, Combat/Weapons - Ranged Combat)
Artillery (Catapult), IQ/A, tl(0-12), default(IQ - 5), page(B178), cat(_General, Combat/Weapons - Ranged Combat)
Artillery (Guided Missile), IQ/A, tl(0-12), default(IQ - 5), page(B178), cat(_General, Combat/Weapons - Ranged Combat)
Artillery (Torpedoes), IQ/A, tl(0-12), default(IQ - 5), page(B178), cat(_General, Combat/Weapons - Ranged Combat)
Beam Weapons (Pistol), DX/E, tl(0-12), default(DX - 4, SK:Beam Weapons - 4, "SK:Guns (Pistol)" - 4, SK:Gun!), page(B179), cat(_General, Combat/Weapons - Ranged Combat)
Beam Weapons (Projector), DX/E, tl(0-12), default(DX - 4, SK:Beam Weapons - 4, SK:Gun!), page(B179), cat(_General, Combat/Weapons - Ranged Combat)
Beam Weapons (Rifle), DX/E, tl(0-12), default(DX - 4, SK:Beam Weapons - 4, "SK:Guns (Rifle)" - 4, SK:Gun!), page(B179), cat(_General, Combat/Weapons - Ranged Combat)
Blowpipe, DX/H, default(DX - 6), page(B180), cat(_General, Combat/Weapons - Ranged Combat)
Bolas, DX/A, default(SK:Bolas Art - 3, SK:Bolas Sport - 3), page(B181), cat(_General, Combat/Weapons - Ranged Combat)
Bow, DX/A, default(DX - 5, SK:Bow Art - 3, SK:Bow Sport - 3), page(B182), cat(_General, Combat/Weapons - Ranged Combat)
Crossbow, DX/E, default(DX - 4, SK:Crossbow Art - 3, SK:Crossbow Sport - 3), page(B186), cat(_General, Combat/Weapons - Ranged Combat)
Dropping, DX/A, default(DX - 3, SK:Throwing - 4), page(B189), cat(_General, Combat/Weapons - Ranged Combat)
Fast-Draw (Arrow), DX/E, page(B194), cat(_General, Combat/Weapons - Ranged Combat)
Fast-Draw (Ammo), DX/E, tl(4-12), page(B194), cat(_General, Combat/Weapons - Ranged Combat)
Fast-Draw (Long Arm), DX/E, page(B194), cat(_General, Combat/Weapons - Ranged Combat)
Fast-Draw (Pistol), DX/E, page(B194), cat(_General, Combat/Weapons - Ranged Combat)
Gunner (Beams), DX/E, tl(0-12), default(DX - 4, SK:Gunner - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Gunner (Cannon), DX/E, tl(0-12), default(DX - 4, SK:Gunner - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Gunner (Catapult), DX/E, tl(0-12), default(DX - 4, SK:Gunner - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Gunner (Machine Gun), DX/E, tl(0-12), default(DX - 4, SK:Gunner - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Gunner (Rockets), DX/E, tl(0-12), default(DX - 4, SK:Gunner - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Grenade Launcher), DX/E, tl(0-12), default(DX - 4, SK:Guns - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Gyroc), DX/E, tl(0-12), default(DX - 4, SK:Guns - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Light Anti-Armor Weapon), DX/E, tl(0-12), default(DX - 4, SK:Guns - 4, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Light Machine Gun), DX/E, tl(0-12), default(DX - 4, "SK:Guns (Grenade Launcher)" - 4, "SK:Guns (Gyroc)" - 4, "SK:Guns (Light Anti-Armor Weapon)" - 4, "SK:Guns (Light Machine Gun)" - 2, "SK:Guns (Musket)" - 2, "SK:Guns (Pistol)" - 2, "SK:Guns (Rifle)" - 2, "SK:Guns (Shotgun)" - 2, "SK:Guns (Submachine Gun)" - 2, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Musket), DX/E, tl(0-12), default(DX - 4, "SK:Guns (Grenade Launcher)" - 4, "SK:Guns (Gyroc)" - 4, "SK:Guns (Light Anti-Armor Weapon)" - 4, "SK:Guns (Light Machine Gun)" - 2, "SK:Guns (Musket)" - 2, "SK:Guns (Pistol)" - 2, "SK:Guns (Rifle)" - 2, "SK:Guns (Shotgun)" - 2, "SK:Guns (Submachine Gun)" - 2, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Pistol), DX/E, tl(0-12), default(DX - 4, "SK:Guns (Grenade Launcher)" - 4, "SK:Guns (Gyroc)" - 4, "SK:Guns (Light Anti-Armor Weapon)" - 4, "SK:Guns (Light Machine Gun)" - 2, "SK:Guns (Musket)" - 2, "SK:Guns (Pistol)" - 2, "SK:Guns (Rifle)" - 2, "SK:Guns (Shotgun)" - 2, "SK:Guns (Submachine Gun)" - 2, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Rifle), DX/E, tl(0-12), default(DX - 4, "SK:Guns (Grenade Launcher)" - 4, "SK:Guns (Gyroc)" - 4, "SK:Guns (Light Anti-Armor Weapon)" - 4, "SK:Guns (Light Machine Gun)" - 2, "SK:Guns (Musket)" - 2, "SK:Guns (Pistol)" - 2, "SK:Guns (Rifle)" - 2, "SK:Guns (Shotgun)" - 2, "SK:Guns (Submachine Gun)" - 2, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Shotgun), DX/E, tl(0-12), default(DX - 4, "SK:Guns (Grenade Launcher)" - 4, "SK:Guns (Gyroc)" - 4, "SK:Guns (Light Anti-Armor Weapon)" - 4, "SK:Guns (Light Machine Gun)" - 2, "SK:Guns (Musket)" - 2, "SK:Guns (Pistol)" - 2, "SK:Guns (Rifle)" - 2, "SK:Guns (Shotgun)" - 2, "SK:Guns (Submachine Gun)" - 2, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Guns (Submachine Gun), DX/E, tl(0-12), default(DX - 4, "SK:Guns (Grenade Launcher)" - 4, "SK:Guns (Gyroc)" - 4, "SK:Guns (Light Anti-Armor Weapon)" - 4, "SK:Guns (Light Machine Gun)" - 2, "SK:Guns (Musket)" - 2, "SK:Guns (Pistol)" - 2, "SK:Guns (Rifle)" - 2, "SK:Guns (Shotgun)" - 2, "SK:Guns (Submachine Gun)" - 2, SK:Gun!), page(B198), cat(_General, Combat/Weapons - Ranged Combat)
Innate Attack (Beam), DX/E, default(DX - 4, SK:Innate Attack - 2), page(B201), cat(_General, Combat/Weapons - Ranged Combat), parryat(@int((ST:Power Parry Beam + %level)/2)+3)
Innate Attack (Breath), DX/E, default(DX - 4, SK:Innate Attack - 2), page(B201), cat(_General, Combat/Weapons - Ranged Combat), parryat(@int((ST:Power Parry Breath + %level)/2)+3)
Innate Attack (Gaze), DX/E, default(DX - 4, SK:Innate Attack - 2), page(B201), cat(_General, Combat/Weapons - Ranged Combat), parryat(@int((ST:Power Parry Gaze + %level)/2)+3)
Innate Attack (Projectile), DX/E, default(DX - 4, SK:Innate Attack - 2), page(B201), cat(_General, Combat/Weapons - Ranged Combat), parryat(@int((ST:Power Parry Projectile + %level)/2)+3)
Lasso, DX/A, default(SK:Lasso Art - 3, SK:Lasso Sport - 3), page(B204), cat(_General, Combat/Weapons - Ranged Combat)
Liquid Projector (Flamethrower), DX/E, tl(0-12), default(DX - 4, SK:Liquid Projector - 4, SK:Gun!), page(B205), cat(_General, Combat/Weapons - Ranged Combat)
Liquid Projector (Sprayer), DX/E, tl(0-12), default(DX - 4, SK:Liquid Projector - 4, SK:Gun!), page(B205), cat(_General, Combat/Weapons - Ranged Combat)
Liquid Projector (Squirt Gun), DX/E, tl(0-12), default(DX - 4, SK:Liquid Projector - 4, SK:Gun!), page(B205), cat(_General, Combat/Weapons - Ranged Combat)
Liquid Projector (Water Cannon), DX/E, tl(0-12), default(DX - 4, SK:Liquid Projector - 4, SK:Gun!), page(B205), cat(_General, Combat/Weapons - Ranged Combat)
Net, DX/H, default(SK:Cloak - 5), page(B211), cat(_General, Combat/Weapons - Ranged Combat)
Sling, DX/H, default(DX - 6), page(B221), cat(_General, Combat/Weapons - Ranged Combat)
Spear Thrower, DX/A, default(DX - 5, "SK:Thrown Weapon (Spear)" - 4), page(B222), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Axe/Mace), DX/E, default(DX - 4), page(B226), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Dart), DX/E, default(DX - 4, SK:Throwing - 2), page(B226), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Harpoon), DX/E, default(DX - 4, "SK:Thrown Weapon (Spear)" - 2), page(B226), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Knife), DX/E, default(DX - 4), page(B226), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Shuriken), DX/E, default(DX - 4, SK:Throwing - 2), page(B226), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Spear), DX/E, default(DX - 4, SK:Spear Thrower - 4, "SK:Thrown Weapon (Harpoon)" - 2), page(B226), cat(_General, Combat/Weapons - Ranged Combat)
Thrown Weapon (Stick), DX/E, default(DX - 4), page(B226), cat(_General, Combat/Weapons - Ranged Combat)

<Craft>
Carpentry, IQ/E, default(IQ - 4), page(B183), cat(_General, Craft)
Jeweler, IQ/H, tl(0-12), default(IQ - 6, "SK:Smith (Copper)" - 4, "SK:Smith (Lead and Tin)" - 4), page(B203), cat(_General, Craft)
Leatherworking, DX/E, default(DX - 4), page(B205), cat(_General, Craft)
Masonry, IQ/E, default(IQ - 4), page(B207), cat(_General, Craft)
Sewing, DX/E, tl(0-12), default(DX - 4), page(B219), cat(_General, Craft, Everyman)
Smith (Copper), IQ/A, tl(0-12), default(IQ - 5, SK:Jeweler - 4, SK:Smith - 4), page(B221), cat(_General, Craft)
Smith (Iron), IQ/A, tl(0-12), default(IQ - 5, SK:Smith - 4), page(B221), cat(_General, Craft)
Smith (Lead and Tin), IQ/A, tl(0-12), default(IQ - 5, SK:Jeweler - 4, SK:Smith - 4), page(B221), cat(_General, Craft)

<Criminal/Street>
Carousing, HT/E, default(HT - 4), page(B183), cat(_General, Criminal/Street, Social)
Computer Hacking, IQ/VH, tl(0-12), needs(SK:Computer Programming = 1pts), page(B184), cat(_General, Criminal/Street, Spy)
Counterfeiting, IQ/H, tl(0-12), default(IQ - 6, SK:Forgery - 2), page(B185), cat(_General, Criminal/Street)

Disguise, IQ/A, tl(0-12), default(IQ - 5, SK:Makeup - 3), page(B187), cat(_General, Criminal/Street, Spy),
	x(#InputToTag("You must specialize by species:", nameext, "Human", "Disguise"))

Electronics Operation (Security), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Security)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Criminal/Street, Spy, Technical)
Escape, DX/H, default(DX - 6), page(B192), cat(_General, Criminal/Street, Spy)
Explosives (Demolition), IQ/A, tl(0-12), default(IQ - 5, "SK:Engineer (Combat)" - 3, "SK:Engineer (Mining)" - 3, "SK:Explosives (Underwater Demolition)" - 2, SK:Explosives - 4), page(B194), cat(_General, Criminal/Street, Military, Technical)
Fast-Talk, IQ/A, default(IQ - 5, SK:Acting - 5), page(B195), cat(_General, Criminal/Street, Social, Spy), gives(=@if(me::level >= 20 then 2 else 0) to ST:Reaction)
Filch, DX/A, default(DX - 5, SK:Pickpocket - 4, SK:Sleight of Hand - 4), page(B195), cat(_General, Criminal/Street, Spy)
Forced Entry, DX/E, page(B196), cat(_General, Criminal/Street, Police, Spy)
Forgery, IQ/H, tl(0-12), default(IQ - 6, SK:Counterfeiting - 2), page(B196), cat(_General, Criminal/Street, Spy)
Gambling, IQ/A, default(IQ - 5, "SK:Mathematics (Statistics)" - 5), page(B197), cat(_General, Criminal/Street, Social)
Holdout, IQ/A, default(IQ - 5, SK:Sleight of Hand - 3), page(B200), cat(_General, Criminal/Street, Spy)
Intimidation, Will/A, default(Will - 5, SK:Acting - 3), page(B202), cat(_General, Criminal/Street, Police, Social)
Lockpicking, IQ/A, tl(0-12), default(IQ - 5), page(B206), cat(_General, Criminal/Street, Police, Spy, Technical)
Observation, Per/A, default(Per - 5, SK:Shadowing - 5), page(B211), cat(_General, Criminal/Street, Military, Police, Spy)
Panhandling, IQ/E, default(IQ - 4, "SK:Fast-Talk" - 2, SK:Public Speaking - 3), page(B212), cat(_General, Criminal/Street, Social)
Pickpocket, DX/H, default(DX - 6, SK:Filch - 5, SK:Sleight of Hand - 4), page(B213), cat(_General, Criminal/Street)
Poisons, IQ/H, tl(0-12), default(IQ - 6, SK:Chemistry - 5, SK:Pharmacy - 3, SK:Physician - 3), page(B214), cat(_General, Criminal/Street, Medical, Spy)
Savoir-Faire (Mafia), IQ/E, default(IQ - 4), page(B218), cat(_General, Criminal/Street, Knowledge, Social)
Scrounging, Per/E, default(Per - 4), page(B218), cat(_General, Criminal/Street)
Shadowing, IQ/A, default(IQ - 5, SK:Observation - 5), page(B219), cat(_General, Criminal/Street, Police, Spy)
Smuggling, IQ/A, default(IQ - 5), page(B221), cat(_General, Criminal/Street, Spy)
Stealth, DX/A, default(DX - 5, IQ - 5), page(B222), cat(_General, Criminal/Street, Police, Spy)
Streetwise, IQ/A, default(IQ - 5), page(B223), cat(_General, Criminal/Street, Police, Social)
Traps, IQ/A, tl(0-12), default(IQ - 5, SK:Lockpicking - 3), page(B226), cat(_General, Criminal/Street, Military)
Urban Survival, Per/A, default(Per - 5), page(B228), cat(_General, Criminal/Street, Police)

<Design/Invention>
Architecture, IQ/A, tl(0-12), default(IQ - 5, "SK:Engineer (Civil)" - 4), page(B176), cat(_General, Design/Invention)
Bioengineering (Cloning), IQ/H, tl(0-12), default(SK:Biology - 5, SK:Bioengineering - 4), page(B180), cat(_General, Design/Invention)
Bioengineering (Genetic Engineering), IQ/H, tl(0-12), default(SK:Biology - 5, SK:Bioengineering - 4), page(B180), cat(_General, Design/Invention)
Bioengineering (Tissue Engineering), IQ/H, tl(0-12), default(SK:Biology - 5, SK:Bioengineering - 4), page(B180), cat(_General, Design/Invention)
Computer Programming, IQ/H, tl(0-12), page(B184), cat(_General, Design/Invention)

Engineer ([Type]), IQ/H, tl(0-12), default("SK:Mechanic ([Type])" - 6, "SK:Armoury ([Type])" - 6, SK:Engineer - 4), page(B190),
	needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention), noresync(yes),
	x( #InputReplace("Choose an Armor, Machine, Motive System, Power Plant, Vehicle, or Weapon type:", "[Type]", , "Engineer") )
Engineer (%examplelist%), IQ/H, tl(0-12), default("SK:Mechanic (%examplelist%)" - 6, "SK:Armoury (%examplelist%)" - 6, SK:Engineer - 4), page(B190),
	needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention),
	x(#ChoiceList(_
			name(example),
			title(Engineer: Choose an Engineering Specialty),
			text(Choose an Engineering Specialty from the list of examples provided:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Aerospace",
				"Antimatter Reactor",
				"Autogyro",
				"Automobile",
				"Battlesuits",
				"Body Armor",
				"Bicycle",
				"Clockwork",
				"Construction Equipment",
				"Contragravity",
				"Diesel Engine",
				"Fission Reactor",
				"Flight Pack",
				"Force Shields",
				"Free-Flooding Sub",
				"Fuel Cell",
				"Fusion Reactor",
				"Gas Turbine",
				"Gasoline Engine",
				"Glider",
				"Halftrack Vehicle",
				"Heavy Airplane",
				"Heavy Wheeled Vehicle",
				"Helicopter",
				"High-Performance Airplane",
				"High-Performance Spacecraft",
				"Hovercraft",
				"Large Powerboat",
				"Large Sub",
				"Legged Motive System",
				"Light Airplane",
				"Lighter-Than-Air",
				"Lightsail",
				"Locomotive",
				"Low-G Wings",
				"Low-Performance Spacecraft",
				"Mecha",
				"Melee Weapons",
				"Mini-Sub",
				"Missile Weapons",
				"Motorboat",
				"Reactionless Thrusters",
				"Robotics",
				"Rockets",
				"Sailboat",
				"Steam Engine",
				"Small Arms",
				"Tracked Motive System",
				"Tracked Vehicle",
				"Ultralight Airplane",
				"Unpowered Boat",
				"Vehicular Armor",
				"Vertol",
				"Wheeled Motive System" _
			)_
			)_
	), noresync(yes)

Engineer (Artillery), IQ/H, tl(0-12), default("SK:Armoury (Heavy Weapons)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Civil), IQ/H, tl(0-12), default(SK:Architecture - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Combat), IQ/H, tl(0-12), default("SK:Explosives (Demolition)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Electrical), IQ/H, tl(0-12), default(SK:Electrician - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Electronics), IQ/H, tl(0-12), default(SK:Electronics Repair - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Materials), IQ/H, tl(0-12), default(SK:Chemistry - 6, SK:Metallurgy - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts"), (SK:Chemistry = 1 pts | SK:Metallurgy = 1 pts)), page(B190), cat(_General, Design/Invention)
Engineer (Microtechnology), IQ/H, tl(0-12), default("SK:Mechanic (Micromachines)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Mining), IQ/H, tl(0-12), default("SK:Explosives (Demolition)" - 6, SK:Geology - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Nanotechnology), IQ/H, tl(0-12), default("SK:Mechanic (Nanomachines)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Parachronic), IQ/H, tl(0-12), default("SK:Electronics Operation (Parachronic)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts"), SK:Physics = 1 pts), page(B190), cat(_General, Design/Invention)
Engineer (Psychotronics), IQ/H, tl(0-12), default("SK:Electronics Operation (Psychotronics)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B190), cat(_General, Design/Invention)
Engineer (Temporal), IQ/H, tl(0-12), default("SK:Electronics Operation (Temporal)" - 6, SK:Engineer - 4), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts"), SK:Physics = 1 pts), page(B190), cat(_General, Design/Invention)
Pharmacy (Herbal), IQ/H, tl(0-12), default(IQ - 6, SK:Biology - 5, SK:Herb Lore - 5, SK:Naturalist - 5), needs(SK:Naturalist), page(B213), cat(_General, Design/Invention, Medical, Plant)
Pharmacy (Synthetic), IQ/H, tl(5-12), default(IQ - 6, SK:Chemistry - 5, SK:Physician - 5), page(B213), cat(_General, Design/Invention, Medical)
Weird Science, IQ/VH, page(B228), cat(_General, Design/Invention)

<Esoteric>
Autohypnosis, Will/H, default(SK:Meditation - 4), page(B179), cat(_General, Esoteric)
Blind Fighting, Per/VH, needs(AD:Trained By A Master | AD:Weapon Master), page(B180), cat(_General, Esoteric)
Body Control, HT/VH, needs(AD:Trained By A Master, SK:Breath Control = 1pts, SK:Meditation = 1pts), page(B181), cat(_General, Esoteric)
Breaking Blow, IQ/H, needs(AD:Trained By A Master), page(B182), cat(_General, Esoteric)
Dreaming, Will/H, default(Will - 6), page(B188), cat(_General, Esoteric)
Enthrallment (Captivate), Will/H, needs(AD:Charisma = 1, SK:Public Speaking = 12, "SK:Enthrallment (Suggest)" = 12), page(B191), cat(_General, Esoteric)
Enthrallment (Persuade), Will/H, needs(AD:Charisma = 1, SK:Public Speaking = 12), page(B191), cat(_General, Esoteric)
Enthrallment (Suggest), Will/H, needs(AD:Charisma = 1, SK:Public Speaking = 12, "SK:Enthrallment (Persuade)" = 12), page(B191), cat(_General, Esoteric)
Enthrallment (Sway Emotions), Will/H, needs(AD:Charisma = 1, SK:Public Speaking = 12, "SK:Enthrallment (Persuade)" = 12), page(B191), cat(_General, Esoteric)
Esoteric Medicine, Per/H, default(Per - 6), page(B192), cat(_General, Esoteric, Medical)
Flying Leap, IQ/H, needs(AD:Trained By A Master, SK:Jumping = 1pts, SK:Power Blow = 1pts | AD:Weapon Master, SK:Jumping = 1pts, SK:Power Blow = 1pts), page(B196), cat(_General, Esoteric)
Immovable Stance, DX/H, needs(AD:Trained By A Master), page(B201), cat(_General, Esoteric)
Invisibility Art, IQ/VH, needs(AD:Trained By A Master, SK:Hypnotism = 14, SK:Stealth = 14), page(B202), cat(_General, Esoteric)
Kiai, HT/H, needs(AD:Trained By A Master | AD:Weapon Master), page(B203), cat(_General, Esoteric)
Light Walk, DX/H, needs(AD:Trained By A Master, SK:Acrobatics = 14, SK:Stealth = 14), page(B205), cat(_General, Esoteric)
Meditation, Will/H, default(Will - 6, SK:Autohypnosis - 4), page(B207), cat(_General, Esoteric)
Mental Strength, Will/E, needs(AD:Trained By A Master | AD:Weapon Master), page(B209), cat(_General, Esoteric)
Mind Block, Will/A, default(Will - 5, SK:Meditation - 5), page(B210), cat(_General, Esoteric)
Musical Influence, IQ/VH, needs(AD:Musical Ability = 1, SK:Musical Instrument = 12 | AD:Musical Ability = 1, SK:Singing = 12), page(B210), cat(_General, Esoteric)
Power Blow, Will/H, needs(AD:Trained By A Master | AD:Weapon Master), page(B215), cat(_General, Esoteric)
Pressure Points, IQ/H, default(SK:Esoteric Medicine - 4), needs(AD:Trained By A Master | AD:Weapon Master), page(B215), cat(_General, Esoteric),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Pressure Points"))
Pressure Secrets, IQ/VH, needs(AD:Trained By A Master, SK:Pressure Points = 16), page(B215), cat(_General, Esoteric),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Pressure Secrets"))
Push, DX/H, needs(AD:Trained By A Master), page(B216), cat(_General, Esoteric)
Throwing Art, DX/H, needs(AD:Trained By A Master | AD:Weapon Master), page(B226), cat(_General, Esoteric)
Zen Archery, IQ/VH, needs(AD:Trained By A Master, SK:Bow >= 18, SK:Meditation = 1pts | AD:Weapon Master, SK:Bow >= 18, SK:Meditation = 1pts), page(B228), cat(_General, Esoteric)

<Everyman>
Area Knowledge ([Area]), IQ/E, default(IQ - 4, "SK:Geography ([Area])" - 3), page(B176), cat(_General, Everyman, Knowledge),
	x(#InputReplace("Please specify the area covered:", "[Area]", "local", "Area Knowledge")), noresync(yes)

Computer Operation, IQ/E, tl(0-12), default(IQ - 4), page(B184), cat(_General, Everyman, Scholarly, Technical)
Cooking, IQ/A, default(IQ - 5, SK:Housekeeping - 5), page(B185), cat(_General, Everyman)
Current Affairs (Headline News), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social)
Current Affairs (People), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social)
Current Affairs (Politics), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social)

Current Affairs ([Regional]), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social),
	x(#InputReplace("Please specify a particular region:", "[Regional]", "local region", "Current Affairs"))

Current Affairs (Science & Technology), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social)
Current Affairs (Sports), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social)
Current Affairs (Travel), IQ/E, tl(0-12), default(IQ - 4, SK:Research - 4, SK:Current Affairs - 4), page(B186), cat(_General, Everyman, Knowledge, Social)
First Aid, IQ/E, tl(0-12), default(IQ - 4, SK:Esoteric Medicine, SK:Physician, SK:Veterinary - 4), page(B195), cat(_General, Everyman, Medical),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "First Aid"))
Housekeeping, IQ/E, default(IQ - 4), page(B200), cat(_General, Everyman)
Knot-Tying, DX/E, default(DX - 4, SK:Climbing - 4, SK:Seamanship - 4), page(B203), cat(_General, Everyman)
Savoir-Faire (Servant), IQ/E, default(IQ - 4, "SK:Savoir-Faire (High Society)" - 2), page(B218), cat(_General, Everyman, Knowledge, Social)
Typing, DX/E, default(DX - 4, SK:Administration - 3, SK:Computer Operation - 3, SK:Research - 3, SK:Writing - 3), page(B228), cat(_General, Everyman, Scholarly, Technical)
Weather Sense, IQ/A, default(IQ - 5), page(B209), cat(_General, Everyman, Outdoor/Exploration)

<Knowledge>
Expert Skill, IQ/H, page(B193), cat(_General, Knowledge, Scholarly),
	x(#InputToTag("Please specify an area of expertise here:", nameext, , "Expert Skill"))

Games, IQ/E, default(IQ - 4), page(B197), cat(_General, Knowledge),
	x(#InputToTag("You must specialize in a particular game:", nameext, "GURPS", "Games"))

Heraldry, IQ/A, default(IQ - 5, "SK:Savoir-Faire (High Society)" - 3), page(B199), cat(_General, Knowledge, Social)

Hidden Lore, IQ/A, page(B199), cat(_General, Knowledge),
	x(#InputToTag("You must specialize in a particular body of secret knowledge:", nameext, , "Hidden Lore"))

Hidden Lore (Conspiracies), IQ/A, page(B199), cat(_General, Knowledge)
Hidden Lore (Demon Lore), IQ/A, page(B199), cat(_General, Knowledge, Occult/Magical)
Hidden Lore (Faerie Lore), IQ/A, page(B199), cat(_General, Knowledge, Occult/Magical)
Hidden Lore (Spirit Lore), IQ/A, page(B199), cat(_General, Knowledge, Occult/Magical)

Hobby Skill ([DX-based]), DX/E, default(DX - 4), page(B200), cat(_General, Knowledge),
   x( #InputReplace("Specify the field of study:", "[DX-based]", , "Hobby Skill") )
Hobby Skill ([IQ-based]), IQ/E, default(IQ - 4), page(B200), cat(_General, Knowledge),
   x( #InputReplace("Specify the field of study:", "[IQ-based]", , "Hobby Skill") )

Professional Skill ([DX based]), DX/A, default(DX - 5), page(B215), cat(_General, Knowledge),
   x( #InputReplace("Specify the profession encompassed by this skill:", "[DX based]", , "Professional Skill") )
Professional Skill ([IQ based]), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge),
   x( #InputReplace("Specify the profession encompassed by this skill:", "[IQ based]", , "Professional Skill") )
Professional Skill (Air Traffic Controller), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Barber), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Brewer), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Cooper), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Distiller), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Dyer), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Florist), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Game Designer), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Journalist), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Prostitute), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Tanner), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Vinter), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Glassblower), DX/A, default(DX - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Tailor), DX/A, default(DX - 5), page(B215), cat(_General, Knowledge) 
Professional Skill (Weaver), DX/A, default(DX - 5), page(B215), cat(_General, Knowledge) 

Savoir-Faire, IQ/E, default(IQ - 4), page(B218), cat(_General, Knowledge, Social),
	x(#InputToTag("You must specialize in a subculture:", nameext, , "Savoir-Faire"))

Savoir-Faire (Dojo), IQ/E, default(IQ - 4), page(B218), cat(_General, Knowledge, Social)
Savoir-Faire (Military), IQ/E, default(IQ - 4), page(B218), cat(_General, Knowledge, Military, Social)
Savoir-Faire (Police), IQ/E, default(IQ - 4), page(B218), cat(_General, Knowledge, Police, Social)

<Medical>
Diagnosis, IQ/H, tl(0-12), default(IQ - 6, SK:First Aid - 8, SK:Physician - 4, SK:Veterinary - 5), page(B187), cat(_General, Medical),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Diagnosis"))
Electronics Operation (Medical), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Medical)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Medical, Technical)
Expert Skill (Epidemiology), IQ/H, page(B193), cat(_General, Medical, Natural Sciences)
Hypnotism, IQ/H, page(B201), cat(_General, Medical),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Hypnotism"))
Physician, IQ/H, tl(0-12), default(IQ - 7, SK:First Aid - 11, SK:Veterinary - 5), page(B213), cat(_General, Medical),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Physician"))
Physiology, IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Physiology"))
Psychology, IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),
	x(#InputToTag("You must specialize by species:", nameext, "Human", "Psychology"))
Surgery, IQ/VH, tl(0-12), default(SK:First Aid - 12, SK:Physician - 5, SK:Physiology - 8, SK:Veterinary - 5), needs(SK:First Aid = 1pts | SK:Physician = 1pts), page(B223), cat(_General, Medical),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Surgery"))

<Military>
Armoury (Battlesuits), IQ/A, tl(0-12), default(IQ - 5, SK:Armoury - 4, "SK:Engineer (Battlesuits)" - 4), page(B178), cat(_General, Military, Repair/Maintenance)

Armoury (Body Armor), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Force Shields)" - 4, "SK:Armoury (Vehicular Armor)" - 4, "SK:Engineer (Body Armor)" - 4, "SK:Smith (Copper)" - me::default1, "SK:Smith (Iron)" - me::default2, SK:Machinist - me::default3),
	default0(@if(me::tl > 4 THEN 100 ELSE 4)),
	default1(@if(me::tl = 1 THEN 3 ELSE 100)),
	default2(@if(me::tl = 2 then 3 else @if(me::tl = 3 then 3 else @if(me::tl = 4 then 3 else 100)))),
	default3(@if(me::tl > 4 then 3 else 100))
Armoury (Force Shields), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Body Armor)" - 4, "SK:Armoury (Vehicular Armor)" - 4, "SK:Engineer (Force Shields)" - 4),
	default0(@if(me::tl > 4 THEN 100 ELSE 4))
Armoury (Vehicular Armor), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Body Armor)" - 4, "SK:Armoury (Force Shields)" - 4, "SK:Engineer (Vehicular Armor)" - 4),
	default0(@if(me::tl > 4 THEN 100 ELSE 4))

Armoury (Melee Weapons), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Small Arms)" - 4, "SK:Armoury (Heavy Weapons)" - 4, "SK:Armoury (Missile Weapons)" - 4, "SK:Engineer (Melee Weapons)" - 4, "SK:Smith (Copper)" - me::default1, "SK:Smith (Iron)" - me::default2, SK:Machinist - me::default3),
	default0(@if(me::tl > 4 THEN 100 ELSE 4)),
	default1(@if(me::tl =1 THEN 3 ELSE 100)),
	default2(@if(me::tl = 2 then 3 else @if(me::tl = 3 then 3 else @if(me::tl = 4 then 3 else 100)))),
	default3(@if(me::tl > 4 then 3 else 100))
Armoury (Small Arms), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Melee Weapons)" - 4, "SK:Armoury (Heavy Weapons)" - 4, "SK:Armoury (Missile Weapons)" - 4, "SK:Engineer (Small Arms)" - 4, SK:Machinist - me::default1),
	default0(@if(me::tl > 4 THEN 100 ELSE 4)),
	default1(@if(me::tl > 4 then 3 else 100))
Armoury (Heavy Weapons), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Melee Weapons)" - 4, "SK:Armoury (Small Arms)" - 4, "SK:Armoury (Missile Weapons)" - 4, "SK:Engineer (Artillery)" - 4),
	default0(@if(me::tl > 4 THEN 100 ELSE 4))
Armoury (Missile Weapons), IQ/A, tl(0-12), page(B178), cat(_General, Military, Repair/Maintenance),
	default(IQ - 5, SK:Armoury - me::default0, "SK:Armoury (Battlesuits)" - 4, "SK:Armoury (Melee Weapons)" - 4, "SK:Armoury (Small Arms)" - 4, "SK:Armoury (Heavy Weapons)" - 4, "SK:Engineer (Missile Weapons)" - 4),
	default0(@if(me::tl > 4 THEN 100 ELSE 4))

Brainwashing, IQ/H, tl(0-12), default("SK:Electronics Operation (Medical)" - 6, SK:Hypnotism - 6, SK:Interrogation - 6, SK:Pharmacy - 6, SK:Psychology - 6, SK:Surgery - 6), page(B182), cat(_General, Military, Spy)
Camouflage, IQ/E, default(IQ - 4, SK:Survival - 2), page(B183), cat(_General, Military, Outdoor/Exploration)
Cryptography, IQ/H, tl(0-12), default("SK:Mathematics (Cryptology)" - 5), page(B186), cat(_General, Military, Spy)
Electronics Operation (Electronic Warfare), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Electronic Warfare)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Military, Spy, Technical)
Electronics Repair (Electronic Warfare), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Electronic Warfare)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Military, Repair/Maintenance)
Expert Skill (Military Science), IQ/H, page(B193), cat(_General, Military)
Explosives (Explosive Ordnance Disposal), IQ/A, tl(0-12), default(IQ - 5, "SK:Explosives (Nuclear Ordnance Disposal)" - 2, SK:Explosives - 4), needs(DX = 12), page(B194), cat(_General, Military, Police, Technical)
Explosives (Fireworks), IQ/A, tl(0-12), default(IQ - 5, SK:Chemistry - 3, SK:Explosives - 4), page(B194), cat(_General, Military, Technical)
Explosives (Nuclear Ordnance Disposal), IQ/A, tl(0-12), default(IQ - 5, "SK:Explosives (Explosive Ordnance Disposal)" - 2, SK:Explosives - 4), page(B194), cat(_General, Military, Technical)
Explosives (Underwater Demolition), IQ/A, tl(0-12), default(IQ - 5, "SK:Explosives (Demolition)" - 2, SK:Explosives - 4), page(B194), cat(_General, Military, Technical)
Forward Observer, IQ/A, tl(0-12), default(IQ - 5, SK:Artillery - 5, SK:Electronics Operation - 5), page(B196), cat(_General, Military)
Intelligence Analysis, IQ/H, tl(0-12), default(IQ - 6, SK:Strategy - 6), page(B201), cat(_General, Military, Police, Spy)
Interrogation, IQ/A, default(IQ - 5, SK:Intimidation - 3, SK:Psychology - 4), page(B202), cat(_General, Military, Police, Spy)
Leadership, IQ/A, default(IQ - 5), page(B204), cat(_General, Military, Social)
NBC Suit, DX/A, tl(0-12), default(DX - 5, SK:Battlesuit - 2, SK:Diving Suit - 2, SK:Vacc Suit - 2), page(B192), cat(_General, Military, Technical)
Soldier, IQ/A, tl(0-12), default(IQ - 5), page(B221), cat(_General, Military)
Strategy (Air), IQ/H, default(IQ - 6, SK:Intelligence Analysis - 6, SK:Tactics - 6, SK:Strategy - 4), page(B222), cat(_General, Military)
Strategy (Interstellar), IQ/H, default(IQ - 6, SK:Intelligence Analysis - 6, SK:Tactics - 6, SK:Strategy - 4), page(B222), cat(_General, Military)
Strategy (Land), IQ/H, default(IQ - 6, SK:Intelligence Analysis - 6, SK:Tactics - 6, SK:Strategy - 4), page(B222), cat(_General, Military)
Strategy (Naval), IQ/H, default(IQ - 6, SK:Intelligence Analysis - 6, SK:Tactics - 6, SK:Strategy - 4), page(B222), cat(_General, Military)
Strategy (Space), IQ/H, default(IQ - 6, SK:Intelligence Analysis - 6, SK:Tactics - 6, SK:Strategy - 4), page(B222), cat(_General, Military)
Tactics, IQ/H, default(IQ - 6, SK:Strategy - 6), page(B224), cat(_General, Military, Police)

<Natural Sciences>
Alchemy, IQ/VH, tl(0-12), page(B174), cat(_General, Natural Sciences, Occult/Magical)
Astronomy, IQ/H, tl(0-12), default(IQ - 6, SK:Astronomy), needs("SK:Mathematics (Applied)" = 1pts), page(B179), cat(_General, Natural Sciences)
Astronomy (Observational), IQ/A, tl(0-12), basedon(Astronomy), optspec(1), default(IQ - 6), page(B179), cat(_General, Natural Sciences)
Biology (Earthlike), IQ/VH, tl(0-12), default(IQ - 6, "SK:Naturalist (Earthlike)" - 6, SK:Biology - 4), page(B180), cat(_General, Natural Sciences, Plant)
Biology (Gas Giants), IQ/VH, tl(0-12), default(IQ - 6, "SK:Naturalist (Gas Giants)" - 6, SK:Biology - 4), page(B180), cat(_General, Natural Sciences, Plant)
Biology (Hostile Terrestrial), IQ/VH, tl(0-12), default(IQ - 6, "SK:Naturalist (Hostile Terrestrial)" - 6, SK:Biology - 4), page(B180), cat(_General, Natural Sciences, Plant)
Biology (Ice Dwarfs), IQ/VH, tl(0-12), default(IQ - 6, "SK:Naturalist (Ice Dwarfs)" - 6, SK:Biology - 4), page(B180), cat(_General, Natural Sciences, Plant)
Biology (Ice Worlds), IQ/VH, tl(0-12), default(IQ - 6, "SK:Naturalist (Ice Worlds)" - 6, SK:Biology - 4), page(B180), cat(_General, Natural Sciences, Plant)
Biology (Rock Worlds), IQ/VH, tl(0-12), default(IQ - 6, "SK:Naturalist (Rock Worlds)" - 6, SK:Biology - 4), page(B180), cat(_General, Natural Sciences, Plant)
Chemistry, IQ/H, tl(0-12), default(IQ - 6, SK:Alchemy - 3), page(B183), cat(_General, Natural Sciences)
Expert Skill (Hydrology), IQ/H, page(B193), cat(_General, Natural Sciences)
Expert Skill (Natural Philosophy), IQ/H, page(B193), cat(_General, Natural Sciences)
Geology (Earthlike), IQ/H, tl(0-12), default(IQ - 6, "SK:Geography (Physical)" -4, SK:Prospecting - 5, SK:Geology - 4), page(B198), cat(_General, Natural Sciences)
Geology (Gas Giants), IQ/H, tl(0-12), default(IQ - 6, "SK:Geography (Physical)" -4, SK:Prospecting - 5, SK:Geology - 4), page(B198), cat(_General, Natural Sciences)
Geology (Hostile Terrestrial), IQ/H, tl(0-12), default(IQ - 6, "SK:Geography (Physical)" -4, SK:Prospecting - 5, SK:Geology - 4), page(B198), cat(_General, Natural Sciences)
Geology (Ice Dwarfs), IQ/H, tl(0-12), default(IQ - 6, "SK:Geography (Physical)" -4, SK:Prospecting - 5, SK:Geology - 4), page(B198), cat(_General, Natural Sciences)
Geology (Ice Worlds), IQ/H, tl(0-12), default(IQ - 6, "SK:Geography (Physical)" -4, SK:Prospecting - 5, SK:Geology - 4), page(B198), cat(_General, Natural Sciences)
Geology (Rock Worlds), IQ/H, tl(0-12), default(IQ - 6, "SK:Geography (Physical)" -4, SK:Prospecting - 5, SK:Geology - 4), page(B198), cat(_General, Natural Sciences)
Mathematics (Applied), IQ/H, tl(0-12), default(IQ - 6, SK:Engineer - 5, SK:Physics - 5, SK:Mathematics - 5), page(B207), cat(_General, Natural Sciences)
Mathematics (Computer Science), IQ/H, tl(0-12), default(IQ - 6, SK:Computer Programming - 5, SK:Mathematics - 5), page(B207), cat(_General, Natural Sciences)
Mathematics (Cryptology), IQ/H, tl(0-12), default(IQ - 6, SK:Cryptography - 5, SK:Mathematics - 5), page(B207), cat(_General, Natural Sciences)
Mathematics (Pure), IQ/H, tl(0-12), default(IQ - 6, SK:Mathematics - 5), page(B207), cat(_General, Natural Sciences)
Mathematics (Surveying), IQ/H, tl(0-12), default(IQ - 6, SK:Cartography - 3, SK:Navigation - 4, SK:Mathematics - 5), page(B207), cat(_General, Natural Sciences, Technical)
Metallurgy, IQ/H, tl(0-12), default(SK:Chemistry - 5, SK:Jeweler - 8, SK:Smith - 8), page(B209), cat(_General, Natural Sciences)
Meteorology (Earthlike), IQ/A, tl(5-12), default(IQ - 6, SK:Meteorology - 4), page(B209), cat(_General, Natural Sciences)
Meteorology (Gas Giants), IQ/A, tl(5-12), default(IQ - 6, SK:Meteorology - 4), page(B209), cat(_General, Natural Sciences)
Meteorology (Hostile Terrestrial), IQ/A, tl(5-12), default(IQ - 6, SK:Meteorology - 4), page(B209), cat(_General, Natural Sciences)
Meteorology (Ice Dwarfs), IQ/A, tl(5-12), default(IQ - 6, SK:Meteorology - 4), page(B209), cat(_General, Natural Sciences)
Meteorology (Ice Worlds), IQ/A, tl(5-12), default(IQ - 6, SK:Meteorology - 4), page(B209), cat(_General, Natural Sciences)
Meteorology (Rock Worlds), IQ/A, tl(5-12), default(IQ - 6, SK:Meteorology - 4), page(B209), cat(_General, Natural Sciences)
Paleontology (Micropaleontology), IQ/H, tl(0-12), default(SK:Biology - 4, SK:Paleontology - 2), page(B212), cat(_General, Natural Sciences)
Paleontology (Paleoanthropology), IQ/H, tl(0-12), default(SK:Biology - 4, SK:Anthropology - 2, SK:Paleontology - 2), page(B212), cat(_General, Natural Sciences, Social Sciences/Humanities)
Paleontology (Paleobotany), IQ/H, tl(0-12), default(SK:Biology - 4, SK:Paleontology - 2), page(B212), cat(_General, Natural Sciences, Plant)
Paleontology (Paleozoology), IQ/H, tl(0-12), default(SK:Biology - 4, SK:Paleontology - 2), page(B212), cat(_General, Natural Sciences)
Physics, IQ/VH, tl(0-12), default(IQ - 6), needs($if(me::tl > 4 THEN "SK:Mathematics (Applied) = 1pts")), page(B213), cat(_General, Natural Sciences)

<Occult/Magical>
Exorcism, Will/H, default(Will - 6, SK:Religious Ritual - 3, SK:Ritual Magic - 3, SK:Theology - 3), page(B193), cat(_General, Occult/Magical),
	conditional(=-4 to SK:Exorcism when "user doesn't possess Blessed, Power Investiture, or True Faith")
Expert Skill (Psionics), IQ/H, page(B193), cat(_General, Occult/Magical)
Herb Lore, IQ/VH, tl(0-12), needs(SK:Naturalist = 1pts), page(B199), cat(_General, Occult/Magical, Plant)
Occultism, IQ/A, default(IQ - 5), page(B212), cat(_General, Occult/Magical)

Religious Ritual, IQ/H, default(SK:Ritual Magic - 6, SK:Theology - 4), page(B217), cat(_General, Occult/Magical),
	x(#InputToTag("You must specialize by religion:", nameext, , "Religious Ritual"))

Ritual Magic, IQ/VH, default(SK:Religious Ritual - 6), page(B218), cat(_General, Occult/Magical),
	x(#InputToTag("You must specialize by tradition:", nameext, , "Ritual Magic"))

Symbol Drawing, IQ/H, default(SK:Ritual Magic - 4), page(B224), cat(_General, Occult/Magical),
	x(#InputToTag("You must specialize in a particular magical tradition:", nameext, , "Symbol Drawing"))

Thaumatology, IQ/VH, default(IQ - 7), page(B225), cat(_General, Occult/Magical)

<Outdoor/Exploration>
Cartography, IQ/A, tl(0-12), default(IQ - 5, SK:Geography - 2, "SK:Mathematics (Surveying)" - 2, SK:Navigation - 4), page(B183), cat(_General, Outdoor/Exploration, Social Sciences/Humanities)
Fishing, Per/E, default(Per - 4), page(B195), cat(_General, Outdoor/Exploration)
Navigation (Air), IQ/A, tl(0-12), default(SK:Astronomy - 5, "SK:Navigation (Sea)" - 2, "SK:Navigation (Land)" - 2), page(B211), cat(_General, Outdoor/Exploration, Technical, Vehicle)
Navigation (Hyperspace), IQ/A, tl(0-12), default(SK:Astronomy - 4, "SK:Mathematics (Applied)" - 4, "SK:Navigation (Space)" - 5), page(B211), cat(_General, Outdoor/Exploration, Technical, Vehicle)
Navigation (Land), IQ/A, tl(0-12), default(IQ - 5, SK:Cartography - 4, "SK:Mathematics (Surveying)" - 4, "SK:Navigation (Sea)" - 2, "SK:Navigation (Air)" - 2), page(B211), cat(_General, Outdoor/Exploration, Technical, Vehicle)
Navigation (Sea), IQ/A, tl(0-12), default(SK:Astronomy - 5, SK:Seamanship - 5, "SK:Navigation (Air)" - 2, "SK:Navigation (Land)" - 2), page(B211), cat(_General, Outdoor/Exploration, Technical, Vehicle)
Navigation (Space), IQ/A, tl(0-12), default(SK:Astronomy - 4, "SK:Mathematics (Applied)" - 4, "SK:Navigation (Hyperspace)" - 5), page(B211), cat(_General, Outdoor/Exploration, Technical, Vehicle)
Prospecting, IQ/A, tl(0-12), default(IQ - 5, SK:Geology - 4), page(B216), cat(_General, Outdoor/Exploration)

Survival, Per/A, default(Per - 5, SK:Naturalist - 3), page(B223), cat(_General, Outdoor/Exploration),
  x(#InputToTag("You must specialize by a particular terrain type:", nameext, , "Survival"))

Survival (Radioactive Wasteland), Per/A, page(B223), cat(_General, Outdoor/Exploration)

* Land Survival skills
Survival (Arctic), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Desert), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Island/Beach), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Tropical Lagoon)" - 4, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Jungle), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Mountain), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Plains), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Swampland), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (River/Stream)" - 4, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Woodlands)" - 3), page(B223), cat(_General, Outdoor/Exploration)
Survival (Woodlands), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3), page(B223), cat(_General, Outdoor/Exploration)

* Aquatic Survival skills
Survival (Bank), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Salt-Water Sea)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (Deep Ocean Vent), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Bank)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Salt-Water Sea)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (Fresh-Water Lake), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Bank)" - 4, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Salt-Water Sea)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (Open Ocean), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Bank)" - 4, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Salt-Water Sea)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (Reef), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Bank)" - 4, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Salt-Water Sea)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (River/Stream), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Swampland)" - 4, "SK:Survival (Bank)" - 4, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (Salt-Water Sea)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (Salt-Water Sea), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Bank)" - 4, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Tropical Lagoon)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Survival (Tropical Lagoon), Per/A, default(Per - 5, SK:Naturalist - 3, "SK:Survival (Island/Beach)" - 4, "SK:Survival (Bank)" - 4, "SK:Survival (Deep Ocean Vent)" - 4, "SK:Survival (Fresh-Water Lake)" - 4, "SK:Survival (Open Ocean)" - 4, "SK:Survival (Reef)" - 4, "SK:Survival (River/Stream)" - 4, "SK:Survival (Salt-Water Sea)" - 4), page(B223), cat(_General, Outdoor/Exploration)
Tracking, Per/A, default(Per - 5, SK:Naturalist - 5), page(B226), cat(_General, Outdoor/Exploration)

<Plant>
Farming, IQ/A, tl(0-12), default(IQ - 5, SK:Biology - 5, SK:Gardening - 3), page(B194), cat(_General, Plant)
Gardening, IQ/E, default(IQ - 4, SK:Farming - 3), page(B197), cat(_General, Plant)

<Police>
Body Language, Per/A, default(SK:Detect Lies - 4, SK:Psychology - 4), page(B181), cat(_General, Police, Social, Spy),
	x(#InputToTag("You must specialize by species - Physiology Modifiers apply (p. B181):", nameext, "Human", "Body Language"))
Criminology, IQ/A, tl(0-12), default(IQ - 5, SK:Psychology - 4), page(B186), cat(_General, Police, Social Sciences/Humanities)
Detect Lies, Per/H, default(SK:Perception - 6, SK:Body Language - 4, SK:Psychology - 4), page(B187), cat(_General, Police, Social, Spy)
Electronics Operation (Surveillance), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Surveillance)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Police, Spy, Technical)
Forensics, IQ/H, tl(0-12), default(IQ - 6, SK:Criminology - 4), page(B196), cat(_General, Police)
Search, Per/A, default(Per - 5, SK:Criminology - 5), page(B219), cat(_General, Police, Spy)

<Repair/Maintenance>
Electrician, IQ/A, tl(0-12), default(IQ - 5, "SK:Engineer (Electrical)" - 3), page(B189), cat(_General, Repair/Maintenance)
Electronics Repair (Communications), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Communications)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Computers), IQ/A, tl(0-12), default(IQ - 5, "SK:Computer Operation" - 5, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Force Shields), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Force Shields)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Matter Transmitters), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Matter Transmitters)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Media), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Media)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Medical), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Medical)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Parachronic), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Parachronic)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Psychotronics), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Psychotronics)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Scientific), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Scientific)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Security), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Security)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Sensors), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Sensors)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Sonar), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Sonar)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Surveillance), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Surveillance)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Electronics Repair (Temporal), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Operation (Temporal)" - 3, "SK:Engineer (Electronics)" - 3, SK:Electronics Repair - 4), page(B190), cat(_General, Repair/Maintenance)
Machinist, IQ/A, tl(0-12), default(IQ - 5, SK:Mechanic - 5), page(B206), cat(_General, Repair/Maintenance)

Mechanic (Micromachines), IQ/A, tl(0-12), default(IQ - 5, "SK:Engineer (Microtechnology)" - 4, SK:Machinist - 5, SK:Mechanic - 4), page(B207), cat(_General, Repair/Maintenance)
Mechanic (Nanomachines), IQ/A, tl(0-12), default(IQ - 5, "SK:Engineer (Nanotechnology)" - 4, SK:Machinist - 5, SK:Mechanic - 4), page(B207), cat(_General, Repair/Maintenance)
Mechanic ([Type]), IQ/A, tl(0-12), page(B207), cat(_General, Repair/Maintenance), noresync(yes),
	default(IQ - 5, "SK:Engineer ([Type])" - 4, SK:Machinist - 5, SK:Mechanic - 4),
	x( #InputReplace("Choose a Machine, Motive System, Power Plant, or Vehicle type:", "[Type]", , "Mechanic") )
Mechanic (%examplelist%), IQ/A, tl(0-12), page(B207), default(IQ - 5, "SK:Engineer (%examplelist%)" - 4, SK:Machinist - 5, SK:Mechanic - 4), cat(_General, Repair/Maintenance),
	x(#ChoiceList(_
			name(example),
			title(Mechanic: Choose a Mechanic Specialty),
			text(Choose a Mechanic Specialty from the list of examples provided:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Aerospace",
				"Antimatter Reactor",
				"Autogyro",
				"Automobile",
				"Clockwork",
				"Construction Equipment",
				"Contragravity",
				"Diesel Engine",
				"Fission Reactor",
				"Flight Pack",
				"Free-Flooding Sub",
				"Fuel Cell",
				"Fusion Reactor",
				"Gas Turbine",
				"Gasoline Engine",
				"Glider",
				"Halftrack Vehicle",
				"Heavy Airplane",
				"Heavy Wheeled Vehicle",
				"Helicopter",
				"High-Performance Airplane",
				"High-Performance Spacecraft",
				"Hovercraft",
				"Large Powerboat",
				"Large Sub",
				"Legged Motive System",
				"Light Airplane",
				"Lighter-Than-Air",
				"Lightsail",
				"Locomotive",
				"Low-G Wings",
				"Low-Performance Spacecraft",
				"Mecha",
				"Mini-Sub",
				"Motorboat",
				"Reactionless Thrusters",
				"Robotics",
				"Rockets",
				"Sailboat",
				"Steam Engine",
				"Tracked Motive System",
				"Tracked Vehicle",
				"Ultralight Airplane",
				"Unpowered Boat",
				"Vertol",
				"Wheeled Motive System" _
			)_
			)_
	), noresync(yes)

<Scholarly>
Literature, IQ/H, default(IQ - 6), page(B205), cat(_General, Scholarly, Social Sciences/Humanities)
Research, IQ/A, tl(0-12), default(IQ - 5, SK:Writing - 3), needs(1 CA:Language Written = 2), page(B217), cat(_General, Scholarly, Spy)
Speed-Reading, IQ/A, page(B222), cat(_General, Scholarly)
Teaching, IQ/A, default(IQ - 5), page(B224), cat(_General, Scholarly, Social)

<Social>
Acting, IQ/A, default(IQ - 5, SK:Performance - 2, SK:Public Speaking - 5), page(B174), cat(_General, Social, Spy)
Erotic Art, DX/A, default(DX - 5, SK:Acrobatics - 5), page(B192, S224), cat(_General, Social),
	x(#InputToTag("You must specialize by species:", nameext, "Human", "Erotic Art"))

Fortune-Telling, IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social),
	x(#InputToTag("You must specialize in a particular method of Fortune-Telling:", nameext, , "Fortune-Telling"))

Fortune-Telling (Astrology), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Fortune-Telling (Augury), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Fortune-Telling (Crystal Gazing), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Fortune-Telling (Dream Interpretation), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Fortune-Telling (Feng Shui), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Fortune-Telling (Palmistry), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Fortune-Telling (Tarot), IQ/A, default(IQ - 5, "SK:Fast-Talk" - 3, SK:Occultism - 3), page(B196), cat(_General, Social)
Gesture, IQ/E, default(IQ - 4), page(B198), cat(_General, Social)
Sex Appeal, HT/A, default(HT - 3), page(B219, S224), cat(_General, Social),
	x(#InputToTag("You must specialize by species:", nameext, "Human", "Sex Appeal"))

<Social Sciences/Humanities>
Anthropology, IQ/H, default(IQ - 6, "SK:Paleontology (Paleoanthropology)" - 2, SK:Sociology - 3), page(B175), cat(_General, Social Sciences/Humanities),
	x(#InputToTag("You must specialize in a particular species:", nameext, "Human", "Anthropology"))

Archaeology, IQ/H, default(IQ - 6), page(B176), cat(_General, Social Sciences/Humanities)
Expert Skill (Egyptology), IQ/H, page(B193), cat(_General, Social Sciences/Humanities)
Expert Skill (Political Science), IQ/H, page(B193), cat(_General, Social Sciences/Humanities)
Expert Skill (Thanatology), IQ/H, page(B193), cat(_General, Social Sciences/Humanities)
Expert Skill (Xenology), IQ/H, page(B193), cat(_General, Social Sciences/Humanities)
Geography (Political), IQ/H, tl(0-12), default(IQ - 6, SK:Economics - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)

Geography ([Regional]), IQ/H, tl(0-12), default(IQ - 6, "SK:Area Knowledge ([Regional])" - 6, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities),
	x(#InputReplace("Please specify the region covered:", "[Regional]", "local", "Geography (Regional)")), noresync(yes)

Geography (Earthlike), IQ/H, tl(0-12), default(IQ - 6, "SK:Geology (Earthlike)" - 4, "SK:Meteorology (Earthlike)" - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)
Geography (Gas Giants), IQ/H, tl(0-12), default(IQ - 6, "SK:Geology (Gas Giants)" - 4, "SK:Meteorology (Gas Giants)" - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)
Geography (Hostile Terrestrial), IQ/H, tl(0-12), default(IQ - 6, "SK:Geology (Hostile Terrestrial)" - 4, "SK:Meteorology (Hostile Terrestrial)" - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)
Geography (Ice Dwarfs), IQ/H, tl(0-12), default(IQ - 6, "SK:Geology (Ice Dwarfs)" - 4, "SK:Meteorology (Ice Dwarfs)" - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)
Geography (Ice Worlds), IQ/H, tl(0-12), default(IQ - 6, "SK:Geology (Ice Worlds)" - 4, "SK:Meteorology (Ice Worlds)" - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)
Geography (Rock Worlds), IQ/H, tl(0-12), default(IQ - 6, "SK:Geology (Rock Worlds)" - 4, "SK:Meteorology (Rock Worlds)" - 4, SK:Geography - 5), page(B198), cat(_General, Social Sciences/Humanities)

History, IQ/H, default(IQ - 6), page(B200), cat(_General, Social Sciences/Humanities),
	x(#InputToTag("You must specialize in a limited geographical region or a single era:", nameext, , "History"))

Linguistics, IQ/H, page(B205), cat(_General, Social Sciences/Humanities)
Philosophy, IQ/H, default(IQ - 6), page(B213), cat(_General, Social Sciences/Humanities),
	x(#InputToTag("You must specialize in a particular school of philosophy:", nameext, , "Philosophy"))

Sociology, IQ/H, default(IQ - 6, SK:Anthropology - 3, SK:Psychology - 4), page(B221), cat(_General, Social Sciences/Humanities)
Theology, IQ/H, default(IQ - 6, SK:Religious Ritual - 4), page(B226), cat(_General, Social Sciences/Humanities),
	x(#InputToTag("You must specialize by religion:", nameext, , "Theology"))

<Spy>
Expert Skill (Computer Security), IQ/H, page(B193), cat(_General, Spy)
Lip Reading, Per/A, default(Per - 10), page(B205), cat(_General, Spy)

<Technical>
Battlesuit, DX/A, tl(0-12), default(DX - 5, SK:Diving Suit - 2, SK:NBC Suit - 2, SK:Vacc Suit - 2), page(B192), cat(_General, Technical, Vehicle)
Diving Suit, DX/A, tl(0-12), default(DX - 5, SK:Scuba - 2, SK:Battlesuit - 4, SK:NBC Suit - 4, SK:Vacc Suit - 4), page(B192), cat(_General, Technical)
Electronics Operation (Communications), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Communications)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Force Shields), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Force Shields)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Matter Transmitters), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Matter Transmitters)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Parachronic), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Parachronic)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Psychotronics), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Psychotronics)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Scientific), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Scientific)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Sensors), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Sensors)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Sonar), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Sonar)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Electronics Operation (Temporal), IQ/A, tl(0-12), default(IQ - 5, "SK:Electronics Repair (Temporal)" - 5, "SK:Engineer (Electronics)" - 5, SK:Electronics Operation - 4), page(B189), cat(_General, Technical)
Freight Handling, IQ/A, tl(0-12), default(IQ - 5), page(B197), cat(_General, Technical, Vehicle)

Hazardous Materials, IQ/A, tl(0-12), default(IQ - 5, SK:Hazardous Materials - 5), page(B199), cat(_General, Technical),
	x(#InputToTag("You must specialize in a type of HazMat:", nameext, , "Hazardous Materials"))

Hazardous Materials (Biological), IQ/A, tl(0-12), default(IQ - 5, SK:Hazardous Materials - 5), page(B199), cat(_General, Technical)
Hazardous Materials (Chemical), IQ/A, tl(0-12), default(IQ - 5, SK:Hazardous Materials - 5), page(B199), cat(_General, Technical)
Hazardous Materials (Radioactive), IQ/A, tl(0-12), default(IQ - 5, SK:Hazardous Materials - 5), page(B199), cat(_General, Technical)
Vacc Suit, DX/A, tl(0-12), default(DX - 5, SK:Battlesuit - 2, SK:Diving Suit - 2, SK:NBC Suit - 2), page(B192), cat(_General, Technical)

<Vehicle>
Airshipman, IQ/E, tl(0-12), default(IQ - 4), page(B185), cat(_General, Vehicle)
Boating (Large Powerboat), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Boating (Motorboat)" - 2, "SK:Boating (Sailboat)" - 4, "SK:Boating (Unpowered)" - 4, SK:Seamanship - 4), page(B180), cat(_General, Vehicle)
Boating (Motorboat), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Boating (Large Powerboat)" - 2, "SK:Boating (Sailboat)" - 3, "SK:Boating (Unpowered)" - 3), page(B180), cat(_General, Vehicle)
Boating (Sailboat), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Boating (Large Powerboat)" - 4, "SK:Boating (Motorboat)" - 3, "SK:Boating (Unpowered)" - 3), page(B180), cat(_General, Vehicle)
Boating (Unpowered), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Boating (Large Powerboat)" - 4, "SK:Boating (Motorboat)" - 3, "SK:Boating (Sailboat)" - 3), page(B180), cat(_General, Vehicle)
Driving (Automobile), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Driving (Heavy Wheeled)" - 2, SK:Driving - 4), page(B188), cat(_General, Vehicle)
Driving (Construction Equipment), DX/A, tl(0-12), default(DX - 5, IQ - 5, SK:Driving - 5), page(B188), cat(_General, Vehicle)
Driving (Halftrack), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Driving (Tracked)" - 2, SK:Driving - 4), page(B188), cat(_General, Vehicle)
Driving (Heavy Wheeled), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Driving (Automobile)" - 2, SK:Driving - 4), page(B188), cat(_General, Vehicle)
Driving (Hovercraft), DX/A, tl(0-12), default(DX - 5, IQ - 5, SK:Driving - 5), page(B188), cat(_General, Vehicle)
Driving (Locomotive), DX/A, tl(0-12), default(DX - 5, IQ - 5, SK:Driving - 5), page(B188), cat(_General, Vehicle)
Driving (Mecha), DX/A, tl(0-12), default(DX - 5, IQ - 5, SK:Battlesuit - 3, SK:Driving - 5), page(B188), cat(_General, Vehicle)
Driving (Motorcycle), DX/A, tl(0-12), default(DX - 5, IQ - 5, SK:Bicycling - 4), page(B188), cat(_General, Vehicle)
Driving (Tracked), DX/A, tl(0-12), default(DX - 5, IQ - 5, "SK:Driving (Halftrack)" - 2, SK:Driving - 4), page(B188), cat(_General, Vehicle)
Piloting (Aerospace), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (High-Performance Airplane)" - 2, SK:Piloting - 4), page(B214), cat(_General, Vehicle)
Piloting (Autogyro), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Helicopter)" - 3, "SK:Piloting (Heavy Airplane)" - 4, "SK:Piloting (High-Performance Airplane)" - 4, "SK:Piloting (Light Airplane)" - 4, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Piloting (Contragravity), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Vertol)" - 3, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Piloting (Flight Pack), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Vertol)" - 4, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Piloting (Glider), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Light Airplane)" - 2, "SK:Piloting (Ultralight)" - 2, SK:Piloting - 4), page(B214), cat(_General, Vehicle)
Piloting (Heavy Airplane), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Aerospace)" - 4, "SK:Piloting (High-Performance Airplane)" - 2, "SK:Piloting (Light Airplane)" - 2, SK:Piloting - 4), page(B214), cat(_General, Vehicle)
Piloting (Helicopter), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Autogyro)" - 2, "SK:Piloting (Vertol)" - 4, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Piloting (High-Performance Airplane), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Aerospace)" - 2, "SK:Piloting (Heavy Airplane)" - 2, "SK:Piloting (Light Airplane)" - 2, SK:Piloting - 4), page(B214), cat(_General, Vehicle)
Piloting (High-Performance Spacecraft), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Aerospace)" - 4, "SK:Piloting (Low-Performance Spacecraft)" - 2), page(B214), cat(_General, Vehicle)
Piloting (Light Airplane), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Glider)" - 2, "SK:Piloting (Heavy Airplane)" - 2, "SK:Piloting (High-Performance Airplane)" - 2, "SK:Piloting (Ultralight)" - 2, SK:Piloting - 4), page(B214), cat(_General, Vehicle)
Piloting (Lighter-Than-Air), DX/A, tl(0-12), default(IQ - 6, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Piloting (Lightsail), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Low-Performance Spacecraft)" - 4), page(B214), cat(_General, Vehicle)
Piloting (Low-G Wings), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Glider)" - 4), page(B214), cat(_General, Vehicle)
Piloting (Low-Performance Spacecraft), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Aerospace)" - 4, "SK:Piloting (High-Performance Spacecraft)" - 2), page(B214), cat(_General, Vehicle)
Piloting (Ultralight), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Glider)" - 2, "SK:Piloting (Light Airplane)" - 2, "SK:Piloting (Heavy Airplane)" - 4, "SK:Piloting (High-Performance Airplane)" - 4, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Piloting (Vertol), DX/A, tl(0-12), default(IQ - 6, "SK:Piloting (Contragravity)" - 3, "SK:Piloting (Helicopter)" - 4, SK:Piloting - 5), page(B214), cat(_General, Vehicle)
Seamanship, IQ/E, tl(0-12), default(IQ - 4), page(B185), cat(_General, Vehicle)
Shiphandling (Airship), IQ/H, tl(0-12), default(IQ - 6, SK:Airshipman - 5, "SK:Piloting (Lighter-Than-Air)" - 5), needs(SK:Airshipman, SK:Leadership, "SK:Navigation (Air)"), page(B220), cat(_General, Vehicle)
Shiphandling (Ship), IQ/H, tl(0-12), default(IQ - 6, SK:Seamanship - 5, "SK:Boating (Large Powerboat)" - 5, "SK:Boating (Sailboat)" - 5), needs(SK:Seamanship, SK:Leadership, "SK:Navigation (Sea)"), page(B220), cat(_General, Vehicle)
Shiphandling (Spaceship), IQ/H, tl(0-12), default(IQ - 6, SK:Spacer - 5, "SK:Piloting (High-Performance Spacecraft)" - 5, "SK:Piloting (Lightsail)" - 5, "SK:Piloting (Low-Performance Spacecraft)" - 5), needs(SK:Spacer, SK:Leadership, "SK:Navigation (Space)"), page(B220), cat(_General, Vehicle)
Shiphandling (Starship), IQ/H, tl(0-12), default(IQ - 6, SK:Spacer - 5, "SK:Piloting (High-Performance Spacecraft)" - 5, "SK:Piloting (Lightsail)" - 5, "SK:Piloting (Low-Performance Spacecraft)" - 5), needs(SK:Spacer, SK:Leadership, "SK:Navigation (Hyperspace)"), page(B220), cat(_General, Vehicle)
Shiphandling (Submarine), IQ/H, tl(0-12), default(IQ - 6, SK:Submariner - 5, "SK:Submarine (Large Sub)" - 5), needs(SK:Submariner, SK:Leadership, "SK:Navigation (Sea)"), page(B220), cat(_General, Vehicle)
Spacer, IQ/E, tl(0-12), default(IQ - 4), page(B185), cat(_General, Vehicle)
Submarine (Free-Flooding Sub), DX/A, tl(0-12), default(IQ - 6, "SK:Submarine (Large Sub)" - 4, "SK:Submarine (Mini-Sub)" - 4), page(B223), cat(_General, Vehicle), needs(SK:Scuba | SK:Diving Suit | AD:Doesn't Breathe)
Submarine (Large Sub), DX/A, tl(0-12), default(IQ - 6, "SK:Submarine (Free-Flooding Sub)" - 4, "SK:Submarine (Mini-Sub)" - 4), page(B223), cat(_General, Vehicle)
Submarine (Mini-Sub), DX/A, tl(0-12), default(IQ - 6, "SK:Submarine (Free-Flooding Sub)" - 4, "SK:Submarine (Large Sub)" - 4), page(B223), cat(_General, Vehicle)
Submariner, IQ/E, tl(0-12), default(IQ - 4), page(B185), cat(_General, Vehicle)

<Techniques, Techniques - Combat>
Arm Lock (Judo), Tech/A, default(SK:Judo::level), needs(SK:Judo), upto(prereq + 4), page(B230)
Arm Lock (Wrestling), Tech/A, default(SK:Wrestling::level), needs(SK:Wrestling), upto(prereq + 4), page(B230)
Back Kick (Karate), Tech/H, default(SK:Karate::level - 4), needs(SK:Karate), upto(prereq), page(B230)
Choke Hold (Judo), Tech/H, default(SK:Judo::level - 2), needs(SK:Judo), upto(prereq), page(B230)
Choke Hold (Wrestling), Tech/H, default(SK:Wrestling::level - 3), needs(SK:Wrestling), upto(prereq), page(B230)
Disarming (%Melee Combat SkillList%), Tech/H, default("SK:%Melee Combat SkillList%::level"), needs(SK:%Melee Combat SkillList%), upto(prereq + 5), page(MA70, B230),
	x(#ChoiceList(_
			name(Melee Combat Skill),
			title(Disarming: Choose a combat skill),
			text(Choose a combat skill from the list:),
			picksallowed(1),
			method(bynumber),
				list(_
					#grouplist(GR:Melee Weapon Skill, flags(NoPrefix)), #grouplist(GR:ShieldSkill, flags(NoPrefix)), #grouplist(GR:Unarmed Combat Skill, flags(NoPrefix))_
				)_
			)_
	), noresync(yes)
Dual-Weapon Attack (Beam Weapons (Pistol)), Tech/H, default("SK:Beam Weapons (Pistol)::level" - 4), needs(SK:Beam Weapons (Pistol)), upto(prereq), page(MA83, B230)
Dual-Weapon Attack (Guns (Pistol)), Tech/H, default("SK:Guns (Pistol)::level" - 4, SK:Gun! - 4), needs(SK:Guns (Pistol) | SK:Gun!), upto(Prereq), page(MA83, B230)
Dual-Weapon Attack (Bow), Tech/H, default("SK:Bow::level" - 4), needs(SK:Bow), upto(prereq), page(MA83, B230)
Dual-Weapon Attack (%One Handed Combat SkillList%), Tech/H, default("SK:%One Handed Combat SkillList%::level" - 4), needs(SK:%One Handed Combat SkillList%), upto(prereq), page(MA83, B230),
	x(#ChoiceList(_
			name(One Handed Combat Skill),
			title(Dual-Weapon Attack: Choose a combat skill),
			text(Choose a combat skill from the list:),
			picksallowed(1),
			method(bynumber),
				list(_
					#grouplist(GR:Unarmed Combat Skill, flags(NoPrefix)), #grouplist(GR:One-Handed Melee Weapon Skill, flags(NoPrefix)), #grouplist(GR:ShieldSkill, flags(NoPrefix))_
				)_
			)_
	), noresync(yes)
Elbow Strike (Brawling), Tech/A, default(SK:Brawling::level - 2), needs(SK:Brawling), upto(Prereq), page(B230),
	damage(_
		thr+@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0) _
		), damtype(cr), reach(C), parry(No), skillused(SK:Elbow Strike (Brawling))
Elbow Strike (Karate), Tech/A, default(SK:Karate::level - 2), needs(SK:Karate), upto(Prereq), page(B230),
	damage(_
		thr+@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
		), damtype(cr), reach(C), parry(No), skillused(SK:Elbow Strike (Karate))
Feint (%Melee Combat SkillList%), Tech/H, default("SK:%Melee Combat SkillList%::level"), needs(SK:%Melee Combat SkillList%), upto(prereq + 4), page(MA73, B231),
	x(#ChoiceList(_
			name(Melee Combat Skill),
			title(Feint: Choose a combat skill),
			text(Choose a combat skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:Melee Weapon Skill, flags(NoPrefix)), #grouplist(GR:ShieldSkill, flags(NoPrefix)), #grouplist(GR:Unarmed Combat Skill, flags(NoPrefix))_
			)_
			)_
	), noresync(yes)
Finger Lock (Judo), Tech/H, default("SK:Arm Lock (Judo)::level" - 3), needs(SK:Arm Lock (Judo)), upto(Prereq), page(B231)
Finger Lock (Wrestling), Tech/H, default("SK:Arm Lock (Wrestling)::level" - 3), needs(SK:Arm Lock (Wrestling)), upto(Prereq), page(B231)
Ground Fighting (%Melee Combat SkillList%), Tech/H, default("SK:%Melee Combat SkillList%::level" - 4), needs(SK:%Melee Combat SkillList%), upto(prereq), page(MA73, B231),
	x(#ChoiceList(_
			name(Melee Combat Skill),
			title(Ground Fighting: Choose a combat skill),
			text(Choose a combat skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:Melee Weapon Skill, flags(NoPrefix)), #grouplist(GR:ShieldSkill, flags(NoPrefix)), #grouplist(GR:Unarmed Combat Skill, flags(NoPrefix))_
			)_
			)_
	), noresync(yes)
Horse Archery (Bow), Tech/H, default(SK:Bow::level - 4), needs(SK:Bow, SK:Riding), upto(SK:Bow), page(B231)
Jump Kick (Karate), Tech/H, default(SK:Karate::level - 4), needs(SK:Karate), upto(Prereq), page(B231), mods(Punch/Kick),
	damage(_
		thr+2 + _ 
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Kick) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Kick) else 0)) + _
			@if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0))) _
		), damtype($if("AD:Claws (Sharp Claws)::level" = 1 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 THEN "cut/imp" ELSE "cr")))), reach(C,1-2), parry(No), skillused(SK:Jump Kick (Karate))
Kicking (Brawling), Tech/H, default(SK:Brawling::level - 2), needs(SK:Brawling), upto(Prereq), page(B231),
	gives(=$if(me::level >= ST:DX-2 THEN nobase) to ST:Kick::reach$)
Kicking (Karate), Tech/H, default(SK:Karate::level - 2), needs(SK:Karate), upto(Prereq), page(B231),
	gives(=$if(me::level >= ST:DX-2 THEN nobase) to ST:Kick::reach$)
Knee Strike (Brawling), Tech/A, default(SK:Brawling::level - 1), needs(SK:Brawling), upto(Prereq), page(B232),
	damage(_
		thr+@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Kick) else 0) _
		), damtype(cr), reach(C), parry(No), skillused(SK:Knee Strike (Brawling)), damagebasedon(ST:Kick)
Knee Strike (Karate), Tech/A, default(SK:Karate::level - 1), needs(SK:Karate), upto(Prereq), page(B232),
	damage(_
		thr+@if("SK:Karate::level" = ST:DX then @basethdice(ST:Kick) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Kick) else 0)) _
		), damtype(cr), reach(C), parry(No), skillused(SK:Knee Strike (Karate)), damagebasedon(ST:Kick)
Neck Snap (ST), Tech/H, default(ST:ST - 4), upto(ST:ST + 3), page(B232)
Off-Hand Weapon Training (%Melee Weapon SkillList%), Tech/H, default("SK:%Melee Weapon SkillList%::level" - 4), needs(SK:%Melee Weapon SkillList%), upto(prereq), page(B230),
	x(#ChoiceList(_
			name(Melee Weapon Skill),
			title(Off-Hand Weapon Training: Choose a combat skill),
			text(Choose a combat skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:Melee Weapon Skill, flags(NoPrefix)), #grouplist(GR:ShieldSkill, flags(NoPrefix))_
			)_
			)_
	), noresync(yes)
Retain Weapon (%Ranged Weapon SkillList%), Tech/H, default("ST:DX::score"), needs(ST:DX > 0), upto(ST:DX::score + 5), page(MA78, B232),
	x(_
	#ChoiceList(_
			name(Ranged Weapon Skill),
			title(Retain Weapon: Choose a Ranged Weapon skill),
			text(Choose a Ranged Weapon skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:Ranged Weapon Skill, flags(NoPrefix))_
			)_
		)_
	), noresync(yes)
Retain Weapon (%Melee Weapon SkillList%), Tech/H, default("SK:%Melee Weapon SkillList%::level"), needs(SK:%Melee Weapon SkillList%), upto(prereq + 5), page(MA78, B232),
	x(#ChoiceList(_
			name(Melee Weapon Skill),
			title(Retain Weapon: Choose a combat skill),
			text(Choose a combat skill from the list:),
			picksallowed(1),
			method(bynumber),
			list(_
				#grouplist(GR:Melee Weapon Skill, flags(NoPrefix)), #grouplist(GR:ShieldSkill, flags(NoPrefix))_
			)_
			)_
	), noresync(yes)
Sweep (Polearm), Tech/H, default(SK:Polearm::level - 3), needs(SK:Polearm), upto(Prereq), page(B232)
Sweep (Spear), Tech/H, default(SK:Spear::level - 3), needs(SK:Spear), upto(Prereq), page(B232)
Sweep (Staff), Tech/H, default(SK:Staff::level - 3), needs(SK:Staff), upto(Prereq), page(B232)
Sweeping Kick (Judo), Tech/H, default(SK:Judo::level - 3), needs(SK:Judo), upto(Prereq), page(B232)
Sweeping Kick (Karate), Tech/H, default(SK:Karate::level - 3), needs(SK:Karate), upto(Prereq), page(B232)
Sweeping Kick (Sumo Wrestling), Tech/H, default(SK:Sumo Wrestling::level - 3), needs(SK:Sumo Wrestling), upto(Prereq), page(B232)
Whirlwind Attack (Broadsword), Tech/H, default(SK:Broadsword::level - 5), needs(SK:Broadsword), upto(Prereq), page(B232)
Whirlwind Attack (Staff), Tech/H, default(SK:Staff::level - 5), needs(SK:Staff), upto(Prereq), page(B232)
Whirlwind Attack (Two-Handed Sword), Tech/H, default("SK:Two-Handed Sword::level" - 5), needs(SK:Two-Handed Sword), upto(Prereq + 5), page(B232)

<Techniques, Techniques - Noncombat>
Impersonate (Mimicry (Speech)), Tech/A, default("SK:Mimicry (Speech)::level" - 3), needs(SK:Mimicry (Speech)), upto(Prereq), page(B233)
Lifesaving (Swimming), Tech/H, default(SK:Swimming::level - 5), needs(SK:Swimming), upto(Prereq), page(B233)
Motion-Picture Camera (Photography), Tech/A, default(SK:Photography::level - 3), needs(SK:Photography), upto(Prereq), page(B233)
No-Landing Extraction (%PilotingSkillList%), Tech/H, tl(0-12), needs(SK:%PilotingSkillList%), page(B233), default("SK:%PilotingSkillList%::level" - 4), upto(prereq),
	x(#ChoiceList(_
			name(PilotingSkill),
			title(No-Landing Extraction: Choose a Piloting specialty),
			text(Choose a Piloting specialty from the list provided:),
			picksallowed(1),
			method(bynumber),
			list(_
					"Piloting (Aerospace)",
					"Piloting (Autogyro)",
					"Piloting (Contragravity)",
					"Piloting (Flight Pack)",
					"Piloting (Glider)",
					"Piloting (Heavy Airplane)",
					"Piloting (Helicopter)",
					"Piloting (High-Performance Airplane)",
					"Piloting (High-Performance Spacecraft)",
					"Piloting (Light Airplane)",
					"Piloting (Lighter-Than-Air)",
					"Piloting (Lightsail)",
					"Piloting (Low-G Wings)",
					"Piloting (Low-Performance Spacecraft)",
					"Piloting (Ultralight)",
					"Piloting (Vertol)" _
				)_
			)_
		), noresync(yes)

Rope Up (Climbing), Tech/A, default(SK:Climbing::level - 2), needs(SK:Climbing), upto(Prereq), page(B233)
Scaling (Climbing), Tech/H, default(SK:Climbing::level - 3), needs(SK:Climbing), upto(Prereq), page(B233)
Set Trap (Explosives (Demolition)), Tech/H, default("SK:Explosives (Demolition)::level" - 2), needs(SK:Explosives (Demolition)), upto(Prereq), page(B233)
Slip Handcuffs (Escape), Tech/H, default(SK:Escape::level - 5), needs(SK:Escape), upto(Prereq), page(B233)
Work by Touch (Lockpicking), Tech/H, default(SK:Lockpicking::level - 5), needs(SK:Lockpicking), upto(Prereq), page(B233)

<Wildcard!>
Detective!, IQ/WC, page(B175), description(Criminology, Detect Lies, Electronics Operation (Security & Surveillance), Forensics, Interrogation, Law, Observation, Research, Savoir-Faire (Police), Search, Shadowing, Streetwise), cat(_General, Wildcard!)
Gun!, DX/WC, page(B175), description(Beam Weapons, Gunner, Guns, Liquid Projector), cat(_General, Wildcard!)
Science!, IQ/WC, page(B175), description(Astronomy, Bioengineering, Biology, Chemistry, Engineer, Geology, Mathematics, Metallurgy, Meteorology, Naturalist, Paleontology, Physics, Psychology), cat(_General, Wildcard!)
Sword!, DX/WC, page(B175), description(Broadsword, Force Sword, Jitte/Sai, Knife, Main-Gauche, Rapier, Saber, Shortsword, Smallsword, Two-Handed Sword, Fast-Draw (appropriate)), parryat(@int(%level/2)+3), cat(_General, Wildcard!)
*	owns(yes), locks(yes), hides(yes),
*	adds(SK:Broadsword == 0pts, SK:Force Sword == 0pts, SK:Jitte/Sai == 0pts, SK:Knife == 0pts, SK:Main-Gauche == 0pts, SK:Rapier == 0pts, SK:Saber == 0pts, SK:Shortsword == 0pts, SK:Smallsword == 0pts, SK:Two-Handed Sword == 0pts, SK:Fast-Draw (Sword) == 0pts)
*	replacetags(in SK:Broadsword with "default(SK:Sword!)")
<Ritual Magic Paths>
Path of Air, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Air (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Body Control, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Body Control (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Communication & Empathy, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Communication & Empathy (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Earth, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Earth (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Enchantment, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Enchantment (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Fire, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Fire (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Gate, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Gate (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Healing, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Healing (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Knowledge, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Knowledge (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Light & Darkness, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Light & Darkness (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Meta-Spells, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Meta-Spells (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Mind Control, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Mind Control (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Movement, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Movement (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Necromancy, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Necromancy (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Protection & Warning, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Protection & Warning (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)
Path of Water, type(IQ/VH), default(SK:[skill] - 6), needs(SK:[skill]), page(B242),
	x(#InputReplace("Please enter an appropriate Ritual Magic core skill:", "[skill]", "Ritual Magic", "Ritual Magic Path") )
Path of Water (%skillaliaslist%), type(IQ/VH), default(SK:%skilllist% - 6), needs(SK:%skilllist%), page(B242),
	x(_
		#ChoiceList(_
				name(skill),
				title(Ritual Magic Path),
				text(Please select an appropriate Ritual Magic core skill:),
				picksallowed(1),
				method(bynumber),
				default(13),
				list(_
					"Alchemy",
					"Biology",
					"Body Control",
					"Computer Hacking",
					"Herb Lore",
					"Musical Influence",
					"Physics",
					"Blind Fighting",
					"Invisibility Art",
					"Zen Archery",
					"Pressure Secrets",
					"Weird Science",
					"Ritual Magic",
					"Thaumatology" _
					),
				aliaslist(_
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						""_
					)_
				)_
	)

<Wildcard! - Magic>
Magic!, type(IQ/WC), page(M202)

Air College!, type(IQ/WC), page(M202)
Body Control College!, type(IQ/WC), page(M202)
Communication & Empathy College!, type(IQ/WC), page(M202)
Earth College!, type(IQ/WC), page(M202)
Enchantment College!, type(IQ/WC), page(M202)
Fire College!, type(IQ/WC), page(M202)
Gate College!, type(IQ/WC), page(M202)
Healing College!, type(IQ/WC), page(M202)
Knowledge College!, type(IQ/WC), page(M202)
Light & Darkness College!, type(IQ/WC), page(M202)
Meta-Spells College!, type(IQ/WC), page(M202)
Mind Control College!, type(IQ/WC), page(M202)
Movement College!, type(IQ/WC), page(M202)
Necromancy College!, type(IQ/WC), page(M202)
Protection & Warning College!, type(IQ/WC), page(M202)
Water College!, type(IQ/WC), page(M202)

************************************************************************************************************************
[SPELLS]
************************************************************************************************************************
<%NewSpellList%>
_New Spell, type(%typelist%), mods(Spells), cat(%newspelllist%), shortcat(%newspellaliaslist%), class([class]), time([time]), duration([duration]), castingcost([castingcost]),
	x(#InputToTagReplace("Please enter the name of this spell:", name, , "New Spell"),
	#InputReplace("Please enter the Class of this spell; i.e. Regular, Area, Missile, Blocking, Information, Enchantment, or Special. If Resisted use R- followed by the attribute or skill that resists the spell; e.g. R-Will:", "[class]", , "New Spell"),
	#InputReplace("Please enter the Casting Time of this spell:", "[time]", "1 sec.", "New Spell"),
	#InputReplace("Please enter the Duration of this spell:", "[duration]", , "New Spell"),
	#InputReplace("Please enter the Casting Cost of this spell:", "[castingcost]", , "New Spell"),
	#ChoiceList(_
			name(type),
			title(New Spell: Choose a Skill Type),
			text("Choose the type of spell from the list below:"),
			picksallowed(1),
			method(bynumber),
			list(_
				"IQ/H",
				"IQ/VH" _
			)_
			),
	#ChoiceList(_
			name(newspell),
			title(New Spell: Choose a College),
			text(Choose the College (or Colleges) of the new spell from the list below:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"Air",
				"Animal",
				"Body Control",
				"Communication & Empathy",
				"Earth",
				"Enchantment",
				"Fire",
				"Food",
				"Gate",
				"Healing",
				"Illusion & Creation",
				"Knowledge",
				"Light & Darkness",
				"Making & Breaking",
				"Meta-Spells",
				"Mind Control",
				"Movement",
				"Necromancy",
				"Plant",
				"Protection & Warning",
				"Sound",
				"Technological",
				"Water",
				"Weather" _
				),
			aliaslist(_
				"Ai",
				"An",
				"BC",
				"CE",
				"Ea",
				"En",
				"Fi",
				"Fo",
				"Ga",
				"He",
				"IC",
				"Kn",
				"LD",
				"MB",
				"MS",
				"MC",
				"Mo",
				"Ne",
				"Pl",
				"PW",
				"So",
				"Te",
				"Wa",
				"We" _
				)_
			),
		#edit _
	), noresync(yes)
_New Parent Item, type(N/A), isparent(yes), upto(0 LimitingTotal), basepoints(0), points(0), initmods(Parent, -1),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, , "New Parent Item"))

_New Spell (Ritual), type(Tech/H), CountAsNeed(Ritual), cat(~Ritual, ~Ritual - %newspelllist%), mods(Spells), shortcat(Ri, %newspellaliaslist%), needs("SK:Path of %newspelllist%" | "SK:%newspelllist% College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of %newspelllist%::level" - [default], "SK:%newspelllist%!::level" - [default], "SK:Magic!::Level" - [default]), upto(prereq), prereqcount([default]), class([class]), time([time]), duration([duration]), castingcost([castingcost]),
   x(#InputToTagReplace("Please enter the name of this spell:", name, , "New Spell"),
	#InputReplace("Please enter the Prerequisite Count of this Spell. _
					DO NOT include a negative (or positive) sign; e.g. don't use -4 or +0", "[default]", 0, "New Spell"),
	#InputReplace("Please enter the Class of this spell; i.e. Regular, Area, Missile, Blocking, Information, Enchantment, or Special. If Resisted use R- followed by the attribute or skill that resists the spell; e.g. R-Will:", "[class]", , "New Spell"),
	#InputReplace("Please enter the Casting Time of this spell:", "[time]", "1 sec.", "New Spell"),
	#InputReplace("Please enter the Duration of this spell:", "[duration]", , "New Spell"),
	#InputReplace("Please enter the Casting Cost of this spell:", "[castingcost]", , "New Spell"),
	#ChoiceList(_
				name(newspell),
				title("Choose a College"),
				text(Choose the College of the new spell from the list below:),
				picksallowed(1),
				method(bynumber),
				list(_
					"Air",
					"Animal",
					"Body Control",
					"Communication & Empathy",
					"Earth",
					"Enchantment",
					"Fire",
					"Food",
					"Gate",
					"Healing",
					"Illusion & Creation",
					"Knowledge",
					"Light & Darkness",
					"Making & Breaking",
					"Meta-Spells",
					"Mind Control",
					"Movement",
					"Necromancy",
					"Plant",
					"Protection & Warning",
					"Sound",
					"Technological",
					"Water",
					"Weather" _
				),
			aliaslist(_
				"Ai",
				"An",
				"BC",
				"CE",
				"Ea",
				"En",
				"Fi",
				"Fo",
				"Ga",
				"He",
				"IC",
				"Kn",
				"LD",
				"MB",
				"MS",
				"MC",
				"Mo",
				"Ne",
				"Pl",
				"PW",
				"So",
				"Te",
				"Wa",
				"We" _
				)_
			),
		#edit _
	), noresync(yes)

_New Spell (Clerical), type(%typelist%), CountAsNeed(Clerical), mods(Spells), cat(~Clerical, %newspelllist%), shortcat(CL, %newspellaliaslist%), class([class]), time([time]), duration([duration]), castingcost([castingcost]),
	x(#InputToTagReplace("Please enter the name of this spell:", name, , "New Spell"),
	#InputReplace("Please enter the Class of this spell; i.e. Regular, Area, Missile, Blocking, Information, Enchantment, or Special. If Resisted use R- followed by the attribute or skill that resists the spell; e.g. R-Will:", "[class]", , "New Spell"),
	#InputReplace("Please enter the Casting Time of this spell:", "[time]", "1 sec.", "New Spell"),
	#InputReplace("Please enter the Duration of this spell:", "[duration]", , "New Spell"),
	#InputReplace("Please enter the Casting Cost of this spell:", "[castingcost]", , "New Spell"),
	#ChoiceList(_
			name(type),
			title(New Spell: Choose a Skill Type),
			text("Choose the type of spell from the list below:"),
			picksallowed(1),
			method(bynumber),
			list(_
				"IQ/H",
				"IQ/VH" _
			)_
			),
	#ChoiceList(_
			name(newspell),
			title(New Spell: Choose a College),
			text(Choose the College (or Colleges) of the new spell from the list below:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"~Clerical - Air",
				"~Clerical - Animal",
				"~Clerical - Body Control",
				"~Clerical - Communication & Empathy",
				"~Clerical - Earth",
				"~Clerical - Enchantment",
				"~Clerical - Fire",
				"~Clerical - Food",
				"~Clerical - Gate",
				"~Clerical - Healing",
				"~Clerical - Illusion & Creation",
				"~Clerical - Knowledge",
				"~Clerical - Light & Darkness",
				"~Clerical - Making & Breaking",
				"~Clerical - Meta-Spells",
				"~Clerical - Mind Control",
				"~Clerical - Movement",
				"~Clerical - Necromancy",
				"~Clerical - Plant",
				"~Clerical - Protection & Warning",
				"~Clerical - Sound",
				"~Clerical - Technological",
				"~Clerical - Water",
				"~Clerical - Weather" _
				),
			aliaslist(_
				"Ai",
				"An",
				"BC",
				"CE",
				"Ea",
				"En",
				"Fi",
				"Fo",
				"Ga",
				"He",
				"IC",
				"Kn",
				"LD",
				"MB",
				"MS",
				"MC",
				"Mo",
				"Ne",
				"Pl",
				"PW",
				"So",
				"Te",
				"Wa",
				"We" _
				)_
			),
		#edit _
	), noresync(yes)

<Air:Ai>
Purify Air, type(IQ/H), page(M23, B243), mods(Spells), cat(Air), shortcat(Ai), prereqcount(0), magery(0), class(Area), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 0)
Create Air, type(IQ/H), needs((Purify Air | Seek Air)), page(M23, B243), mods(Spells), cat(Air), shortcat(Ai), prereqcount(1), magery(0), class(Area), time(1 sec.), duration(5 sec.#), castingcost(1), description(Prereq Count: 1 Prerequisites: Purify Air or Seek Air)
Shape Air, type(IQ/H), needs(Create Air), page(M24, B243), mods(Spells), cat(Air), shortcat(Ai), prereqcount(2), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 to 10#), description(Prereq Count: 2 Prerequisites: Create Air)
No-Smell, type(IQ/H), needs(Purify Air), page(M24, B243), mods(Spells), cat(Air), shortcat(Ai), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(1 hr.), castingcost(2/2), description(Prereq Count: 1 Prerequisites: Purify Air)
Predict Weather, type(IQ/H), needs(4 Air), page(M193, B243), mods(Spells), cat(Weather, Air), shortcat(We, Ai), prereqcount(4), magery(0), class(Information), time(5 sec.#), duration(Instant), castingcost(Varies), description(Prereq Count: 4 Prerequisites: 4 Air)
Breathe Water, type(IQ/H), needs(Create Air, Destroy Water), page(M189, B243), mods(Spells), cat(Water, Air), shortcat(Wa, Ai), prereqcount(6), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(4/2), description(Prereq Count: 6 Prerequisites: Create Air, Destroy Water)
Walk on Air, type(IQ/H), needs(Shape Air), page(M25, B243), mods(Spells), cat(Air), shortcat(Ai), prereqcount(3), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(3/2), description(Prereq Count: 3 Prerequisites: Shape Air)
Earth to Air, type(IQ/H), needs(Create Air, Shape Earth), page(M25, B243), mods(Spells), cat(Air, Earth), shortcat(Ai, Ea), prereqcount(4), magery(0), class(Regular), time(2 sec.), duration(Perm.), castingcost(5/cu. yd.#), description(Prereq Count: 4 Prerequisites: Create Air, Shape Earth)
Stench, type(IQ/H), needs(Purify Air), page(M24, B244), mods(Spells), cat(Air), shortcat(Ai), prereqcount(1), magery(0), class(Area), time(1 sec.), duration(5 min.), castingcost(1), description(Prereq Count: 1 Prerequisites: Purify Air)
Lightning, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Weather = 1 | ST:Magery Air = 1), 6 Air), page(M196, B244), mods(Spells), cat(Weather, Air), shortcat(We, Ai), prereqcount(6), magery(1), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(1 to Magery#), damage(~1d-1), damtype(burn), skillused(ST:DX-4, SK:Innate Attack (Beam), SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2), notes(~1-3en), acc(3), rangehalfdam(50), rangemax(100), parry(No), description(Prereq Count: 6 Prerequisites: Magery 1, 6 Air)

<Body Control:BC>
Itch, type(IQ/H), page(M35, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(0), magery(0), class(Regular/R-HT), time(1 sec.), duration(Scratch#), castingcost(2), description(Prereq Count: 0)
Spasm, type(IQ/H), needs(Itch), page(M35, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(1), magery(0), class(Regular/R-HT), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1 Prerequisites: Itch)
Pain, type(IQ/H), needs(Spasm), page(M36, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(2), magery(0), class(Regular/R-HT), time(2 sec.), duration(1 sec.), castingcost(2), description(Prereq Count: 2 Prerequisites: Spasm)
Clumsiness, type(IQ/H), needs(Spasm), page(M36, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(2), magery(0), class(Regular/R-HT), time(1 sec.), duration(1 min.), castingcost(1 to 5/H), description(Prereq Count: 2 Prerequisites: Spasm)
Hinder, type(IQ/H), needs((Haste | Clumsiness)), page(M36, B244), mods(Spells), cat(Body Control, Movement), shortcat(BC, Mo), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 to 4/S), description(Prereq Count: 1 Prerequisites: Haste or Clumsiness)
Rooted Feet, type(IQ/H), needs(Hinder), page(M36, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(2), magery(0), class(Regular/R-ST), time(1 sec.), duration(1 min.#), castingcost(3), description(Prereq Count: 2 Prerequisites: Hinder)
Paralyze Limb, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Body Control = 1), 5 Body Control, Clumsiness), page(M40, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(5), magery(1), class(Melee/R-HT), time(1 sec.), duration(1 min.), castingcost(3), description(Prereq Count: 5 Prerequisites: Magery 1, 5 Body Control, Clumsiness)
Wither Limb, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Body Control = 2), Paralyze Limb), page(M40, B244), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(6), magery(2), class(Melee/R-HT), time(1 sec.), duration(Perm.), castingcost(5), description(Prereq Count: 6 Prerequisites: Magery 2, Paralyze Limb)
Deathtouch, type(IQ/H), needs(Wither Limb), page(M41, B245), mods(Spells), cat(Body Control), shortcat(BC), prereqcount(7), magery(2), class(Melee), time(1 sec.), duration(Instant), castingcost(1 to 3), damage(~1d), damtype(spcl), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate), reach(C), notes(~1-3en), parry(No), description(Prereq Count: 7 Prerequisites: Wither Limb)

<Communication & Empathy:CE>
Sense Foes, type(IQ/H), page(M44, B245), mods(Spells), cat(Communication & Empathy), shortcat(CE), prereqcount(0), magery(0), class(Inform./Area), time(1 sec.), duration(Instant), castingcost(2#), description(Prereq Count: 0)
Sense Emotion, type(IQ/H), needs(Sense Foes), page(M45, B245), mods(Spells), cat(Communication & Empathy), shortcat(CE), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1 Prerequisites: Sense Foes)
Truthsayer, type(IQ/H), needs(Sense Emotion), page(M45, B245), mods(Spells), cat(Communication & Empathy), shortcat(CE), prereqcount(2), magery(0), class(Inform./R-Will), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 2 Prerequisites: Sense Emotion)
Mind-Reading, type(IQ/H), needs((Truthsayer | Borrow Language)), page(M46, B245), mods(Spells), cat(Communication & Empathy), shortcat(CE), prereqcount(3), magery(0), class(Regular/R-Will), time(10 sec.), duration(1 min.), castingcost(4/2), description(Prereq Count: 3 Prerequisites: Truthsayer or Borrow Language)
Hide Thoughts, type(IQ/H), needs((Truthsayer | Hide Emotion)), page(M46, B245), mods(Spells), cat(Communication & Empathy), shortcat(CE), prereqcount(3), magery(0), class(Regular), time(1 sec.), duration(10 min.), castingcost(3/1), description(Prereq Count: 3 Prerequisites: Truthsayer or Hide Emotion)

<Earth:Ea>
Seek Earth, type(IQ/H), page(M50, B245), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(0), magery(0), class(Information), time(10 sec.), duration(Instant), castingcost(3), description(Prereq Count: 0)
Shape Earth, type(IQ/H), needs(Seek Earth), page(M50, B245), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1/cu. yd./h), description(Prereq Count: 1 Prerequisites: Seek Earth)
Earth to Stone, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Earth = 1), Shape Earth), page(M51, B245), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(2), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(3/cu. yd.#), description(Prereq Count: 2 Prerequisites: Magery 1, Shape Earth)
Create Earth, type(IQ/H), needs(Earth to Stone), page(M51, B246), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(3), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(2/cu. yd.), description(Prereq Count: 3 Prerequisites: Earth to Stone)
Flesh to Stone, type(IQ/H), needs(Earth to Stone), page(M51, B246), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(3), magery(1), class(Regular/R-HT), time(2 sec.), duration(Instant), castingcost(10#), description(Prereq Count: 3 Prerequisites: Earth to Stone)
Stone to Earth, type(IQ/H), needs((Earth to Stone | 4 Earth)), page(M51, B246), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(3), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(6/cu. yd.), description(Prereq Count: 3 Prerequisites: Earth to Stone or 4 Earth)
Stone to Flesh, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Earth = 2), Flesh to Stone, Stone to Earth), page(M53, B246), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(5), magery(2), class(Regular), time(5 sec.), duration(Instant), castingcost(10), description(Prereq Count: 5 Prerequisites: Magery 2, Flesh to Stone, Stone to Earth)
Entombment, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Earth = 2), 5 Earth), page(M53, B246), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(5), magery(2), class(Regular/R-HT), time(3 sec.), duration(Perm.), castingcost(10#), description(Prereq Count: 5 Prerequisites: Magery 2, 5 Earth)

<Enchantment:En>
Accuracy, type(IQ/H), needs(Enchant, 5 Air), page(M65, B480), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(15), magery(2), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 15 Prerequisites: Enchant, 5 Air)
Deflect, type(IQ/H), needs(Enchant), page(M67, B480), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(11), magery(2), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 11 Prerequisites: Enchant)
Enchant, type(IQ/VH), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Enchantment = 2), 10 Colleges), page(M56, B480), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(10), magery(2), class(Enchantment), time(Varies), duration(Perm.), castingcost(Varies ), description(Prereq Count: 10 Prerequisites: Magery 2, 1 Spell from 10 Colleges)
Fortify, type(IQ/H), needs(Enchant), page(M66, B480), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(11), magery(2), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 11 Prerequisites: Enchant)
Power, type(IQ/H), needs(Enchant, Recover Energy), page(M57, B480), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(12), magery(2), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 12 Prerequisites: Enchant, Recover Energy)
Puissance, type(IQ/H), needs(Enchant, 5 Earth), page(M65, B481), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(15), magery(2), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 15 Prerequisites: Enchant, 5 Earth)
Staff, type(IQ/H), needs(Enchant), page(M70, B481), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(11), magery(2), class(Enchantment), time(-), duration(Perm.), castingcost(30), description(Prereq Count: 11 Prerequisites: Enchant)

<Fire:Fi>
Ignite Fire, type(IQ/H), page(M72, B246), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(0), magery(0), class(Regular), time(1 sec.), duration(1 sec.), castingcost(1 to 4/S), description(Prereq Count: 0)
Create Fire, type(IQ/H), needs((Ignite Fire | Seek Fire)), page(M72, B246), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(1), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H), description(Prereq Count: 1 Prerequisites: Ignite Fire or Seek Fire)
Shape Fire, type(IQ/H), needs(Ignite Fire), page(M72, B246), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(1), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H), description(Prereq Count: 1 Prerequisites: Ignite Fire)
Deflect Energy, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Fire = 1), Shape Fire), page(M73, B246), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(2), magery(1), class(Blocking), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 2 Prerequisites: Magery 1, Shape Fire)
Extinguish Fire, type(IQ/H), needs(Ignite Fire), page(M72, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(1), magery(0), class(Area), time(1 sec.), duration(Perm.), castingcost(3), description(Prereq Count: 1 Prerequisites: Ignite Fire)
Heat, type(IQ/H), needs(Create Fire, Shape Fire), page(M74, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(3), magery(0), class(Regular), time(1 min.), duration(1 min.), castingcost(Varies), description(Prereq Count: 3 Prerequisites: Create Fire, Shape Fire)
Cold, type(IQ/H), needs(Heat), page(M74, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(4), magery(0), class(Regular), time(1 min.), duration(1 min.), castingcost(Varies), description(Prereq Count: 4 Prerequisites: Heat)
Resist Cold, type(IQ/H), needs(Heat), page(M74, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(4), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(2/1), description(Prereq Count: 4 Prerequisites: Heat)
Resist Fire, type(IQ/H), needs((Fireproof | Extinguish Fire, Cold)), page(M74, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(3), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(2/1#), description(Prereq Count: 3 Prerequisites: Fireproof or Extinguish Fire, Cold)
Fireball, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Fire = 1), Create Fire, Shape Fire), page(M74, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(3), magery(1), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(1 to Magery#), damage(~1d), damtype(burn), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Projectile)), notes(~1-3en), acc(1), rangehalfdam(25), rangemax(50), parry(No), description(Prereq Count: 3 Prerequisites: Magery 1, Create Fire, Shape Fire)
Explosive Fireball, type(IQ/H), needs(Fireball), page(M75, B247), mods(Spells), cat(Fire), shortcat(Fi), prereqcount(4), magery(1), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(2 to 2xMagery#), damage(~1d), damtype(burn ex), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Projectile)), notes(~2-6en), acc(1), rangehalfdam(25), rangemax(50), parry(No), description(Prereq Count: 4 Prerequisites: Fireball)

<Gate:Ga>
Planar Summons ([Plane]), type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Gate = 1), 10 Colleges), page(M82, B247), mods(Spells), cat(Gate), shortcat(Ga), prereqcount(10), magery(1), class(Special), time(5 min.), duration(1 hr.), description(Prereq Count: 10 Prerequisites: Magery 1, 1 Spell from 10 Colleges), noresync(yes),
		x( #InputReplace("Select the Plane of existence from which you can Summon a being:", "[Plane]", , "Planar Summons") ), castingcost(20#)
Plane Shift ([Plane]), type(IQ/VH), needs(SP:Planar Summons, Planar Summons ([plane])), page(M83, B248), mods(Spells), cat(Gate), shortcat(Ga), prereqcount(11), magery(1), class(Special), time(5 sec.), duration(Instant), castingcost(20), description(Prereq Count: 11 Prerequisites: Planar Summons, Planar Summons ([plane])), noresync(yes),
		x( #InputReplace("Select the Plane of existence which you can Shift to:", "[Plane]",  , "Plane Shift") )

<Healing:He>
Lend Energy, type(IQ/H), needs(((AD:Magery 0 | ST:Magery 0 = 1), AD:Magery = 1 | AD:Empathy)), page(M89, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(0), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(Varies ), description(Prereq Count: 0 Prerequisites: Magery 1 or AD:Empathy)
Lend Vitality, type(IQ/H), needs(Lend Energy), page(M89, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(1), magery(1), class(Regular), time(1 sec.), duration(1 hr.), castingcost(1 per HP loaned), description(Prereq Count: 1 Prerequisites: Lend Energy)
Recover Energy, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1 | ST:Magery Healing = 1), Lend Energy), page(M89, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(1), magery(1), class(Special), time(Special), duration(Special), castingcost(none), description(Prereq Count: 1 Prerequisites: Magery 1, Lend Energy)
Awaken, type(IQ/H), needs(Lend Vitality), page(M90, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(2), magery(1), class(Area), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 2 Prerequisites: Lend Vitality)
Minor Healing, type(IQ/H), needs(Lend Vitality), page(M91, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(2), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 to 3), description(Prereq Count: 2 Prerequisites: Lend Vitality)
Major Healing, type(IQ/VH), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Healing = 1), Minor Healing), page(M91, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(3), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 to 4), description(Prereq Count: 3 Prerequisites: Magery 1, Minor Healing)
Great Healing, type(IQ/VH), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 3, ST:Magery = 3 | ST:Magery Healing = 3), Major Healing), page(M91, B248), mods(Spells), cat(Healing), shortcat(He), prereqcount(4), magery(3), class(Regular), time(1 min.), duration(Perm.), castingcost(20), description(Prereq Count: 4 Prerequisites: Magery 3, Major Healing)

<Knowledge:Kn>
Detect Magic, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1)), page(M101, B249), mods(Spells), cat(Knowledge), shortcat(Kn), prereqcount(0), magery(1), class(Regular), time(5 sec.), duration(Instant), castingcost(2), description(Prereq Count: 0 Prerequisites: Magery 1)
Aura, type(IQ/H), needs(Detect Magic), page(M101, B249), mods(Spells), cat(Knowledge), shortcat(Kn), prereqcount(1), magery(1), class(Information), time(1 sec.), duration(Instant), castingcost(3), description(Prereq Count: 1 Prerequisites: Detect Magic)
Seeker, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1), ST:IQ = 12, 2 GR:Seek Spells), page(M105, B249), mods(Spells), cat(Knowledge), shortcat(Kn), prereqcount(2), magery(1), class(Information), time(1 sec.), duration(Instant), castingcost(3), description(Prereq Count: 2 Prerequisites: Magery 1, IQ = 12, 2 GR:Seek Spells)
Trace, type(IQ/H), needs(Seeker), page(M106, B249), mods(Spells), cat(Knowledge), shortcat(Kn), prereqcount(3), magery(1), class(Regular), time(1 min.), duration(1 hr.), castingcost(3/1), description(Prereq Count: 3 Prerequisites: Seeker)
Identify Spell, type(IQ/H), needs(Detect Magic), page(M102, B249), mods(Spells), cat(Knowledge), shortcat(Kn), prereqcount(1), magery(1), class(Information), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1 Prerequisites: Detect Magic)
Analyze Magic, type(IQ/H), needs(Identify Spell), page(M102, B249), mods(Spells), cat(Knowledge), shortcat(Kn), prereqcount(3), magery(1), class(Inform./R-spell), time(1 hr.), duration(Instant), castingcost(8), description(Prereq Count: 3 Prerequisites: Identify Spell)

<Light & Darkness:LD>
Light, type(IQ/H), page(M110, B249), mods(Spells), cat(Light & Darkness), shortcat(LD), prereqcount(0), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1/1), description(Prereq Count: 0)
Continual Light, type(IQ/H), needs(Light), page(M110, B249), mods(Spells), cat(Light & Darkness), shortcat(LD), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(Varies ), castingcost(Varies ), description(Prereq Count: 1 Prerequisites: Light)
Darkness, type(IQ/H), needs(Continual Light), page(M112, B250), mods(Spells), cat(Light & Darkness), shortcat(LD), prereqcount(2), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(2/1), description(Prereq Count: 2 Prerequisites: Continual Light)
Blur, type(IQ/H), needs((Darkness | Gloom)), page(M113, B250), mods(Spells), cat(Light & Darkness), shortcat(LD), prereqcount(3), magery(0), class(Regular), time(2 sec.), duration(1 min.), castingcost(1 to 5/S), description(Prereq Count: 3 Prerequisites: Darkness or Gloom)

<Meta-Spells:MS>
Counterspell, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Meta-Spells = 1)), page(M121, B250), mods(Spells), cat(Meta-Spells), shortcat(MS), prereqcount(0), magery(1), class(Regular/R-spell), time(5 sec.), duration(Instant), castingcost(Varies ), description(Prereq Count: 0 Prerequisites: Magery 1)
Dispel Magic, type(IQ/H), needs(Counterspell, 12 Spells), page(M126, B250), mods(Spells), cat(Meta-Spells), shortcat(MS), prereqcount(13), magery(1), class(Area/R-spell), time(sec.=cost), duration(Perm.), castingcost(3), description(Prereq Count: 13 Prerequisites: Counterspell, 12 Spells)

<Mind Control:MC>
Foolishness, type(IQ/H), needs(ST:IQ = 12), page(M134, B250), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(0), magery(0), class(Regular/R-Will), time(1 sec.), duration(1 min.), castingcost(1 per IQ-/H), description(Prereq Count: 0 Prerequisites: IQ = 12)
Forgetfulness, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Mind Control = 1), Foolishness), page(M135, B250), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(1), magery(1), class(Regular/R-Will or skill), time(10 sec.), duration(1 hr.), castingcost(3/3), description(Prereq Count: 1 Prerequisites: Magery 1, Foolishness)
Daze, type(IQ/H), needs(Foolishness), page(M134, B250), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(1), magery(0), class(Regular/R-HT), time(2 sec.), duration(1 min.), castingcost(3/2), description(Prereq Count: 1 Prerequisites: Foolishness)
Mass Daze, type(IQ/H), needs(Daze, ST:IQ = 13), page(M137, B251), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(2), magery(0), class(Area/R-HT), time(sec.=cost), duration(Instant), castingcost(2/1#), description(Prereq Count: 2 Prerequisites: Daze, IQ = 13)
Sleep, type(IQ/H), needs(Daze), page(M135, B251), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(2), magery(0), class(Regular/R-HT), time(3 sec.), duration(Instant), castingcost(4), description(Prereq Count: 2 Prerequisites: Daze)
Mass Sleep, type(IQ/H), needs(Sleep, ST:IQ = 13), page(M137, B251), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(3), magery(0), class(Area/R-HT), time(sec.=cost), duration(Instant), castingcost(3#), description(Prereq Count: 3 Prerequisites: Sleep, IQ = 13)
Command, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Mind Control = 2), Forgetfulness), page(M136, B251), mods(Spells), cat(Mind Control), shortcat(MC), prereqcount(2), magery(2), class(Blocking/R-Will), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 2 Prerequisites: Magery 2, Forgetfulness)

<Movement:Mo>
Haste, type(IQ/H), page(M142, B251), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(0), magery(0), class(Regular), time(2 sec.), duration(1 min.), castingcost(2/pt./H), description(Prereq Count: 0)
Great Haste, type(IQ/VH), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1), Haste, ST:IQ = 12), page(M146, B251), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(1), magery(1), class(Regular), time(3 sec.), duration(10 sec.), castingcost(5#), description(Prereq Count: 1 Prerequisites: Magery 1, Haste, IQ = 12)
Apportation, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1)), page(M142, B251), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(0), magery(1), class(Reg./R-Will), time(1 sec.), duration(1 min.), castingcost(Varies ), description(Prereq Count: 0 Prerequisites: Magery 1)
Lockmaster, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Movement = 2), Apportation | Locksmith), page(M144, B251), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(1), magery(2), class(Regular/R-Magelock), time(10 sec.), duration(Perm.), castingcost(3), description(Prereq Count: 1 Prerequisites: Magery 2, Apportation or Locksmith)
Deflect Missile, type(IQ/H), needs(Apportation), page(M143, B251), mods(Spells), cat(Movement, Protection & Warning), shortcat(Mo, PW), prereqcount(1), magery(1), class(Blocking), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 1 Prerequisites: Apportation)

<Necromancy:Ne>
Death Vision, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromancy = 1)), page(M149, B251), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(0), magery(1), class(Regular), time(3 sec.), duration(1 sec.), castingcost(2), description(Prereq Count: 0 Prerequisites: Magery 1)
Sense Spirit, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromancy = 1), Sense Life | Death Vision), page(M149, B252), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(1), magery(1), class(Inform./Area), time(1 sec.), duration(Instant), castingcost(1#), description(Prereq Count: 1 Prerequisites: Magery 1, Sense Life or Death Vision)
Summon Spirit, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Necromancy = 2), Death Vision), page(M150, B252), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(1), magery(2), class(Inform./R-Will), time(5 min.), duration(1 min.), castingcost(20/10#), description(Prereq Count: 1 Prerequisites: Magery 2, Death Vision)
Zombie, type(IQ/H), needs(Summon Spirit, Lend Vitality), page(M151, B252), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(4), magery(2), class(Regular), time(1 min.), duration(Perm.), castingcost(8), description(Prereq Count: 4 Prerequisites: Summon Spirit, Lend Vitality)
Turn Zombie, type(IQ/H), needs((Zombie | GM's option "holy" status)), page(M152, B252), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(5), magery(2), class(Area), time(4 sec.), duration(1 day), castingcost(2), description(Prereq Count: 5 Prerequisites: Zombie or GM's option "holy" status)
Summon Demon, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromancy = 1), 10 Colleges), page(M155, B252), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(10), magery(1), class(Special), time(5 min.), duration(1 hr.#), castingcost(20#), description(Prereq Count: 10 Prerequisites: Magery 1, 1 Spell from 10 Colleges)
Banish, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromancy = 1), 10 Colleges), page(M156, B252), mods(Spells), cat(Necromancy), shortcat(Ne), prereqcount(10), magery(1), class(Spec./R-Will), time(5 sec.), duration(Instant), castingcost(Varies), description(Prereq Count: 10 Prerequisites: Magery 1, 1 Spell from 10 Colleges)

<Protection & Warning:PW>
Shield, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 2, ST:Magery = 2 | ST:Magery Protection & Warning = 2)), page(M167, B252), mods(Spells), cat(Protection & Warning), shortcat(PW), prereqcount(0), magery(2), class(Regular), time(1 sec.), duration(1 min.), castingcost(Varies ), description(Prereq Count: 0 Prerequisites: Magery 2)
Armor, type(IQ/H), needs(Shield), page(M167, B253), mods(Spells), cat(Protection & Warning), shortcat(PW), prereqcount(1), magery(2), class(Regular), time(1 sec.), duration(1 min.), castingcost(Varies ), description(Prereq Count: 1 Prerequisites: Shield)
Magelock, type(IQ/H), needs((AD:Magery 0 | ST:Magery 0 = 1), (AD:Magery = 1, ST:Magery = 1 | ST:Magery Protection & Warning = 1)), page(M166, B253), mods(Spells), cat(Protection & Warning), shortcat(PW), prereqcount(0), magery(1), class(Regular), time(4 sec.), duration(6 hrs.), castingcost(3/2), description(Prereq Count: 0 Prerequisites: Magery 1)

<Water:Wa>
Seek Water, type(IQ/H), page(M184, B253), mods(Spells), cat(Water), shortcat(Wa), prereqcount(0), magery(0), class(Information), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 0)
Purify Water, type(IQ/H), needs(Seek Water), page(M184, B253), mods(Spells), cat(Water), shortcat(Wa), prereqcount(1), magery(0), class(Special), time(5-10 sec./gal.#), duration(Perm.), castingcost(1/gal.), description(Prereq Count: 1 Prerequisites: Seek Water)
Create Water, type(IQ/H), needs(Purify Water), page(M184, B253), mods(Spells), cat(Water), shortcat(Wa), prereqcount(2), magery(0), class(Regular), time(1 sec.), duration(Perm.), castingcost(2/gal.), description(Prereq Count: 2 Prerequisites: Purify Water)
Destroy Water, type(IQ/H), needs(Create Water), page(M185, B253), mods(Spells), cat(Water), shortcat(Wa), prereqcount(3), magery(0), class(Area), time(1 sec.), duration(Perm.), castingcost(3/S), description(Prereq Count: 3 Prerequisites: Create Water)
Shape Water, type(IQ/H), needs(Create Water), page(M185, B253), mods(Spells), cat(Water), shortcat(Wa), prereqcount(3), magery(0), class(Regular), time(2 sec.), duration(1 min.), castingcost(1/1#), description(Prereq Count: 3 Prerequisites: Create Water)
Fog, type(IQ/H), needs(Shape Water), page(M193, B253), mods(Spells), cat(Weather, Water), shortcat(We, Wa), prereqcount(4), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H), description(Prereq Count: 4 Prerequisites: Shape Water)
Icy Weapon, type(IQ/H), needs(Create Water), page(M185, B253), mods(Spells), cat(Water), shortcat(Wa), prereqcount(3), magery(0), class(Regular), time(3 sec.), duration(1 min.), castingcost(3/1), description(Prereq Count: 3 Prerequisites: Create Water)

<~Ritual>
<~Ritual - Air:Ai>
Purify Air (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level", "SK:Air!::level", "SK:Magic!::Level"), upto(prereq), page(M23, B243), cat(~Ritual, ~Ritual - Air), shortcat(Ri, Ai), prereqcount(0), class(Area), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 0)
Create Air (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level" - 1, "SK:Air!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M23, B243), cat(~Ritual, ~Ritual - Air), shortcat(Ri, Ai), prereqcount(1), class(Area), time(1 sec.), duration(5 sec.#), castingcost(1), description(Prereq Count: 1)
Shape Air (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level" - 2, "SK:Air!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M24, B243), cat(~Ritual, ~Ritual - Air), shortcat(Ri, Ai), prereqcount(2), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 to 10#), description(Prereq Count: 2)
No-Smell (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level" - 1, "SK:Air!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M24, B243), cat(~Ritual, ~Ritual - Air), shortcat(Ri, Ai), prereqcount(1), class(Regular), time(1 sec.), duration(1 hr.), castingcost(2/2), description(Prereq Count: 1)
Predict Weather (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Weather" = 0pts | "SK:Path of Air" = 0pts | "SK:Weather College!" = 3pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Weather::level" - 4, "SK:Path of Air::level" - 4, "SK:Weather!::level" - 4, "SK:Air!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M193, B243), cat(~Ritual, ~Ritual - Weather, ~Ritual - Air), shortcat(Ri, We, Ai), prereqcount(4), class(Information), time(5 sec.#), duration(Instant), castingcost(Varies), description(Prereq Count: 4)
Breathe Water (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Path of Air" = 0pts | "SK:Water College!" = 3pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level" - 6, "SK:Path of Air::level" - 6, "SK:Water!::level" - 6, "SK:Air!::level" - 6, "SK:Magic!::Level" - 6), upto(prereq), page(M189, B243), cat(~Ritual, ~Ritual - Water, ~Ritual - Air), shortcat(Ri, Wa, Ai), prereqcount(6), class(Regular), time(1 sec.), duration(1 min.), castingcost(4/2), description(Prereq Count: 6)
Walk on Air (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level" - 3, "SK:Air!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M25, B243), cat(~Ritual, ~Ritual - Air), shortcat(Ri, Ai), prereqcount(3), class(Regular), time(1 sec.), duration(1 min.), castingcost(3/2), description(Prereq Count: 3)
Earth to Air (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Path of Earth" = 0pts | "SK:Air College!" = 3pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level" - 4, "SK:Path of Earth::level" - 4, "SK:Air!::level" - 4, "SK:Earth!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M25, B243), cat(~Ritual, ~Ritual - Air, ~Ritual - Earth), shortcat(Ri, Ai, Ea), prereqcount(4), class(Regular), time(2 sec.), duration(Perm.), castingcost(5/cu. yd.#), description(Prereq Count: 4)
Stench (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Air" = 0pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Air::level" - 1, "SK:Air!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M24, B244), cat(~Ritual, ~Ritual - Air), shortcat(Ri, Ai), prereqcount(1), class(Area), time(1 sec.), duration(5 min.), castingcost(1), description(Prereq Count: 1)
Lightning (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Weather" = 0pts | "SK:Path of Air" = 0pts | "SK:Weather College!" = 3pts | "SK:Air College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Weather::level" - 6, "SK:Path of Air::level" - 6, "SK:Weather!::level" - 6, "SK:Air!::level" - 6, "SK:Magic!::Level" - 6), upto(prereq), page(M196, B244), cat(~Ritual, ~Ritual - Weather, ~Ritual - Air), shortcat(Ri, We, Ai), prereqcount(6), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(1 to Magery#), damage(~1d-1), damtype(burn), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Beam)), notes(~1-3en), acc(3), rangehalfdam(50), rangemax(100), parry(No), description(Prereq Count: 6)

<~Ritual - Body Control:BC>
Itch (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level", "SK:Body Control!::level", "SK:Magic!::Level"), upto(prereq), page(M35, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(0), class(Regular/R-HT), time(1 sec.), duration(Scratch#), castingcost(2), description(Prereq Count: 0)
Spasm (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 1, "SK:Body Control!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M35, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(1), class(Regular/R-HT), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1)
Pain (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 2, "SK:Body Control!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M36, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(2), class(Regular/R-HT), time(2 sec.), duration(1 sec.), castingcost(2), description(Prereq Count: 2)
Clumsiness (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 2, "SK:Body Control!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M36, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(2), class(Regular/R-HT), time(1 sec.), duration(1 min.), castingcost(1 to 5/H), description(Prereq Count: 2)
Hinder (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Path of Movement" = 0pts | "SK:Body Control College!" = 3pts | "SK:Movement College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 1, "SK:Path of Movement::level" - 1, "SK:Body Control!::level" - 1, "SK:Movement!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M36, B244), cat(~Ritual, ~Ritual - Body Control, ~Ritual - Movement), shortcat(Ri, BC, Mo), prereqcount(1), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 to 4/S), description(Prereq Count: 1)
Rooted Feet (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 2, "SK:Body Control!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M36, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(2), class(Regular/R-ST), time(1 sec.), duration(1 min.#), castingcost(3), description(Prereq Count: 2)
Paralyze Limb (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 5, "SK:Body Control!::level" - 5, "SK:Magic!::Level" - 5), upto(prereq), page(M40, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(5), class(Melee/R-HT), time(1 sec.), duration(1 min.), castingcost(3), description(Prereq Count: 5)
Wither Limb (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 6, "SK:Body Control!::level" - 6, "SK:Magic!::Level" - 6), upto(prereq), page(M40, B244), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(6), class(Melee/R-HT), time(1 sec.), duration(Perm.), castingcost(5), description(Prereq Count: 6)
Deathtouch (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Body Control" = 0pts | "SK:Body Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Body Control::level" - 7, "SK:Body Control!::level" - 7, "SK:Magic!::Level" - 7), upto(prereq), page(M41, B245), cat(~Ritual, ~Ritual - Body Control), shortcat(Ri, BC), prereqcount(7), class(Melee), time(1 sec.), duration(Instant), castingcost(1 to 3), damage(~1d), damtype(spcl), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate), reach(C), notes(~1-3en), parry(No), description(Prereq Count: 7)

<~Ritual - Communication & Empathy:CE>
Sense Foes (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Communication & Empathy" = 0pts | "SK:Communication & Empathy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Communication & Empathy::level", "SK:Communication & Empathy!::level", "SK:Magic!::Level"), upto(prereq), page(M44, B245), cat(~Ritual, ~Ritual - Communication & Empathy), shortcat(Ri, CE), prereqcount(0), class(Inform./Area), time(1 sec.), duration(Instant), castingcost(2#), description(Prereq Count: 0)
Sense Emotion (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Communication & Empathy" = 0pts | "SK:Communication & Empathy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Communication & Empathy::level" - 1, "SK:Communication & Empathy!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M45, B245), cat(~Ritual, ~Ritual - Communication & Empathy), shortcat(Ri, CE), prereqcount(1), class(Regular), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1)
Truthsayer (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Communication & Empathy" = 0pts | "SK:Communication & Empathy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Communication & Empathy::level" - 2, "SK:Communication & Empathy!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M45, B245), cat(~Ritual, ~Ritual - Communication & Empathy), shortcat(Ri, CE), prereqcount(2), class(Inform./R-Will), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 2)
Mind-Reading (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Communication & Empathy" = 0pts | "SK:Communication & Empathy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Communication & Empathy::level" - 3, "SK:Communication & Empathy!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M46, B245), cat(~Ritual, ~Ritual - Communication & Empathy), shortcat(Ri, CE), prereqcount(3), class(Regular/R-Will), time(10 sec.), duration(1 min.), castingcost(4/2), description(Prereq Count: 3)
Hide Thoughts (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Communication & Empathy" = 0pts | "SK:Communication & Empathy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Communication & Empathy::level" - 3, "SK:Communication & Empathy!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M46, B245), cat(~Ritual, ~Ritual - Communication & Empathy), shortcat(Ri, CE), prereqcount(3), class(Regular), time(1 sec.), duration(10 min.), castingcost(3/1), description(Prereq Count: 3)

<~Ritual - Earth:Ea>
Seek Earth (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level", "SK:Earth!::level", "SK:Magic!::Level"), upto(prereq), page(M50, B245), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(0), class(Information), time(10 sec.), duration(Instant), castingcost(3), description(Prereq Count: 0)
Shape Earth (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 1, "SK:Earth!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M50, B245), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(1), class(Regular), time(1 sec.), duration(1 min.), castingcost(1/cu. yd./h), description(Prereq Count: 1)
Earth to Stone (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 2, "SK:Earth!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M51, B245), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(2), class(Regular), time(1 sec.), duration(Perm.), castingcost(3/cu. yd.#), description(Prereq Count: 2)
Create Earth (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 3, "SK:Earth!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M51, B246), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(3), class(Regular), time(1 sec.), duration(Perm.), castingcost(2/cu. yd.), description(Prereq Count: 3)
Flesh to Stone (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 3, "SK:Earth!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M51, B246), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(3), class(Regular/R-HT), time(2 sec.), duration(Instant), castingcost(10#), description(Prereq Count: 3)
Stone to Earth (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 3, "SK:Earth!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M51, B246), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(3), class(Regular), time(1 sec.), duration(Perm.), castingcost(6/cu. yd.), description(Prereq Count: 3)
Stone to Flesh (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 5, "SK:Earth!::level" - 5, "SK:Magic!::Level" - 5), upto(prereq), page(M53, B246), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(5), class(Regular), time(5 sec.), duration(Instant), castingcost(10), description(Prereq Count: 5)
Entombment (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Earth" = 0pts | "SK:Earth College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Earth::level" - 5, "SK:Earth!::level" - 5, "SK:Magic!::Level" - 5), upto(prereq), page(M53, B246), cat(~Ritual, ~Ritual - Earth), shortcat(Ri, Ea), prereqcount(5), class(Regular/R-HT), time(3 sec.), duration(Perm.), castingcost(10#), description(Prereq Count: 5)

<~Ritual - Enchantment:En>
Accuracy (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 15, "SK:Enchantment!::level" - 15, "SK:Magic!::Level" - 15), upto(prereq), page(M65, B480), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(15), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 15)
Deflect (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 11, "SK:Enchantment!::level" - 11, "SK:Magic!::Level" - 11), upto(prereq), page(M67, B480), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(11), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 11)
Enchant (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 10, "SK:Enchantment!::level" - 10, "SK:Magic!::Level" - 10), upto(prereq), page(M56, B480), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(10), class(Enchantment), time(Varies), duration(Perm.), castingcost(Varies ), description(Prereq Count: 10)
Fortify (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 11, "SK:Enchantment!::level" - 11, "SK:Magic!::Level" - 11), upto(prereq), page(M66, B480), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(11), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 11)
Power (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 12, "SK:Enchantment!::level" - 12, "SK:Magic!::Level" - 12), upto(prereq), page(M57, B480), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(12), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 12)
Puissance (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 15, "SK:Enchantment!::level" - 15, "SK:Magic!::Level" - 15), upto(prereq), page(M65, B481), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(15), class(Enchantment), time(-), duration(Perm.), castingcost(Varies), description(Prereq Count: 15)
Staff (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Enchantment" = 0pts | "SK:Enchantment College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Enchantment::level" - 11, "SK:Enchantment!::level" - 11, "SK:Magic!::Level" - 11), upto(prereq), page(M70, B481), cat(~Ritual, ~Ritual - Enchantment), shortcat(Ri, En), prereqcount(11), class(Enchantment), time(-), duration(Perm.), castingcost(30), description(Prereq Count: 11)

<~Ritual - Fire:Fi>
Ignite Fire (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level", "SK:Fire!::level", "SK:Magic!::Level"), upto(prereq), page(M72, B246), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(0), class(Regular), time(1 sec.), duration(1 sec.), castingcost(1 to 4/S), description(Prereq Count: 0)
Create Fire (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 1, "SK:Fire!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M72, B246), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(1), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H), description(Prereq Count: 1)
Shape Fire (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 1, "SK:Fire!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M72, B246), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(1), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H), description(Prereq Count: 1)
Deflect Energy (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 2, "SK:Fire!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M73, B246), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(2), class(Blocking), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 2)
Extinguish Fire (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 1, "SK:Fire!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M72, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(1), class(Area), time(1 sec.), duration(Perm.), castingcost(3), description(Prereq Count: 1)
Heat (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 3, "SK:Fire!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M74, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(3), class(Regular), time(1 min.), duration(1 min.), castingcost(Varies), description(Prereq Count: 3)
Cold (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 4, "SK:Fire!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M74, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(4), class(Regular), time(1 min.), duration(1 min.), castingcost(Varies), description(Prereq Count: 4)
Resist Cold (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 4, "SK:Fire!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M74, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(4), class(Regular), time(1 sec.), duration(1 min.), castingcost(2/1), description(Prereq Count: 4)
Resist Fire (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 3, "SK:Fire!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M74, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(3), class(Regular), time(1 sec.), duration(1 min.), castingcost(2/1#), description(Prereq Count: 3)
Fireball (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 3, "SK:Fire!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M74, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(3), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(1 to Magery#), damage(~1d), damtype(burn), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Projectile)), notes(~1-3en), acc(1), rangehalfdam(25), rangemax(50), parry(No), description(Prereq Count: 3)
Explosive Fireball (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Fire" = 0pts | "SK:Fire College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Fire::level" - 4, "SK:Fire!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M75, B247), cat(~Ritual, ~Ritual - Fire), shortcat(Ri, Fi), prereqcount(4), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(2 to 2xMagery#), damage(~1d), damtype(burn ex), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Projectile)), notes(~2-6en), acc(1), rangehalfdam(25), rangemax(50), parry(No), description(Prereq Count: 4)

<~Ritual - Gate:Ga>
Planar Summons ([Plane]; Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Gate" = 0pts | "SK:Gate College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Gate::level" - 10, "SK:Gate!::level" - 10, "SK:Magic!::Level" - 10), upto(prereq), page(M82, B247), cat(~Ritual, ~Ritual - Gate), shortcat(Ri, Ga), prereqcount(10), class(Special), time(5 min.), duration(1 hr.), description(Prereq Count: 10), noresync(yes),
		x( #InputReplace("Select the Plane of existence from which you can Summon a being:", "[Plane]", , "Planar Summons") ), castingcost(20#)
Plane Shift ([Plane]; Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Gate" = 0pts | "SK:Gate College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Gate::level" - 11, "SK:Gate!::level" - 11, "SK:Magic!::Level" - 11), upto(prereq), page(M83, B248), cat(~Ritual, ~Ritual - Gate), shortcat(Ri, Ga), prereqcount(11), class(Special), time(5 sec.), duration(Instant), castingcost(20), description(Prereq Count: 11), noresync(yes),
		x( #InputReplace("Select the Plane of existence which you can Shift to:", "[Plane]",  , "Plane Shift") )

<~Ritual - Healing:He>
Lend Energy (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level", "SK:Healing!::level", "SK:Magic!::Level"), upto(prereq), page(M89, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(0), class(Regular), time(1 sec.), duration(Perm.), castingcost(Varies ), description(Prereq Count: 0)
Lend Vitality (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level" - 1, "SK:Healing!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M89, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(1), class(Regular), time(1 sec.), duration(1 hr.), castingcost(1 per HP loaned), description(Prereq Count: 1)
Recover Energy (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level" - 1, "SK:Healing!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M89, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(1), class(Special), time(Special), duration(Special), castingcost(none), description(Prereq Count: 1)
Awaken (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level" - 2, "SK:Healing!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M90, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(2), class(Area), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 2)
Minor Healing (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level" - 2, "SK:Healing!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M91, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(2), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 to 3), description(Prereq Count: 2)
Major Healing (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level" - 3, "SK:Healing!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M91, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(3), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 to 4), description(Prereq Count: 3)
Great Healing (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Healing" = 0pts | "SK:Healing College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Healing::level" - 4, "SK:Healing!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M91, B248), cat(~Ritual, ~Ritual - Healing), shortcat(Ri, He), prereqcount(4), class(Regular), time(1 min.), duration(Perm.), castingcost(20), description(Prereq Count: 4)

<~Ritual - Knowledge:Kn>
Detect Magic (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Knowledge" = 0pts | "SK:Knowledge College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Knowledge::level", "SK:Knowledge!::level", "SK:Magic!::Level"), upto(prereq), page(M101, B249), cat(~Ritual, ~Ritual - Knowledge), shortcat(Ri, Kn), prereqcount(0), class(Regular), time(5 sec.), duration(Instant), castingcost(2), description(Prereq Count: 0)
Aura (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Knowledge" = 0pts | "SK:Knowledge College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Knowledge::level" - 1, "SK:Knowledge!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M101, B249), cat(~Ritual, ~Ritual - Knowledge), shortcat(Ri, Kn), prereqcount(1), class(Information), time(1 sec.), duration(Instant), castingcost(3), description(Prereq Count: 1)
Seeker (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Knowledge" = 0pts | "SK:Knowledge College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Knowledge::level" - 2, "SK:Knowledge!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M105, B249), cat(~Ritual, ~Ritual - Knowledge), shortcat(Ri, Kn), prereqcount(2), class(Information), time(1 sec.), duration(Instant), castingcost(3), description(Prereq Count: 2)
Trace (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Knowledge" = 0pts | "SK:Knowledge College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Knowledge::level" - 3, "SK:Knowledge!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M106, B249), cat(~Ritual, ~Ritual - Knowledge), shortcat(Ri, Kn), prereqcount(3), class(Regular), time(1 min.), duration(1 hr.), castingcost(3/1), description(Prereq Count: 3)
Identify Spell (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Knowledge" = 0pts | "SK:Knowledge College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Knowledge::level" - 1, "SK:Knowledge!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M102, B249), cat(~Ritual, ~Ritual - Knowledge), shortcat(Ri, Kn), prereqcount(1), class(Information), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1)
Analyze Magic (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Knowledge" = 0pts | "SK:Knowledge College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Knowledge::level" - 3, "SK:Knowledge!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M102, B249), cat(~Ritual, ~Ritual - Knowledge), shortcat(Ri, Kn), prereqcount(3), class(Inform./R-spell), time(1 hr.), duration(Instant), castingcost(8), description(Prereq Count: 3)

<~Ritual - Light & Darkness:LD>
Light (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Light & Darkness" = 0pts | "SK:Light & Darkness College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Light & Darkness::level", "SK:Light & Darkness!::level", "SK:Magic!::Level"), upto(prereq), page(M110, B249), cat(~Ritual, ~Ritual - Light & Darkness), shortcat(Ri, LD), prereqcount(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1/1), description(Prereq Count: 0)
Continual Light (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Light & Darkness" = 0pts | "SK:Light & Darkness College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Light & Darkness::level" - 1, "SK:Light & Darkness!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M110, B249), cat(~Ritual, ~Ritual - Light & Darkness), shortcat(Ri, LD), prereqcount(1), class(Regular), time(1 sec.), duration(Varies ), castingcost(Varies ), description(Prereq Count: 1)
Darkness (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Light & Darkness" = 0pts | "SK:Light & Darkness College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Light & Darkness::level" - 2, "SK:Light & Darkness!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M112, B250), cat(~Ritual, ~Ritual - Light & Darkness), shortcat(Ri, LD), prereqcount(2), class(Area), time(1 sec.), duration(1 min.), castingcost(2/1), description(Prereq Count: 2)
Blur (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Light & Darkness" = 0pts | "SK:Light & Darkness College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Light & Darkness::level" - 3, "SK:Light & Darkness!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M113, B250), cat(~Ritual, ~Ritual - Light & Darkness), shortcat(Ri, LD), prereqcount(3), class(Regular), time(2 sec.), duration(1 min.), castingcost(1 to 5/S), description(Prereq Count: 3)

<~Ritual - Meta-Spells:MS>
Counterspell (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Meta-Spells" = 0pts | "SK:Meta-Spells College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Meta-Spells::level", "SK:Meta-Spells!::level", "SK:Magic!::Level"), upto(prereq), page(M121, B250), cat(~Ritual, ~Ritual - Meta-Spells), shortcat(Ri, MS), prereqcount(0), class(Regular/R-spell), time(5 sec.), duration(Instant), castingcost(Varies ), description(Prereq Count: 0)
Dispel Magic (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Meta-Spells" = 0pts | "SK:Meta-Spells College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Meta-Spells::level" - 13, "SK:Meta-Spells!::level" - 13, "SK:Magic!::Level" - 13), upto(prereq), page(M126, B250), cat(~Ritual, ~Ritual - Meta-Spells), shortcat(Ri, MS), prereqcount(13), class(Area/R-spell), time(sec.=cost), duration(Perm.), castingcost(3), description(Prereq Count: 13)

<~Ritual - Mind Control:MC>
Foolishness (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level", "SK:Mind Control!::level", "SK:Magic!::Level"), upto(prereq), page(M134, B250), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(0), class(Regular/R-Will), time(1 sec.), duration(1 min.), castingcost(1 per IQ-/H), description(Prereq Count: 0)
Forgetfulness (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level" - 1, "SK:Mind Control!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M135, B250), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(1), class(Regular/R-Will or skill), time(10 sec.), duration(1 hr.), castingcost(3/3), description(Prereq Count: 1)
Daze (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level" - 1, "SK:Mind Control!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M134, B250), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(1), class(Regular/R-HT), time(2 sec.), duration(1 min.), castingcost(3/2), description(Prereq Count: 1)
Mass Daze (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level" - 2, "SK:Mind Control!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M137, B251), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(2), class(Area/R-HT), time(sec.=cost), duration(Instant), castingcost(2/1#), description(Prereq Count: 2)
Sleep (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level" - 2, "SK:Mind Control!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M135, B251), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(2), class(Regular/R-HT), time(3 sec.), duration(Instant), castingcost(4), description(Prereq Count: 2)
Mass Sleep (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level" - 3, "SK:Mind Control!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M137, B251), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(3), class(Area/R-HT), time(sec.=cost), duration(Instant), castingcost(3#), description(Prereq Count: 3)
Command (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Mind Control" = 0pts | "SK:Mind Control College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Mind Control::level" - 2, "SK:Mind Control!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M136, B251), cat(~Ritual, ~Ritual - Mind Control), shortcat(Ri, MC), prereqcount(2), class(Blocking/R-Will), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 2)

<~Ritual - Movement:Mo>
Haste (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Movement" = 0pts | "SK:Movement College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Movement::level", "SK:Movement!::level", "SK:Magic!::Level"), upto(prereq), page(M142, B251), cat(~Ritual, ~Ritual - Movement), shortcat(Ri, Mo), prereqcount(0), class(Regular), time(2 sec.), duration(1 min.), castingcost(2/pt./H), description(Prereq Count: 0)
Great Haste (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Movement" = 0pts | "SK:Movement College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Movement::level" - 1, "SK:Movement!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M146, B251), cat(~Ritual, ~Ritual - Movement), shortcat(Ri, Mo), prereqcount(1), class(Regular), time(3 sec.), duration(10 sec.), castingcost(5#), description(Prereq Count: 1)
Apportation (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Movement" = 0pts | "SK:Movement College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Movement::level", "SK:Movement!::level", "SK:Magic!::Level"), upto(prereq), page(M142, B251), cat(~Ritual, ~Ritual - Movement), shortcat(Ri, Mo), prereqcount(0), class(Reg./R-Will), time(1 sec.), duration(1 min.), castingcost(Varies ), description(Prereq Count: 0)
Lockmaster (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Movement" = 0pts | "SK:Movement College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Movement::level" - 1, "SK:Movement!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M144, B251), cat(~Ritual, ~Ritual - Movement), shortcat(Ri, Mo), prereqcount(1), class(Regular/R-Magelock), time(10 sec.), duration(Perm.), castingcost(3), description(Prereq Count: 1)
Deflect Missile (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Movement" = 0pts | "SK:Path of Protection & Warning" = 0pts | "SK:Movement College!" = 3pts | "SK:Protection & Warning College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Movement::level" - 1, "SK:Path of Protection & Warning::level" - 1, "SK:Movement!::level" - 1, "SK:Protection & Warning!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M143, B251), cat(~Ritual, ~Ritual - Movement, ~Ritual - Protection & Warning), shortcat(Ri, Mo, PW), prereqcount(1), class(Blocking), time(1 sec.), duration(Instant), castingcost(1), description(Prereq Count: 1)

<~Ritual - Necromancy:Ne>
Death Vision (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level", "SK:Necromancy!::level", "SK:Magic!::Level"), upto(prereq), page(M149, B251), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(0), class(Regular), time(3 sec.), duration(1 sec.), castingcost(2), description(Prereq Count: 0)
Sense Spirit (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level" - 1, "SK:Necromancy!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M149, B252), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(1), class(Inform./Area), time(1 sec.), duration(Instant), castingcost(1#), description(Prereq Count: 1)
Summon Spirit (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level" - 1, "SK:Necromancy!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M150, B252), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(1), class(Inform./R-Will), time(5 min.), duration(1 min.), castingcost(20/10#), description(Prereq Count: 1)
Zombie (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level" - 4, "SK:Necromancy!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M151, B252), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(4), class(Regular), time(1 min.), duration(Perm.), castingcost(8), description(Prereq Count: 4)
Turn Zombie (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level" - 5, "SK:Necromancy!::level" - 5, "SK:Magic!::Level" - 5), upto(prereq), page(M152, B252), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(5), class(Area), time(4 sec.), duration(1 day), castingcost(2), description(Prereq Count: 5)
Summon Demon (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level" - 10, "SK:Necromancy!::level" - 10, "SK:Magic!::Level" - 10), upto(prereq), page(M155, B252), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(10), class(Special), time(5 min.), duration(1 hr.#), castingcost(20#), description(Prereq Count: 10)
Banish (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Necromancy" = 0pts | "SK:Necromancy College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Necromancy::level" - 10, "SK:Necromancy!::level" - 10, "SK:Magic!::Level" - 10), upto(prereq), page(M156, B252), cat(~Ritual, ~Ritual - Necromancy), shortcat(Ri, Ne), prereqcount(10), class(Spec./R-Will), time(5 sec.), duration(Instant), castingcost(Varies), description(Prereq Count: 10)

<~Ritual - Protection & Warning:PW>
Shield (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Protection & Warning" = 0pts | "SK:Protection & Warning College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Protection & Warning::level", "SK:Protection & Warning!::level", "SK:Magic!::Level"), upto(prereq), page(M167, B252), cat(~Ritual, ~Ritual - Protection & Warning), shortcat(Ri, PW), prereqcount(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(Varies ), description(Prereq Count: 0)
Armor (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Protection & Warning" = 0pts | "SK:Protection & Warning College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Protection & Warning::level" - 1, "SK:Protection & Warning!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M167, B253), cat(~Ritual, ~Ritual - Protection & Warning), shortcat(Ri, PW), prereqcount(1), class(Regular), time(1 sec.), duration(1 min.), castingcost(Varies ), description(Prereq Count: 1)
Magelock (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Protection & Warning" = 0pts | "SK:Protection & Warning College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Protection & Warning::level", "SK:Protection & Warning!::level", "SK:Magic!::Level"), upto(prereq), page(M166, B253), cat(~Ritual, ~Ritual - Protection & Warning), shortcat(Ri, PW), prereqcount(0), class(Regular), time(4 sec.), duration(6 hrs.), castingcost(3/2), description(Prereq Count: 0)

<~Ritual - Water:Wa>
Seek Water (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level", "SK:Water!::level", "SK:Magic!::Level"), upto(prereq), page(M184, B253), cat(~Ritual, ~Ritual - Water), shortcat(Ri, Wa), prereqcount(0), class(Information), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 0)
Purify Water (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level" - 1, "SK:Water!::level" - 1, "SK:Magic!::Level" - 1), upto(prereq), page(M184, B253), cat(~Ritual, ~Ritual - Water), shortcat(Ri, Wa), prereqcount(1), class(Special), time(5-10 sec./gal.#), duration(Perm.), castingcost(1/gal.), description(Prereq Count: 1)
Create Water (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level" - 2, "SK:Water!::level" - 2, "SK:Magic!::Level" - 2), upto(prereq), page(M184, B253), cat(~Ritual, ~Ritual - Water), shortcat(Ri, Wa), prereqcount(2), class(Regular), time(1 sec.), duration(Perm.), castingcost(2/gal.), description(Prereq Count: 2)
Destroy Water (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level" - 3, "SK:Water!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M185, B253), cat(~Ritual, ~Ritual - Water), shortcat(Ri, Wa), prereqcount(3), class(Area), time(1 sec.), duration(Perm.), castingcost(3/S), description(Prereq Count: 3)
Shape Water (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level" - 3, "SK:Water!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M185, B253), cat(~Ritual, ~Ritual - Water), shortcat(Ri, Wa), prereqcount(3), class(Regular), time(2 sec.), duration(1 min.), castingcost(1/1#), description(Prereq Count: 3)
Fog (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Weather" = 0pts | "SK:Path of Water" = 0pts | "SK:Weather College!" = 3pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Weather::level" - 4, "SK:Path of Water::level" - 4, "SK:Weather!::level" - 4, "SK:Water!::level" - 4, "SK:Magic!::Level" - 4), upto(prereq), page(M193, B253), cat(~Ritual, ~Ritual - Weather, ~Ritual - Water), shortcat(Ri, We, Wa), prereqcount(4), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H), description(Prereq Count: 4)
Icy Weapon (Ritual), type(Tech/H), CountAsNeed(Ritual), needs("SK:Path of Water" = 0pts | "SK:Water College!" = 3pts | "SK:Magic!" = 3pts), default("SK:Path of Water::level" - 3, "SK:Water!::level" - 3, "SK:Magic!::Level" - 3), upto(prereq), page(M185, B253), cat(~Ritual, ~Ritual - Water), shortcat(Ri, Wa), prereqcount(3), class(Regular), time(3 sec.), duration(1 min.), castingcost(3/1), description(Prereq Count: 3)
<~Clerical>
<~Clerical - Air:Ai>
Purify Air (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M23, B243), cat(~Clerical, ~Clerical - Air), shortcat(CL, Ai), prereqcount(0), class(Area), time(1 sec.), duration(Instant), castingcost(1)
Create Air (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M23, B243), cat(~Clerical, ~Clerical - Air), shortcat(CL, Ai), prereqcount(1), class(Area), time(1 sec.), duration(5 sec.#), castingcost(1)
Shape Air (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M24, B243), cat(~Clerical, ~Clerical - Air), shortcat(CL, Ai), prereqcount(2), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 to 10#)
No-Smell (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M24, B243), cat(~Clerical, ~Clerical - Air), shortcat(CL, Ai), prereqcount(1), class(Regular), time(1 sec.), duration(1 hr.), castingcost(2/2)
Predict Weather (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M193, B243), cat(~Clerical, ~Clerical - Weather, ~Clerical - Air), shortcat(CL, We, Ai), prereqcount(4), class(Information), time(5 sec.#), duration(Instant), castingcost(Varies)
Breathe Water (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M189, B243), cat(~Clerical, ~Clerical - Water, ~Clerical - Air), shortcat(CL, Wa, Ai), prereqcount(6), class(Regular), time(1 sec.), duration(1 min.), castingcost(4/2)
Walk on Air (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M25, B243), cat(~Clerical, ~Clerical - Air), shortcat(CL, Ai), prereqcount(3), class(Regular), time(1 sec.), duration(1 min.), castingcost(3/2)
Earth to Air (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M25, B243), cat(~Clerical, ~Clerical - Air, ~Clerical - Earth), shortcat(CL, Ai, Ea), prereqcount(4), class(Regular), time(2 sec.), duration(Perm.), castingcost(5/cu. yd.#)
Stench (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M24, B244), cat(~Clerical, ~Clerical - Air), shortcat(CL, Ai), prereqcount(1), class(Area), time(1 sec.), duration(5 min.), castingcost(1)
Lightning (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M196, B244), cat(~Clerical, ~Clerical - Weather, ~Clerical - Air), shortcat(CL, We, Ai), prereqcount(6), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(1 to Magery#), damage(~1d-1), damtype(burn), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Beam)), acc(3), rangehalfdam(50), rangemax(100), notes(~1-3en), parry(No)

<~Clerical - Body Control:BC>
Itch (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M35, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(0), class(Regular/R-HT), time(1 sec.), duration(Scratch#), castingcost(2)
Spasm (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M35, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(1), class(Regular/R-HT), time(1 sec.), duration(Instant), castingcost(2)
Pain (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M36, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(2), class(Regular/R-HT), time(2 sec.), duration(1 sec.), castingcost(2)
Clumsiness (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M36, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(2), class(Regular/R-HT), time(1 sec.), duration(1 min.), castingcost(1 to 5/H)
Hinder (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M36, B244), cat(~Clerical, ~Clerical - Body Control, ~Clerical - Movement), shortcat(CL, BC, Mo), prereqcount(1), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 to 4/S)
Rooted Feet (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M36, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(2), class(Regular/R-ST), time(1 sec.), duration(1 min.#), castingcost(3)
Paralyze Limb (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M40, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(5), class(Melee/R-HT), time(1 sec.), duration(1 min.), castingcost(3)
Wither Limb (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M40, B244), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(6), class(Melee/R-HT), time(1 sec.), duration(Perm.), castingcost(5)
Deathtouch (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M41, B245), cat(~Clerical, ~Clerical - Body Control), shortcat(CL, BC), prereqcount(7), class(Melee), time(1 sec.), duration(Instant), castingcost(1 to 3), damage(~1d), damtype(spcl), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate), reach(C), notes(~1-3en), parry(No)

<~Clerical - Communication & Empathy:CE>
Sense Foes (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M44, B245), cat(~Clerical, ~Clerical - Communication & Empathy), shortcat(CL, CE), prereqcount(0), class(Inform./Area), time(1 sec.), duration(Instant), castingcost(2#)
Sense Emotion (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M45, B245), cat(~Clerical, ~Clerical - Communication & Empathy), shortcat(CL, CE), prereqcount(1), class(Regular), time(1 sec.), duration(Instant), castingcost(2)
Truthsayer (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M45, B245), cat(~Clerical, ~Clerical - Communication & Empathy), shortcat(CL, CE), prereqcount(2), class(Inform./R-Will), time(1 sec.), duration(Instant), castingcost(2)
Mind-Reading (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M46, B245), cat(~Clerical, ~Clerical - Communication & Empathy), shortcat(CL, CE), prereqcount(3), class(Regular/R-Will), time(10 sec.), duration(1 min.), castingcost(4/2)
Hide Thoughts (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M46, B245), cat(~Clerical, ~Clerical - Communication & Empathy), shortcat(CL, CE), prereqcount(3), class(Regular), time(1 sec.), duration(10 min.), castingcost(3/1)

<~Clerical - Earth:Ea>
Seek Earth (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M50, B245), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(0), class(Information), time(10 sec.), duration(Instant), castingcost(3)
Shape Earth (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M50, B245), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(1), class(Regular), time(1 sec.), duration(1 min.), castingcost(1/cu. yd./h)
Earth to Stone (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M51, B245), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(2), class(Regular), time(1 sec.), duration(Perm.), castingcost(3/cu. yd.#)
Create Earth (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M51, B246), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(3), class(Regular), time(1 sec.), duration(Perm.), castingcost(2/cu. yd.)
Flesh to Stone (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M51, B246), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(3), class(Regular/R-HT), time(2 sec.), duration(Instant), castingcost(10#)
Stone to Earth (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M51, B246), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(3), class(Regular), time(1 sec.), duration(Perm.), castingcost(6/cu. yd.)
Stone to Flesh (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M53, B246), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(5), class(Regular), time(5 sec.), duration(Instant), castingcost(10)
Entombment (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M53, B246), cat(~Clerical, ~Clerical - Earth), shortcat(CL, Ea), prereqcount(5), class(Regular/R-HT), time(3 sec.), duration(Perm.), castingcost(10#)

<~Clerical - Enchantment:En>
Accuracy (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M65, B480), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(15), class(Enchantment), time(-), duration(Perm.), castingcost(Varies)
Deflect (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M67, B480), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(11), class(Enchantment), time(-), duration(Perm.), castingcost(Varies)
Enchant (Clerical), type(IQ/VH), CountAsNeed(Clerical), mods(Spells), page(M56, B480), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(10), class(Enchantment), time(Varies), duration(Perm.), castingcost(Varies )
Fortify (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M66, B480), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(11), class(Enchantment), time(-), duration(Perm.), castingcost(Varies)
Power (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M57, B480), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(12), class(Enchantment), time(-), duration(Perm.), castingcost(Varies)
Puissance (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M65, B481), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(15), class(Enchantment), time(-), duration(Perm.), castingcost(Varies)
Staff (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M70, B481), cat(~Clerical, ~Clerical - Enchantment), shortcat(CL,en), prereqcount(11), class(Enchantment), time(-), duration(Perm.), castingcost(30)

<~Clerical - Fire:Fi>
Ignite Fire (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M72, B246), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(0), class(Regular), time(1 sec.), duration(1 sec.), castingcost(1 to 4/S)
Create Fire (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M72, B246), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(1), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H)
Shape Fire (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M72, B246), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(1), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H)
Deflect Energy (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M73, B246), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(2), class(Blocking), time(1 sec.), duration(Instant), castingcost(1)
Extinguish Fire (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M72, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(1), class(Area), time(1 sec.), duration(Perm.), castingcost(3)
Heat (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M74, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(3), class(Regular), time(1 min.), duration(1 min.), castingcost(Varies)
Cold (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M74, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(4), class(Regular), time(1 min.), duration(1 min.), castingcost(Varies)
Resist Cold (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M74, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(4), class(Regular), time(1 sec.), duration(1 min.), castingcost(2/1)
Resist Fire (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M74, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(3), class(Regular), time(1 sec.), duration(1 min.), castingcost(2/1#)
Fireball (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M74, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(3), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(1 to Magery#), damage(~1d), damtype(burn), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Projectile)), acc(1), rangehalfdam(25), rangemax(50), notes(~1-3en), parry(No)
Explosive Fireball (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M75, B247), cat(~Clerical, ~Clerical - Fire), shortcat(CL, Fi), prereqcount(4), class(Missile), time(1 to 3 sec.), duration(Instant), castingcost(2 to 2xMagery#), damage(~1d), damtype(burn ex), skillused(ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Projectile)), acc(1), rangehalfdam(25), rangemax(50), notes(~2-6en), parry(No)

<~Clerical - Gate:Ga>
Planar Summons ([Plane]; Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M82, B247), cat(~Clerical, ~Clerical - Gate), shortcat(CL, Ga), prereqcount(10), class(Special), time(5 min.), duration(1 hr.), noresync(yes),
		x( #InputReplace("Select the Plane of existence from which you can Summon a being:", "[Plane]", , "Planar Summons") ), castingcost(20#)
Plane Shift ([Plane]; Clerical), type(IQ/VH), CountAsNeed(Clerical), mods(Spells), page(M83, B248), cat(~Clerical, ~Clerical - Gate), shortcat(CL, Ga), prereqcount(11), class(Special), time(5 sec.), duration(Instant), castingcost(20), noresync(yes),
		x( #InputReplace("Select the Plane of existence which you can Shift to:", "[Plane]",  , "Plane Shift") )

<~Clerical - Healing:He>
Lend Energy (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M89, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(0), class(Regular), time(1 sec.), duration(Perm.), castingcost(Varies )
Lend Vitality (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M89, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(1), class(Regular), time(1 sec.), duration(1 hr.), castingcost(1 per HP loaned)
Recover Energy (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M89, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(1), class(Special), time(Special), duration(Special), castingcost(none)
Awaken (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M90, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(2), class(Area), time(1 sec.), duration(Instant), castingcost(1)
Minor Healing (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M91, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(2), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 to 3)
Major Healing (Clerical), type(IQ/VH), CountAsNeed(Clerical), mods(Spells), page(M91, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(3), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 to 4)
Great Healing (Clerical), type(IQ/VH), CountAsNeed(Clerical), mods(Spells), page(M91, B248), cat(~Clerical, ~Clerical - Healing), shortcat(CL, He), prereqcount(4), class(Regular), time(1 min.), duration(Perm.), castingcost(20)

<~Clerical - Knowledge:Kn>
Detect Magic (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M101, B249), cat(~Clerical, ~Clerical - Knowledge), shortcat(CL, Kn), prereqcount(0), class(Regular), time(5 sec.), duration(Instant), castingcost(2)
Aura (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M101, B249), cat(~Clerical, ~Clerical - Knowledge), shortcat(CL, Kn), prereqcount(1), class(Information), time(1 sec.), duration(Instant), castingcost(3)
Seeker (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M105, B249), cat(~Clerical, ~Clerical - Knowledge), shortcat(CL, Kn), prereqcount(2), class(Information), time(1 sec.), duration(Instant), castingcost(3)
Trace (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M106, B249), cat(~Clerical, ~Clerical - Knowledge), shortcat(CL, Kn), prereqcount(3), class(Regular), time(1 min.), duration(1 hr.), castingcost(3/1)
Identify Spell (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M102, B249), cat(~Clerical, ~Clerical - Knowledge), shortcat(CL, Kn), prereqcount(1), class(Information), time(1 sec.), duration(Instant), castingcost(2)
Analyze Magic (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M102, B249), cat(~Clerical, ~Clerical - Knowledge), shortcat(CL, Kn), prereqcount(3), class(Inform./R-spell), time(1 hr.), duration(Instant), castingcost(8)

<~Clerical - Light & Darkness:LD>
Light (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M110, B249), cat(~Clerical, ~Clerical - Light & Darkness), shortcat(CL, LD), prereqcount(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1/1)
Continual Light (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M110, B249), cat(~Clerical, ~Clerical - Light & Darkness), shortcat(CL, LD), prereqcount(1), class(Regular), time(1 sec.), duration(Varies ), castingcost(Varies )
Darkness (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M112, B250), cat(~Clerical, ~Clerical - Light & Darkness), shortcat(CL, LD), prereqcount(2), class(Area), time(1 sec.), duration(1 min.), castingcost(2/1)
Blur (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M113, B250), cat(~Clerical, ~Clerical - Light & Darkness), shortcat(CL, LD), prereqcount(3), class(Regular), time(2 sec.), duration(1 min.), castingcost(1 to 5/S)

<~Clerical - Meta-Spells:MS>
Counterspell (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M121, B250), cat(~Clerical, ~Clerical - Meta-Spells), shortcat(CL, MS), prereqcount(0), class(Regular/R-spell), time(5 sec.), duration(Instant), castingcost(Varies )
Dispel Magic (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M126, B250), cat(~Clerical, ~Clerical - Meta-Spells), shortcat(CL, MS), prereqcount(13), class(Area/R-spell), time(sec.=cost), duration(Perm.), castingcost(3)

<~Clerical - Mind Control:MC>
Foolishness (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M134, B250), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(0), class(Regular/R-Will), time(1 sec.), duration(1 min.), castingcost(1 per IQ-/H)
Forgetfulness (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M135, B250), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(1), class(Regular/R-Will or skill), time(10 sec.), duration(1 hr.), castingcost(3/3)
Daze (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M134, B250), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(1), class(Regular/R-HT), time(2 sec.), duration(1 min.), castingcost(3/2)
Mass Daze (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M137, B251), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(2), class(Area/R-HT), time(sec.=cost), duration(Instant), castingcost(2/1#)
Sleep (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M135, B251), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(2), class(Regular/R-HT), time(3 sec.), duration(Instant), castingcost(4)
Mass Sleep (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M137, B251), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(3), class(Area/R-HT), time(sec.=cost), duration(Instant), castingcost(3#)
Command (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M136, B251), cat(~Clerical, ~Clerical - Mind Control), shortcat(CL, MC), prereqcount(2), class(Blocking/R-Will), time(1 sec.), duration(Instant), castingcost(2)

<~Clerical - Movement:Mo>
Haste (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M142, B251), cat(~Clerical, ~Clerical - Movement), shortcat(CL, Mo), prereqcount(0), class(Regular), time(2 sec.), duration(1 min.), castingcost(2/pt./H)
Great Haste (Clerical), type(IQ/VH), CountAsNeed(Clerical), mods(Spells), page(M146, B251), cat(~Clerical, ~Clerical - Movement), shortcat(CL, Mo), prereqcount(1), class(Regular), time(3 sec.), duration(10 sec.), castingcost(5#)
Apportation (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M142, B251), cat(~Clerical, ~Clerical - Movement), shortcat(CL, Mo), prereqcount(0), class(Reg./R-Will), time(1 sec.), duration(1 min.), castingcost(Varies )
Lockmaster (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M144, B251), cat(~Clerical, ~Clerical - Movement), shortcat(CL, Mo), prereqcount(1), class(Regular/R-Magelock), time(10 sec.), duration(Perm.), castingcost(3)
Deflect Missile (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M143, B251), cat(~Clerical, ~Clerical - Movement, ~Clerical - Protection & Warning), shortcat(CL, Mo, PW), prereqcount(1), class(Blocking), time(1 sec.), duration(Instant), castingcost(1)

<~Clerical - Necromancy:Ne>
Death Vision (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M149, B251), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(0), class(Regular), time(3 sec.), duration(1 sec.), castingcost(2)
Sense Spirit (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M149, B252), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(1), class(Inform./Area), time(1 sec.), duration(Instant), castingcost(1#)
Summon Spirit (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M150, B252), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(1), class(Inform./R-Will), time(5 min.), duration(1 min.), castingcost(20/10#)
Zombie (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M151, B252), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(4), class(Regular), time(1 min.), duration(Perm.), castingcost(8)
Turn Zombie (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M152, B252), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(5), class(Area), time(4 sec.), duration(1 day), castingcost(2)
Summon Demon (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M155, B252), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(10), class(Special), time(5 min.), duration(1 hr.#), castingcost(20#)
Banish (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M156, B252), cat(~Clerical, ~Clerical - Necromancy), shortcat(CL, Ne), prereqcount(10), class(Spec./R-Will), time(5 sec.), duration(Instant), castingcost(Varies)

<~Clerical - Protection & Warning:PW>
Shield (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M167, B252), cat(~Clerical, ~Clerical - Protection & Warning), shortcat(CL, PW), prereqcount(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(Varies )
Armor (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M167, B253), cat(~Clerical, ~Clerical - Protection & Warning), shortcat(CL, PW), prereqcount(1), class(Regular), time(1 sec.), duration(1 min.), castingcost(Varies )
Magelock (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M166, B253), cat(~Clerical, ~Clerical - Protection & Warning), shortcat(CL, PW), prereqcount(0), class(Regular), time(4 sec.), duration(6 hrs.), castingcost(3/2)

<~Clerical - Water:Wa>
Seek Water (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M184, B253), cat(~Clerical, ~Clerical - Water), shortcat(CL, Wa), prereqcount(0), class(Information), time(1 sec.), duration(Instant), castingcost(2)
Purify Water (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M184, B253), cat(~Clerical, ~Clerical - Water), shortcat(CL, Wa), prereqcount(1), class(Special), time(5-10 sec./gal.#), duration(Perm.), castingcost(1/gal.)
Create Water (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M184, B253), cat(~Clerical, ~Clerical - Water), shortcat(CL, Wa), prereqcount(2), class(Regular), time(1 sec.), duration(Perm.), castingcost(2/gal.)
Destroy Water (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M185, B253), cat(~Clerical, ~Clerical - Water), shortcat(CL, Wa), prereqcount(3), class(Area), time(1 sec.), duration(Perm.), castingcost(3/S)
Shape Water (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M185, B253), cat(~Clerical, ~Clerical - Water), shortcat(CL, Wa), prereqcount(3), class(Regular), time(2 sec.), duration(1 min.), castingcost(1/1#)
Fog (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M193, B253), cat(~Clerical, ~Clerical - Weather, ~Clerical - Water), shortcat(CL, We, Wa), prereqcount(4), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H)
Icy Weapon (Clerical), type(IQ/H), CountAsNeed(Clerical), mods(Spells), page(M185, B253), cat(~Clerical, ~Clerical - Water), shortcat(CL, Wa), prereqcount(3), class(Regular), time(3 sec.), duration(1 min.), castingcost(3/1)





************************************************************************************************************************
[GROUPS]
* [LISTS] ^^^^ Need to conver to List, need a #DeleteFromList() command
************************************************************************************************************************
<AllMetaTraits>
TE:AI
TE:Astral Entity
TE:Automaton
TE:Body of Air
TE:Body of Earth
TE:Body of Fire
TE:Body of Ice
TE:Body of Metal
TE:Body of Stone
TE:Body of Water
TE:Domestic Animal
TE:Ground Vehicle
TE:Ichthyoid
TE:Machine
TE:Quadruped
TE:Spirit
TE:Vermiform
TE:Wild Animal


<AllAdvantages>
AD:_New Advantage
AD:_New Leveled Advantage
AD:_New Parent Item
AD:_New Power Talent
AD:_New Talent
AD:360° Vision
AD:3D Spatial Sense
AD:Absolute Direction
AD:Absolute Timing
AD:Active IR
AD:Acute [sense]
AD:Acute Hearing
AD:Acute Taste and Smell
AD:Acute Touch
AD:Acute Vision
AD:Administrative Rank
AD:Affliction
AD:Air Talent
AD:Ally
AD:Altered Time Rate
AD:Alternate Form (Cosmetic)
AD:Alternate Form
AD:Alternate Identity
AD:Ambidexterity
AD:Amphibious
AD:Animal Control Talent
AD:Animal Empathy
AD:Animal Friend
AD:Anti-Magic Talent
AD:Antipsi Talent
AD:Anti-Super Talent
AD:Appearance
AD:Arm DX
AD:Arm ST
AD:Artificer
AD:Astral Projection Talent
AD:Bardic Immunity
AD:Binding
AD:Bioenergy Talent
AD:Blessed (Heroic Feat; [Attribute])
AD:Blessed (Very Blessed)
AD:Blessed
AD:Body Alteration Talent
AD:Body Control Talent
AD:Brachiator
AD:Breath-Holding
AD:Burning Attack
AD:Business Acumen
AD:Catfall
AD:Chameleon
AD:Channeling
AD:Chaos Talent
AD:Charisma
AD:Chronolocation
AD:Claim to Hospitality
AD:Clairsentience
AD:Claws (Blunt Claws)
AD:Claws (Hooves)
AD:Claws (Long Talons)
AD:Claws (Sharp Claws)
AD:Claws (Talons)
AD:Clerical Investment
AD:Clinging
AD:Cold/Ice Talent
AD:Combat Reflexes
AD:Common Sense
AD:Compartmentalized Mind
AD:Constriction Attack
AD:Contact Group
AD:Contact
AD:Control [Common]
AD:Control [Godlike]
AD:Control [Occasional]
AD:Control [Rare]
AD:Control [Very Common]
AD:Corrosion Attack
AD:Cosmic Talent
AD:Courtesy Rank
AD:Create [Large Category]
AD:Create [Medium Category]
AD:Create [Small Category]
AD:Create [Specific Item]
AD:Creation Pool
AD:Crushing Attack
AD:Cultural Adaptability
AD:Cultural Familiarity (Alien Culture)
AD:Cultural Familiarity (Native)
AD:Cultural Familiarity
AD:Cutting Attack
AD:Damage Resistance
AD:Danger Sense
AD:Daredevil
AD:Dark Vision
AD:Darkness Talent
AD:Death Talent
AD:Destiny
AD:Detect
AD:Digital Mind
AD:Dimension Travel Talent
AD:Diplomatic Immunity
AD:Discriminatory Hearing
AD:Discriminatory Smell
AD:Discriminatory Taste
AD:Doesn't Breathe
AD:Doesn't Eat or Drink
AD:Doesn't Sleep
AD:Dominance
AD:Double-Jointed
AD:Duplication
AD:Earth Talent
AD:Eidetic Memory
AD:Elastic Skin
AD:Electricity Talent
AD:Electrokinesis Talent
AD:Empathy
AD:Energy Reserve
AD:Enhanced Block
AD:Enhanced Dodge
AD:Enhanced Move (Air)
AD:Enhanced Move (Ground)
AD:Enhanced Move (Space)
AD:Enhanced Move (Water)
AD:Enhanced Parry (%One-Handed Melee Weapon ArtList%)
AD:Enhanced Parry (%One-Handed Melee WeaponList%)
AD:Enhanced Parry (%One-Handed Melee Weapon SportList%)
AD:Enhanced Parry (all parries)
AD:Enhanced Parry (bare hands)
AD:Enhanced Time Sense
AD:Enhanced Tracking
AD:ESP Talent
AD:Evil Talent
AD:Extended Lifespan
AD:Extra Arms
AD:Extra Attack
AD:Extra Head
AD:Extra Legs (3 Legs)
AD:Extra Legs (4 Legs)
AD:Extra Legs (5 Legs)
AD:Extra Legs (6 Legs)
AD:Extra Legs (7+ Legs)
AD:Extra Life
AD:Extra Mouth
AD:Extra-Flexible Arms (1 Arm)
AD:Extra-Flexible Arms (2 Arms)
AD:Fashion Sense
AD:Fatigue Attack
AD:Fearlessness
AD:Filter Lungs
AD:Fit
AD:Flexibility
AD:Flight
AD:Force Constructs Talent
AD:Gadgeteer
AD:G-Experience
AD:Gifted Artist
AD:Gizmo
AD:Good Talent
AD:Gravity Talent
AD:Green Thumb
AD:Growth
AD:Gunslinger
AD:Hard to Kill
AD:Hard to Subdue
AD:Healer
AD:Healing Talent
AD:Healing
AD:Heat/Fire Talent
AD:Hermaphromorph
AD:High Manual Dexterity
AD:High Pain Threshold
AD:High TL
AD:Higher Purpose
AD:Huge Piercing Attack
AD:Hyperspectral Vision
AD:Illuminated
AD:Illusion Talent
AD:Illusion
AD:Imaging Radar
AD:Impaling Attack
AD:Improved G-Tolerance
AD:Independent Income
AD:Indomitable
AD:Infravision
AD:Injury Tolerance
AD:Insubstantiality
AD:Intuition
AD:Intuitive Mathematician
AD:Invisibility
AD:Jumper (Spirit)
AD:Jumper (Time)
AD:Jumper (World)
AD:Kinetic Energy Talent
AD:Ladar
AD:Language - Native (Spoken)
AD:Language - Native (Written)
AD:Language - Native
AD:Language (Spoken)
AD:Language (Written)
AD:Language Talent
AD:Language
AD:Large Piercing Attack
AD:Leech
AD:Legal Enforcement Powers
AD:Legal Immunity
AD:Less Sleep
AD:Life Talent
AD:Lifting ST
AD:Light Talent
AD:Lightning Calculator
AD:Long Arms (1 Arm)
AD:Long Arms (2 Arms)
AD:Long Legs
AD:Long Spines
AD:Longevity
AD:Luck
AD:Machine Telepathy Talent
AD:Magery 0
AD:Magery
AD:Magic Resistance
AD:Magnetism Talent
AD:Mana Damper
AD:Mana Enhancer
AD:Mathematical Ability
AD:Matter Control Talent
AD:Medium
AD:Merchant Rank
AD:Metabolism Control
AD:Microscopic Vision
AD:Military Rank
AD:Mimicry
AD:Mind Control
AD:Mind Probe
AD:Mind Reading
AD:Mind Shield
AD:Mindlink
AD:Modified ST-Based Damage
AD:Modular Abilities (Chip Slots)
AD:Modular Abilities (Computer Brain)
AD:Modular Abilities (Cosmic Power)
AD:Modular Abilities (Divine Inspiration)
AD:Modular Abilities (Super-Memorization)
AD:Morph (Cosmetic)
AD:Morph
AD:Musical Ability
AD:Neutralize
AD:Nictitating Membrane
AD:Night Vision
AD:Obscure
AD:Oracle (Digital)
AD:Oracle
AD:Order Talent
AD:Outdoorsman
AD:Parabolic Hearing
AD:Para-Radar
AD:Patrons
AD:Payload
AD:Penetrating Vision
AD:Perfect Balance
AD:Peripheral Vision
AD:Permeation
AD:Photographic Memory
AD:Piercing Attack
AD:Pitiable
AD:PK Talent
AD:Plant Control Talent
AD:Plant Empathy
AD:Police Rank
AD:Possession
AD:Power Investiture
AD:Precognition
AD:Pressure Support
AD:Probability Alteration Talent
AD:Protected [Power]
AD:Protected [Sense]
AD:Psi Static
AD:Psychic Healing Talent
AD:Psychokinesis Talent
AD:Psychometry
AD:Puppet (Group of Related Allies)
AD:Puppet
AD:Racial Memory
AD:Radar
AD:Radiation Talent
AD:Radiation Tolerance
AD:Rank
AD:Rapid Healing
AD:Rapier Wit
AD:Reawakened
AD:Recovery
AD:Reduced Consumption
AD:Regeneration
AD:Regrowth
AD:Religious Rank
AD:Reputation
AD:Resistant
AD:Ritual Magery (%skilllist%)
AD:Ritual Magery ([skill])
AD:Ritual Magery 0
AD:Sealed
AD:Security Clearance
AD:See Invisible
AD:Sensitive Touch
AD:Sensitive
AD:Serendipity
AD:Shadow Form
AD:Short Spines
AD:Shrinking
AD:Signature Gear
AD:Silence
AD:Single-Minded
AD:Slippery
AD:Small Piercing Attack
AD:Smooth Operator
AD:Snatcher
AD:Social Chameleon
AD:Social Regard (Feared)
AD:Social Regard (Respected)
AD:Social Regard (Venerated)
AD:Social Regard
AD:Sonar
AD:Sound/Vibration Talent
AD:Speak Underwater
AD:Speak With Animals
AD:Speak With Plants
AD:Special Rapport
AD:Spirit Control Talent
AD:Spirit Empathy
AD:Static
AD:Status
AD:Stretching
AD:Striker (Crushing)
AD:Striker (Cutting)
AD:Striker (Impaling)
AD:Striker (Large Piercing)
AD:Striker (Piercing)
AD:Striking ST
AD:Subsonic Hearing
AD:Subsonic Speech
AD:Super Climbing
AD:Super Jump
AD:Super Luck
AD:Supernatural Durability
AD:Teeth (Blunt Teeth)
AD:Teeth (Fangs)
AD:Teeth (Sharp Beak)
AD:Teeth (Sharp Teeth)
AD:Telecommunication (Directional Sound)
AD:Telecommunication (Gravity-Ripple Comm)
AD:Telecommunication (Infrared Communication)
AD:Telecommunication (Laser Communication)
AD:Telecommunication (Neutrino Comm)
AD:Telecommunication (Radio)
AD:Telecommunication (Sonar Comm)
AD:Telecommunication (Telesend)
AD:Telekinesis
AD:Telepathy Talent
AD:Teleportation Talent
AD:Telescopic Vision
AD:Temperature Control
AD:Temperature Tolerance
AD:Temporal Inertia
AD:Tenure
AD:Terrain Adaptation
AD:Terror (Awe)
AD:Terror (Confusion)
AD:Terror
AD:Time Mastery Talent
AD:Toxic Attack
AD:Trading Character Points for Money
AD:Trained By A Master
AD:T-Ray Vision
AD:True Faith (Chosen)
AD:True Faith
AD:Tunneling (Slow)
AD:Tunneling
AD:Ultrahearing
AD:Ultrasonic Speech
AD:Ultravision
AD:Unaging
AD:Unfazeable
AD:Universal Digestion
AD:Unkillable
AD:Unusual Background
AD:Vacuum Support
AD:Vampiric Bite
AD:Vampirism Talent
AD:Versatile
AD:Very Fit
AD:Very Rapid Healing
AD:Vibration Sense
AD:Visualization
AD:Voice
AD:Walk on Air
AD:Walk on Liquid
AD:Warp
AD:Water Talent
AD:Wealth
AD:Weapon Master
AD:Weather Control Talent
AD:Wild Talent
AD:Wildcard Magery!
AD:Zeroed

<AllPerks>
PE:_New Perk
PE:Accessory
PE:Alcohol Tolerance
PE:Autotrance
PE:Deep Sleeper
PE:Fur
PE:Honest Face
PE:No Hangover
PE:Penetrating Voice
PE:Sanitized Metabolism
PE:Shtick

<AllDisadvantages>
DI:_New Disadvantage
DI:_New Parent Item
DI:Absent-Mindedness
DI:Addiction ([Physiological])
DI:Addiction ([Psychological])
DI:Addiction (Heroin)
DI:Addiction (Tobacco)
DI:Alcoholism
DI:Amnesia (Partial)
DI:Amnesia (Total)
DI:Appearance
DI:Bad Back
DI:Bad Grip
DI:Bad Sight (Farsighted)
DI:Bad Sight (Nearsighted)
DI:Bad Smell
DI:Bad Temper
DI:Berserk
DI:Bestial
DI:Blindness
DI:Bloodlust
DI:Bully
DI:Callous
DI:Cannot Kick
DI:Cannot Learn
DI:Cannot Speak
DI:Charitable
DI:Chronic Depression
DI:Chronic Pain
DI:Chummy
DI:Clueless
DI:Code of Honor (Chivalry)
DI:Code of Honor (Gentleman's)
DI:Code of Honor (Pirate's)
DI:Code of Honor (Professional)
DI:Code of Honor (Soldier's)
DI:Code of Honor
DI:Cold-Blooded
DI:Colorblindness
DI:Combat Paralysis
DI:Compulsive Behavior
DI:Compulsive Carousing
DI:Compulsive Gambling
DI:Compulsive Generosity
DI:Compulsive Lying
DI:Compulsive Spending
DI:Compulsive Vowing
DI:Confused
DI:Cowardice
DI:Curious
DI:Cursed
DI:Deafness
DI:Debt
DI:Decreased Time Rate
DI:Delusion
DI:Dependency
DI:Dependent
DI:Destiny
DI:Discipline of Faith (Asceticism)
DI:Discipline of Faith (Monasticism)
DI:Discipline of Faith (Mysticism)
DI:Discipline of Faith (Ritualism)
DI:Discipline of Faith
DI:Disturbing Voice
DI:Divine Curse
DI:Draining
DI:Dread
DI:Duty
DI:Dwarfism
DI:Dyslexia
DI:Easy to Kill
DI:Easy to Read
DI:Electrical
DI:Enemy (Formidable group)
DI:Enemy (Less powerful group)
DI:Enemy (One Person)
DI:Epilepsy
DI:Extra Sleep
DI:Fanaticism
DI:Fat
DI:Fearfulness
DI:Flashbacks
DI:Fragile (Brittle)
DI:Fragile (Combustible)
DI:Fragile (Explosive)
DI:Fragile (Flammable)
DI:Fragile (Unnatural)
DI:Fragile
DI:Frightens Animals
DI:Gigantism
DI:G-Intolerance
DI:Gluttony
DI:Greed
DI:Gregarious
DI:Guilt Complex
DI:Gullibility
DI:Ham-Fisted
DI:Hard of Hearing
DI:Hemophilia
DI:Hidebound
DI:Honesty
DI:Horizontal
DI:Hunchback
DI:Impulsiveness
DI:Increased Consumption
DI:Increased Life Support (Extreme Heat/Cold)
DI:Increased Life Support (Massive)
DI:Increased Life Support (Pressurized)
DI:Increased Life Support (Radioactive)
DI:Increased Life Support
DI:Incurious
DI:Indecisive
DI:Infectious Attack
DI:Innumerate
DI:Insomniac
DI:Intolerance
DI:Invertebrate
DI:Jealousy
DI:Killjoy
DI:Kleptomania
DI:Klutz
DI:Lame (Crippled Legs)
DI:Lame (Legless)
DI:Lame (Missing Legs)
DI:Lame (Paraplegic)
DI:Laziness
DI:Lecherousness
DI:Lifebane
DI:Light Sleeper
DI:Loner
DI:Low Empathy
DI:Low Pain Threshold
DI:Low Self-Image
DI:Low TL
DI:Lunacy
DI:Magic Susceptibility
DI:Maintenance
DI:Manic-Depressive
DI:Megalomania
DI:Miserliness
DI:Missing Digit
DI:Mistaken Identity
DI:Motion Sickness
DI:Mundane Background
DI:Mute
DI:Neurological Disorder
DI:Night Blindness
DI:Nightmares
DI:No Depth Perception
DI:No Fine Manipulators
DI:No Legs (Aerial)
DI:No Legs (Aquatic)
DI:No Legs (Bounces)
DI:No Legs (Rolls)
DI:No Legs (Semi-Aquatic)
DI:No Legs (Sessile)
DI:No Legs (Slithers)
DI:No Legs (Tracked)
DI:No Legs (Wheeled)
DI:No Manipulators
DI:No Physical Attack (1 Arm)
DI:No Physical Attack (2 Arms)
DI:No Sense of Humor
DI:No Sense of Smell/Taste
DI:Nocturnal
DI:Noisy
DI:Non-Iconographic
DI:Numb
DI:Oblivious
DI:Obsession
DI:Odious Personal Habit
DI:On the Edge
DI:One Arm
DI:One Eye
DI:One Hand
DI:Overconfidence
DI:Overweight
DI:Pacifism (Cannot Harm Innocents)
DI:Pacifism (Cannot Kill)
DI:Pacifism (Reluctant Killer)
DI:Pacifism (Self-Defense Only)
DI:Pacifism (Total Nonviolence)
DI:Paranoia
DI:Phantom Voices
DI:Phobia (%examplelist%)
DI:Phobia
DI:Post-Combat Shakes
DI:Pyromania
DI:Quadriplegic
DI:Reprogrammable
DI:Reputation
DI:Restricted Diet
DI:Restricted Vision
DI:Revulsion
DI:Sadism
DI:Secret Identity
DI:Secret
DI:Self-Destruct
DI:Selfish
DI:Selfless
DI:Semi-Upright
DI:Sense of Duty
DI:Shadow Form
DI:Short Arms (1 Arm)
DI:Short Arms (2 Arms)
DI:Short Attention Span
DI:Short Lifespan
DI:Shyness
DI:Skinny
DI:Slave Mentality
DI:Sleepwalker
DI:Sleepy
DI:Slow Eater
DI:Slow Healing
DI:Slow Riser
DI:Social Disease
DI:Social Stigma (Criminal Record)
DI:Social Stigma (Disowned)
DI:Social Stigma (Excommunicated)
DI:Social Stigma (Ignorant)
DI:Social Stigma (Minor)
DI:Social Stigma (Minority Group)
DI:Social Stigma (Monster)
DI:Social Stigma (Publically disowned)
DI:Social Stigma (Second-Class Citizen)
DI:Social Stigma (Subjugated)
DI:Social Stigma (Uneducated)
DI:Social Stigma (Valuable Property)
DI:Social Stigma
DI:Space Sickness
DI:Split Personality
DI:Squeamish
DI:Status
DI:Stress Atavism
DI:Stubbornness
DI:Stuttering
DI:Supernatural Feature
DI:Supersensitive
DI:Susceptible to [Common]
DI:Susceptible to [Occasional]
DI:Susceptible to [Very Common]
DI:Terminally Ill
DI:Timesickness
DI:Trademark
DI:Trickster
DI:Truthfulness
DI:Uncontrollable Appetite
DI:Unfit
DI:Unhealing
DI:Unique
DI:Unluckiness
DI:Unnatural Feature
DI:Unusual Biochemistry
DI:Very Fat
DI:Very Unfit
DI:Vow
DI:Vulnerability
DI:Weak Arms (1 Arm)
DI:Weak Arms (2 Arms)
DI:Weak Bite
DI:Weakness
DI:Wealth
DI:Weapon Mount (1 Arm)
DI:Weapon Mount (2 Arms)
DI:Weirdness Magnet
DI:Workaholic
DI:Wounded
DI:Xenophilia

<AllQuirks>
QU:_New Quirk
QU:Acceleration Weakness
QU:Alcohol Intolerance
QU:Attentive
QU:Bowlegged
QU:Broad-Minded
QU:Cannot Float
QU:Careful
QU:Chauvinistic
QU:Code of Honor
QU:Congenial
QU:Delusion
QU:Dislikes [specify]
QU:Distinctive Feature
QU:Distractible
QU:Dreamer
QU:Dull
QU:Expression
QU:Habit
QU:Horrible Hangovers
QU:Humble
QU:Imaginative
QU:Incompetence (%skillslist%)
QU:Incompetence ([skill])
QU:Likes [specify]
QU:Minor Handicap
QU:Nervous Stomach
QU:Neutered
QU:Nosy
QU:Obsession
QU:Personality Change
QU:Proud
QU:Responsive
QU:Sexless
QU:Staid
QU:Trademark
QU:Uncongenial
QU:Vow

<AllSkills>
SK:Accounting
SK:Acrobatics
SK:Acting
SK:Administration
SK:Aerobatics
SK:Airshipman
SK:Alchemy
SK:Animal Handling
SK:Animal Handling (Big Cats)
SK:Animal Handling (Dogs)
SK:Animal Handling (Equines)
SK:Animal Handling (Raptors)
SK:Anthropology
SK:Aquabatics
SK:Archaeology
SK:Architecture
SK:Area Knowledge
SK:Armoury
SK:Armoury (Battlesuits)
SK:Armoury (Body Armor)
SK:Armoury (Force Shields)
SK:Armoury (Heavy Weapons)
SK:Armoury (Melee Weapons)
SK:Armoury (Missile Weapons)
SK:Armoury (Small Arms)
SK:Armoury (Vehicular Armor)
SK:Artillery
SK:Artillery (Beams)
SK:Artillery (Bombs)
SK:Artillery (Cannon)
SK:Artillery (Catapult)
SK:Artillery (Guided Missile)
SK:Artillery (Torpedoes)
SK:Artist
SK:Artist (Body Art)
SK:Artist (Calligraphy)
SK:Artist (Drawing)
SK:Artist (Illumination)
SK:Artist (Illusion)
SK:Artist (Interior Decorating)
SK:Artist (Painting)
SK:Artist (Pottery)
SK:Artist (Scene Design)
SK:Artist (Sculpting)
SK:Artist (Woodworking)
SK:Astronomy
SK:Astronomy (Observational)
SK:Autohypnosis
SK:Axe/Mace
SK:Battlesuit
SK:Beam Weapons
SK:Beam Weapons (Pistol)
SK:Beam Weapons (Projector)
SK:Beam Weapons (Rifle)
SK:Bicycling
SK:Bioengineering
SK:Bioengineering (Cloning)
SK:Bioengineering (Genetic Engineering)
SK:Bioengineering (Tissue Engineering)
SK:Biology
SK:Biology (Earthlike)
SK:Biology (Gas Giants)
SK:Biology (Hostile Terrestrial)
SK:Biology (Ice Dwarfs)
SK:Biology (Ice Worlds)
SK:Biology (Rock Worlds)
SK:Blind Fighting
SK:Blowpipe
SK:Boating
SK:Boating (Large Powerboat)
SK:Boating (Motorboat)
SK:Boating (Sailboat)
SK:Boating (Unpowered)
SK:Body Control
SK:Body Language
SK:Body Sense
SK:Bolas
SK:Bow
SK:Boxing
SK:Brainwashing
SK:Brawling
SK:Breaking Blow
SK:Breath Control
SK:Broadsword
SK:Camouflage
SK:Carousing
SK:Carpentry
SK:Cartography
SK:Chemistry
SK:Climbing
SK:Cloak
SK:Computer Hacking
SK:Computer Operation
SK:Computer Programming
SK:Connoisseur
SK:Connoisseur (Dance)
SK:Connoisseur (Literature)
SK:Connoisseur (Music)
SK:Connoisseur (Visual Arts)
SK:Connoisseur (Wine)
SK:Cooking
SK:Counterfeiting
SK:Criminology
SK:Crossbow
SK:Cryptography
SK:Current Affairs
SK:Current Affairs (Business)
SK:Current Affairs (Headline News)
SK:Current Affairs (High Culture)
SK:Current Affairs (People)
SK:Current Affairs (Politics)
SK:Current Affairs (Popular Culture)
SK:Current Affairs (Science & Technology)
SK:Current Affairs (Sports)
SK:Current Affairs (Travel)
SK:Dancing
SK:Detect Lies
SK:Diagnosis
SK:Diplomacy
SK:Disguise
SK:Diving Suit
SK:Dreaming
SK:Driving
SK:Driving (Automobile)
SK:Driving (Construction Equipment)
SK:Driving (Halftrack)
SK:Driving (Heavy Wheeled)
SK:Driving (Hovercraft)
SK:Driving (Locomotive)
SK:Driving (Mecha)
SK:Driving (Motorcycle)
SK:Driving (Tracked)
SK:Dropping
SK:Economics
SK:Electrician
SK:Electronics Operation
SK:Electronics Operation (Communications)
SK:Electronics Operation (Electronic Warfare)
SK:Electronics Operation (Force Shields)
SK:Electronics Operation (Matter Transmitters)
SK:Electronics Operation (Media)
SK:Electronics Operation (Medical)
SK:Electronics Operation (Parachronic)
SK:Electronics Operation (Psychotronics)
SK:Electronics Operation (Scientific)
SK:Electronics Operation (Security)
SK:Electronics Operation (Sensors)
SK:Electronics Operation (Sonar)
SK:Electronics Operation (Surveillance)
SK:Electronics Operation (Temporal)
SK:Electronics Repair
SK:Electronics Repair (Communications)
SK:Electronics Repair (Computers)
SK:Electronics Repair (Electronic Warfare)
SK:Electronics Repair (Force Shields)
SK:Electronics Repair (Matter Transmitters)
SK:Electronics Repair (Media)
SK:Electronics Repair (Medical)
SK:Electronics Repair (Parachronic)
SK:Electronics Repair (Psychotronics)
SK:Electronics Repair (Scientific)
SK:Electronics Repair (Security)
SK:Electronics Repair (Sensors)
SK:Electronics Repair (Sonar)
SK:Electronics Repair (Surveillance)
SK:Electronics Repair (Temporal)
SK:Engineer
SK:Engineer (Artillery)
SK:Engineer (Civil)
SK:Engineer (Combat)
SK:Engineer (Electrical)
SK:Engineer (Electronics)
SK:Engineer (Materials)
SK:Engineer (Microtechnology)
SK:Engineer (Mining)
SK:Engineer (Nanotechnology)
SK:Engineer (Parachronic)
SK:Engineer (Psychotronics)
SK:Engineer (Temporal)
SK:Enthrallment
SK:Enthrallment (Captivate)
SK:Enthrallment (Persuade)
SK:Enthrallment (Suggest)
SK:Enthrallment (Sway Emotions)
SK:Escape
SK:Esoteric Medicine
SK:Exorcism
SK:Expert Skill
SK:Expert Skill (Computer Security)
SK:Expert Skill (Egyptology)
SK:Expert Skill (Epidemiology)
SK:Expert Skill (Hydrology)
SK:Expert Skill (Military Science)
SK:Expert Skill (Natural Philosophy)
SK:Expert Skill (Political Science)
SK:Expert Skill (Psionics)
SK:Expert Skill (Thanatology)
SK:Expert Skill (Xenology)
SK:Explosives
SK:Explosives (Demolition)
SK:Explosives (Explosive Ordnance Disposal)
SK:Explosives (Fireworks)
SK:Explosives (Nuclear Ordnance Disposal)
SK:Explosives (Underwater Demolition)
SK:Falconry
SK:Farming
SK:Fast-Draw
SK:Fast-Draw (Ammo)
SK:Fast-Draw (Arrow)
SK:Fast-Draw (Force Sword)
SK:Fast-Draw (Knife)
SK:Fast-Draw (Long Arm)
SK:Fast-Draw (Pistol)
SK:Fast-Draw (Sword)
SK:Fast-Draw (Two-Handed Sword)
SK:Fast-Talk
SK:Filch
SK:Finance
SK:Fire Eating
SK:First Aid
SK:Fishing
SK:Flail
SK:Flight
SK:Flying Leap
SK:Force Sword
SK:Force Whip
SK:Forced Entry
SK:Forensics
SK:Forgery
SK:Fortune-Telling
SK:Fortune-Telling (Astrology)
SK:Fortune-Telling (Augury)
SK:Fortune-Telling (Crystal Gazing)
SK:Fortune-Telling (Dream Interpretation)
SK:Fortune-Telling (Feng Shui)
SK:Fortune-Telling (Palmistry)
SK:Fortune-Telling (Tarot)
SK:Forward Observer
SK:Free Fall
SK:Freight Handling
SK:Gambling
SK:Games
SK:Gardening
SK:Garrote
SK:Geography
SK:Geography (Earthlike)
SK:Geography (Gas Giants)
SK:Geography (Hostile Terrestrial)
SK:Geography (Ice Dwarfs)
SK:Geography (Ice Worlds)
SK:Geography (Political)
SK:Geography (Rock Worlds)
SK:Geology
SK:Geology (Earthlike)
SK:Geology (Gas Giants)
SK:Geology (Hostile Terrestrial)
SK:Geology (Ice Dwarfs)
SK:Geology (Ice Worlds)
SK:Geology (Rock Worlds)
SK:Gesture
SK:Group Performance
SK:Group Performance (Choreography)
SK:Group Performance (Conducting)
SK:Group Performance (Directing)
SK:Group Performance (Fight Choreography)
SK:Gunner
SK:Gunner (Beams)
SK:Gunner (Cannon)
SK:Gunner (Catapult)
SK:Gunner (Machine Gun)
SK:Gunner (Rockets)
SK:Guns
SK:Guns (Grenade Launcher)
SK:Guns (Gyroc)
SK:Guns (Light Anti-Armor Weapon)
SK:Guns (Light Machine Gun)
SK:Guns (Musket)
SK:Guns (Pistol)
SK:Guns (Rifle)
SK:Guns (Shotgun)
SK:Guns (Submachine Gun)
SK:Hazardous Materials
SK:Hazardous Materials (Biological)
SK:Hazardous Materials (Chemical)
SK:Hazardous Materials (Radioactive)
SK:Heraldry
SK:Herb Lore
SK:Hidden Lore
SK:Hidden Lore (Conspiracies)
SK:Hidden Lore (Demon Lore)
SK:Hidden Lore (Faerie Lore)
SK:Hidden Lore (Spirit Lore)
SK:Hiking
SK:History
SK:Hobby Skill
SK:Holdout
SK:Housekeeping
SK:Hypnotism
SK:Immovable Stance
SK:Innate Attack
SK:Innate Attack (Beam)
SK:Innate Attack (Breath)
SK:Innate Attack (Gaze)
SK:Innate Attack (Projectile)
SK:Intelligence Analysis
SK:Interrogation
SK:Intimidation
SK:Jeweler
SK:Jitte/Sai
SK:Judo
SK:Jumping
SK:Karate
SK:Kiai
SK:Knife
SK:Knot-Tying
SK:Kusari
SK:Lance
SK:Lasso
SK:Law
SK:Leadership
SK:Leatherworking
SK:Lifting
SK:Light Walk
SK:Linguistics
SK:Lip Reading
SK:Liquid Projector
SK:Liquid Projector (Flamethrower)
SK:Liquid Projector (Sprayer)
SK:Liquid Projector (Squirt Gun)
SK:Liquid Projector (Water Cannon)
SK:Literature
SK:Lockpicking
SK:Machinist
SK:Main-Gauche
SK:Makeup
SK:Market Analysis
SK:Masonry
SK:Mathematics
SK:Mathematics (Applied)
SK:Mathematics (Computer Science)
SK:Mathematics (Cryptology)
SK:Mathematics (Pure)
SK:Mathematics (Statistics)
SK:Mathematics (Surveying)
SK:Mechanic
SK:Meditation
SK:Mental Strength
SK:Merchant
SK:Metallurgy
SK:Meteorology
SK:Meteorology (Earthlike)
SK:Meteorology (Gas Giants)
SK:Meteorology (Hostile Terrestrial)
SK:Meteorology (Ice Dwarfs)
SK:Meteorology (Ice Worlds)
SK:Meteorology (Rock Worlds)
SK:Mimicry
SK:Mimicry (Animal Sounds)
SK:Mimicry (Bird Calls)
SK:Mimicry (Speech)
SK:Mind Block
SK:Monowire Whip
SK:Mount
SK:Musical Composition
SK:Musical Influence
SK:Musical Instrument
SK:Naturalist
SK:Navigation
SK:Navigation (Air)
SK:Navigation (Hyperspace)
SK:Navigation (Land)
SK:Navigation (Sea)
SK:Navigation (Space)
SK:NBC Suit
SK:Net
SK:Observation
SK:Occultism
SK:Packing
SK:Paleontology
SK:Paleontology (Micropaleontology)
SK:Paleontology (Paleoanthropology)
SK:Paleontology (Paleobotany)
SK:Paleontology (Paleozoology)
SK:Panhandling
SK:Parachuting
SK:Parry Missile Weapons
SK:Performance
SK:Pharmacy
SK:Philosophy
SK:Photography
SK:Physician
SK:Physics
SK:Physiology
SK:Pickpocket
SK:Piloting
SK:Piloting (Aerospace)
SK:Piloting (Autogyro)
SK:Piloting (Contragravity)
SK:Piloting (Flight Pack)
SK:Piloting (Glider)
SK:Piloting (Heavy Airplane)
SK:Piloting (Helicopter)
SK:Piloting (High-Performance Airplane)
SK:Piloting (High-Performance Spacecraft)
SK:Piloting (Light Airplane)
SK:Piloting (Lighter-Than-Air)
SK:Piloting (Lightsail)
SK:Piloting (Low-G Wings)
SK:Piloting (Low-Performance Spacecraft)
SK:Piloting (Ultralight)
SK:Piloting (Vertol)
SK:Poetry
SK:Poisons
SK:Polearm
SK:Politics
SK:Power Blow
SK:Pressure Points
SK:Pressure Secrets
SK:Professional Skill
SK:Professional Skill (Air Traffic Controller)
SK:Professional Skill (Barber)
SK:Professional Skill (Brewer)
SK:Professional Skill (Cooper)
SK:Professional Skill (Distiller)
SK:Professional Skill (Dyer)
SK:Professional Skill (Florist)
SK:Professional Skill (Game Designer)
SK:Professional Skill (Glassblower)
SK:Professional Skill (Journalist)
SK:Professional Skill (Prostitute)
SK:Professional Skill (Tailor)
SK:Professional Skill (Tanner)
SK:Professional Skill (Vinter)
SK:Professional Skill (Weaver)
SK:Propaganda
SK:Prospecting
SK:Psychology
SK:Public Speaking
SK:Public Speaking (Debate)
SK:Public Speaking (Oratory)
SK:Public Speaking (Punning)
SK:Public Speaking (Rhetoric)
SK:Public Speaking (Storytelling)
SK:Push
SK:Rapier
SK:Religious Ritual
SK:Research
SK:Riding
SK:Ritual Magic
SK:Running
SK:Saber
SK:Savoir-Faire
SK:Savoir-Faire (Dojo)
SK:Savoir-Faire (High Society)
SK:Savoir-Faire (Mafia)
SK:Savoir-Faire (Military)
SK:Savoir-Faire (Police)
SK:Savoir-Faire (Servant)
SK:Scrounging
SK:Scuba
SK:Seamanship
SK:Search
SK:Sewing
SK:Sex Appeal
SK:Shadowing
SK:Shield
SK:Shield (Buckler)
SK:Shield (Force)
SK:Shield (Shield)
SK:Shiphandling
SK:Shiphandling (Airship)
SK:Shiphandling (Ship)
SK:Shiphandling (Spaceship)
SK:Shiphandling (Starship)
SK:Shiphandling (Submarine)
SK:Shortsword
SK:Singing
SK:Skating
SK:Skiing
SK:Sleight of Hand
SK:Sling
SK:Smallsword
SK:Smith
SK:Smith (Copper)
SK:Smith (Iron)
SK:Smith (Lead and Tin)
SK:Smuggling
SK:Sociology
SK:Soldier
SK:Spacer
SK:Spear
SK:Spear Thrower
SK:Speed-Reading
SK:Sports
SK:Staff
SK:Stage Combat
SK:Stealth
SK:Strategy
SK:Strategy (Air)
SK:Strategy (Interstellar)
SK:Strategy (Land)
SK:Strategy (Naval)
SK:Strategy (Space)
SK:Streetwise
SK:Submarine
SK:Submarine (Free-Flooding Sub)
SK:Submarine (Large Sub)
SK:Submarine (Mini-Sub)
SK:Submariner
SK:Sumo Wrestling
SK:Surgery
SK:Survival
SK:Survival (Arctic)
SK:Survival (Bank)
SK:Survival (Deep Ocean Vent)
SK:Survival (Desert)
SK:Survival (Fresh-Water Lake)
SK:Survival (Island/Beach)
SK:Survival (Jungle)
SK:Survival (Mountain)
SK:Survival (Open Ocean)
SK:Survival (Plains)
SK:Survival (Radioactive Wasteland)
SK:Survival (Reef)
SK:Survival (River/Stream)
SK:Survival (Salt-Water Sea)
SK:Survival (Swampland)
SK:Survival (Tropical Lagoon)
SK:Survival (Woodlands)
SK:Swimming
SK:Symbol Drawing
SK:Tactics
SK:Teaching
SK:Teamster
SK:Thaumatology
SK:Theology
SK:Throwing
SK:Thrown Weapon
SK:Thrown Weapon (Axe/Mace)
SK:Thrown Weapon (Dart)
SK:Thrown Weapon (Harpoon)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Shuriken)
SK:Thrown Weapon (Spear)
SK:Thrown Weapon (Stick)
SK:Tonfa
SK:Tracking
SK:Traps
SK:Two-Handed Axe/Mace
SK:Two-Handed Flail
SK:Two-Handed Sword
SK:Typing
SK:Urban Survival
SK:Vacc Suit
SK:Ventriloquism
SK:Veterinary
SK:Weather Sense
SK:Weird Science
SK:Whip
SK:Wrestling
SK:Writing
SK:Zen Archery

<AllSpellsMagical>
SP:Accuracy
SP:Analyze Magic
SP:Apportation
SP:Armor
SP:Aura
SP:Awaken
SP:Banish
SP:Blur
SP:Breathe Water
SP:Clumsiness
SP:Cold
SP:Command
SP:Continual Light
SP:Counterspell
SP:Create Air
SP:Create Earth
SP:Create Fire
SP:Create Water
SP:Darkness
SP:Daze
SP:Death Vision
SP:Deathtouch
SP:Deflect
SP:Deflect Energy
SP:Deflect Missile
SP:Destroy Water
SP:Detect Magic
SP:Dispel Magic
SP:Earth to Air
SP:Earth to Stone
SP:Enchant
SP:Entombment
SP:Explosive Fireball
SP:Extinguish Fire
SP:Fireball
SP:Flesh to Stone
SP:Fog
SP:Foolishness
SP:Forgetfulness
SP:Fortify
SP:Great Haste
SP:Great Healing
SP:Haste
SP:Heat
SP:Hide Thoughts
SP:Hinder
SP:Icy Weapon
SP:Identify Spell
SP:Ignite Fire
SP:Itch
SP:Lend Energy
SP:Lend Vitality
SP:Light
SP:Lightning
SP:Lockmaster
SP:Magelock
SP:Major Healing
SP:Mass Daze
SP:Mass Sleep
SP:Mind-Reading
SP:Minor Healing
SP:No-Smell
SP:Pain
SP:Paralyze Limb
SP:Planar Summons ([Plane])
SP:Plane Shift ([Plane])
SP:Power
SP:Predict Weather
SP:Puissance
SP:Purify Air
SP:Purify Water
SP:Recover Energy
SP:Resist Cold
SP:Resist Fire
SP:Rooted Feet
SP:Seek Earth
SP:Seek Water
SP:Seeker
SP:Sense Emotion
SP:Sense Foes
SP:Sense Spirit
SP:Shape Air
SP:Shape Earth
SP:Shape Fire
SP:Shape Water
SP:Shield
SP:Sleep
SP:Spasm
SP:Staff
SP:Stench
SP:Stone to Earth
SP:Stone to Flesh
SP:Summon Demon
SP:Summon Spirit
SP:Trace
SP:Truthsayer
SP:Turn Zombie
SP:Walk on Air
SP:Wither Limb
SP:Zombie

<AllSpellsRitual>
SP:Accuracy (Ritual)
SP:Analyze Magic (Ritual)
SP:Apportation (Ritual)
SP:Armor (Ritual)
SP:Aura (Ritual)
SP:Awaken (Ritual)
SP:Banish (Ritual)
SP:Blur (Ritual)
SP:Breathe Water (Ritual)
SP:Clumsiness (Ritual)
SP:Cold (Ritual)
SP:Command (Ritual)
SP:Continual Light (Ritual)
SP:Counterspell (Ritual)
SP:Create Air (Ritual)
SP:Create Earth (Ritual)
SP:Create Fire (Ritual)
SP:Create Water (Ritual)
SP:Darkness (Ritual)
SP:Daze (Ritual)
SP:Death Vision (Ritual)
SP:Deathtouch (Ritual)
SP:Deflect (Ritual)
SP:Deflect Energy (Ritual)
SP:Deflect Missile (Ritual)
SP:Destroy Water (Ritual)
SP:Detect Magic (Ritual)
SP:Dispel Magic (Ritual)
SP:Earth to Air (Ritual)
SP:Earth to Stone (Ritual)
SP:Enchant (Ritual)
SP:Entombment (Ritual)
SP:Explosive Fireball (Ritual)
SP:Extinguish Fire (Ritual)
SP:Fireball (Ritual)
SP:Flesh to Stone (Ritual)
SP:Fog (Ritual)
SP:Foolishness (Ritual)
SP:Forgetfulness (Ritual)
SP:Fortify (Ritual)
SP:Great Haste (Ritual)
SP:Great Healing (Ritual)
SP:Haste (Ritual)
SP:Heat (Ritual)
SP:Hide Thoughts (Ritual)
SP:Hinder (Ritual)
SP:Icy Weapon (Ritual)
SP:Identify Spell (Ritual)
SP:Ignite Fire (Ritual)
SP:Itch (Ritual)
SP:Lend Energy (Ritual)
SP:Lend Vitality (Ritual)
SP:Light (Ritual)
SP:Lightning (Ritual)
SP:Lockmaster (Ritual)
SP:Magelock (Ritual)
SP:Major Healing (Ritual)
SP:Mass Daze (Ritual)
SP:Mass Sleep (Ritual)
SP:Mind-Reading (Ritual)
SP:Minor Healing (Ritual)
SP:No-Smell (Ritual)
SP:Pain (Ritual)
SP:Paralyze Limb (Ritual)
SP:Planar Summons ([Plane]; Ritual)
SP:Plane Shift ([Plane]; Ritual)
SP:Power (Ritual)
SP:Predict Weather (Ritual)
SP:Puissance (Ritual)
SP:Purify Air (Ritual)
SP:Purify Water (Ritual)
SP:Recover Energy (Ritual)
SP:Resist Cold (Ritual)
SP:Resist Fire (Ritual)
SP:Rooted Feet (Ritual)
SP:Seek Earth (Ritual)
SP:Seek Water (Ritual)
SP:Seeker (Ritual)
SP:Sense Emotion (Ritual)
SP:Sense Foes (Ritual)
SP:Sense Spirit (Ritual)
SP:Shape Air (Ritual)
SP:Shape Earth (Ritual)
SP:Shape Fire (Ritual)
SP:Shape Water (Ritual)
SP:Shield (Ritual)
SP:Sleep (Ritual)
SP:Spasm (Ritual)
SP:Staff (Ritual)
SP:Stench (Ritual)
SP:Stone to Earth (Ritual)
SP:Stone to Flesh (Ritual)
SP:Summon Demon (Ritual)
SP:Summon Spirit (Ritual)
SP:Trace (Ritual)
SP:Truthsayer (Ritual)
SP:Turn Zombie (Ritual)
SP:Walk on Air (Ritual)
SP:Wither Limb (Ritual)
SP:Zombie (Ritual)

<AllSpellsClerical>
SP:Accuracy (Clerical)
SP:Analyze Magic (Clerical)
SP:Apportation (Clerical)
SP:Armor (Clerical)
SP:Aura (Clerical)
SP:Awaken (Clerical)
SP:Banish (Clerical)
SP:Blur (Clerical)
SP:Breathe Water (Clerical)
SP:Clumsiness (Clerical)
SP:Cold (Clerical)
SP:Command (Clerical)
SP:Continual Light (Clerical)
SP:Counterspell (Clerical)
SP:Create Air (Clerical)
SP:Create Earth (Clerical)
SP:Create Fire (Clerical)
SP:Create Water (Clerical)
SP:Darkness (Clerical)
SP:Daze (Clerical)
SP:Death Vision (Clerical)
SP:Deathtouch (Clerical)
SP:Deflect (Clerical)
SP:Deflect Energy (Clerical)
SP:Deflect Missile (Clerical)
SP:Destroy Water (Clerical)
SP:Detect Magic (Clerical)
SP:Dispel Magic (Clerical)
SP:Earth to Air (Clerical)
SP:Earth to Stone (Clerical)
SP:Enchant (Clerical)
SP:Entombment (Clerical)
SP:Explosive Fireball (Clerical)
SP:Extinguish Fire (Clerical)
SP:Fireball (Clerical)
SP:Flesh to Stone (Clerical)
SP:Fog (Clerical)
SP:Foolishness (Clerical)
SP:Forgetfulness (Clerical)
SP:Fortify (Clerical)
SP:Great Haste (Clerical)
SP:Great Healing (Clerical)
SP:Haste (Clerical)
SP:Heat (Clerical)
SP:Hide Thoughts (Clerical)
SP:Hinder (Clerical)
SP:Icy Weapon (Clerical)
SP:Identify Spell (Clerical)
SP:Ignite Fire (Clerical)
SP:Itch (Clerical)
SP:Lend Energy (Clerical)
SP:Lend Vitality (Clerical)
SP:Light (Clerical)
SP:Lightning (Clerical)
SP:Lockmaster (Clerical)
SP:Magelock (Clerical)
SP:Major Healing (Clerical)
SP:Mass Daze (Clerical)
SP:Mass Sleep (Clerical)
SP:Mind-Reading (Clerical)
SP:Minor Healing (Clerical)
SP:No-Smell (Clerical)
SP:Pain (Clerical)
SP:Paralyze Limb (Clerical)
SP:Planar Summons ([Plane]; Clerical)
SP:Plane Shift ([Plane]; Clerical)
SP:Power (Clerical)
SP:Predict Weather (Clerical)
SP:Puissance (Clerical)
SP:Purify Air (Clerical)
SP:Purify Water (Clerical)
SP:Recover Energy (Clerical)
SP:Resist Cold (Clerical)
SP:Resist Fire (Clerical)
SP:Rooted Feet (Clerical)
SP:Seek Earth (Clerical)
SP:Seek Water (Clerical)
SP:Seeker (Clerical)
SP:Sense Emotion (Clerical)
SP:Sense Foes (Clerical)
SP:Sense Spirit (Clerical)
SP:Shape Air (Clerical)
SP:Shape Earth (Clerical)
SP:Shape Fire (Clerical)
SP:Shape Water (Clerical)
SP:Shield (Clerical)
SP:Sleep (Clerical)
SP:Spasm (Clerical)
SP:Staff (Clerical)
SP:Stench (Clerical)
SP:Stone to Earth (Clerical)
SP:Stone to Flesh (Clerical)
SP:Summon Demon (Clerical)
SP:Summon Spirit (Clerical)
SP:Trace (Clerical)
SP:Truthsayer (Clerical)
SP:Turn Zombie (Clerical)
SP:Walk on Air (Clerical)
SP:Wither Limb (Clerical)
SP:Zombie (Clerical)

<AllCollegesMagical>
CO:Air
CO:Body Control
CO:Communication & Empathy
CO:Earth
CO:Enchantment
CO:Fire
CO:Gate
CO:Healing
CO:Knowledge
CO:Light & Darkness
CO:Meta-Spells
CO:Mind Control
CO:Movement
CO:Necromancy
CO:Protection & Warning
CO:Water

************************************************************************************************************************
[GROUPS]
************************************************************************************************************************
<Conducting>
SK:Musical Instrument
SK:Singing

<Musical Instrument>
SK:Musical Instrument

<Appeal>
ST:Appealing
ST:Unappealing

<3D Spatial Sense>
SK:Aerobatics
SK:Free Fall
SK:Navigation (Hyperspace)
SK:Navigation (Space)

<Absolute Direction>
SK:Body Sense
SK:Navigation (Air)
SK:Navigation (Land)
SK:Navigation (Sea)

<Animal Friend>
SK:Animal Handling
SK:Falconry
SK:Packing
SK:Riding
SK:Teamster
SK:Veterinary

<Artificer>
SK:Armoury
SK:Carpentry
SK:Electrician
SK:Electronics Repair
SK:Engineer
SK:Machinist
SK:Masonry
SK:Mechanic
SK:Smith

<Business Acumen>
SK:Accounting
SK:Administration
SK:Economics
SK:Finance
SK:Gambling
SK:Market Analysis
SK:Merchant
SK:Propaganda

<Charisma>
SK:Fortune-Telling
SK:Leadership
SK:Panhandling
SK:Public Speaking

<Combat Reflexes>
ST:Dodge
ST:Parry
ST:Block
SK:Fast-Draw

<Empathy>
SK:Detect Lies
SK:Fortune-Telling

<Flexibility>
SK:Climbing
SK:Escape
SK:Erotic Art

<Gifted Artist>
SK:Artist
SK:Jeweler
SK:Leatherworking
SK:Photography
SK:Sewing

<Green Thumb>
SK:Biology
SK:Farming
SK:Gardening
SK:Herb Lore
SK:Naturalist

<Healer>
SK:Diagnosis
SK:Esoteric Medicine
SK:First Aid
SK:Pharmacy
SK:Physician
SK:Physiology
SK:Psychology
SK:Surgery
SK:Veterinary

<High Manual Dexterity>
SK:Artist
SK:Jeweler
SK:Knot-Tying
SK:Leatherworking
SK:Lockpicking
SK:Pickpocket
SK:Sewing
SK:Sleight of Hand
SK:Surgery

<Hunchback>
SK:Disguise
SK:Shadowing

<Hyperspectral Vision>
SK:Forensics
SK:Observation
SK:Search

<Influence Skills>
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<Killjoy>
SK:Carousing
SK:Connoisseur
SK:Erotic Art
SK:Gambling

<Low Empathy>
SK:Acting
SK:Carousing
SK:Criminology
SK:Detect Lies
SK:Diplomacy
SK:Enthrallment
SK:Fast-Talk
SK:Interrogation
SK:Leadership
SK:Merchant
SK:Politics
SK:Psychology
SK:Savoir-Faire
SK:Sex Appeal
SK:Sociology
SK:Streetwise

<Mathematical Ability>
SK:Accounting
SK:Astronomy
SK:Cryptography
SK:Engineer
SK:Finance
SK:Market Analysis
SK:Mathematics
SK:Physics

<Musical Ability>
SK:Group Performance (Conducting)
SK:Musical Composition
SK:Musical Influence
SK:Musical Instrument
SK:Singing

<Oblivious>
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<Outdoorsman>
SK:Camouflage
SK:Fishing
SK:Mimicry
SK:Naturalist
SK:Navigation
SK:Survival
SK:Tracking

<Perfect Balance>
SK:Acrobatics
SK:Aerobatics
SK:Aquabatics
SK:Climbing
SK:Piloting

<Seek Spells>
SP:Seek Earth
SP:Seek Water 

<Shyness>
SK:Acting
SK:Carousing
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Leadership
SK:Merchant
SK:Panhandling
SK:Performance
SK:Politics
SK:Public Speaking
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise
SK:Teaching

<Smooth Operator>
SK:Acting
SK:Carousing
SK:Detect Lies
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Leadership
SK:Panhandling
SK:Politics
SK:Public Speaking
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<Stuttering>
SK:Diplomacy
SK:Fast-Talk
SK:Performance
SK:Public Speaking
SK:Sex Appeal
SK:Singing

<Voice>
SK:Diplomacy
SK:Fast-Talk
SK:Mimicry
SK:Performance
SK:Politics
SK:Public Speaking
SK:Sex Appeal
SK:Singing

<Unarmed Combat Skill>
SK:Boxing
SK:Brawling
SK:Karate
SK:Judo
SK:Sumo Wrestling
SK:Wrestling

<Melee Weapon Skill>
SK:Axe/Mace
SK:Broadsword
SK:Cloak
SK:Flail
SK:Force Sword
SK:Force Whip
SK:Garrote
SK:Jitte/Sai
SK:Knife
SK:Kusari
SK:Lance
SK:Main-Gauche
SK:Monowire Whip
SK:Parry Missile Weapons
SK:Polearm
SK:Rapier
SK:Saber
SK:Shortsword
SK:Smallsword
SK:Spear
SK:Staff
SK:Tonfa
SK:Two-Handed Axe/Mace
SK:Two-Handed Flail
SK:Two-Handed Sword
SK:Whip

<One-Handed Melee Weapon Skill>
SK:Axe/Mace
SK:Broadsword
SK:Flail
SK:Force Sword
SK:Force Whip
SK:Garrote
SK:Jitte/Sai
SK:Knife
SK:Kusari
SK:Main-Gauche
SK:Monowire Whip
SK:Polearm
SK:Rapier
SK:Saber
SK:Shortsword
SK:Smallsword
SK:Spear
SK:Staff
SK:Tonfa
SK:Whip

<ShieldSkill>
SK:Shield (Shield)
SK:Shield (Buckler)
SK:Shield (Force)

<Ranged Weapon Skill>
SK:Artillery (Beams)
SK:Artillery (Bombs)
SK:Artillery (Cannon)
SK:Artillery (Catapult)
SK:Artillery (Guided Missile)
SK:Artillery (Torpedoes)
SK:Beam Weapons (Pistol)
SK:Beam Weapons (Projector)
SK:Beam Weapons (Rifle)
SK:Blowpipe
SK:Bolas
SK:Bow
SK:Crossbow
SK:Dropping
SK:Gunner (Beams)
SK:Gunner (Cannon)
SK:Gunner (Catapult)
SK:Gunner (Machine Gun)
SK:Gunner (Rockets)
SK:Guns (Grenade Launcher)
SK:Guns (Gyroc)
SK:Guns (Light Anti-Armor Weapon)
SK:Guns (Light Machine Gun)
SK:Guns (Musket)
SK:Guns (Pistol)
SK:Guns (Rifle)
SK:Guns (Shotgun)
SK:Guns (Submachine Gun)
SK:Innate Attack (Beam)
SK:Innate Attack (Breath)
SK:Innate Attack (Gaze)
SK:Innate Attack (Projectile)
SK:Lasso
SK:Liquid Projector (Flamethrower)
SK:Liquid Projector (Sprayer)
SK:Liquid Projector (Squirt Gun)
SK:Liquid Projector (Water Cannon)
SK:Net
SK:Sling
SK:Spear Thrower
SK:Thrown Weapon (Axe/Mace)
SK:Thrown Weapon (Dart)
SK:Thrown Weapon (Harpoon)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Shuriken)
SK:Thrown Weapon (Spear)
SK:Thrown Weapon (Stick)


************************************************************************************************************************
* [GROUPS]
* These GROUPS are from the Magic Data File to try to aleviate a possible crash bug
* with spells that have Groups in their Prerequisites
************************************************************************************************************************

<Animal Control>
SP:Bird Control
SP:Fish Control
SP:Mammal Control
SP:Reptile Control
SP:Vermin Control

<Create Spells>
SP:Create Acid
SP:Create Air
SP:Create Air Elemental
SP:Create Animal
SP:Create Door
SP:Create Earth
SP:Create Earth Elemental
SP:Create Fire
SP:Create Fire Elemental
SP:Create Food
SP:Create Fuel
SP:Create Gate
SP:Create Ice
SP:Create Mount
SP:Create Object
SP:Create Plant
SP:Create Servant
SP:Create Spring
SP:Create Steam
SP:Create Warrior
SP:Create Water
SP:Create Water Elemental

<Dull Senses>
SP:Dull Hearing
SP:Dull Taste and Smell
SP:Dull Vision

<Energy Spells>
SP:Seek Power
SP:Seek Fuel
SP:Test Fuel
SP:Preserve Fuel
SP:Purify Fuel
SP:Create Fuel
SP:Essential Fuel
SP:Stop Power
SP:Lend Power
SP:Propel
SP:Conduct Power
SP:Steal Power
SP:Draw Power
SP:Magnetic Vision
SP:Radio Hearing
SP:Spectrum Vision

<Keen Senses>
SP:Keen Hearing
SP:Keen Taste and Smell
SP:Keen Vision

<Lightning Spells>
SP:Ball of Lightning
SP:Body of Lightning
SP:Explosive Lightning
SP:Lightning
SP:Lightning Armor
SP:Lightning Missiles
SP:Lightning Stare
SP:Lightning Weapon
SP:Lightning Whip
SP:Resist Lightning
SP:Wall of Lightning

<Radiation Spells>
SP:Breathe Radiation
SP:Cure Radiation
SP:Extinguish Radiation
SP:Irradiate
SP:Radiation Jet
SP:Resist Radiation
SP:See Radiation
SP:Seek Radiation

<Restore Spells>
SP:Restore Hearing
SP:Restore Memory
SP:Restore Sight
SP:Restore Speech

<Seek Spells>
SP:Seek Air
SP:Seek Coastline
SP:Seek Earth
SP:Seek Fire
SP:Seek Food
SP:Seek Fuel
SP:Seek Gate
SP:Seek Machine
SP:Seek Magic
SP:Seek Pass
SP:Seek Plant
SP:Seek Plastic
SP:Seek Power
SP:Seek Radiation
SP:Seek Water

<Shape Spells>
SP:Shape Air
SP:Shape Darkness
SP:Shape Earth
SP:Shape Fire
SP:Shape Light
SP:Shape Metal
SP:Shape Plant
SP:Shape Plastic
SP:Shape Water

<Shapeshifting>
SP:Shapeshifting

<Transmutation Spells>
SP:Earth to Air
SP:Earth to Stone
SP:Earth to Water
SP:Flesh to Ice
SP:Flesh to Stone
SP:Stone to Earth
SP:Stone to Flesh
SP:Water to Wine

<Weapon Enchantments>
SP:Accuracy
SP:Bane
SP:Blank Spell Arrow
SP:Cornucopia
SP:Dancing Weapon
SP:Defending Weapon
SP:Ghost Weapon
SP:Graceful Weapon
SP:Loyal Sword
SP:Penetration Weapon
SP:Puissance
SP:Quick-Aim
SP:Quick-Draw
SP:Speed Spell Arrow
SP:Spell Arrow
SP:Weapon Spirit

************************************************************************************************************************
[MODIFIERS]
************************************************************************************************************************
*Innate Attack Modifiers

<Innate Attack>
Partial Dice (Does only 1 pt), *0.25, group(Innate Attack), page(B62), tier(-1),
	gives(_
		=nobase to owner::damage$,
		=1 to owner::damage_
		)

<Affliction Enhancements>
Contact Agent, +150%, group(Affliction Enhancements), page(B103)

<Affliction Limitations>
Blood Agent, -40%, group(Affliction Limitations), page(B110)
Contact Agent, -30%, group(Affliction Limitations), page(B111)

<Burning Attack Enhancements>
Partial Dice, +2/+3/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Burning Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Burning Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Burning Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Cyclic (1 day interval), +0%/+10%/+20%, group(Burning Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/day}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 10), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 hour interval), +0%/+20%/+40%, group(Burning Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/hr}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 20), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 minute interval), +0%/+40%/+80%, group(Burning Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/min}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 40), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (10 second interval), +0%/+50%/+100%, group(Burning Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/10sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 50), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 second interval), +0%/+100%/+200%, group(Burning Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 100), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic: Contagious, +20%/+50%, upto(2), levelnames (Mildly, Highly), group(Burning Attack Enhancements), page(B103), shortname(Contagious)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Burning Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Radiation, +100%, shortname(Radiation (burning)), group(Burning Attack Enhancements), page(B104),
	gives(=" rad" to owner::damtype$)

<Burning Attack Limitations>
Partial Dice, -1/-3/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Burning Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -1/-3/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Burning Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)

<Crushing Attack Enhancements>
Partial Dice, +2/+3/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Crushing Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Crushing Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Crushing Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Knockback, +20%, shortname(Double Knockback), group(Crushing Attack Enhancements), page(B104),
	gives(=" dbk" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Crushing Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Crushing Attack Limitations>
Partial Dice, -1/-3/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Crushing Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -1/-3/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Crushing Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Crushing Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Knockback, -10%, shortname(No Knockback), group(Crushing Attack Limitations), page(B111),
	gives(=" nkb" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Crushing Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Corrosion Attack Enhancements>
Partial Dice, +3/+6/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Corrosion Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +3/+6/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Corrosion Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +3/+6/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Corrosion Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Cyclic (1 day interval), +0%/+10%/+20%, group(Corrosion Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/day}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 10), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 hour interval), +0%/+20%/+40%, group(Corrosion Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/hr}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 20), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 minute interval), +0%/+40%/+80%, group(Corrosion Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/min}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 40), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (10 second interval), +0%/+50%/+100%, group(Corrosion Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/10sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 50), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 second interval), +0%/+100%/+200%, group(Corrosion Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 100), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic: Contagious, +20%/+50%, upto(2), levelnames (Mildly, Highly), group(Corrosion Attack Enhancements), page(B103), shortname(Contagious)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Corrosion Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Corrosion Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Corrosion Attack Limitations>
Partial Dice, -3/-6/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Corrosion Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -3/-6/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Corrosion Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)

<Cutting Attack Enhancements>
Partial Dice, +3/+5/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Cutting Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +3/+5/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Cutting Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +3/+5/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Cutting Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Cutting Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Double Knockback, +20%, shortname(Double Knockback), group(Cutting Attack Enhancements), page(B104),
	gives(=" dkb" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Cutting Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Cutting Attack Limitations>
Partial Dice, -2/-4/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Cutting Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -2/-4/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Cutting Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Cutting Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Knockback, -10%, shortname(No Knockback), group(Cutting Attack Limitations), page(B111),
	gives(=" nkb" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Cutting Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Fatigue Attack Enhancements>
Partial Dice, +3/+6/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Fatigue Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +3/+6/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Fatigue Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +3/+6/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Fatigue Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Contact Agent, +150%, group(Fatigue Attack Enhancements), page(B103)
Cyclic (1 day interval), +0%/+10%/+20%, group(Fatigue Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/day}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 10), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 hour interval), +0%/+20%/+40%, group(Fatigue Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/hr}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 20), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 minute interval), +0%/+40%/+80%, group(Fatigue Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/min}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 40), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (10 second interval), +0%/+50%/+100%, group(Fatigue Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/10sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 50), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 second interval), +0%/+100%/+200%, group(Fatigue Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 100), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic: Contagious, +20%/+50%, upto(2), levelnames (Mildly, Highly), group(Fatigue Attack Enhancements), page(B103), shortname(Contagious)
Damage Modifier: Dehydration Hazard, +20%, shortname(Dehydration Hazard), group(Fatigue Attack Enhancements), page(B104),
	gives(=" dhyd" to owner::damtype$)
Damage Modifier: Drowning Hazard, +0%, shortname(Drowning Hazard), group(Fatigue Attack Enhancements), page(B104),
	gives(=" drwn" to owner::damtype$)
Damage Modifier: Freezing Hazard, +20%, shortname(Freezing Hazard), group(Fatigue Attack Enhancements), page(B104),
	gives(=" frz" to owner::damtype$)
Damage Modifier: Missed Sleep Hazard, +50%, shortname(Missed Sleep Hazard), group(Fatigue Attack Enhancements), page(B104),
	gives(=" slp" to owner::damtype$)
Damage Modifier: Starvation Hazard, +40%, shortname(Starvation Hazard), group(Fatigue Attack Enhancements), page(B104),
	gives(=" strv" to owner::damtype$)
Damage Modifier: Suffocation Hazard, +0%, shortname(Suffocation Hazard), group(Fatigue Attack Enhancements), page(B104),
	gives(=" suf" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Fatigue Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Fatigue Attack Limitations>
Partial Dice, -3/-6/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Fatigue Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -3/-6/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Fatigue Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Blood Agent, -40%, group(Fatigue Attack Limitations), page(B110)
Contact Agent, -30%, group(Fatigue Attack Limitations), page(B111)
Resistible, -5%/-10%, group(Fatigue Attack Limitations), page(B115), gives(=" R-HT$if(me::level>5 THEN "+$solver(me::level-6)" ELSE "$solver(me::level-6)")" to owner::damtype$),
	levelnames(HT-5, HT-4, HT-3, HT-2, HT-1, HT)

<Huge Piercing Attack Enhancements>
Partial Dice, +3/+5/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Huge Piercing Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +3/+5/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Huge Piercing Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +3/+5/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Huge Piercing Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Huge Piercing Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Huge Piercing Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Huge Piercing Attack Limitations>
Partial Dice, -2/-4/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Huge Piercing Attack Limitations), page(B62), gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -2/-4/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Huge Piercing Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Huge Piercing Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Huge Piercing Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Impaling Attack Enhancements>
Partial Dice, +3/+5/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Impaling Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +3/+5/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Impaling Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +3/+5/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Impaling Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Impaling Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Impaling Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Impaling Attack Limitations>
Partial Dice, -2/-4/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Impaling Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -2/-4/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Impaling Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Impaling Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Impaling Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Large Piercing Attack Enhancements>
Partial Dice, +2/+4/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Large Piercing Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +2/+4/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Large Piercing Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +2/+4/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Large Piercing Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Large Piercing Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Large Piercing Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Large Piercing Attack Limitations>
Partial Dice, -1/-3/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Large Piercing Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -1/-3/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Large Piercing Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Large Piercing Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Large Piercing Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Piercing Attack Enhancements>
Partial Dice, +2/+3/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Piercing Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Piercing Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Piercing Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Piercing Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Piercing Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Piercing Attack Limitations>
Partial Dice, -1/-3/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Piercing Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -1/-3/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Piercing Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Piercing Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Piercing Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Small Piercing Attack Enhancements>
Partial Dice (per die), +1/+2/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Small Piercing Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +1/+2/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Small Piercing Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Damage Modifier: Double Blunt Trauma, +20%, shortname(Double Blunt Trauma), group(Small Piercing Attack Enhancements), page(B104),
	gives(=" dbt" to owner::damtype$)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Small Piercing Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)

<Small Piercing Attack Limitations>
Partial Dice, +0/-1/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Small Piercing Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), +0/-1/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Small Piercing Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Damage Limitation: No Blunt Trauma, -20%, shortname(No Blunt Trauma), group(Small Piercing Attack Limitations), page(B111),
	gives(=" nbt" to owner::damtype$)
Damage Limitation: No Wounding, -50%, shortname(No Wounding), group(Small Piercing Attack Limitations), page(B111),
	gives(=" nw" to owner::damtype$)

<Toxic Attack Enhancements>
Partial Dice, +2/+3/+, formula(@int(me::level * (owner::premodspoints / owner::level) * 0.3 + 0.9)), forceformula(yes),
	group(Toxic Attack Enhancements), page(B62),
	gives(+1 to owner::damage)
Partial Dice (per die), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Toxic Attack Enhancements), page(B62),
	gives(+owner::level to owner::damage),
	levelnames(+1/die,+2/die,+3/die,+4/die,+5/die,+6/die,+7/die,+8/die,+9/die,+10/die,+11/die,+12/die,+13/die,+14/die,+15/die,+16/die,+17/die,+18/die,+19/die,+20/die),
	upto(20)
Partial Dice (per level), +2/+3/+, formula(@int(me::level * owner::premodspoints * 0.3 + 0.9) - owner::premodspoints), forceformula(yes),
	group(Toxic Attack Enhancements), page(B62),
	gives(=nobase to owner::damage$, +owner::level to owner::damage),
	levelnames(+1/level,+2/level,+3/level,+4/level,+5/level,+6/level,+7/level,+8/level,+9/level,+10/level),
	upto(10), x(#Message("This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.")),
	description(This modifier replaces the base dice of damage with a straight +X damage per level of the Innate Attack, where +X is equal to the level of this modifier. e.g. taking this modifier at level 3 will result in +3 damage for every level of the Innate Attack you take.)
Contact Agent, +150%, group(Toxic Attack Enhancements), page(B103)
Cyclic (1 day interval), +0%/+10%/+20%, group(Toxic Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/day}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 10), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 hour interval), +0%/+20%/+40%, group(Toxic Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/hr}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 20), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 minute interval), +0%/+40%/+80%, group(Toxic Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/min}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 40), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (10 second interval), +0%/+50%/+100%, group(Toxic Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/10sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 50), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic (1 second interval), +0%/+100%/+200%, group(Toxic Attack Enhancements), page(B103), gives(=" {x$solver(me::level)/sec}" to owner::damtype$), level(2),
	formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 100), forceformula(yes),
	levelnames(1 cycle, 2 cycles, 3 cycles, 4 cycles, 5 cycles, 6 cycles, 7 cycles, 8 cycles, 9 cycles, 10 cycles, 11 cycles, 12 cycles, 13 cycles, 14 cycles, 15 cycles, 16 cycles, 17 cycles, 18 cycles, 19 cycles, 20 cycles, 21 cycles, 22 cycles, 23 cycles, 24 cycles, 25 cycles, 26 cycles, 27 cycles, 28 cycles, 29 cycles, 30 cycles, 31 cycles, 32 cycles, 33 cycles, 34 cycles, 35 cycles, 36 cycles, 37 cycles, 38 cycles, 39 cycles, 40 cycles, 41 cycles, 42 cycles, 43 cycles, 44 cycles, 45 cycles, 46 cycles, 47 cycles, 48 cycles, 49 cycles, 50 cycles, 51 cycles, 52 cycles, 53 cycles, 54 cycles, 55 cycles, 56 cycles, 57 cycles, 58 cycles, 59 cycles, 60 cycles, 61 cycles, 62 cycles, 63 cycles, 64 cycles, 65 cycles, 66 cycles, 67 cycles, 68 cycles, 69 cycles, 70 cycles, 71 cycles, 72 cycles, 73 cycles, 74 cycles, 75 cycles, 76 cycles, 77 cycles, 78 cycles, 79 cycles, 80 cycles, 81 cycles, 82 cycles, 83 cycles, 84 cycles, 85 cycles, 86 cycles, 87 cycles, 88 cycles, 89 cycles, 90 cycles, 91 cycles, 92 cycles, 93 cycles, 94 cycles, 95 cycles, 96 cycles, 97 cycles, 98 cycles, 99 cycles, 100 cycles)
Cyclic: Contagious, +20%/+50%, upto(2), levelnames (Mildly, Highly), group(Toxic Attack Enhancements), page(B103), shortname(Contagious)
Damage Modifier: Incendiary, +10%, shortname(Incendiary), group(Toxic Attack Enhancements), page(B104),
	gives(=" inc" to owner::damtype$)
Damage Modifier: Radiation, +25%, shortname(Radiation), group(Toxic Attack Enhancements), page(B104),
	gives(=" rad" to owner::damtype$)

<Toxic Attack Limitations>
Partial Dice, -1/-2/+, formula(@max(@int(%level * -(owner::premodspoints / owner::level) * 0.3 + 0.9), 1 - owner::premodspoints)), forceformula(yes),
	group(Toxic Attack Limitations), page(B62),
	gives(-1 to owner::damage),
	upto(@int(owner::level * 10/3)),
	levelnames(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100)
Partial Dice (per die), -1/-2/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),
	group(Toxic Attack Limitations), page(B62),
	gives(-owner::level to owner::damage),
	upto(3),
	levelnames(-1/die,-2/die,-3/die)
Blood Agent, -40%, group(Toxic Attack Limitations), page(B110)
Contact Agent, -30%, group(Toxic Attack Limitations), page(B111)
Resistible, -5%/-10%, group(Toxic Attack Limitations), page(B115), gives(=" R-HT$if(me::level>5 THEN "+$solver(me::level-6)" ELSE "$solver(me::level-6)")" to owner::damtype$),
	levelnames(HT-5, HT-4, HT-3, HT-2, HT-1, HT)

<_Attack Enhancements>
_Based on [Alternate Skill], +0%/+20%, upto(2), levelnames("",""), shortname(Based on [Alternate Skill]),
	x(_
	#InputReplace("Please enter the exact skill name (and extension) that this ability uses; multiple skills may listed separated by a comma; skill penalties may be added:", "[Alternate Skill]", "Name (Extension), NameTwo (ExtensionTwo)-3", "Attack Enhancements")_
	),
	gives(_
			=nobase to owner::skillused$, ="[Alternate Skill]" to owner::skillused$_
			),
	addmode(Primary, skillused([Alternate Skill]))
Accurate, +5%/+10%, group(_Attack Enhancements), page(B102),
	gives(+1 to owner::acc)
Area Effect, +50%/+100%, group(_Attack Enhancements), page(B102), upto(25), shortname(Area Effect),
	formula(50 * (me::level - @if(owner::radius > 0 THEN 1 ELSE 0))), forceformula(yes),
	levelnames("2 yd","4 yd","8 yd","16 yd","32 yd","64 yd","128 yd","256 yd","512 yd","0.58 mi","1.2 mi","2.3 mi","4.7 mi","9.3 mi","19.0 mi","37.0 mi","74.0 mi","150.0 mi","300.0 mi","600.0 mi","1,200 mi","2,400 mi","4,800 mi","9,500 mi","19,000 mi","38,000 mi","76,000 mi","150,000 mi","310,000 mi","610,000 mi","1,200,000 mi","2,400,000 mi","4,900,000 mi","9,800,000 mi","20,000,000 mi","39,000,000 mi"),
	gives(=+@if(owner::radius > 0 THEN 0 ELSE (2^me::level)) to owner::radius, =*@if(owner::radius > 0 THEN (0.5 * (2^me::level))) to owner::radius)

Armor Divisor, +50%/+100%, levelnames(2, 3, 5, 10), upto(4), group(_Attack Enhancements), page(B102),
	gives(=@indexedvalue(me::level, 2, 3, 5, 10) to owner::armordivisor)
Aura, +80%, group(_Attack Enhancements), page(B102),
	x(#Message("Aura requires the Melee Attack: Reach C limitation"))

Based On ST (Target Roll), +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="ST-$solver(owner::level - 1) " to owner::damage$)
Based On DX (Target Roll), +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="DX-$solver(owner::level - 1) " to owner::damage$)
Based On IQ (Target Roll), +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="IQ-$solver(owner::level - 1) " to owner::damage$)
Based On HT (Target Roll), +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="HT-$solver(owner::level - 1) " to owner::damage$)
Based On Per (Target Roll), +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="Per-$solver(owner::level - 1) " to owner::damage$)
Based On Will (Target Roll), +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="Will-$solver(owner::level - 1) " to owner::damage$)

Blood Agent, +100%, group(_Attack Enhancements), page(B102)
Cone, +60%/+70%, group(_Attack Enhancements), page(B103),
	gives(=" ($solver(me::level)yd)" to owner::damtype$),
	description(The first level of Cone *includes* the base +50% cost and the +10% for the first yard of width.)
Damage Modifier: Explosion, +50%/+100%, upto(3), shortname(Explosive), group(_Attack Enhancements), page(B104),
	levelnames(Damage / 3xYards, Damage / 2xYards, Damage / 1xYards),
	gives(=" ex/$solver(4-me::level)" to owner::damtype$)
Damage Modifier: Fragmentation, +15%/+30%, upto(@min(owner::level, 12)), shortname(Fragmentation), group(_Attack Enhancements), page(B104),
	levelnames([0d], [1d], [2d], [3d], [4d], [5d], [6d], [7d], [8d], [9d], [10d], [11d], [12d]),
	gives(=" frag cut " to owner::damtype$, =$indexedvalue(me::level, "[1d]", "[2d]", "[3d]", "[4d]", "[5d]", "[6d]", "[7d]", "[8d]", "[9d]", "[10d]", "[11d]", "[12d]") to owner::damtype$)
Damage Modifier: Fragmentation (hot fragments), +15%/+30%, upto(@min(owner::level, 12)), shortname(Fragmentation (hot)), group(_Attack Enhancements), page(B104),
	levelnames([0d], [1d(0.2)], [2d(0.2)], [3d(0.2)], [4d(0.2)], [5d(0.2)], [6d(0.2)], [7d(0.2)], [8d(0.2)], [9d(0.2)], [10d(0.2)], [11d(0.2)], [12d(0.2)]),
	gives(=" frag burn " to owner::damtype$, =$indexedvalue(me::level, "[1d(0.2)]", "[2d(0.2)]", "[3d(0.2)]", "[4d(0.2)]", "[5d(0.2)]", "[6d(0.2)]", "[7d(0.2)]", "[8d(0.2)]", "[9d(0.2)]", "[10d(0.2)]", "[11d(0.2)]", "[12d(0.2)]") to owner::damtype$)
Damage Modifier: Surge, +20%, shortname(Surge), group(_Attack Enhancements), page(B104),
	gives(=" sur" to owner::damtype$)
Damage Multiplier, *2/*3, group(Burning Attack Enhancements), page(),
	levelnames(x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100),
	gives(_
		=nocalc to owner::damage$,
		="x$solver(1+me::level)" to owner::damage$ _
		),
	x(#Message(_
			"This modifier replaces the damage with an 3dx5 style damage listing."_
			)_
	)

Delay: Fixed, +0%, group(_Attack Enhancements), page(B105)
Delay: Variable (10 seconds or less), +10%, group(_Attack Enhancements), page(B105)
Delay: Variable (longer than 10 seconds), +20%, group(_Attack Enhancements), page(B105)
Delay: Triggered, +50%, group(_Attack Enhancements), page(B105)
Drifting, +20%, group(_Attack Enhancements), page(B105)
Follow-Up, +0%/+5%, group(_Attack Enhancements), page(B105),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		=nobase to owner::acc$,
		=nobase to owner::rof$,
		=nobase to owner::shots$,
		=nobase to owner::rcl$,
		=-3 to owner::acc,
		="Fol-Up" to owner::reach$,
		=nobase to owner::parry$,
		="No" to owner::parry$ _
		),
		x(_
		#InputToTagReplace("Please describe the attack that this one is a Follow-Up to:" , nameext, ,"Follow-Up")_
		)
Guided, +50%, group(_Attack Enhancements), page(B105)
Homing, +50%/+51%/+52%, group(_Attack Enhancements), page(B105), mods(Homing)
Increased Range, +10%/+20%, group(_Attack Enhancements), page(B106),
	levelnames(x2, x5, x10, x20, x50, x100, x200, x500, "x1,000", "x2,000", "x5,000", "x10,000", "x20,000", "x50,000", "x100,000", "x200,000", "x500,000", "x1,000,000", "x2,000,000", "x5,000,000", "x10,000,000", "x20,000,000", "x50,000,000", "x100,000,000", "x200,000,000", "x500,000,000", "x1,000,000,000", "x2,000,000,000", "x5,000,000,000", "x10,000,000,000", "x20,000,000,000", "x50,000,000,000", "x100,000,000,000", "x200,000,000,000", "x500,000,000,000", "x1,000,000,000,000"), upto(36),
	gives(_
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangehalfdam,
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangemax _
		)
Increased Range (1/2D Range only), +5%/+10%, group(_Attack Enhancements), page(B106),
	levelnames(x2, x5, x10, x20, x50, x100, x200, x500, "x1,000", "x2,000", "x5,000", "x10,000", "x20,000", "x50,000", "x100,000", "x200,000", "x500,000", "x1,000,000", "x2,000,000", "x5,000,000", "x10,000,000", "x20,000,000", "x50,000,000", "x100,000,000", "x200,000,000", "x500,000,000", "x1,000,000,000", "x2,000,000,000", "x5,000,000,000", "x10,000,000,000", "x20,000,000,000", "x50,000,000,000", "x100,000,000,000", "x200,000,000,000", "x500,000,000,000", "x1,000,000,000,000"), upto(36),
	gives(_
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangehalfdam _
		)
Increased Range (Max Range only), +5%/+10%, group(_Attack Enhancements), page(B106),
	levelnames(x2, x5, x10, x20, x50, x100, x200, x500, "x1,000", "x2,000", "x5,000", "x10,000", "x20,000", "x50,000", "x100,000", "x200,000", "x500,000", "x1,000,000", "x2,000,000", "x5,000,000", "x10,000,000", "x20,000,000", "x50,000,000", "x100,000,000", "x200,000,000", "x500,000,000", "x1,000,000,000", "x2,000,000,000", "x5,000,000,000", "x10,000,000,000", "x20,000,000,000", "x50,000,000,000", "x100,000,000,000", "x200,000,000,000", "x500,000,000,000", "x1,000,000,000,000"), upto(36),
	gives(_
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangemax _
		)
Jet, +0%, group(_Attack Enhancements), page(B106),
	gives(-3 to owner::acc, *0.5 to owner::rangehalfdam, *0.1 to owner::rangemax, =nobase to owner::rof$, ="Jet" to owner::rof$)
Jet: Increased Range, +10%/+20%, shortname(Increased Range), group(_Attack Enhancements), page(B106),
	levelnames(x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100),
	gives(_
		=*(me::level + 1) to owner::rangehalfdam,
		=*(me::level + 1) to owner::rangemax _
		)
Jet: Increased Range (1/2D Range Only), +5%/+10%, shortname(Increased Range (1/2D Range Only)), group(_Attack Enhancements), page(B106),
	levelnames(x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100),
	gives(_
		=*(me::level + 1) to owner::rangehalfdam _
		)
Jet: Increased Range (Max Range Only), +5%/+10%, shortname(Increased Range (Max Range Only)), group(_Attack Enhancements), page(B106),
	levelnames(x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100),
	gives(_
		=*(me::level + 1) to owner::rangemax _
		)
Low Signature, +10%, group(_Attack Enhancements), page(B106)
No Signature, +20%, group(_Attack Enhancements), page(B106)
Malediction, +100%/+150%/+200%, upto(3), group(_Attack Enhancements), page(B106),
	levelnames(Receives -1/yd range, Uses Speed/Range Table, Uses Long-Distance Modifiers),
	gives(_
		=nobase to owner::reach$,
		=nobase to owner::acc$,
		=nobasenocalc to owner::rangehalfdam$,
		=nobasenocalc to owner::rangemax$,
		=nobase to owner::rof$,
		=nobase to owner::shots$,
		=nobase to owner::rcl$,
		=" mal " to owner::damtype$,
		=$indexedvalue(me::level, "-1/yd", "Speed/Range", "Long-Distance") to owner::rangemax$_
		)
Mobile, +40%/+80%, group(_Attack Enhancements), page(B107)
Overhead, +30%, group(_Attack Enhancements), page(B107)
Persistent, +40%, group(_Attack Enhancements), page(B107)

Rapid Fire, +0%/+40%/+50%/+70%/+,
	formula(@if(me::level > 150 THEN 300 ELSE @if(me::level > 70 THEN 250 ELSE _
			@if(me::level > 30 THEN 200 ELSE @if(me::level > 15 THEN 150 ELSE _
			@if(me::level > 7 THEN 100 ELSE @if(me::level > 3 THEN 70 ELSE _
			@if(me::level = 3 THEN 50 ELSE @if(me::level = 2 THEN 40 ELSE 0))))))))), forceformula(yes),
	group(_Attack Enhancements), page(B108), level([level]), upto(300),
	gives(_
		=nobase to owner::rof$,
		=$solver(me::level) to owner::rof$ _
		),
	x(#InputReplace("Please enter the desired RoF (upto 300):", "[level]", "2", "Rapid Fire"))

Rapid Fire (Multiple Projectiles), +0%/+40%/+50%/+70%/+,
	levelnames(1x[projectiles],2x[projectiles],3x[projectiles],4x[projectiles],5x[projectiles],6x[projectiles],7x[projectiles],8x[projectiles],9x[projectiles],10x[projectiles],11x[projectiles],12x[projectiles],13x[projectiles],14x[projectiles],15x[projectiles],16x[projectiles],17x[projectiles],18x[projectiles],19x[projectiles],20x[projectiles],21x[projectiles],22x[projectiles],23x[projectiles],24x[projectiles],25x[projectiles],26x[projectiles],27x[projectiles],28x[projectiles],29x[projectiles],30x[projectiles],31x[projectiles],32x[projectiles],33x[projectiles],34x[projectiles],35x[projectiles],36x[projectiles],37x[projectiles],38x[projectiles],39x[projectiles],40x[projectiles],41x[projectiles],42x[projectiles],43x[projectiles],44x[projectiles],45x[projectiles],46x[projectiles],47x[projectiles],48x[projectiles],49x[projectiles],50x[projectiles],51x[projectiles],52x[projectiles],53x[projectiles],54x[projectiles],55x[projectiles],56x[projectiles],57x[projectiles],58x[projectiles],59x[projectiles],60x[projectiles],61x[projectiles],62x[projectiles],63x[projectiles],64x[projectiles],65x[projectiles],66x[projectiles],67x[projectiles],68x[projectiles],69x[projectiles],70x[projectiles],71x[projectiles],72x[projectiles],73x[projectiles],74x[projectiles],75x[projectiles],76x[projectiles],77x[projectiles],78x[projectiles],79x[projectiles],80x[projectiles],81x[projectiles],82x[projectiles],83x[projectiles],84x[projectiles],85x[projectiles],86x[projectiles],87x[projectiles],88x[projectiles],89x[projectiles],90x[projectiles],91x[projectiles],92x[projectiles],93x[projectiles],94x[projectiles],95x[projectiles],96x[projectiles],97x[projectiles],98x[projectiles],99x[projectiles],100x[projectiles],101x[projectiles],102x[projectiles],103x[projectiles],104x[projectiles],105x[projectiles],106x[projectiles],107x[projectiles],108x[projectiles],109x[projectiles],110x[projectiles],111x[projectiles],112x[projectiles],113x[projectiles],114x[projectiles],115x[projectiles],116x[projectiles],117x[projectiles],118x[projectiles],119x[projectiles],120x[projectiles],121x[projectiles],122x[projectiles],123x[projectiles],124x[projectiles],125x[projectiles],126x[projectiles],127x[projectiles],128x[projectiles],129x[projectiles],130x[projectiles],131x[projectiles],132x[projectiles],133x[projectiles],134x[projectiles],135x[projectiles],136x[projectiles],137x[projectiles],138x[projectiles],139x[projectiles],140x[projectiles],141x[projectiles],142x[projectiles],143x[projectiles],144x[projectiles],145x[projectiles],146x[projectiles],147x[projectiles],148x[projectiles],149x[projectiles],150x[projectiles]),
	forceformula(yes),
	formula(@indexedvalue(me::level*[projectiles],0,40,50,70,70,70,70,100,100,100,100,100,100,100,100,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,300,300)),
	shortname(Rapid Fire),
	group(_Attack Enhancements), page(B108), level([level]), upto(300/[projectiles]),
	gives(_
		=nobase to owner::rof$,
		=$solver(me::level)x[projectiles] to owner::rof$ _
		),
	x(_
		#InputReplace("Please enter the number of individual shots (i.e. the 4 in a RoF 4x3):", "[level]", "2", "Rapid Fire (Multiple Projectiles)"),
		#InputReplace("Please enter the number of projectiles each shot has (i.e. the 3 in a RoF 4x3):", "[projectiles]", "2", "Rapid Fire (Multiple Projectiles)")_
		)

Rapid Fire: Selective Fire, +10%, group(_Attack Enhancements), page(B108), shortname(Selective Fire)

Respiratory Agent, +50%, group(_Attack Enhancements), page(B108)
Selective Area, +20%, group(_Attack Enhancements), page(B108)
Sense-Based, +150%/+200%/+250%, group(_Attack Enhancements), page(B109),
	levelnames(One sense, Two senses, Three senses)
Side Effect, +50%/+51%/+52%, group(_Attack Enhancements), page(B109)
Symptom: Advantage, +10%/+20%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Attribute Penalty: ST, +5%/+10%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Attribute Penalty: DX, +10%/+20%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Attribute Penalty: IQ, +10%/+20%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Attribute Penalty: HT, +5%/+10%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Disadvantage, +1%/+2%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Tipsy, +10%, shortname(Tipsy), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Coughing, +20%, shortname(Coughing), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Drunk, +20%, shortname(Drunk), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Moderate Pain, +20%, shortname(Moderate Pain), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Euphoria, +30%, shortname(Euphoria), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Nauseated, +30%, shortname(Nauseated), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Severe Pain, +40%, shortname(Severe Pain), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Irritant: Terrible Pain, +60%, shortname(Terrible Pain), mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Symptom: Negated Advantage, +1%/+2%, mods(Symptom), group(_Attack Enhancements), page(B36, B109)
Underwater, +20%, group(_Attack Enhancements), page(B109)
Variable, +5%, group(_Attack Enhancements), page(B109)
Wall: Permeable, +30%/+60%, upto(2), group(_Attack Enhancements), page(B109), levelnames(, Any shape desired)
Wall: Rigid, +30%/+60%, upto(2), group(_Attack Enhancements), page(B109), levelnames(, Any shape desired)

<Symptom>
2/3 HP, *1, group(Symptom), page(B109)
1/2 HP, *2, group(Symptom), page(B109)
1/3 HP, *3, group(Symptom), page(B109)

<_Attack Limitations>
Armor Divisor, -30%/-50%/-70%, levelnames(0.5, 0.2, 0.1), upto(3), group(_Attack Limitations), page(B110),
	gives(=+@indexedvalue(me::level, 0.5, 0.2, 0.1) to owner::armordivisor)
Bombardment, -5%/-10%, levelnames(Skill 14, Skill 12, Skill 10, Skill 8), upto(4), group(_Attack Limitations), page(B111)
Dissipation, -50%, group(_Attack Limitations), page(B112)
Emanation, -20%, group(_Attack Limitations), page(B112),
	gives(_
		="$solver(owner::charradius) yd" to owner::reach$,
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$ _
		),
	x(#Message("Emanation requires the Area Effect enhancement"))

Extra Recoil, -10%/-20%, levelnames(Rcl 2, Rcl 3, Rcl 4, Rcl 5+), upto(4), group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rcl$,
		=$indexedvalue(me::level, "2", "3", "4", "5+") to owner::rcl$ _
		)
Follow-Up, +0%/-5%, group(_Attack Limitations), page(B105),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		=nobase to owner::acc$,
		=nobase to owner::rof$,
		=nobase to owner::shots$,
		=nobase to owner::rcl$,
		="Fol-Up" to owner::reach$,
		=nobase to owner::parry$,
		="No" to owner::parry$ _
		),
		x(_
		#InputToTagReplace("Please describe the attack that this one is a Follow-Up to:" , nameext, ,"Follow-Up")_
		)

Follow-Up (Passive), -50%, group(_Attack Limitations), page(B105),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		=nobase to owner::acc$,
		=nobase to owner::rof$,
		=nobase to owner::shots$,
		=nobase to owner::rcl$,
		="Fol-Up" to owner::reach$,
		=nobase to owner::parry$,
		="No" to owner::parry$ _
		),
		x(_
		#InputToTagReplace("Please describe the attack that this one is a Follow-Up to:" , nameext, ,"Follow-Up")_
		)

Inaccurate, -5%/-10%, group(_Attack Limitations), page(B112),
	levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10), gives(-1 to owner::acc), upto(owner::acc)
Melee Attack: Reach C, -30%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="C" to owner::reach$ _
		), addmode(Primary, skillused(ST:DX, SK:Brawling))
Melee Attack: Reach 1, -25%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="1" to owner::reach$ _
		), addmode(Primary, skillused(ST:DX, SK:Brawling))
Melee Attack: Reach 2, -25%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="2" to owner::reach$ _
		), addmode(Primary, skillused(ST:DX, SK:Brawling))
"Melee Attack: Reach C,1", -20%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="C,1" to owner::reach$ _
		)
"Melee Attack: Reach 1,2", -20%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="1,2" to owner::reach$ _
		), addmode(Primary, skillused(ST:DX, SK:Brawling))
"Melee Attack: Reach 2,3", -20%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="2,3" to owner::reach$ _
		), addmode(Primary, skillused(ST:DX, SK:Brawling))
Melee Attack: Reach 1-4 (like a whip), -15%, group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::rangehalfdam$,
		=nobase to owner::rangemax$,
		=nobase to owner::reach$,
		="1-4" to owner::reach$ _
		), addmode(Primary, skillused(ST:DX, SK:Brawling))
Melee Attack: Cannot Parry, -5%, shortname(Cannot Parry), group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::parry$,
		="No" to owner::parry$ _
		)
Onset, -10%/-20%, levelnames(Delay 1 minute, Delay 1 hour, Delay 1 day, Delay 1 week or more), upto(4), group(_Attack Limitations), page(B113)
Onset (Exposure Time), -30%/-40%, levelnames(Delay 1 minute, Delay 1 hour, Delay 1 day, Delay 1 week or more), upto(4), group(_Attack Limitations), page(B113)
Reduced Range, -10%/-20%, levelnames(x1/2, x1/5, x1/10), upto(3), group(_Attack Limitations), page(B115),
	gives(_
		=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangehalfdam,
		=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangemax _
		)
Reduced Range (1/2D Range Only), -5%/-10%, levelnames(x1/2, x1/5, x1/10), upto(3), group(_Attack Limitations), page(B115),
	gives(_
		=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangehalfdam _
		)
Sense-Based (with Malediction), -20%/-15%/-10%, upto(3), group(_Attack Limitations), page(B115),
	levelnames(One sense, Two senses, Three senses)

<Homing>
Radar, +20, group(Homing), page(B81)
Imaging Radar, +20, group(Homing), page(B81)
Ladar, +20, group(Homing), page(B81)
Para-Radar, +40, group(Homing), page(B81)
Sonar, +20, group(Homing), page(B81)
Hyperspectral Vision, +25, group(Homing), page(B60), mods(Hyperspectral Vision)
Infravision, +10, group(Homing), page(B60)
Ultravision, +10, group(Homing), page(B94)
Dark Vision, +25, group(Homing), page(B47), mods(Dark Vision)
Night Vision, +1/+2, group(Homing), page(B71), upto(9)
Penetrating Vision, +10/+20, group(Homing), page(B74), mods(Penetrating Vision)
Telescopic Vision, +5/+10, group(Homing), page(B92)
Vision, 0, group(Homing), page(B105)
Vibration Sense, +10, group(Homing), page(B96)

<_General>
_User-Defined Enhancement, +0%, group(_General),
	x(_
		#InputToTagReplace("Please enter the name of the Enhancement:" , name, ,"User-Define Enhancement"),
		#InputToTagReplace("Please enter the value of the Enchantment; use +0% for percentage enhancements, *0 for cost multipliers, and +0 for point increases (replacing 0 with the actual value):", cost, "+0%", "User-Define Enhancement") _
	)

_User-Defined Limitation, -0%, group(_General),
	x(_
		#InputToTagReplace("Please enter the name of the Limitation:" , name, ,"User-Define Limitation"),
		#InputToTagReplace("Please enter the value of the Limitation; use -0% for percentage limitaitons, *0 for cost multipliers, and -0 for point reductions (replacing 0 with the actual value):", cost, "-0%", "Limitation") _
	)

_Free, *0, group(_General)

Area Effect, +50%/+100%, group(_General), page(B102), upto(25), shortname(Area Effect),
	levelnames("2 yd","4 yd","8 yd","16 yd","32 yd","64 yd","128 yd","256 yd","512 yd","0.58 mi","1.2 mi","2.3 mi","4.7 mi","9.3 mi","19.0 mi","37.0 mi","74.0 mi","150.0 mi","300.0 mi","600.0 mi","1,200 mi","2,400 mi","4,800 mi","9,500 mi","19,000 mi","38,000 mi","76,000 mi","150,000 mi","310,000 mi","610,000 mi","1,200,000 mi","2,400,000 mi","4,900,000 mi","9,800,000 mi","20,000,000 mi","39,000,000 mi"),
	gives(=+@if(owner::radius = 0 THEN (2^me::level)) to owner::radius, =*@if(owner::radius > 0 THEN (2^me::level)) to owner::radius)

Affects Insubstantial, +20%, group(_General), page(B102)
Affects Substantial, +40%, group(_General), page(B102)
Cosmic: ability other than an attack or a defense, +50%, group(_General), page(B103)
Cosmic: Defense or countermeasure, +50%, group(_General), page(B103)
Cosmic: Attack with a lingering special effect, +100%, group(_General), page(B103)
Cosmic: Irresistible attack, +300%, group(_General), page(B103)
Extended Duration, +20%/+40%/+60%/+80%/+100%/+120%/+150%/+300%, levelnames(x3, x10, x30, x100, x300, x1000, Permanent with dispelling conditions, Permanent), upto(8), group(_General), page(B105)
Increased Range, +10%/+20%, group(_General), page(B106),
	levelnames(x2, x5, x10, x20, x50, x100, x200, x500, "x1,000", "x2,000", "x5,000", "x10,000", "x20,000", "x50,000", "x100,000", "x200,000", "x500,000", "x1,000,000", "x2,000,000", "x5,000,000", "x10,000,000", "x20,000,000", "x50,000,000", "x100,000,000", "x200,000,000", "x500,000,000", "x1,000,000,000", "x2,000,000,000", "x5,000,000,000", "x10,000,000,000", "x20,000,000,000", "x50,000,000,000", "x100,000,000,000", "x200,000,000,000", "x500,000,000,000", "x1,000,000,000,000"), upto(36),
	gives(_
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangehalfdam,
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangemax _
		)
Increased Range (1/2D Range Only), +5%/+10%, group(_General), page(B106),
	levelnames(x2, x5, x10, x20, x50, x100, x200, x500, "x1,000", "x2,000", "x5,000", "x10,000", "x20,000", "x50,000", "x100,000", "x200,000", "x500,000", "x1,000,000", "x2,000,000", "x5,000,000", "x10,000,000", "x20,000,000", "x50,000,000", "x100,000,000", "x200,000,000", "x500,000,000", "x1,000,000,000", "x2,000,000,000", "x5,000,000,000", "x10,000,000,000", "x20,000,000,000", "x50,000,000,000", "x100,000,000,000", "x200,000,000,000", "x500,000,000,000", "x1,000,000,000,000"), upto(36),
	gives(_
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangehalfdam _
		)
Increased Range (Max Range Only), +5%/+10%, group(_General), page(B106),
	levelnames(x2, x5, x10, x20, x50, x100, x200, x500, "x1,000", "x2,000", "x5,000", "x10,000", "x20,000", "x50,000", "x100,000", "x200,000", "x500,000", "x1,000,000", "x2,000,000", "x5,000,000", "x10,000,000", "x20,000,000", "x50,000,000", "x100,000,000", "x200,000,000", "x500,000,000", "x1,000,000,000", "x2,000,000,000", "x5,000,000,000", "x10,000,000,000", "x20,000,000,000", "x50,000,000,000", "x100,000,000,000", "x200,000,000,000", "x500,000,000,000", "x1,000,000,000,000"), upto(36),
	gives(_
		=*(@indexedvalue(1 + me::level - (3 * @int(me::level/3)),1,2,5) * (10^@int(me::level/3))) to owner::rangemax _
		)
Link, +10%/+20%, levelnames(Powers must be used together, powers can be used separately), upto(2), group(_General), page(B106)
Ranged, +40%, group(_General), page(B107),
	addmode(Primary, damage(), damtype(spcl.), rangehalfdam(10), rangemax(100), acc(3), rof(1), shots(), rcl(1), skillused(%examplealiaslist%)),
	x(#ChoiceList(_
			name(example),
			title(Burning Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				),
			aliaslist(_
				"",
				"ST:Will",
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	)
	
Reduced Fatigue Cost, +20%/+40%, group(_General), page(B108)
Reduced Time, +20%/+40%, group(_General), page(B108)
Selectivity, +10%, group(_General), page(B108)

Accessibility, -10%/-20%, group(_General), page(B110),
	x(_
		#InputToTagReplace("Please describe the nature of the Accessibility:" , nameext, ,"Accessibility") _
	)
Granted by Familiar, -40%, group(_General), page(B38)

Accessibility: half power, -5%/-10%, group(_General), page(B110),
	x(_
		#InputToTagReplace("Please describe the nature of the Accessibility:" , nameext, ,"Accessibility") _
	)

Always On, -10%/-20%/-40%, levelnames(effects are social or cosmetic, effects are physically inconvenient, effects are dangerous), upto(3), group(_General), page(B110)
Costs Fatigue, -5%/-10%, mods(Costs Fatigue), group(_General), page(B111)
Emergencies Only, -30%, group(_General), page(B112)
Emergencies Only (Half-power normally), -20%, group(_General), page(B112)

Limited Use, -10%/-20%/-30%/-40%,
	formula(@indexedvalue(me::level, -10%,-10%,-10%,-10%,-10%,-10%,-20%,-20%,-30%,-40%)), forceformula(yes),
	levelnames(10/day,9/day,8/day,7/day,6/day,5/day,4/day,3/day,2/day,1/day), upto(10),
	group(_General), page(B112),
	gives(_
		=nobase to owner::shots$,
		=$solver(owner::charrof * (11 - me::level)) to owner::shots$ _
		), level(%levelaliaslist%),
	x(#ChoiceList(_
			name(level),
			title(Limited Use),
			text(Select how many uses per day the ability is limited to:),
			picksallowed(1),
			method(bynumber),
			list(_
				"10/day",
				" 9/day",
				" 8/day",
				" 7/day",
				" 6/day",
				" 5/day",
				" 4/day",
				" 3/day",
				" 2/day",
				" 1/day"_
			),
			aliaslist(_
				"1",
				"2",
				"3",
				"4",
				"5",
				"6",
				"7",
				"8",
				"9",
				"10"_
			)_
			)_
		)

Limited Use (Fast Reload), -5%/-10%/-15%/-20%,
	formula(@indexedvalue(me::level, -5%,-5%,-5%,-5%,-5%,-5%,-10%,-10%,-15%,-20%)), forceformula(yes),
	levelnames(RoFx10/day,RoFx9/day,RoFx8/day,RoFx7/day,RoFx6/day,RoFx5/day,RoFx4/day,RoFx3/day,RoFx2/day,RoFx1/day), upto(10),
	group(_General), page(B112),
	gives(_
		=nobase to owner::shots$,
		=$solver(owner::charrof * (11 - me::level)) to owner::shots$ _
		), level(%levelaliaslist%),
	x(#ChoiceList(_
			name(level),
			title(Limited Use),
			text(Select how many uses per day the ability is limited to:),
			picksallowed(1),
			method(bynumber),
			list(_
				"RoF x10/day",
				"RoF x 9/day",
				"RoF x 8/day",
				"RoF x 7/day",
				"RoF x 6/day",
				"RoF x 5/day",
				"RoF x 4/day",
				"RoF x 3/day",
				"RoF x 2/day",
				"RoF x 1/day"_
			),
			aliaslist(_
				"1",
				"2",
				"3",
				"4",
				"5",
				"6",
				"7",
				"8",
				"9",
				"10"_
			)_
			)_
		)

Limited Use (Slow Reload), -5%/-15%/-25%/-35%,
	formula(@indexedvalue(me::level, -5%,-5%,-5%,-5%,-5%,-5%,-15%,-15%,-25%,-35%)), forceformula(yes),
	levelnames(RoFx10/day,RoFx9/day,RoFx8/day,RoFx7/day,RoFx6/day,RoFx5/day,RoFx4/day,RoFx3/day,RoFx2/day,RoFx1/day), upto(10),
	group(_General), page(B112),
	gives(_
		=nobase to owner::shots$,
		=$solver(owner::charrof * (11 - me::level)) to owner::shots$ _
		), level(%levelaliaslist%),
	x(#ChoiceList(_
			name(level),
			title(Limited Use),
			text(Select how many uses per day the ability is limited to:),
			picksallowed(1),
			method(bynumber),
			list(_
				"RoF x10/day",
				"RoF x 9/day",
				"RoF x 8/day",
				"RoF x 7/day",
				"RoF x 6/day",
				"RoF x 5/day",
				"RoF x 4/day",
				"RoF x 3/day",
				"RoF x 2/day",
				"RoF x 1/day"_
			),
			aliaslist(_
				"1",
				"2",
				"3",
				"4",
				"5",
				"6",
				"7",
				"8",
				"9",
				"10"_
			)_
			)_
		)

Mitigator: vulnerable, -60%, group(_General), page(B112), mitigator(yes)
Mitigator: daily treatment, -60%, group(_General), page(B112), mitigator(yes)
Mitigator: weekly treatment, -65%, group(_General), page(B112, mitigator(yes))
Mitigator: monthly treatment, -70%, group(_General), page(B112), mitigator(yes)
Nuisance Effect: ability earns a reaction penalty from those around you, -5%/-10%, upto(4), group(_General), page(B112)
Nuisance Effect: ability makes you obvious, -5%, group(_General), page(B112)
Nuisance Effect: ability physically inconveniences you, -5%, group(_General), page(B112)
Pact, -1%/-2%, group(_General), page(B113)
Preparation Required, -20%/-30%/-50%/-60%, levelnames(1 minute, 10 minutes, 1 hour, 8 hours), upto(4), group(_General), page(B114)
Preparation Required: Weakened Without Preparation, -10%/-15%/-25%/-30%, levelnames(1 minute, 10 minutes, 1 hour, 8 hours), upto(4), group(_General), page(B114)
Reduced Range, -10%/-20%, levelnames(x1/2, x1/5, x1/10), upto(3), group(_General), page(B115),
	gives(_
		=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangehalfdam,
		=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangemax _
		)
Reduced Range (1/2D Range Only), -5%/-10%, levelnames(x1/2, x1/5, x1/10), upto(3), group(_General), page(B115),
	gives(_
		=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangehalfdam _
		)
Takes Extra Time, -10%/-20%, group(_General), page(B115)
Takes Recharge, -10%/-20%, levelnames(5 seconds, 15 seconds, 1 hour), upto(3), group(_General), page(B115)

Temporary Disadvantage, -1%/-2%, group(_General), page(B115), level(%levelaliaslist%),
	formula(-@min(me::level,@round((me::level*80/owner::premodspoints)+0.004999,2))), forceformula(yes),
	levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100),
	x(_
	#InputToTag("Please specify the name of the Temporary Disadvantage:",nameext, ,Temporary Disadvantage),
	#ChoiceList(_
			name(level),
			title(Temporary Disadvantage),
			text(Please select the point cost of the Temporary Disadvantage. If the exact value is not listed pick the closest one, you will be able to adjust it later:),
			picksallowed(1),
			method(bynumber),
			list(_
				"  -1",
				"  -2",
				"  -3",
				"  -4",
				"  -5",
				"  -6",
				"  -7",
				"  -8",
				"  -9",
				" -10",
				" -11",
				" -12",
				" -13",
				" -14",
				" -15",
				" -20",
				" -25",
				" -30",
				" -35",
				" -40",
				" -45",
				" -50",
				" -55",
				" -60",
				" -65",
				" -70",
				" -75",
				" -80",
				" -85",
				" -90",
				" -95",
				"-100"_
				),
			aliaslist(_
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				20,
				25,
				30,
				35,
				40,
				45,
				50,
				55,
				60,
				65,
				70,
				75,
				80,
				85,
				90,
				95,
				100 _
					)_
			),
	#Edit _
	)

Trigger, -10%/-20%, levelnames(Very Common, Common, Occasional, Rare), upto(4), group(_General), page(B115), mods(Trigger)
Unconscious Only, -20%, group(_General), page(B115)
Uncontrollable, -10%/-30%, levelnames(non-destructive power, destructive power), upto(2), group(_General), page(B116)
Unreliable/Activation, -10%/-20%/-40%/-80%, levelnames(14 or less, 11 or less, 8 or less, 5 or less), upto(4), group(_General), page(B116)
Unreliable/Malfunction, -5%/-10%, levelnames(malfunction number 16 , malfunction number 15, malfunction number 14, malfunction number 13, malfunction number 12), upto(5), group(_General), page(B116)
Untrainable, -40%, group(_General), page(B116)
Gadget/Breakable: DR 2 or less, -20%, group(_General), page(B117)
Gadget/Breakable: DR 3-5, -15%, group(_General), page(B117)
Gadget/Breakable: DR 6-15, -10%, group(_General), page(B117)
Gadget/Breakable: DR 16-25, -5%, group(_General), page(B117)
Gadget/Breakable: DR 26 or higher, +0%, group(_General), page(B117)
Gadget/Breakable: Cannot repair, -15%, group(_General), page(B117)
Gadget/Breakable: Object is complex machine, -5%, group(_General), page(B117)
Gadget/Breakable: Size -9 or less, +0%, group(_General), page(B117)
Gadget/Breakable: Size -7 or -8, -5%, group(_General), page(B117)
Gadget/Breakable: Size -5 or -6, -10%, group(_General), page(B117)
Gadget/Breakable: Size -3 or -4, -15%, group(_General), page(B117)
Gadget/Breakable: Size -1 or -2, -20%, group(_General), page(B117)
Gadget/Breakable: Size 0 or more, -25%, group(_General), page(B117)
Gadget/Can Be Stolen: Easily snatched with unopposed DX roll, -40%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Can Be Stolen: Thief must win a Quick Contest of DX or ST, -30%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Can Be Stolen: Can only be taken by stealth or trickery, -20%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Can Be Stolen: Must be forcefully removed, -10%, mods(Can Be Stolen), group(_General), page(B117)
Gadget/Unique, -25%, group(_General), page(B117)

<Can Be Stolen>
Does not work for the Thief, *0.5, group(Can Be Stolen), page(B117)

<Claws>
Hands Only, -0%, group(Claws)
Feet Only, -0%, group(Claws)

<Costs Fatigue>
Per Minute, *1, group(Costs Fatigue), page(B111)
Per Second, *2, group(Costs Fatigue), page(B111)
Per Activation, *1, group(Costs Fatigue), page(B111)

<Cultural Familiarity>
Native, *0, group(Cultural Familiarity), page(B23), gives(+1 to ST:Native Cultural Familiarities)

<Trigger>
Illegal, *1.5, group(Trigger), page(B115)
Addictive, *1.5, group(Trigger), page(B115)
Dangerous, *1.5, group(Trigger), page(B115)

<_Psionic Power Modifier>
ESP, -10%, group(_Psionic Power Modifier), page(B255)
Telepathic, -10%, group(_Psionic Power Modifier), page(B257)
Psionic Teleportation, -10%, group(_Psionic Power Modifier), page(B257)
Psychic Healing, -10%, group(_Psionic Power Modifier), page(B256)
Psychokinetic, -10%, group(_Psionic Power Modifier), page(B256)

<_Origin>
Biological, +0, group(_Origin), page(B33)
Chi, +0, group(_Origin), page(B33)
Cosmic, +0, group(_Origin), page(B33)
Divine, +0, group(_Origin), page(B33)
High-Tech, +0, group(_Origin), page(B33)
Magic, +0, group(_Origin), page(B33)
Mana Sensitive, -10%, group(_Origin), page(B33)
Psionic, +0, group(_Origin), page(B33)
Spirit, +0, group(_Origin), page(B33)

<360° Vision>
Easy to Hit, -20%, group(360° Vision), page(B34)

<Absolute Direction>
Requires Signal, -20%, group(Absolute Direction), page(B35)

<Addiction>
Effect: Incapacitating, -10, shortname(Incapacitating), group(Addiction), page(B122)
Effect: Hallucinogenic, -10, shortname(Hallucinogenic), group(Addiction), page(B122)
Effect: Stimulating, +0, shortname(Stimulating), group(Addiction), page(B122)
Effect: Highly addictive (-5 on withdrawal roll), -5, shortname(Highly addictive), group(Addiction), page(B122)
Effect: Totally addictive (-10 on withdrawal roll), -10, shortname(Totally addictive), group(Addiction), page(B122)
Legality: Illegal, +0, shortname(Illegal), group(Addiction), page(B122)
Legality: Legal, +5, shortname(Legal), group(Addiction), page(B122)

<Affliction>
Advantage, +10%/+20%, mods(Secondary), group(Affliction), page(B36),
	x(_
		#InputToTagReplace("Please enter the name of the advantage:", nameext, , "Affliction: Advantage")_
	)

Attribute Penalty: ST, +5%/+10%, mods(Secondary), group(Affliction), page(B36)
Attribute Penalty: DX, +10%/+20%, mods(Secondary), group(Affliction), page(B36)
Attribute Penalty: IQ, +10%/+20%, mods(Secondary), group(Affliction), page(B36)
Attribute Penalty: HT, +5%/+10%, mods(Secondary), group(Affliction), page(B36)
Coma, +250%, mods(Secondary), group(Affliction), page(B36)
Cumulative, +400%, mods(Secondary), group(Affliction), page(B36)
Disadvantage, +1%/+2%, mods(Secondary), group(Affliction), page(B36)
Heart Attack, +300%, mods(Secondary), group(Affliction), page(B36)
Incapacitation: Daze, +50%, shortname(Daze), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Hallucinating, +50%, shortname(Hallucinating), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Retching, +50%, shortname(Retching), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Agony, +100%, shortname(Agony), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Choking, +100%, shortname(Choking), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Ecstasy, +100%, shortname(Ecstasy), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Seizure, +100%, shortname(Seizure), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Paralysis, +150%, shortname(Paralysis), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Sleep, +150%, shortname(Sleep), mods(Secondary), group(Affliction), page(B36)
Incapacitation: Unconsciousness, +200%, shortname(Unconsciousness), mods(Secondary), group(Affliction), page(B36)
Irritant: Tipsy, +10%, shortname(Tipsy), mods(Secondary), group(Affliction), page(B36)
Irritant: Coughing, +20%, shortname(Coughing), mods(Secondary), group(Affliction), page(B36)
Irritant: Drunk, +20%, shortname(Drunk), mods(Secondary), group(Affliction), page(B36)
Irritant: Moderate Pain, +20%, shortname(Moderate Pain), mods(Secondary), group(Affliction), page(B36)
Irritant: Euphoria, +30%, shortname(Euphoria), mods(Secondary), group(Affliction), page(B36)
Irritant: Nauseated, +30%, shortname(Nauseated), mods(Secondary), group(Affliction), page(B36)
Irritant: Severe Pain, +40%, shortname(Severe Pain), mods(Secondary), group(Affliction), page(B36)
Irritant: Terrible Pain, +60%, shortname(Terrible Pain), mods(Secondary), group(Affliction), page(B36)
Negated Advantage, +1%/+2%, mods(Secondary), group(Affliction), page(B36),
	x(_
		#InputToTagReplace("Please enter the name of the advantage:", nameext, , "Affliction: Negated Advantage")_
	)
Stunning, +10%, mods(Secondary), group(Affliction), page(B36)

<Secondary>
Secondary, *1/5, group(Secondary), page(B36)

<Ally>
Group Size, *6/*8, levelnames(6-10, 11-20, 21-50, 51-100, 101-200, 201-500, "501-1,000", "1,001-2,000", "2,001-5,000", "5,001-10,000", "10,001-20,000", "20,001-50,000", "50,001-10,0000", "100,001-200,000", "200,001-500,000", "500,001-1,000,000"), group(Ally), page(B37)
Non-Sapient, +0, group(Ally), page(B38)
Minion, +0%/+50%, group(Ally), page(B38), upto(2), levelnames("w/IQ 0 or Slave mentality", "")
Special Abilities, +50%, group(Ally), page(B38)
Summonable, +100%, group(Ally), page(B38)
Sympathy, -25%/-50%, upto(2), group(Ally), page(B38), levelnames(Death of one party reduces other to 0HP, Death of one party kills the other)
Sympathy: Allies wounds don't affect you, -5%/-10%, upto(2), group(Ally), page(B38), levelnames(Death of one party reduces other to 0HP, Death of one party kills the other)
Unwilling, -50%, group(Ally), page(B38)

<Alternate Form>
Difference in point costs, +1/+2, formula(@int(me::level * 0.9 + 0.9)), forceformula(yes), tier(1), group(Alternate Form), page(B84),
	level([level]),
	x(_
		#InputReplace("Please enter the differnce in point costs between the characters native template and his most expensive alternate form:", "[level]", "0", "Difference in point costs")_
	)

<Appearance>
Universal, +25%, group(Appearance), page(B21)

<Arm DX>
One arm, *1, group(Arm DX), page(B40)
Two arms, *4/3, group(Arm DX), page(B40)

<Arm ST>
One arm, *1, gives(+owner::level to ST:One Arm Lifting ST, +owner::level to ST:One Arm Striking ST), group(Arm ST), page(B40)
Two arms, *5/3, gives(_
				+owner::level to ST:One Arm Lifting ST,
				+owner::level to ST:One Arm Striking ST,
				+owner::level to ST:Two Arm Lifting ST,
				+owner::level to ST:Two Arm Striking ST _
				), group(Arm ST), page(B40)
Three arms, *8/3, gives(_
				+owner::level to ST:One Arm Lifting ST,
				+owner::level to ST:One Arm Striking ST,
				+owner::level to ST:Two Arm Lifting ST,
				+owner::level to ST:Two Arm Striking ST,
				+owner::level to ST:Three Arm Lifting ST,
				+owner::level to ST:Three Arm Striking ST _
				), group(Arm ST), page(B40)

<Attractive>
Androgynous, 0, group(Attractive), page(B21)
Impressive, 0, group(Attractive), page(B21)
Off-the-Shelf Looks, -50%, conditional(*1/2 to GR:Appeal when "dealing with people from your own culture, you get only half the Appearance reaction bonus"), group(Attractive), page(B21)

<Bad Sight>
Mitigator: Glasses, -60%, group(Bad Sight), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)

<Blindness>
Mitigator: Artificial Eyes, -60%, group(Blindness), page(B112), shortname(Artificial Eyes), mitigator(yes),
	x(#Message("This modifier is for use only with Blindness. Applying it to any other trait will cause problems."))

//	gives(+4 to ST:Dodge, +6 to CL:Combat/Weapons - Melee Combat, +6 to CL:Combat/Weapons - Ranged Combat, +6 to CL:Athletic - Combat Art/Sport, +ST:Vision::basescore to ST:Vision),

<Berserk>
Battle Rage, +50%, group(Berserk), page(B124)

<Bestial>
Includes Odious Personal Habit, -5, group(Bestial), page(B124)

<Binding>
Engulfing, +60%, group(Binding), page(B40)
Only Damaged By Burning, +30%, group(Binding), page(B40)
Only Damaged By Corrosion, +30%, group(Binding), page(B40)
Only Damaged By Crushing, +30%, group(Binding), page(B40)
Only Damaged By Cutting, +30%, group(Binding), page(B40)
Only Damaged By Burning or Corrosion, +20%, group(Binding), page(B40)
Only Damaged By Burning or Crushing, +20%, group(Binding), page(B40)
Only Damaged By Burning or Cutting, +20%, group(Binding), page(B40)
Only Damaged By Corrosion or Crushing, +20%, group(Binding), page(B40)
Only Damaged By Corrosion or Cutting, +20%, group(Binding), page(B40)
Only Damaged By Crushing or Cutting, +20%, group(Binding), page(B40)
Only Damaged By Burning or Corrosion or Crushing, +10%, group(Binding), page(B40)
Only Damaged By Burning or Corrosion or Cutting, +10%, group(Binding), page(B40)
Only Damaged By Burning or Crushing or Cutting, +10%, group(Binding), page(B40)
Only Damaged By Corrosion or Crushing or Cutting, +10%, group(Binding), page(B40)
Sticky, +20%, group(Binding), page(B40)
Unbreakable, +40%, group(Binding), page(B40)
Environmental, -20%/-30%, upto(3), group(Binding), page(B40)
One-Shot, -10%, group(Binding), page(B40)

<Chameleon>
Extended, +20%/+40%, group(Chameleon), page(B41)
Always On, -10%, group(Chameleon), page(B41)

<Chip Slots>
_Per point of abilities, 5+3/point, formula(5+(me::level*3)), forceformula(yes), group(Chip Slots), page(B71), mods(Modular Abilities),
	x(_
		#InputToTagReplace("Specify the name of this Modular slot",name,"Slot 2",Chip Slots),
		#InputReplace("How many points does this Modular slot have:","[level]","1",Chip Slots) _
	), level([level])

<Modular Abilities>
Multiple slots, *1/*2, level(2)

<Chronic Pain>
Interval: 1 hour, *0.5, shortname(1 hour), group(Chronic Pain), page(B126)
Interval: 2 hours, *1, shortname(2 hours), group(Chronic Pain), page(B126)
Interval: 4 hours, *1.5, shortname(4 hours), group(Chronic Pain), page(B126)
Interval: 8 hours, *2, shortname(8 hours), group(Chronic Pain), page(B126)
Frequency: Attack occurs on a roll of  6 or less, *0.5, shortname(6 or less), group(Chronic Pain), page(B126)
Frequency: Attack occurs on a roll of  9 or less, *1, shortname(9 or less), group(Chronic Pain), page(B126)
Frequency: Attack occurs on a roll of 12 or less, *2, shortname(12 or less), group(Chronic Pain), page(B126)
Frequency: Attack occurs on a roll of 15 or less, *3, shortname(15 or less), group(Chronic Pain), page(B126)

<Clairsentience>
Clairaudience, -30%, group(Clairsentience), page(B42)
Clairosmia, -60%, group(Clairsentience), page(B42)
Clairvoyance, -10%, group(Clairsentience), page(B42)
Visible, -10%, group(Clairsentience), page(B42)

<Clinging>
Specific, -40%/-60%, levelnames(Common material, Uncommon material, Absurd material), upto(3), group(Clinging), page(B43)

<Combat Table>
Remove Combat Table Entry, +0, addmode({Punch, damage(), damtype(), minst(), reach()} | {Kick, damage(), damtype(), minst(), reach()} | {Bite, damage(), damtype(), minst(), reach()})

<Compartmentalized Mind>
Controls, *1/2, group(Compartmentalized Mind), page(B43)
Dedicated Controls, *1/5, group(Compartmentalized Mind), page(B43)

<Computer Brain>
_Per point of abilities, 6+4/point, formula(6+(me::level*4)), forceformula(yes), group(Computer Brain), page(B71), mods(Modular Abilities),
	x(_
		#InputToTagReplace("Specify the name of this Modular slot",name,"Slot 2",Computer Brain),
		#InputReplace("How many points does this Modular slot have:","[level]","1",Computer Brain) _
	), level([level]) 

<Reliability>
Reliability: Completely Reliable, *3, shortname(Completely Reliable), group(Reliability), page(B44)
Reliability: Usually Reliable, *2, shortname(Usually Reliable), group(Reliability), page(B44)
Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability), page(B44)
Reliability: Unreliable, *1/2, shortname(Unreliable), group(Reliability), page(B44)

<Contact>
Can Obtain Information Using Supernatural Talents, +1, shortname(Supernatural), group(Contact), page(B44)

<Contact Group>
Can Obtain Information Using Supernatural Talents, +5, shortname(Supernatural), group(Contact Group), page(B44)

<Cosmic Power>
Per point of abilities, 10/20, group(Cosmic Power), page(B71)

<Damage Resistance>
Absorption, +80%/+100%, upto(2), group(Damage Resistance), page(B46),
	levelnames(One trait, Any trait)
Force Field, +20%, group(Damage Resistance), page(B47)
Hardened, +20%/+40%, upto(6), group(Damage Resistance), page(B47)
Reflection, +100%, group(Damage Resistance), page(B47)
Ablative, -80%, group(Damage Resistance), page(B47)
Can't Wear Armor, -40%, group(Damage Resistance), page(B47)
Directional: Front only, -20%, shortname(Front only), gives(-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Directional: Back only, -40%, shortname(Back only), gives(-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Directional: Right only, -40%, shortname(Right only), gives(-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Directional: Left only, -40%, shortname(Left only), gives(-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Directional: Top only, -40%, shortname(Top only), gives(-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Directional: Underside only, -40%, shortname(Underside only), gives(-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Flexible, -20%, group(Damage Resistance), page(B47)
Partial: Torso, -10%, shortname(Torso Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Vitals, -30%, shortname(Vitals Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Skull, -70%, shortname(Skull Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Eyes, -90%, shortname(Eyes Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Face, -50%, shortname(Face Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Neck, -50%, shortname(Neck Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Groin, -30%, shortname(Groin Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Arms, -20%, shortname(Arms Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Legs, -20%, shortname(Legs Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Hands, -40%, shortname(Hands Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Feet, -50%, shortname(Feet Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Other, -10%/-20%, gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Semi-Ablative, -20%, group(Damage Resistance), page(B47)
Tough Skin, -40%, group(Damage Resistance), page(B47)

Partial: Right Arm, -40%, shortname(Arms Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Left Arm, -40%, shortname(Arms Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Right Leg, -40%, shortname(Legs Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Left Leg, -40%, shortname(Legs Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Right Hand, -80%, shortname(Hands Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Left Hand, -80%, shortname(Hands Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Right Foot, -100%, shortname(Feet Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))
Partial: Left Foot, -100%, shortname(Feet Only), mods(Partial), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47),
	x(#message(Use this limitation *ONLY* on the Damage Resistance advantage. It will cause errors if used on any other trait.))

<Partial>
Covers only one hit location of that type, *2, group(Partial), page(B47)
Covers all hit location of that type, *1, group(Partial), page(B47)

<Dark Vision>
Color Vision, +20%, group(Dark Vision), page(B47)

<Dependency>
Illegal, -5, group(Dependency), page(B130)
Frequency Needed: Constantly, *5, shortname(Constantly), group(Dependency), page(B130)
Frequency Needed: Hourly, *4, shortname(Hourly), group(Dependency), page(B130)
Frequency Needed: Daily, *3, shortname(Daily), group(Dependency), page(B130)
Frequency Needed: Weekly, *2, shortname(Weekly), group(Dependency), page(B130)
Frequency Needed: Monthly, *1, shortname(Monthly), group(Dependency), page(B130)
Frequency Needed: Seasonally, *1/3, shortname(Seasonally), group(Dependency), page(B130)
Frequency Needed: Yearly, *1/10, shortname(Yearly), group(Dependency), page(B130)
Aging, +30%, group(Dependency), page(B130)

<Dependent>
Importance: Employer or Acquaintance, *1/2, shortname(Employer/Acquaintance), group(Dependent), page(B131)
Importance: Friend, *1, shortname(Friend), group(Dependent), page(B131)
Importance: Loved one, *2, shortname(Loved one), group(Dependent), page(B131)
Group of Dependents, *2, group(Dependent), page(B131)

<Detect>
Precise, +100%, group(Detect), page(B48)
Signal Detection, +0%, group(Detect), page(B48)
Vague, -50%, group(Detect), page(B48)

<Discriminatory Smell>
Emotion Sense, +50%, group(Discriminatory Smell), page(B49)

<Doesn't Breathe>
Gills: only underwater, *0, group(Doesn't Breathe), page(B49)
Gills, -50%, group(Doesn't Breathe), page(B49)
Oxygen Absorption, -25%, group(Doesn't Breathe), page(B49)
Oxygen Combustion, -50%, group(Doesn't Breathe), page(B49)
Oxygen Storage, -10%/-20%, levelnames(x300, x200, x100, x50, x25), upto(5), group(Doesn't Breathe), page(B49)

<Draining>
Illegal, -5, group(Draining), page(B132)

<Dread>
Larger Radius, -1/-2, upto(10), levelnames(2 yards, 3 yards, 4 yards, 5 yards, 6 yards, 7 yards, 8 yards, 9 yards, 10 yards, 11 yards), group(Dread), page(B133)
Rarity: Rare, *1/2, shortname(Rare), group(Dread), page(B133)
Rarity: Occasional, *1, shortname(Occasional), group(Dread), page(B133)
Rarity: Common, *2, shortname(Common), group(Dread), page(B133)
Rarity: Very Common, *3, shortname(Very Common), group(Dread), page(B133)
Cannot Be Trapped, -50%, group(Dread), page(B133)

<Duplication>
Duplicated Gear, +100%, group(Duplication), page(B51)
No Sympathetic Injury, +20%, group(Duplication), page(B51)
Digital, -60%, group(Duplication), page(B51)
Shared Resources, -40%, group(Duplication), page(B51)

<Duty>
Extremely Hazardous, -5, group(Duty), page(B134)
Involuntary, -5, group(Duty), page(B134)
Nonhazardous, +5, group(Duty), page(B134)

<Evil Twin>
Evil Twin, -10, group(Evil Twin), page(B135)
Evil Twin is more skilled than you, -5, group(Evil Twin), page(B135)
Evil Twin posseses abilities that you do not, -5, group(Evil Twin), page(B135)
Evil Twin is more skilled than you and posseses abilities that you do not, -10, group(Evil Twin), page(B135)

<Enemy>
Unknown, -5, group(Enemy), page(B135)
Intent: Watcher, *1/4, shortname(Watcher), group(Enemy), page(B135)
Intent: Rival, *1/2, shortname(Rival), group(Enemy), page(B135)
Intent: Hunter, *1, shortname(Hunter), group(Enemy), page(B135)

<Enhanced Move>
Handling Bonus, +5%/+10%, upto(5), group(Enhanced Move), page(B52)
Handling Penalty, -5%/-10%, upto(5), group(Enhanced Move), page(B52), levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100)
Newtonian, -50%, group(Enhanced Move), page(B52)
Road-Bound, -50%, group(Enhanced Move), page(B52)

<Extra ST>
Affects displayed ST score, +0%, shortname(Affects ST), gives(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional ST bonus, +0%, shortname(Conditional ST), conditional(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally recieves the bonus.)
Growth Size, -10%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Extra ST), page(B58)

<Extra DX>
Affects displayed DX score, +0%, shortname(Affects DX), gives(+Owner::Level to ST:DX), group(Extra DX), description(This modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional DX bonus, +0%, shortname(Conditional DX), conditional(+Owner::Level to ST:DX), group(Extra DX), description(This modifier causes the Extra DX advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra IQ>
Affects displayed IQ score, +0%, shortname(Affects IQ), gives(+Owner::Level to ST:IQ), group(Extra IQ), description(This modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional IQ bonus, +0%, shortname(Conditional IQ), conditional(+Owner::Level to ST:IQ), group(Extra IQ), description(This modifier causes the Extra IQ advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra HT>
Affects displayed HT score, +0%, shortname(Affects HT), gives(+Owner::Level to ST:HT), group(Extra HT), description(This modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HT bonus, +0%, shortname(Conditional HT), conditional(+Owner::Level to ST:HT), group(Extra HT), description(This modifier causes the Extra HT advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Will>
Affects displayed Will score, +0%, shortname(Affects Will), gives(+Owner::Level to ST:Will), group(Extra Will), description(This modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Will bonus, +0%, shortname(Conditional Will), conditional(+Owner::Level to ST:Will), group(Extra Will), description(This modifier causes the Extra Will advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Perception>
Affects displayed Per score, +0%, shortname(Affects Per), gives(+Owner::Level to ST:Perception), group(Extra Perception), description(This modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Per bonus, +0%, shortname(Conditional Per), conditional(+Owner::Level to ST:Perception), group(Extra Perception), description(This modifier causes the Extra Perception advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Hit Points>
Affects displayed HP score, +0%, shortname(Affects HP), gives(+Owner::Level to ST:Hit Points), group(Extra Hit Points), description(This modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HP bonus, +0%, shortname(Conditional HP), conditional(+Owner::Level to ST:Hit Points), group(Extra Hit Points), description(This modifier causes the Extra Hit Points advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)
Growth Size, +0%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Extra Hit Points), page(B58)

<Extra Fatigue Points>
Affects displayed FP score, +0%, shortname(Affects FP), gives(+Owner::Level to ST:Fatigue Points), group(Extra Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional FP bonus, +0%, shortname(Conditional FP), conditional(+Owner::Level to ST:Fatigue Points), group(Extra Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Basic Move>
Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(+Owner::Level to ST:Basic Move), group(Extra Basic Move), description(This modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Move bonus, +0%, shortname(Conditional Move), conditional(+Owner::Level to ST:Basic Move), group(Extra Basic Move), description(This modifier causes the Extra Basic Move advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Basic Speed>
Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(+(Owner::Level/4) to ST:Basic Speed), group(Extra Basic Speed), description(This modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Speed bonus, +0%, shortname(Conditional Speed), conditional(+(Owner::Level/4) to ST:Basic Speed), group(Extra Basic Speed), description(This modifier causes the Extra Basic Speed advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Water Move>
Affects displayed Water Move score, +0%, shortname(Affects Water Move), gives(+Owner::Level to ST:Basic Water Move), group(Extra Water Move), description(This modifier causes the Extra Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Water Move bonus, +0%, shortname(Conditional Water Move), conditional(+Owner::Level to ST:Basic Water Move), group(Extra Water Move), description(This modifier causes the Extra Water Move advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Air Move>
Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(+Owner::Level to ST:Basic Air Move), group(Extra Air Move), description(This modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Air Move bonus, +0%, shortname(Conditional Air Move), conditional(+Owner::Level to ST:Basic Air Move), group(Extra Air Move), description(This modifier causes the Extra Air Move advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Extra Arms>
Extra-Flexible, +50%, group(Extra Arms), page(B53)
Long, +100%/+200%, group(Extra Arms), page(B53), gives(+1 to ST:Extra Arm SM)
Foot Manipulators, -30%, group(Extra Arms), page(B53)
No Physical Attack, -50%, group(Extra Arms), page(B53)
Short, -50%, group(Extra Arms), page(B53)
Weak, -25%/-50%, upto(2), group(Extra Arms), page(B53), levelnames(1/2 ST, 1/4 ST)
Weapon Mount, -80%, group(Extra Arms), page(B53)

<Extra Head>
Extraneous, -20%, group(Extra Head), page(B54)

<Extra Legs>
Long, +100%/+200%, group(Extra Legs), page(B55), gives(+1 to ST:Leg SM)
Cannot Kick, -50%, group(Extra Legs), page(B55)

<Extra Life>
Copy, -20%, group(Extra Life), page(B55)
Requires Body, -20%, group(Extra Life), page(B55)
Requires Body (illegal/rare/expensive), -40%, group(Extra Life), page(B55)

<Favor>
Favor, *1/5, group(Favor), page(B55)

<Flight>
Newtonian Space Flight, +25%, group(Flight), page(B56)
Space Flight, +50%, group(Flight), page(B56)
Cannot Hover, -15%, group(Flight), page(B56)
Controlled Gliding, -45%, group(Flight), page(B56), gives(+2 to ST:Enhanced Air Move)
Gliding, -50%, group(Flight), page(B56), gives(+2 to ST:Enhanced Air Move)
Lighter Than Air, -10%, group(Flight), page(B56)
Low Ceiling, -10%/-20%/-25%, levelnames(30 foot ceiling, 10 foot ceiling, 5 foot ceiling), upto(3), group(Flight), page(B56)
Small Wings, -10%, group(Flight), page(B56)
Space Flight Only, -75%, group(Flight), page(B56)
Winged, -25%, group(Flight), page(B56)

<Frequency of Appearance>
Frequency: roll of  6 or less (Quite rarely), *1/2, shortname(6 or less), group(Frequency of Appearance), page(B36)
Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance), page(B36)
Frequency: roll of 12 or less (Quite often), *2, shortname(12 or less), group(Frequency of Appearance), page(B36)
Frequency: roll of 15 or less (Almost all the time), *3, shortname(15 or less), group(Frequency of Appearance), page(B36)
Frequency: no roll required (Constantly), *4, shortname(Constantly), group(Frequency of Appearance), page(B36)

<Growth>
Maximum Size Only, +0%, group(Growth), page(B58)

<Hard of Hearing>
Mitigator: Hearing Aid, -60%, group(Hard of Hearing), page(B112), shortname(Hearing Aid), mitigator(yes)
//, gives(+4 to ST:Hearing)

<Deafness>
Mitigator: Hearing Aid, -60%, group(Deafness), page(B112), shortname(Hearing Aid), mitigator(yes)
//, gives(+ST:Perception to ST:Hearing)

<No Sense of Smell/Taste>
Mitigator: Artificial Tongue, -60%, group(No Sense of Smell/Taste), shortname(Artificial Tongue), mitigator(yes)
//, gives(+"ST:Taste/Smell::basescore" to "ST:Taste/Smell")

<Healing>
Faith Healing, +20%, group(Healing), page(B59)
Xenohealing, +20%/+40%, levelnames(All Mammals, All Earthly Life, All Carbon-Based Life, Anything Alive, Anything Animate), upto(5), group(Healing), page(B59)
Disease Only, -40%, group(Healing), page(B59)
Injuries Only, -20%, group(Healing), page(B59)
Own Race Only, -20%, group(Healing), page(B59)

<Hyperspectral Vision>
Extended Low-Band, +30%, group(Hyperspectral Vision), page(B60)
Extended High-Band, +30%, group(Hyperspectral Vision), page(B60)

<Infravision>
Unswitchable, *0, group(Infravision), page(B60)
Switchable, +0, group(Infravision), page(B60)

<Injury Tolerance>
Diffuse, +100, group(Injury Tolerance), page(B60)
Homogenous, +40, group(Injury Tolerance), page(B60)
No Blood, +5, group(Injury Tolerance), page(B61)
No Brain, +5, group(Injury Tolerance), page(B61)
No Eyes, +5, group(Injury Tolerance), page(B61)
No Head, +7, group(Injury Tolerance), page(B61)
No Neck, +5, group(Injury Tolerance), page(B61)
No Vitals, +5, group(Injury Tolerance), page(B61)
Unliving, +20, group(Injury Tolerance), page(B61)

<Alternative Attack>
Alternative Attack, *1/5, group(Alternative Attack), page(B61), tier(2)

<Insubstantiality>
Affect Substantial, +100%, group(Insubstantiality), page(B63)
Can Carry Objects, +10%/+20%/+50%/+100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Insubstantiality), page(B63)
Partial Change, +20%/+100%, levelnames( , Can turn carried item substantial), upto(2), group(Insubstantiality), page(B63)
Always On, -50%, group(Insubstantiality), page(B63)
Usually On, -40%, group(Insubstantiality), page(B63)

<Invisibility>
Affects Machines, +50%, group(Invisibility), page(B63)
Can Carry Objects, +10%/+20%/+50%/+100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Invisibility), page(B63)
Extended, +20%/+40%, group(Invisibility), page(B63)
Switchable, +10%, group(Invisibility), page(B63)
Usually On, +5%, group(Invisibility), page(B63)
Machines Only, -50%, group(Invisibility), page(B63)
Substantial Only, -10%, group(Invisibility), page(B63)
Visible Reflection, -10%, group(Invisibility), page(B63)
Visible Shadow, -10%, group(Invisibility), page(B63)

<Jumper>
Can Carry Objects, +10%/+20%/+30%/+50%, levelnames([No Encumbrance], Light Encumbrance, Medium Encumbrance, Heavy Encumbrance, Extra-Heavy Encumbrance), upto(4), group(Jumper), page(B64)
New Worlds, +50%, group(Jumper), page(B64)
Omni-Jump, +10%, group(Jumper), page(B64)
Tracking, +20%, group(Jumper), page(B64)
Tunnel, +40%, group(Jumper), page(B64)
Warp Jump, +10%, group(Jumper), page(B64)
Cannot Escort, -10%, group(Jumper), page(B64)
Cannot Follow, -20%, group(Jumper), page(B64)
Drift, -15%, group(Jumper), page(B64)
Limited Jump, -10%, group(Jumper), page(B64)
Maximum Range, -10%, group(Jumper), page(B65)
Naked, -30%, group(Jumper), page(B65)
Stunning, -10%, group(Jumper), page(B65)

<Language>
Default, -2/-4, upto(2), group(Language), page(B23),
	description(Some languages may "default" from another language. If this language gets a default apply this modifier to reduce the point cost of this language for its default.),
	x(_
		#InputToTagReplace("Please specify the language from which this one defaults" , nameext, ,"Language Default") _
	)
Default (Spoken), -1/-2, upto(2), cat(Language), page(B23),
	description(Some languages may "default" from another language. If this language gets a default apply this modifier to reduce the point cost of this language for its default.),
	x(_
		#InputToTagReplace("Please specify the language from which this one defaults" , nameext, ,"Language Default") _
	)
Default (Written), -1/-2, upto(2), cat(Language), page(B23),
	description(Some languages may "default" from another language. If this language gets a default apply this modifier to reduce the point cost of this language for its default.),
	x(_
		#InputToTagReplace("Please specify the language from which this one defaults" , nameext, ,"Language Default") _
	)

<Native Language>
Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)
Native Speaker, -3, gives(=+0.5 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 2 else 3)), forceformula(yes), group(Language), page(B23)
Native Writer, -3, gives(=+0.5 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 2 else 3)), forceformula(yes), group(Language), page(B23)

<Legal Immunity>
Diplomatic pouch privileges, +5, group(Legal Immunity), page(B65)

<Lifting ST>
Doesn't affect Basic Lift, 0, gives(-owner::level to ST:Lifting ST)

<Limited Defense>
Limited Defense (Very Common), -20%, group(Limited Defense), page(B46), shortname(Limited (Very Common)),
	x(_
		#InputReplace("Please specify the Very Common attack this defends against; e.g. ranged attacks, melee attacks, physical attacks, energy attacks, chi, magic, or psionics:" , "Very Common", ,"Limited Defense") _
	),
	description(You will need to specify the attack type this defends against; e.g. ranged attacks, melee attacks, physical attacks, energy attacks, chi, magic, or psionics.)

Limited Defense (Common), -40%, group(Limited Defense), page(B46), shortname(Limited (Common)),
	x(_
		#InputReplace("Please specify the Common attack this defends against; e.g. burning, corrosion, crushing, cutting, impaling, piercing, toxic, metal, stone, wood, water, flesh, acid, cold, electricity, heat/fire, or magical energy:" , "Common", ,"Limited Defense") _
	),
	description(You will need to specify the attack type this defends against; e.g. burning, corrosion, crushing, cutting, impaling, piercing, toxic, metal, stone, wood, water, flesh, acid, cold, electricity, heat/fire, or magical energy.)

Limited Defense (Occasional), -60%, group(Limited Defense), page(B46), shortname(Limited (Occasional)),
	x(_
		#InputReplace("Please specify the Occasional attack this defends against e.g. steel, lead, particle beams, lasers, disintegrators, shaped charges, magical electricity, or piercing metal:" , "Occasional", ,"Limited Defense") _
	),
	description(You will need to specify the attack type this defends against e.g. steel, lead, particle beams, lasers, disintegrators, shaped charges, magical electricity, or piercing metal.)

Limited Defense (Rare), -80%, group(Limited Defense), page(B46), shortname(Limited (Rare)),
	x(_
		#InputReplace("Please specify the Rare attack this defends against; e.g. charged particle beams, dragon's fire, piercing lead, ultraviolet lasers, silver, or blessed weapons:" , "Rare", ,"Limited Defense") _
	),
	description(You will need to specify the attack type this defends against; e.g. charged particle beams, dragon's fire, piercing lead, ultraviolet lasers, silver, or blessed weapons.)

<Luck>
Active, -40%, group(Luck), page(B66)
Aspected, -20%, group(Luck), page(B66)
Defensive, -20%, group(Luck), page(B66)

<Magery>
Dance, -40%, group(Magery), page(B67)
Dark-Aspected, -50%, group(Magery), page(B67)
Day-Aspected, -40%, group(Magery), page(B67)
Musical, -50%, group(Magery), page(B67)
Night-Aspected, -40%, group(Magery), page(B67)
Solitary, -40%, group(Magery), page(B67)
Song, -40%, group(Magery), page(B67)

One College Only, -40%, group(Magery), page(B67), gives(-Owner::Level to ST:Magery, +Owner::Level to (ST:Magery One, CO:One, SP:Recover Energy)),
	x(_
		#InputReplace("Please enter the name of the college:", "One", , "One College Only"),
		#Message(Use this limitation *ONLY* on the Magery advantage. It will cause errors if used on any other trait (including the Magery 0 advantage).) _
	)
One College Only (%CollegeList%), -40%, gives(-Owner::Level to ST:Magery, +Owner::Level to (ST:Magery %CollegeList%, CO:%CollegeList%, SP:Recover Energy)), group(Magery), page(B67),
	x(_
	#Message(Use this limitation *ONLY* on the Magery advantage. It will cause errors if used on any other trait (including the Magery 0 advantage).),
	#ChoiceList(_
			name(College),
			title(One College Magery),
			text(Choose which college your Magery is limited to:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Air",
				"Body Control",
				"Communication & Empathy",
				"Earth",
				"Enchantment",
				"Fire",
				"Gate",
				"Healing",
				"Knowledge",
				"Light & Darkness",
				"Meta-Spells",
				"Mind Control",
				"Movement",
				"Necromancy",
				"Protection & Warning",
				"Water" _
			)_
		)_
	)

	
<Magery 0>
Dance, -40%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Dark-Aspected, -50%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Day-Aspected, -40%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Musical, -50%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Night-Aspected, -40%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Solitary, -40%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Song, -40%, group(Magery 0), page(B67), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))

*One College Only Magery Limitations
One College Only, -40%, group(Magery 0), page(B67),
	x(_
		#InputReplace("Please enter the name of the college:", "One", , "One College Only") _
	)
	
One College Only (%CollegeList%), -40%, group(Magery 0), page(B67),
	x(_
		#ChoiceList(_
			name(College),
			title(One College Magery),
			text(Choose which college your Magery is limited to:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Air",
				"Body Control",
				"Communication & Empathy",
				"Earth",
				"Enchantment",
				"Fire",
				"Gate",
				"Healing",
				"Knowledge",
				"Light & Darkness",
				"Meta-Spells",
				"Mind Control",
				"Movement",
				"Necromancy",
				"Protection & Warning",
				"Water" _
			)_
		)_
	)

<Magic Resistance>
Improved, +150%, group(Magic Resistance), page(B67)

<Maintenance>
Maintenance Interval: Monthly, *1/5, shortname(Monthly), group(Maintenance), page(B143)
Maintenance Interval: Bi-weekly, *1/3, shortname(Bi-weekly), group(Maintenance), page(B143)
Maintenance Interval: Weekly, *1/2, shortname(Weekly), group(Maintenance), page(B143)
Maintenance Interval: Every other day, *3/4, shortname(Every other day), group(Maintenance), page(B143)
Maintenance Interval: Daily, *1, shortname(Daily), group(Maintenance), page(B143)
Maintenance Interval: Twice Daily, *2, shortname(Twice daily), group(Maintenance), page(B143)
Maintenance Interval: Three to five times daily, *3, shortname(3-5 times daily), group(Maintenance), page(B143)
Maintenance Interval: Constant, *5, shortname(Constant), group(Maintenance), page(B143)

<Mana Damper/Enhancer>
Area Effect, +50%/+100%, group(Mana Damper/Enhancer), page(B67), upto(25),
	levelnames("1 yd","2 yd","4 yd","8 yd","16 yd","32 yd","64 yd","128 yd","256 yd","512 yd","0.58 mi","1.2 mi","2.3 mi","4.7 mi","9.3 mi","19.0 mi","37.0 mi","74.0 mi","150.0 mi","300.0 mi","600.0 mi","1,200 mi","2,400 mi","4,800 mi","9,500 mi","19,000 mi","38,000 mi","76,000 mi","150,000 mi","310,000 mi","610,000 mi","1,200,000 mi","2,400,000 mi","4,900,000 mi","9,800,000 mi","20,000,000 mi","39,000,000 mi"),
	gives(_
		=+(0.5 * (2^me::level)) to owner::radius _
		)

Switchable, +100%, group(Mana Damper/Enhancer), page(B67)

<Metabolism Control>
Hibernation, -60%, group(Metabolism Control), page(B68)

<Mind Control>
Conditioning, +50%, group(Mind Control), page(B69)
No Memory, +10%, group(Mind Control), page(B69)
Conditioning Only, -50%, group(Mind Control), page(B69)
Puppet, -40%, group(Mind Control), page(B69)

<Mind Probe/Reading>
Cybernetic, +50%, group(Mind Probe/Reading), page(B69)
Sensory, +20%, group(Mind Probe/Reading), page(B69)
Universal, +50%, group(Mind Probe/Reading), page(B69)
Cybernetic Only, -50%, group(Mind Probe/Reading), page(B70)
Racial, -20%, group(Mind Probe/Reading), page(B70)
Sensory Only, -20%, group(Mind Probe/Reading), page(B70)
Telecommunication, -20%, group(Mind Probe/Reading), page(B70)

<Mind Shield>
Cybernetic, -50%, group(Mind Shield), page(B70)

<Missing Legs>
Mitigator: Prosthetic Leg, -60%, group(Missing Legs), page(B112), shortname(Prosthetic Leg), mitigator(yes)
//, gives(+6 to "CL:Combat/Weapons - Melee Combat")

<Modular Ability>
Physical Only, +50%, group(Modular Ability), page(B71)
Physical and Mental, +100%, group(Modular Ability), page(B71)
Spells Only, -20%, group(Modular Ability), page(B71)
Virtual, -50%, group(Modular Ability), page(B71)

<Money>
5% of Starting Wealth, +0
10% of Starting Wealth, +0
15% of Starting Wealth, +0
20% of Starting Wealth, +0
30% of Starting Wealth, +0
40% of Starting Wealth, +0
50% of Starting Wealth, +0
60% of Starting Wealth, +0
70% of Starting Wealth, +0
80% of Starting Wealth, +0
90% of Starting Wealth, +0
100% of Starting Wealth, +0

Trading Character Points for Money, +1/+2, formula(0), forceformula(yes), gives(+@indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000) to ST:Money, +@indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000) to ST:Remaining Funds), page(B26)

Money Earned in Play, +0/+0, level([Level]), formula(0), forceformula(yes), gives(+1 to ST:Money, +1 to ST:Remaining Funds),
	x(_
		#InputToTagReplace("Please describe how this money was acquired", nameext, "note","Money Earned in Play"),
		#InputReplace("Please enter the level (dollars) of this modifier:", "[level]", "1", "Money Earned in Play") _
	)

Money Spent in Play, +0/+0, level([Level]), formula(0), forceformula(yes), gives(-1 to ST:Money, -1 to ST:Remaining Funds),
	x(_
		#InputToTagReplace("Please describe how this money was spent", nameext, "note","Money Spent in Play"),
		#InputReplace("Please enter the level (dollars) of this modifier:", "[level]", "1", "Money Spent in Play") _
	)
<Morph>
Extra Morphing Capacity, +1/+2, tier(1), group(Morph), page(B85)
Unlimited, +50%, group(Morph), page(B85)
Mass Conservation, -20%, group(Morph), page(B85)
Retains Shape, -20%, group(Morph), page(B85)

<Neutralize>
Power Theft, +200%, group(Neutralize), page(B71)
One Power, -50%, group(Neutralize), page(B71)

<No Fine Manipulators>
No Fine Manipulators, -40%, group(No Fine Manipulators), page(B145)

<No Fine Manipulators Stat>
No Fine Manipulators, -0%, formula(-@if(ST:No Fine Manipulators > 0 & owner::level > 0 then 40 else 0)), forceformula(yes), group(No Fine Manipulators Stat), page(B145)

<No Legs>
Mobility depends on fins/mast/paddles/sails, -5, group(No Legs), page(B145)
Cannot dive, -5, group(No Legs), page(B145)

<Nocturnal>
Permanent Paralysis, +100%, group(Nocturnal), page(B146)

<Obscure>
Area Effect, +50%/+100%, group(Obscure), page(B72, B102), upto(24),
	levelnames("4 yd","8 yd","16 yd","32 yd","64 yd","128 yd","256 yd","512 yd","0.58 mi","1.2 mi","2.3 mi","4.7 mi","9.3 mi","19.0 mi","37.0 mi","74.0 mi","150.0 mi","300.0 mi","600.0 mi","1,200 mi","2,400 mi","4,800 mi","9,500 mi","19,000 mi","38,000 mi","76,000 mi","150,000 mi","310,000 mi","610,000 mi","1,200,000 mi","2,400,000 mi","4,900,000 mi","9,800,000 mi","20,000,000 mi","39,000,000 mi"),
	gives(_
		=*(2^me::level) to owner::radius _
		)
Defensive, +50%, group(Obscure), page(B72)
Extended, +20%/+40%, group(Obscure), page(B72),
	x(#InputToTag("You must pick a sense which Obscure ''jams'':", nameext, , "Obscure"))
Ranged, +50%, group(Obscure), page(B72),
	addmode(Primary, damage(), damtype(spcl.), rangehalfdam(-), rangemax(100), acc(3), rof(1), shots(), rcl(1), skillused(%examplealiaslist%)),
	x(#ChoiceList(_
			name(example),
			title(Burning Attack: Choose a Skill),
			text(Choose a Skill that will be used with this Innate Attack. "DX, Brawling" is appropriate for attacks that will have one of the the Melee Attack limitations; "Will" for Maledictions:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				"_None of these",
				"Will",
				"Innate Attack (Beam)",
				"Innate Attack (Breath)",
				"Innate Attack (Gaze)",
				"Innate Attack (Projectile)" _
				),
			aliaslist(_
				"",
				"ST:Will",
				"SK:Innate Attack (Beam), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"SK:Innate Attack (Breath), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"SK:Innate Attack (Gaze), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2",
				"SK:Innate Attack (Projectile), ST:DX-4, SK:Innate Attack (Beam)-2, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2" _
				)_
			)_
	)

Stealthy, +100%, group(Obscure), page(B72)
Always On, -50%, group(Obscure), page(B72)

<Patron>
Equipment: no more than starting wealth, +50%, group(Patron), page(B73)
Equipment: more than starting wealth, +100%, group(Patron), page(B73)
Highly Accessible, +50%, group(Patron), page(B73)
Special Abilities: extensive social or political power, +50%, group(Patron), page(B73)
Special Abilities: magical powers in nonmagical world, +100%, group(Patron), page(B73)
Special Abilities: possesses equipment from a greater TL, +100%, group(Patron), page(B73)
Special Abilities: grants special powers, +100%, group(Patron), page(B73)
Special Abilities: unusual reach in time or space, +100%, group(Patron), page(B73)
Minimal Intervention, -50%, group(Patron), page(B73)
Secret, -50%, group(Patron), page(B73)
Unwilling, -50%, group(Patron), page(B74)

<Payload>
Exposed, -50%, group(Payload), page(B74)

<Penetrating Vision>
Blockable, -10%/-20%, levelnames(one specific material, uncommon material, common material), upto(3), group(Penetrating Vision), page(B74)
Specific, -40%/-60%, levelnames(common material, uncommon material, absurd material), upto(3), group(Penetrating Vision), page(B74)

<Peripheral Vision>
Easy to Hit, -20%, group(Peripheral Vision), page(B75)

<Permeation>
Can Carry Objects, +10%/+20%/+50%/+100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Permeation), page(B75)
Tunnel, +40%, group(Permeation), page(B75)

<Possession>
Assimilation, +10%, group(Possession), page(B76)
Chronic, +20%, group(Possession), page(B76)
Mind Swap, +10%, group(Possession), page(B76)
Telecontrol, +50%, group(Possession), page(B76)
Digital, -40%, group(Possession), page(B76)
Magical, -10%, group(Possession), page(B76)
Mindlink Required, -40%, group(Possession), page(B76)
No Memory Access, -10%, group(Possession), page(B76)
Parasitic, -60%, group(Possession), page(B76)
Puppet Only, -30%, group(Possession), page(B76)
Spiritual, -20%, group(Possession), page(B76)

<_Power Talents>
Gives Skill Bonus to Innate Attack (Beam), +0, gives(+owner::level to SK:Innate Attack (Beam)), shortname(Innate Attack (Beam))
Gives Skill Bonus to Innate Attack (Breath), +0, gives(+owner::level to SK:Innate Attack (Breath)), shortname(Innate Attack (Breath))
Gives Skill Bonus to Innate Attack (Gaze), +0, gives(+owner::level to SK:Innate Attack (Gaze)), shortname(Innate Attack (Gaze))
Gives Skill Bonus to Innate Attack (Projectile), +0, gives(+owner::level to SK:Innate Attack (Projectile)), shortname(Innate Attack (Projectile))

Gives Skill Bonus to [advanta], +0, gives(+owner::level to AD:[advantage]::skillscore), shortname([advantage]),
	x(_
	#InputReplace("Please enter the name of the advantage which will receive the skill bonus; include the name extension if applicable:", "[advantage]", "name (extension)" , "Talent Skill Bonus")_
	)

Gives Skill Bonus to %advantageslist%, +0, gives(%advantagesaliaslist%), shortname(%advantageslist%),
	x(_
	#ChoiceList(_
			name(advantages),
			title(Talent Bonus: Choose Advantages),
			text(Choose which advantages will receive a bonus from this Talent.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
					"Active IR",
					"Affliction",
					"Animal Empathy",
					"Blessed",
					"Blessed (Very Blessed)",
					"Burning Attack",
					"Catfall",
					"Clairsentience",
					"Clinging",
					"Common Sense",
					"Constriction Attack",
					"Corrosion Attack",
					"Crushing Attack",
					"Cutting Attack",
					"Danger Sense",
					"Detect",
					"Discriminatory Hearing",
					"Discriminatory Smell",
					"Discriminatory Taste",
					"Eidetic Memory",
					"Empathy",
					"Fatigue Attack",
					"Healing",
					"High Pain Threshold",
					"Huge Piercing Attack",
					"Illuminated",
					"Illusion",
					"Imaging Radar",
					"Impaling Attack",
					"Intuition",
					"Jumper (Spirit)",
					"Jumper (Time)",
					"Jumper (World)",
					"Ladar",
					"Large Piercing Attack",
					"Long Spines",
					"Mimicry",
					"Mind Control",
					"Mind Probe",
					"Mind Reading",
					"Oracle",
					"Oracle (Digital)",
					"Para-Radar",
					"Photographic Memory",
					"Piercing Attack",
					"Plant Empathy",
					"Possession",
					"Precognition",
					"Psychometry",
					"Racial Memory",
					"Radar",
					"Rapier Wit",
					"Sensitive",
					"Short Spines",
					"Small Piercing Attack",
					"Snatcher",
					"Sonar",
					"Spirit Empathy",
					"Striker (Crushing)",
					"Striker (Cutting)",
					"Striker (Impaling)",
					"Striker (Large Piercing)",
					"Striker (Piercing)",
					"Subsonic Hearing",
					"Subsonic Speech",
					"Telecommunication (Directional Sound)",
					"Telecommunication (Gravity-Ripple Comm)",
					"Telecommunication (Infrared Communication)",
					"Telecommunication (Laser Communication)",
					"Telecommunication (Neutrino Comm)",
					"Telecommunication (Radio)",
					"Telecommunication (Sonar Comm)",
					"Telecommunication (Telesend)",
					"Telekinesis",
					"Temporal Inertia",
					"Toxic Attack",
					"T-Ray Vision",
					"Ultrahearing",
					"Ultrasonic Speech",
					"Ultravision",
					"Visualization",
					"Warp"_
				),
			aliaslist(_
					"+owner::level to AD:Active IR::skillscore",
					"+owner::level to AD:Affliction::skillscore",
					"+owner::level to AD:Animal Empathy::skillscore",
					"+owner::level to AD:Blessed::skillscore",
					"+owner::level to AD:Blessed (Very Blessed)::skillscore",
					"+owner::level to AD:Burning Attack::skillscore",
					"+owner::level to AD:Catfall::skillscore",
					"+owner::level to AD:Clairsentience::skillscore",
					"+owner::level to AD:Clinging::skillscore",
					"+owner::level to AD:Common Sense::skillscore",
					"+owner::level to AD:Constriction Attack::skillscore",
					"+owner::level to AD:Corrosion Attack::skillscore",
					"+owner::level to AD:Crushing Attack::skillscore",
					"+owner::level to AD:Cutting Attack::skillscore",
					"+owner::level to AD:Danger Sense::skillscore",
					"+owner::level to AD:Detect::skillscore",
					"+owner::level to AD:Discriminatory Hearing::skillscore",
					"+owner::level to AD:Discriminatory Smell::skillscore",
					"+owner::level to AD:Discriminatory Taste::skillscore",
					"+owner::level to AD:Eidetic Memory::skillscore",
					"+owner::level to AD:Empathy::skillscore",
					"+owner::level to AD:Fatigue Attack::skillscore",
					"+owner::level to AD:Healing::skillscore",
					"+owner::level to AD:High Pain Threshold::skillscore",
					"+owner::level to AD:Huge Piercing Attack::skillscore",
					"+owner::level to AD:Illuminated::skillscore",
					"+owner::level to AD:Illusion::skillscore",
					"+owner::level to AD:Imaging Radar::skillscore",
					"+owner::level to AD:Impaling Attack::skillscore",
					"+owner::level to AD:Intuition::skillscore",
					"+owner::level to AD:Jumper (Spirit)::skillscore",
					"+owner::level to AD:Jumper (Time)::skillscore",
					"+owner::level to AD:Jumper (World)::skillscore",
					"+owner::level to AD:Ladar::skillscore",
					"+owner::level to AD:Large Piercing Attack::skillscore",
					"+owner::level to AD:Long Spines::skillscore",
					"+owner::level to AD:Mimicry::skillscore",
					"+owner::level to AD:Mind Control::skillscore",
					"+owner::level to AD:Mind Probe::skillscore",
					"+owner::level to AD:Mind Reading::skillscore",
					"+owner::level to AD:Oracle::skillscore",
					"+owner::level to AD:Oracle (Digital)::skillscore",
					"+owner::level to AD:Para-Radar::skillscore",
					"+owner::level to AD:Photographic Memory::skillscore",
					"+owner::level to AD:Piercing Attack::skillscore",
					"+owner::level to AD:Plant Empathy::skillscore",
					"+owner::level to AD:Possession::skillscore",
					"+owner::level to AD:Precognition::skillscore",
					"+owner::level to AD:Psychometry::skillscore",
					"+owner::level to AD:Racial Memory::skillscore",
					"+owner::level to AD:Radar::skillscore",
					"+owner::level to AD:Rapier Wit::skillscore",
					"+owner::level to AD:Sensitive::skillscore",
					"+owner::level to AD:Short Spines::skillscore",
					"+owner::level to AD:Small Piercing Attack::skillscore",
					"+owner::level to AD:Snatcher::skillscore",
					"+owner::level to AD:Sonar::skillscore",
					"+owner::level to AD:Spirit Empathy::skillscore",
					"+owner::level to AD:Striker (Crushing)::skillscore",
					"+owner::level to AD:Striker (Cutting)::skillscore",
					"+owner::level to AD:Striker (Impaling)::skillscore",
					"+owner::level to AD:Striker (Large Piercing)::skillscore",
					"+owner::level to AD:Striker (Piercing)::skillscore",
					"+owner::level to AD:Subsonic Hearing::skillscore",
					"+owner::level to AD:Subsonic Speech::skillscore",
					"+owner::level to AD:Telecommunication (Directional Sound)::skillscore",
					"+owner::level to AD:Telecommunication (Gravity-Ripple Comm)::skillscore",
					"+owner::level to AD:Telecommunication (Infrared Communication)::skillscore",
					"+owner::level to AD:Telecommunication (Laser Communication)::skillscore",
					"+owner::level to AD:Telecommunication (Neutrino Comm)::skillscore",
					"+owner::level to AD:Telecommunication (Radio)::skillscore",
					"+owner::level to AD:Telecommunication (Sonar Comm)::skillscore",
					"+owner::level to AD:Telecommunication (Telesend)::skillscore",
					"+owner::level to AD:Telekinesis::skillscore",
					"+owner::level to AD:Temporal Inertia::skillscore",
					"+owner::level to AD:Toxic Attack::skillscore",
					"+owner::level to AD:T-Ray Vision::skillscore",
					"+owner::level to AD:Ultrahearing::skillscore",
					"+owner::level to AD:Ultrasonic Speech::skillscore",
					"+owner::level to AD:Ultravision::skillscore",
					"+owner::level to AD:Visualization::skillscore",
					"+owner::level to AD:Warp::skillscore"_
					)_
			)_
	)

<Punch/Kick>
Include +1 damage from Boots in base damage, +0, shortname(Has Boots), gives(=+@textindexedvalue( $modetag(mode), ("Kick", 1) ) to owner::damage$ listAs "+1 damage from Boots"), group(Punch/Kick)
Include +1 damage from Gauntlets in base damage, +0, shortname(Has Gauntlets), gives(=+@textindexedvalue( $modetag(mode), ("Punch", 1) ) to owner::damage$ listAs "+1 damage from Gauntlets"), group(Punch/Kick)
Include +1 damage from Brass Knuckles in base damage, +0, shortname(Has Brass Knuckles), gives(=+@textindexedvalue( $modetag(mode), ("Punch", 1) ) to owner::damage$ listAs "+1 damage from Brass Knuckles"), group(Punch/Kick)

Add Punch w/Brass Knuckles Combat Table Entry, +0, shortname(Punch w/Brass Knuckles),
	addmode(Punch w/Brass Knuckles,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst) _
		)

Add Punch w/Gauntlets Combat Table Entry, +0, shortname(Punch w/Gauntlets),
	addmode(Punch w/Gauntlets,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst) _
		)

Add Kick w/Boots Combat Table Entry, +0, shortname(Kick w/Boots),
	addmode(Kick w/Boots,
			damage(1 + %copyprev - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else 0))), damtype(cr), reach(%copyprev), parry(%copyprev), skillused(%copyprev) _
		)

Add Punch w/Brass Knuckles & Kick w/Boots Combat Table Entries, +0, shortname(Punch w/Brass Knuckles & Kick w/Boots),
	addmode({Kick w/Boots,
			damage(1 + %copyprev - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else 0))), damtype(cr), reach(%copyprev), parry(%copyprev), skillused(%copyprev)} | _
		{Punch w/Brass Knuckles,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst)} _
		)

Add Punch w/Gauntlets & Kick w/Boots Combat Table Entries, +0, shortname(Punch w/Gauntlets & Kick w/Boots),
	addmode({Kick w/Boots,
			damage(1 + %copyprev - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Kick) else 0))), damtype(cr), reach(%copyprev), parry(%copyprev), skillused(%copyprev)} | _
		{Punch w/Gauntlets,
			damage(1 + %copyfirst - @if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0))), damtype(cr), reach(%copyfirst), parry(%copyfirst), skillused(%copyfirst)} _
		)
// Add Weak Arm Punch Combat Table Entry, +0, shortname(Weak Arm Punch),
// 	addmode(Weak Arm Punch, damage(%copyfirst), damtype(%copyfirst), reach(%copyprev), parry(%copyprev), skillused(%copyprev), damagebasedon(ST:Two Arm Striking ST)),
//	description(Normally damage is based on your strongest arm (the one with the highest Arm ST). This modifier adds a mode calculating damage of the second strongest arm.)
		
Remove Punch Mode, +0, addmode(Punch, damage(), damtype(), minst(), reach())
Remove Bite Mode, +0, addmode(Bite, damage(), damtype(), minst(), reach())
Remove Kick Mode, +0, addmode(Kick, damage(), damtype(), minst(), reach())

Increased Punch Damage, +0/+0, gives(=+@textindexedvalue( $modetag(mode), ("Punch", $solver(me::level)) ) to owner::damage$ listAs "+X Punch damage"), group(Punch/Kick)
Increased Kick Damage, +0/+0, gives(=+@textindexedvalue( $modetag(mode), ("Kick", $solver(me::level)) ) to owner::damage$ listAs "+X Kick damage"), group(Punch/Kick)
Increased Bite Damage, +0/+0, gives(=+@textindexedvalue( $modetag(mode), ("Bite", $solver(me::level)) ) to owner::damage$ listAs "+X Bite damage"), group(Punch/Kick)

Remove the default Punch combat table entry, +0, gives(=nobase ST:Punch::reach$)
Remove the default Kick combat table entry, +0, gives(=nobase ST:Kick::reach$)
Remove the default Bite combat table entry, +0, gives(=nobase ST:Bite::reach$)

<Gauntlets>
Melee Table Punch Listing, +0, page(B271), shortname(Punch),
	addmode(Punch w/gauntlet, damage(thr+_
								@max(_
									@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
									@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
									@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
									)_
							), damtype(cr), reach(C), parry(0), minst(), notes([3]), skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX))
<Boots>
Melee Table Kick Listing, +0, page(B271), shortname(Kick),
	addmode(Kick w/boots, damage(thr+_
							@max(_
								@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Kick) else 0),
								@if("SK:Karate::level" = ST:DX then @basethdice(ST:Kick) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Kick) else 0)) _
								)_
					), damtype(cr), reach(C,1), parry(No), skillused(ST:DX-2, SK:Brawling-2, SK:Karate-2, SK:Kicking (Karate), SK:Kicking (Brawling)))

<Precognition>
Can't See Own Death, -60%, group(Precognition), page(B77)
One Event, -40%, group(Precognition), page(B77)

<Psi Static>
Area Effect, +50%/+100%, group(Psi Static), page(B78), upto(25),
	levelnames("1 yd","2 yd","4 yd","8 yd","16 yd","32 yd","64 yd","128 yd","256 yd","512 yd","0.58 mi","1.2 mi","2.3 mi","4.7 mi","9.3 mi","19.0 mi","37.0 mi","74.0 mi","150.0 mi","300.0 mi","600.0 mi","1,200 mi","2,400 mi","4,800 mi","9,500 mi","19,000 mi","38,000 mi","76,000 mi","150,000 mi","310,000 mi","610,000 mi","1,200,000 mi","2,400,000 mi","4,900,000 mi","9,800,000 mi","20,000,000 mi","39,000,000 mi"),
	gives(_
		=+(0.5 * (2^me::level)) to owner::radius _
		)
Switchable, +100%, group(Psi Static), page(B78)
Resistible, -50%, group(Psi Static), page(B78)

<Rank>
Rank replaces Status, *2, group(Rank), page(B29)

<Reduced Consumption>
Cast-Iron Stomach, -50%, group(Reduced Consumption), page(B80)
Food Only, -50%, group(Reduced Consumption), page(B80)
Water Only, -50%, group(Reduced Consumption), page(B80)

<Reduced ST>
Affects displayed ST score, +0%, shortname(Affects ST), gives(-Owner::Level to ST:ST), group(Reduced ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional ST penalty, +0%, shortname(Conditional ST), conditional(-Owner::Level to ST:ST), group(Reduced ST), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)
Growth Size, +0%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Reduced ST), page(B58)

<Reduced DX>
Affects displayed DX score, +0%, shortname(Affects DX), gives(-Owner::Level to ST:DX), group(Reduced DX), description(This modifier causes the Extra DX advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional DX penalty, +0%, shortname(Conditional DX), conditional(-Owner::Level to ST:DX), group(Reduced DX), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced IQ>
Affects displayed IQ score, +0%, shortname(Affects IQ), gives(-Owner::Level to ST:IQ), group(Reduced IQ), description(This modifier causes the Extra IQ advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional IQ penalty, +0%, shortname(Conditional IQ), conditional(-Owner::Level to ST:IQ), group(Reduced IQ), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced HT>
Affects displayed HT score, +0%, shortname(Affects HT), gives(-Owner::Level to ST:HT), group(Reduced HT), description(This modifier causes the Extra HT advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HT penalty, +0%, shortname(Conditional HT), conditional(-Owner::Level to ST:HT), group(Reduced HT), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Will>
Affects displayed Will score, +0%, shortname(Affects Will), gives(-Owner::Level to ST:Will), group(Reduced Will), description(This modifier causes the Extra Will advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Will penalty, +0%, shortname(Conditional Will), conditional(-Owner::Level to ST:Will), group(Reduced Will), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Perception>
Affects displayed Per score, +0%, shortname(Affects Per), gives(-Owner::Level to ST:Perception), group(Reduced Perception), description(This modifier causes the Extra Perception advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Per penalty, +0%, shortname(Conditional Per), conditional(-Owner::Level to ST:Perception), group(Reduced Perception), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Hit Points>
Affects displayed HP score, +0%, shortname(Affects HP), gives(-Owner::Level to ST:Hit Points), group(Reduced Hit Points), description(This modifier causes the Extra Hit Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional HP penalty, +0%, shortname(Conditional HP), conditional(-Owner::Level to ST:Hit Points), group(Reduced Hit Points), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)
Growth Size, +0%, formula(@min(0,-((@if(ST:Size Modifier < 0 THEN ST:Size Modifier::score ELSE 0) + AD:Growth::level) * 10))), forceformula(yes), group(Reduced Hit Points), page(B58)

<Reduced Fatigue Points>
Affects displayed FP score, +0%, shortname(Affects FP), gives(-Owner::Level to ST:Fatigue Points), group(Reduced Fatigue Points), description(This modifier causes the Extra Fatigue Points advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional FP penalty, +0%, shortname(Conditional FP), conditional(-Owner::Level to ST:Fatigue Points), group(Reduced Fatigue Points), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Basic Move>
Affects displayed Basic Move score, +0%, shortname(Affects Move), gives(-Owner::Level to ST:Basic Move), group(Reduced Basic Move), description(This modifier causes the Extra Basic Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Move penalty, +0%, shortname(Conditional Move), conditional(-Owner::Level to ST:Basic Move), group(Reduced Basic Move), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Basic Speed>
Affects displayed Basic Speed score, +0%, shortname(Affects Speed), gives(-(Owner::Level/4) to ST:Basic Speed), group(Reduced Basic Speed), description(This modifier causes the Extra Basic Speed advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Basic Speed penalty, +0%, shortname(Conditional Speed), conditional(-Owner::Level to ST:Basic Speed), group(Reduced Basic Speed), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Water Move>
Affects displayed Water Move score, +0%, shortname(Affects Water Move), gives(-Owner::Level to ST:Basic Water Move), group(Reduced Water Move), description(This modifier causes the Extra Water Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Water Move penalty, +0%, shortname(Conditional Water Move), conditional(-Owner::Level to ST:Basic Water Move), group(Reduced Water Move), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Reduced Air Move>
Affects displayed Air Move score, +0%, shortname(Affects Air Move), gives(-Owner::Level to ST:Basic Air Move), group(Reduced Air Move), description(This modifier causes the Extra Air Move advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)
Gives conditional Air Move penalty, +0%, shortname(Conditional Air Move), conditional(-Owner::Level to ST:Basic Air Move), group(Reduced Air Move), description(This modifier causes the Extra ST advantage to give a conditional bonus to the attribute score. In GCA a conditional bonus does not affect the displayed score but can be printed on the character sheet to note it occassionally receives the bonus.)

<Regeneration>
Heals Radiation, +40%, group(Regeneration), page(B80)
Radiation Only, -60%, group(Regeneration), page(B80)

<Regrowth>
Minor, -50%, group(Regrowth), page(B80)

<Reputation Advantage>
People Affected: Almost everyone in your game world, *1, shortname(Almost everyone), group(Reputation Advantage), page(B27), round(down)
People Affected: Almost everyone in your game world except one large class, *2/3, shortname(Almost everyone, except large class), group(Reputation Advantage), page(B27), round(down)
People Affected: Large class of people, *1/2, shortname(Large class), group(Reputation Advantage), page(B27), round(down)
People Affected: Small class of people, *1/3, shortname(Small class), group(Reputation Advantage), page(B27), round(down)
Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation Advantage), page(B28), round(down)
Frequency of Recognition: Sometimes (roll of 10 or less), *1/2, shortname(10 or less), group(Reputation Advantage), page(B28), round(down)
Frequency of Recognition: Occasionally (roll of 7 or less), *1/3, shortname(7 or less), group(Reputation Advantage), page(B28), round(down)

<Reputation Disadvantage>
People Affected: Almost everyone in your game world, *1, shortname(Almost everyone), group(Reputation Disadvantage), page(B27)
People Affected: Almost everyone in your game world except one large class, *2/3, shortname(Almost everyone, except large class), group(Reputation Disadvantage), page(B27)
People Affected: Large class of people, *1/2, shortname(Large class), group(Reputation Disadvantage), page(B27)
People Affected: Small class of people, *1/3, shortname(Small class), group(Reputation Disadvantage), page(B27)
Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation Disadvantage), page(B28)
Frequency of Recognition: Sometimes (roll of 10 or less), *1/2, shortname(10 or less), group(Reputation Disadvantage), page(B28)
Frequency of Recognition: Occasionally (roll of 7 or less), *1/3, shortname(7 or less), group(Reputation Disadvantage), page(B28)

<Resistant>
Degree: Immunity, *1, shortname(Immunity), group(Resistant), page(B81), tier(-1)
Degree: +8 to HT rolls to resist, *1/2, round(Down), shortname(+8), group(Resistant), page(B81), tier(-1)
Degree: +3 to HT rolls to resist, *1/3, round(Down), shortname(+3), group(Resistant), page(B81), tier(-1)

<Restricted Diet>
Substitution, -50%, group(Restricted Diet), page(B151)

<Scanning Sense>
Extended Arc: 240°, +75%, group(Scanning Sense), page(B82)
Extended Arc: 360°, +125%, group(Scanning Sense), page(B82)
Low-Probability Intercept, +10%, group(Scanning Sense), page(B82)
Multi-Mode, +50%, group(Scanning Sense), page(B82)
Penetrating, +50%, group(Scanning Sense), page(B82)
Targeting, +20%, group(Scanning Sense), page(B82)
Targeting Only, -40%, group(Scanning Sense), page(B82)

<Secret Identity>
Secret Identity: Status 3 or higher, -10, shortname(Status 3+), group(Secret Identity), page(B153)

<Security Clearance>
Granting organization is of relatively minor importance, *1/2, group(Security Clearance), page(B82)

<Self-Control>
You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), group(Self-Control), page(B121)
You resist on a roll of  9 or less (fairly often), *1.5, shortname(9 or less), group(Self-Control), page(B121)
You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121)
You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15 or less), group(Self-Control), page(B121)

<Shadow Form Advantage>
Can Carry Objects, +10%/+20%/+50%/+100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Shadow Form Advantage), page(B83)

<Shadow Form Disadvantage>
Can Carry Objects, -10%/-20%/-50%/-100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Shadow Form Disadvantage), page(B83)

<Shrinking>
Affects Others, +50%/+100%, group(Shrinking), page(B85)
Can Carry Objects, +10%/+20%/+50%/+100%, levelnames(No Encumbrance, Light Encumbrance, Medium Encumbrance, Heavy Encumbrance), upto(4), group(Shrinking), page(B85)
Full Damage, +100%, group(Shrinking), page(B85)
Full DR, +30%, group(Shrinking), page(B85)
Full HP, +30%, group(Shrinking), page(B85)
Full Move, +30%, group(Shrinking), page(B85)

<Size>
Size, -10%, formula(-@if(ST:Size Modifier > 0 THEN ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15)

<Size HP>
Size, -10%, formula(-@if(ST:Size Modifier > 0 & ST:Hit Points::level > 0 THEN ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15)

<Size ST>
Size, -10%, formula(-@if(ST:Size Modifier > 0 & ST:ST::level > 0 THEN ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15)

<Snatcher>
Permanent, +300%, group(Snatcher), page(B86)
Less Weight, -5%/-10%/-15%/-25%/-30%, levelnames(3 lbs., 2 lbs., 1 lb., 4 oz., 1 oz.), upto(5), group(Snatcher), page(B86)
Specialized, -5%/-10%, group(Snatcher), page(B86)
Stunning, -10%, group(Snatcher), page(B86)
Unpredictable, -25%, group(Snatcher), page(B86)

<Social Regard>
Feared, +0, group(Social Regard), page(B87)
Respected, +0, group(Social Regard), page(B87)
Venerated, +0, group(Social Regard), page(B87)

<Speak Underwater>
Interface Crossing, +50%, group(Speak Underwater), page(B87)

<Speak With Animals>
Specialized: All land animals, -40%, shortname(All land animals), group(Speak With Animals), page(B87)
Specialized: All aquatic animals, -40%, shortname(All aquatic animals), group(Speak With Animals), page(B87)
Specialized: one class, -50%, group(Speak With Animals), page(B87),
	description(A class of animals would include Mammals, Birds, Reptiles, etc.)
Specialized: one family, -60%, group(Speak With Animals), page(B87),
	description(A family of animals would include Felines, Parrots, Snakes, etc.)
Specialized: one species, -80%, group(Speak With Animals), page(B87),
	description(A species of animal would include House Cats, Macaws, Boa Constrictors, etc.)

<Spirit Empathy>
Specialized, -50%, group(Spirit Empathy), page(B88),
	x(_
		#InputToTagReplace("Please describe what category of spirit your Empathy is specialized to:",nameext,,Spirit Empathy)_
	)

<Status>
Heir, +3/+5, page(B33), formula(@int(me::level * 2.5 + 0.9)), forceformula(yes), gives(=+@int(me::level/2) to ST:Status), upto(8 - owner::level)

<Striking ST>
Doesn't give general damage bonus (e.g. for Limited: One Weapon), -0%, gives(-owner::level to ST:Striking ST)
Bite Only, -60%, group(Striking ST), page(P79), gives(-owner::level to ST:Striking ST, +owner::level to ST:Bite)
Kick Only, -60%, group(Striking ST), page(P79), gives(-owner::level to ST:Striking ST, +owner::level to ST:Kick)
Punch Only, -60%, group(Striking ST), page(P79), gives(-owner::level to ST:Striking ST, +owner::level to ST:Punch)

<Striker>
Long: any reach, +100%/+200%, group(Striker), page(B88), shortname(Long),
	gives(=nobase to owner::reach$, ="C,$if(me::level=1 THEN "1" ELSE "1-$solver(me::level)")" to owner::reach$)
Long: only at maximum reach, +75%/+150%, group(Striker), page(B88), shortname(Long),
	gives(=nobase to owner::reach$, =$solver(me::level) to owner::reach$)
Cannot Parry, -40%, group(Striker), page(B88),
	gives(=nobase to owner::parry$, ="No" to owner::parry$)
Clumsy, -20%/-40%, group(Striker), page(B88), levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20),
	gives(-1 to owner::skillscore)
Limited Arc, -40%, group(Striker), page(B88)
Weak, -50%, group(Striker), page(B88)

<Subsonic Hearing>
Can only hear low-frequency sounds, *0, shortname(No normal sounds), group(Subsonic Hearing), page(B89)

<Subsonic Speech>
Can only communicate via Subsonic Speech, *0, shortname(No regular speech), group(Subsonic Speech), page(B89)

<Supernatural Feature>
No Body Heat, -5, group(Supernatural Feature), page(B157)
No Body Heat: Can gain warmth temporarily, -1, group(Supernatural Feature), page(B157)
No Reflection, -10, group(Supernatural Feature), page(B157)
No Shadow, -10, group(Supernatural Feature), page(B157)
Pallor, -10, group(Supernatural Feature), page(B157)
Pallor: can gain the flush of life temporarily, -5, group(Supernatural Feature), page(B157)

<Super-Memorization>
_Per point of abilities, 5+3/point, formula(5+(me::level*3)), forceformula(yes), group(Super-Memorization), page(B71), mods(Modular Abilities),
	x(_
		#InputToTagReplace("Specify the name of this Modular slot",name,"Slot 2",Super-Memorization),
		#InputReplace("How many points does this Modular slot have:","[level]","1",Super-Memorization) _
	), level([level]) 

<_Talents>
Gives Skill Bonus to %skillslist%, +0, gives(%skillsaliaslist%), shortname(%skillslist%),
	x(_
	#ChoiceList(_
			name(skills),
			title(Talent Bonus: Choose Skills),
			text(Choose which skills will receive a bonus from this Talent.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix))_
				),
			aliaslist(_
				#grouplist(GR:AllSkills, prepend(+owner::level to "), append("))_
					)_
			)_
)

Gives Conditional Bonus to %skillslist%, +0, conditional(%skillsaliaslist%), shortname(%skillslist%),
	x(_
	#ChoiceList(_
			name(skills),
			title(Talent Bonus: Choose Skills),
			text(Choose which skills will receive a bonus from this Talent.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
						#grouplist(GR:AllSkills, flags(NoPrefix), append(*))_
				),
			aliaslist(_
						#grouplist(GR:AllSkills, prepend(+owner::level to "), append("))_
					)_
			)_
)

Gives Skill Bonus to [skill], +0, gives(+owner::level to SK:[skill]), shortname([skill]),
	x(_
	#InputReplace("Please enter the name of the skill which will receive the skill bonus; include the name extension if applicable:", "[skill]", "name (extension)", "Talent Skill Bonus")_
	)

Gives Conditional Bonus to [skill], +0, conditional(+owner::level to SK:[skill]), shortname([skill]*),
	x(_
	#InputReplace("Please enter the name of the skill which will receive the conditional bonus:", "[skill]", , "Talent Conditional Bonus")_
	)

Gives Skill Bonus to [skill category], +0, gives(+owner::level to CL:[skill category]), shortname([skill category]),
	x(_
	#InputReplace("Please enter the name of the skill category which will receive the skill bonus:", "[skill category]", "name", "Talent Skill Bonus")_
	)

Gives Conditional Bonus to [skill category], +0, conditional(+owner::level to CL:[skill category]), shortname([skill category]*),
	x(_
	#InputReplace("Please enter the name of the skill which will receive the conditional bonus:", "[skill category]", , "Talent Conditional Bonus")_
	)

<Telecommunication>
Universal, +50%, group(Telecommunication), page(B91)
Video, +40%, group(Telecommunication), page(B91)
Racial, -20%, group(Telecommunication), page(B91)
Vague, -50%, group(Telecommunication), page(B91)

<Tech Level>
Divergent TL, +5/+10, group(Tech Level), gives(+1 to ST:Tech Level), upto(12 - ST:Tech Level::basescore), page(B513)

<Infrared Communication>
Receive Only, -50%, group(Infrared Communication), page(B91)
Send Only, -50%, group(Infrared Communication), page(B91)

<Laser Communication>
Receive Only, -50%, group(Laser Communication), page(B91)
Send Only, -50%, group(Laser Communication), page(B91)

<Radio>
Short Wave, +50%, group(Radio Communication), page(B91)
Receive Only, -50%, group(Radio Communication), page(B91)
Send Only, -50%, group(Radio Communication), page(B91)

<Telesend>
Broadcast, +50%, group(Telesend), page(B91)

<Telekinesis>
Magnetic, -50%, group(Telekinesis), page(B92)
Visible, -20%, group(Telekinesis), page(B92)

Remove Swing Mode, +0, addmode(Swing, damage(), damtype(), minst(), reach(), rangehalfdam(), rangemax()),
	x(#Message(This modifier is destructive once added. You will need to Resynchronize the Advantages after removing this modifier to undo the changes made by it.))
Remove Thrust Mode, +0, addmode(Thrust, damage(), damtype(), minst(), reach(), rangehalfdam(), rangemax()),
	x(#Message(This modifier is destructive once added. You will need to Resynchronize the Advantages after removing this modifier to undo the changes made by it.))

<Telescopic Vision>
No Targeting, -60%, group(Telescopic Vision), page(B92)

<Temperature Control>
Cold, -50%, group(Temperature Control), page(B93)
Heat, -50%, group(Temperature Control), page(B93)

<Terrain Adaptation>
Cannot function normally on solid ground, -5, group(Terrain Adaptation), page(B93)

<Terror>
Always On, -20%, group(Terror), page(B93)

<Tunneling>
Tunneling Move, +5/+10, group(Tunneling), page(B94)

<Ultrahearing>
Can only hear high-frequency sounds, *0, shortname(No normal sounds), group(Ultrahearing), page(B94)

<Ultrasonic Speech>
Can only communicate via Ultrasonic Speech, *0, shortname(No normal speech), group(Ultrasonic Speech), page(B94)

<Ultravision>
Can only see ultraviolet and are blind without it, *0, shortname(Blind without UV), group(Ultravision), page(B95)

<Unaging>
Age Control, +20%, group(Unaging), page(B95)

<Unkillable>
Achilles' Heel, -10%/-30%/-50%, levelnames(Rare, Occasional, Common or Very Common), upto(3), group(Unkillable), page(B95)
Hindrance, -5%/-15%/-25%, levelnames(Rare, Occasional, Common or Very Common), upto(3), group(Unkillable), page(B95)
Reincarnation, -20%, group(Unkillable), page(B95)
Trigger, -5%/-15%/-25%, levelnames(Common or Very Common, Occasional, Rare), upto(3), group(Unkillable), page(B95)

<Vibration Sense>
Universal, +50%, group(Vibration Sense), page(B96)

<Vulnerability>
Wounding Multiplier x2, *1, shortname(x2), group(Vulnerability), page(B161)
Wounding Multiplier x3, *1.5, shortname(x3), group(Vulnerability), page(B161)
Wounding Multiplier x4, *2, shortname(x4), group(Vulnerability), page(B161)
Fatigue Only, -50%, group(Vulnerability), page(B161)

<Warp>
Blind, +50%, group(Warp), page(B98)
Extra Carrying Capacity, +10%/+20%/+30%/+50%, levelnames(Light Encumbrance, Medium Encumbrance, Heavy Encumbrance, Extra-Heavy Encumbrance), upto(4), group(Warp), page(B98)
Reliable, +5%/+10%, upto(10), group(Warp), page(B98), gives(+1 to owner::skillscore)
Warp Jump, +10%/+20%, upto(2), group(Warp), page(B98)
Hyperjump: light-speed, -50%, group(Warp), page(B98)
Hyperjump: faster than light, -25%, group(Warp), page(B98)
Naked, -30%, group(Warp), page(B99)
Range Limit, -5%/-10%, levelnames("100,000 miles", "10,000 miles", "1,000 miles", 100 miles, 10 miles, 2 miles, 500 yards, 100 yards, 20 yards, 10 yards), upto(10), group(Warp), page(B99)

<Weakness>
Rarity: Rare, *1/2, shortname(Rare), group(Weakness), page(B161)
Rarity: Occasional, *1, shortname(Occasional), group(Weakness), page(B161)
Rarity: Common, *2, shortname(Common), group(Weakness), page(B161)
Rarity: Very Common, *3, shortname(Very Common), group(Weakness), page(B161)
Fatigue Only, -50%, group(Weakness), page(B161)
Variable, -40%, group(Weakness), page(B161)

<Wealth>
Heir, +5/+10, page(B33), formula(@max(0, @int((@indexedvalue(me::level,10,20,30,(me::level-2)*25) - @indexedvalue(owner::level,10,20,30,(owner::level-2)*25))/2 + 0.9))), forceformula(yes),
	upto(16), levelnames(Comfortable, Wealthy, Very Wealthy, Filthy Rich, Multimillionaire 1, Multimillionaire 2, Multimillionaire 3, Multimillionaire 4, Multimillionaire 5, Multimillionaire 6, Multimillionaire 7, Multimillionaire 8, Multimillionaire 9, Multimillionaire 10, Multimillionaire 11, Multimillionaire 12),
	gives(=+((@indexedvalue(me::level, 10, 40, 190, (10^(me::level-1))-10) - @indexedvalue(owner::level, 10, 40, 190, (10^(me::level-1))-10))/2) To ST:Wealth Modifier)

<Wild Talent>
Retention, +25%, group(Wild Talent), page(B99)
Emergencies Only, -30%, group(Wild Talent), page(B100)
Focused, -20%, group(Wild Talent), page(B100),
	x(#InputToTag("Please describe the nature of the Focus; e.g. Mental, Physical, Magical, or Chi:", nameext, , "Focused"))

**************************************************************************
[TEMPLATES]
**************************************************************************
<Character Templates>
Investigator (Basic Set), displaycost(100),
	cat(Character Templates - Basic Set),
		description(You are a detective, investigative report, occult investigator, spy, or thief.),
		page(B259),
		sets(_
			ST:DX=12, 
			ST:IQ=12, 
			ST:HT=11, 
			ST:Hit Points=11, 
			ST:Perception=13_
			), 
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:English, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select the advantages you want for your character from the list below. You need to select 15 points worth."),
			pointswanted(15), 
			itemswanted(atleast 1),
			list(AD:Alternate Identity, 
				AD:Charisma #codes(UPTO 3), 
				AD:Contact,
				AD:Cultural Familiarity, 
				AD:Danger Sense, 
				AD:Gizmo #codes(UPTO 3),
				AD:Language, 
				AD:Legal Enforcement Powers, 
				AD:Luck,
				AD:Rapid Healing, 
				AD:Security Clearance, 
				AD:Smooth Operator #codes(UPTO 1),
				AD:Zeroed,
				AD:Extra Perception #codes(UPTO 3),
				AD:Appearance #codes(UPTO 3) _
				)_
			),
		select4(_
			text("Select the disadvantages you want for your character from the list below. You need to select -30 points worth."),
			pointswanted(-30), 
			itemswanted(atleast 1),
			list(_
				DI:Alcoholism, 
				DI:Curious, 
				DI:Duty, 
				DI:Greed, 
				DI:Honesty,
				DI:Pacifism (Reluctant Killer), 
				DI:Pacifism (Cannot Harm Innocents), 
				DI:Pacifism (Cannot Kill), 
				DI:Pacifism (Self-Defense Only), 
				DI:Pacifism (Total Nonviolence), 
				DI:Secret, 
				#newitem(_
					DI:Sense of Duty (Comrades), -5, 
					page(B153), 
					cat(Mundane, Mental)_
					),
				DI:Stubbornness, 
				DI:Wealth #codes(UPTO 1), 
				DI:Workaholic,
				DI:Reduced ST #codes(UPTO 1)_
				)_
			),
		select5(_
			text("Select the primary skills you want for your character from the list below. You need to select 3 skills (each will be taken at 4 points)."),
			pointswanted(12), 
			itemswanted(3),
			list(_
				SK:Climbing #codes(upto 4pts, downto 4pts),
				SK:Filch #codes(upto 4pts, downto 4pts),
				SK:Stealth #codes(upto 4pts, downto 4pts),
				SK:Criminology #codes(upto 4pts, downto 4pts),
				SK:Disguise #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Communications) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Electronic Warfare) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Force Shields) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Matter Transmitters) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Media) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Medical) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Parachronic) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Psychotronics) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Scientific) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Security) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Sensors) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Sonar) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Surveillance) #codes(upto 4pts, downto 4pts),
				SK:Electronics Operation (Temporal) #codes(upto 4pts, downto 4pts),
				SK:Holdout #codes(upto 4pts, downto 4pts),
				SK:Interrogation #codes(upto 4pts, downto 4pts),
				SK:Lockpicking #codes(upto 4pts, downto 4pts),
				SK:Occultism #codes(upto 4pts, downto 4pts),
				SK:Photography #codes(upto 4pts, downto 4pts),
				SK:Research #codes(upto 4pts, downto 4pts),
				SK:Shadowing #codes(upto 4pts, downto 4pts),
				SK:Smuggling #codes(upto 4pts, downto 4pts),
				SK:Traps #codes(upto 4pts, downto 4pts),
				SK:Writing #codes(upto 4pts, downto 4pts),
				SK:Observation #codes(upto 4pts, downto 4pts),
				SK:Search #codes(upto 4pts, downto 4pts),
				SK:Pickpocket #codes(upto 4pts, downto 4pts),
				SK:Computer Programming #codes(upto 4pts, downto 4pts),
				SK:Diagnosis #codes(upto 4pts, downto 4pts),
				SK:Expert Skill #codes(upto 4pts, downto 4pts),
				SK:Forensics #codes(upto 4pts, downto 4pts),
				SK:Intelligence Analysis #codes(upto 4pts, downto 4pts),
				SK:Law #codes(upto 4pts, downto 4pts),
				SK:Detect Lies #codes(upto 4pts, downto 4pts),
				SK:Computer Hacking #codes(upto 4pts, downto 4pts) _
				)_
			),
		select6(_
			text("Select the secondary skills you want for your character from the list below. You need to select 2 skills (each will be taken at 2 points)."),
			pointswanted(4), 
			itemswanted(2),
			list(_
				SK:Beam Weapons (Pistol) #codes(upto 2pts, downto 2pts),
				SK:Beam Weapons (Rifle) #codes(upto 2pts, downto 2pts),
				SK:Brawling #codes(upto 2pts, downto 2pts),
				SK:Crossbow #codes(upto 2pts, downto 2pts),
				SK:Forced Entry #codes(upto 2pts, downto 2pts),
				SK:Garrote #codes(upto 2pts, downto 2pts),
				SK:Guns (Pistol) #codes(upto 2pts, downto 2pts),
				SK:Guns (Rifle) #codes(upto 2pts, downto 2pts),
				SK:Guns (Shotgun) #codes(upto 2pts, downto 2pts),
				SK:Knife #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Axe/Mace) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Dart) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Harpoon) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Shuriken) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Spear) #codes(upto 2pts, downto 2pts),
				SK:Thrown Weapon (Stick) #codes(upto 2pts, downto 2pts),
				SK:Boxing #codes(upto 2pts, downto 2pts),
				SK:Cloak #codes(upto 2pts, downto 2pts),
				SK:Rapier #codes(upto 2pts, downto 2pts),
				SK:Shortsword #codes(upto 2pts, downto 2pts),
				SK:Acting #codes(upto 2pts, downto 2pts),
				SK:Fast-Talk #codes(upto 2pts, downto 2pts),
				SK:Sex Appeal #codes(upto 2pts, downto 2pts),
				SK:Acrobatics #codes(upto 2pts, downto 2pts),
				SK:Judo #codes(upto 2pts, downto 2pts),
				SK:Karate #codes(upto 2pts, downto 2pts) _
				)_
			),
		select7(_
			text("Select the background skill you want for your character from the list below. You need to select 1 skill (which will be taken at 2 points)."),
			pointswanted(2), 
			itemswanted(1),
			list(_
				SK:Area Knowledge #codes(upto 2pts, downto 2pts),
				SK:Computer Operation #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Business) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Headline News) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (High Culture) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (People) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Politics) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Popular Culture) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Regional) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Science & Technology) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Sports) #codes(upto 2pts, downto 2pts),
				SK:Current Affairs (Travel) #codes(upto 2pts, downto 2pts),
				SK:Carousing #codes(upto 2pts, downto 2pts),
				SK:Swimming #codes(upto 2pts, downto 2pts),
				SK:Boating (Large Powerboat) #codes(upto 2pts, downto 2pts),
				SK:Boating (Motorboat) #codes(upto 2pts, downto 2pts),
				SK:Boating (Sailboat) #codes(upto 2pts, downto 2pts),
				SK:Boating (Unpowered) #codes(upto 2pts, downto 2pts),
				SK:Driving (Automobile) #codes(upto 2pts, downto 2pts),
				SK:Driving (Construction Equipment) #codes(upto 2pts, downto 2pts),
				SK:Driving (Halftrack) #codes(upto 2pts, downto 2pts),
				SK:Driving (Heavy Wheeled) #codes(upto 2pts, downto 2pts),
				SK:Driving (Hovercraft) #codes(upto 2pts, downto 2pts),
				SK:Driving (Locomotive) #codes(upto 2pts, downto 2pts),
				SK:Driving (Mecha) #codes(upto 2pts, downto 2pts),
				SK:Driving (Motorcycle) #codes(upto 2pts, downto 2pts),
				SK:Driving (Tracked) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Aerospace) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Autogyro) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Contragravity) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Flight Pack) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Glider) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Heavy Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Helicopter) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Light Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lighter-Than-Air) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lightsail) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-G Wings) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Ultralight) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Vertol) #codes(upto 2pts, downto 2pts),
				SK:Riding #codes(upto 2pts, downto 2pts),
				SK:Streetwise #codes(upto 2pts, downto 2pts),
				SK:Hiking #codes(upto 2pts, downto 2pts),
				SK:Running #codes(upto 2pts, downto 2pts) _
				)_
			)
Mage (Basic Set), displaycost(100),
	cat(Character Templates - Basic Set),
	description(You're a sorcerer, a wizard, a witch, an adept of the black arts...),
		page(B260),
		sets(_
			ST:ST=9, 
			ST:DX=11, 
			ST:IQ=13, 
			ST:HT=11,
			ST:Hit Points=10, 
			ST:Perception=10,
			ST:Fatigue Points=13_
			), 
		adds(_
			AD:Language=2,
			AD:Magery 0,
			AD:Magery=2_
			),
			x(_
			#message("Primary Skills: _
					In addition to the items you select in the following selection windows,
					you need to select 2 spells at 4 points each,
					and 10 more spells (12 total) at 1 point each._
					~P~P_
					In addition, you will be asked to specify a language after you've selected _
					your other options from this template. The language is included in the listed _
					cost of this template.")_
			),
		needs(_
			2 Spells=4pts,
			12 spells=1pts_
			),
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:English, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select the advantages you want for your character from the list below. You need to select 5 points worth."),
			pointswanted(5), 
			itemswanted(atleast 1),
			list(AD:Eidetic Memory, 
				AD:Reputation #codes(UPTO 1), 
				AD:Single-Minded,
				AD:Status #codes(UPTO 1), 
				AD:Versatile, 
				AD:Extra Will #codes(UPTO 1)_
				)_
			),
		select4(_
			text("Select the disadvantages you want for your character from the list below. You need to select -30 points worth."),
			pointswanted(-30), 
			itemswanted(atleast 1),
			list(_
				DI:Absent-Mindedness, 
				#newitem(DI:Bad Sight (Nearsighted), -25, displaycost(-10), page(B123), cat(Mundane Physical, Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Farsighted)), mods(Bad Sight), initmods(Mitigator: Glasses, -60%, group(_General), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)) ),
				#newitem(DI:Bad Sight (Farsighted), -25, displaycost(-10), page(B123), cat(Mundane Physical, Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Nearsighted)), mods(Bad Sight), initmods(Mitigator: Glasses, -60%, group(_General), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)) ),
				DI:Bad Temper, 
				DI:Curious, 
				DI:Duty,
				DI:Gluttony, 
				DI:Obsession, 
				DI:Secret, 
				DI:Sense of Duty, 
				DI:Shyness_
				)_
			),
		select5(_
			text("Select the secondary skills you want for your character from the list below. You need to select 2 skills (each will be taken at 2 points)."),
			pointswanted(4), 
			itemswanted(2),
			list(_
				SK:Hidden Lore #codes(upto 2pts, downto 2pts),
				SK:Hidden Lore (Conspiracies) #codes(upto 2pts, downto 2pts),
				SK:Hidden Lore (Demon Lore) #codes(upto 2pts, downto 2pts),
				SK:Hidden Lore (Faerie Lore) #codes(upto 2pts, downto 2pts),
				SK:Hidden Lore (Spirit Lore) #codes(upto 2pts, downto 2pts),
				SK:Occultism #codes(upto 2pts, downto 2pts),
				SK:Research #codes(upto 2pts, downto 2pts),
				SK:Expert Skill #codes(upto 2pts, downto 2pts),
				SK:Mathematics (Applied) #codes(upto 2pts, downto 2pts),
				SK:Mathematics (Computer Science) #codes(upto 2pts, downto 2pts),
				SK:Mathematics (Cryptology) #codes(upto 2pts, downto 2pts),
				SK:Mathematics (Pure) #codes(upto 2pts, downto 2pts),
				SK:Mathematics (Statistics) #codes(upto 2pts, downto 2pts),
				SK:Mathematics (Surveying) #codes(upto 2pts, downto 2pts),
				SK:Naturalist #codes(upto 2pts, downto 2pts),
				SK:Theology #codes(upto 2pts, downto 2pts), 			
				SK:Dreaming #codes(upto 2pts, downto 2pts),
				SK:Meditation #codes(upto 2pts, downto 2pts),
				SK:Alchemy #codes(upto 2pts, downto 2pts),
				SK:Thaumatology #codes(upto 2pts, downto 2pts)_
				)_
			),
		select6(_
			text("Select the background skill you want for your character from the list below. You need to select 1 skill (which will be taken at 1 points)."),
			pointswanted(1), 
			itemswanted(1),
			list(_
				SK:Guns (Pistol) #codes(upto 1pts, downto 1pts),
				SK:Guns (Shotgun) #codes(upto 1pts, downto 1pts),
				SK:Knife #codes(upto 1pts, downto 1pts),
				SK:Computer Operation #codes(upto 1pts, downto 1pts),
				SK:Driving (Automobile) #codes(upto 1pts, downto 1pts),
				SK:Driving (Construction Equipment) #codes(upto 1pts, downto 1pts),
				SK:Driving (Halftrack) #codes(upto 1pts, downto 1pts),
				SK:Driving (Heavy Wheeled) #codes(upto 1pts, downto 1pts),
				SK:Driving (Hovercraft) #codes(upto 1pts, downto 1pts),
				SK:Driving (Locomotive) #codes(upto 1pts, downto 1pts),
				SK:Driving (Mecha) #codes(upto 1pts, downto 1pts),
				SK:Driving (Motorcycle) #codes(upto 1pts, downto 1pts),
				SK:Driving (Tracked) #codes(upto 1pts, downto 1pts),
				SK:Riding #codes(upto 1pts, downto 1pts),
				SK:Shortsword #codes(upto 1pts, downto 1pts),
				SK:Staff #codes(upto 1pts, downto 1pts)_
				)_
			)
Heroic Knight (Basic Set), displaycost(95),
	cat(Character Templates - Basic Set),
		description(You are a brave knight out of fantasy or fairy tales - strong, honerable, a wise leader, and a skilled warrior.),
		page(B448),
		sets(_
			ST:ST=12, 
			ST:DX=12, 
			ST:IQ=11, 
			ST:HT=12_
			), 
		adds(_
			AD:Status=2,
			AD:Wealth,
			DI:Code of Honor (Chivalry),
			DI:Duty (Liege lord)=2,
			DI:Honesty _
				with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), group(Self-Control)",
			DI:Vow (Never refuse a request for aid)=3,
			SK:Riding (Horse)=2pts,
			SK:Broadsword=8pts,
			SK:Lance=8pts,
			SK:Shield (Shield)=4pts,
			SK:Leadership=2pts,
			SK:Tactics=4pts,
			SK:Armoury (Melee Weapons)=1pts,
			SK:Heraldry=1pts _
			)
Warrior (Basic Set), displaycost(101),
	cat(Character Templates - Basic Set),
		description(You are a fantasy warrior - a barbarian, knight, swashbuckler; or someone else who lives by  the sword.),
		page(B448),
		sets(_
			ST:ST = 12, 
			ST:DX = 12,
			ST:HT = 12_
			),
		adds(_
			SK:Armoury (Melee Weapons) = 1pts,
			SK:Shield (Shield) = 4pts _
			),
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:English, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select two weapon skills from the list below. Each will be taken at 8 pts. Typical selections for a Knight would be Broadsword and Lance."),
			pointswanted(16), 
			itemswanted(2),
			list(_
				SK:Axe/Mace #codes(upto 8pts, downto 8pts),
				SK:Broadsword #codes(upto 8pts, downto 8pts),
				SK:Jitte/Sai #codes(upto 8pts, downto 8pts),
				SK:Lance #codes(upto 8pts, downto 8pts),
				SK:Main-Gauche #codes(upto 8pts, downto 8pts),
				SK:Polearm #codes(upto 8pts, downto 8pts),
				SK:Rapier #codes(upto 8pts, downto 8pts),
				SK:Saber #codes(upto 8pts, downto 8pts),
				SK:Shortsword #codes(upto 8pts, downto 8pts),
				SK:Smallsword #codes(upto 8pts, downto 8pts),
				SK:Staff #codes(upto 8pts, downto 8pts),
				SK:Two-Handed Axe/Mace #codes(upto 8pts, downto 8pts),
				SK:Two-Handed Sword #codes(upto 8pts, downto 8pts),
				SK:Whip #codes(upto 8pts, downto 8pts)_
				)_
			)
Warrior - Heroic (Basic Set), displaycost(-9),
	cat(Character Templates - Basic Set),
		description(You are wise, honerable, and a leader of men.),
		page(B448),
		sets(_
			ST:IQ = 11_
			),
		needs(_
			TE:Warrior (Basic Set)_
			),
		adds(_
			DI:Honesty _
				with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), group(Self-Control)",
			DI:Vow (Never refuse a request for aid) = 3,
			SK:Leadership = 2pts,
			SK:Tactics = 4pts_
			)
Warrior - Knight (Basic Set), displaycost(+3),
	cat(Character Templates - Basic Set),
		description(You are an invested knight, with all the attendant privileges and duties.),
		page(B448),
		needs(_
			TE:Warrior (Basic Set)_
			),
		adds(_
			AD:Status = 2,
			AD:Wealth,
			DI:Code of Honor (Chivalry),
			DI:Duty (Liege lord) = 2,
			SK:Heraldry = 1pts,
			SK:Riding (Horse) = 2pts _
			)
Soldier of Fortune (Basic Set), displaycost(100),
	cat(Character Templates - Basic Set),
		description(You're a warrior. You could be a soldier, pirate, knight-errant, gunslinger, street fighter, or guerrilla.),
		page(B260),
		sets(_
			ST:ST=11, 
			ST:DX=13, 
			ST:IQ=11, 
			ST:HT=11_
			), 
		adds(_
			SK:First Aid=1pts_
			),
		select1(text("If you have not already chosen one, please choose a native Language."), pointswanted(atleast -3, upto 0), itemswanted(upto 2),
			list(_
				#newitem(AD:English, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
				AD:Language - Native #codes(upto 3, downto 3),
				AD:Language - Native (Spoken) #codes(upto 3, downto 3),
				AD:Language - Native (Written) _
				)_
			),
		select2(text("If you have not already chosen one, please choose a native Cultural Familiarity."), pointswanted(0), itemswanted(upto 1),
			list(_
				AD:Cultural Familiarity (Native)_
				)_
			),
		select3(_
			text("Select the advantages you want for your character from the list below. You need to select 20 points worth."),
			pointswanted(20), 
			itemswanted(atleast 1),
			list(AD:Ambidexterity, 
				AD:Charisma #codes(UPTO 4), 
				AD:Combat Reflexes,
				AD:Fit,
				AD:Very Fit,
				AD:High Pain Threshold,
				AD:Luck #codes(UPTO 1),
				AD:Magic Resistance #codes(UPTO 10),
				AD:Outdoorsman,
				AD:Administrative Rank #codes(UPTO 4),
				AD:Merchant Rank #codes(UPTO 4),
				AD:Military Rank #codes(UPTO 4),
				AD:Police Rank #codes(UPTO 4),
				AD:Religious Rank #codes(UPTO 4),
				AD:Rapid Healing,
				AD:Reputation,
				AD:Status #codes(UPTO 4),
				AD:Wealth #codes(UPTO 1),
				AD:Extra ST #codes(UPTO 1),
				AD:Extra HT#codes(UPTO 1),
				AD:Extra Hit Points #codes(UPTO 4),
				AD:Extra Perception #codes(UPTO 4) _
				)_
			),
		select4(_
			text("Select the disadvantages you want for your character from the list below. You need to select -35 points worth."),
			pointswanted(-35), 
			itemswanted(atleast 1),
			list(_
				DI:Alcoholism,
				DI:Bad Temper,
				DI:Bloodlust,
				DI:Code of Honor,
				DI:Compulsive Carousing,
				DI:Compulsive Spending,
				DI:Duty,
				DI:Fanaticism,
				DI:Flashbacks #codes(UPTO 1),
				DI:Honesty,
				DI:Impulsiveness,
				DI:Lecherousness,
				DI:Overconfidence,
				#newitem(_
					DI:Sense of Duty (Comrades), -5, 
					page(B153), 
					cat(Mundane, Mental)_
					),
				DI:Trademark #codes(UPTO 1)_
				)_
			),
		select5(_
			text("Select the primary skills you want for your character from the list below. You need to select 2 skills (each will be taken at 4 points)."),
			pointswanted(8), 
			itemswanted(2),
			list(_
				SK:Beam Weapons (Pistol) #codes(upto 4pts, downto 4pts),
				SK:Beam Weapons (Projector) #codes(upto 4pts, downto 4pts),
				SK:Beam Weapons (Rifle) #codes(upto 4pts, downto 4pts),
				SK:Crossbow #codes(upto 4pts, downto 4pts),
				SK:Guns (Grenade Launcher) #codes(upto 4pts, downto 4pts),
				SK:Guns (Gyroc) #codes(upto 4pts, downto 4pts),
				SK:Guns (Light Anti-Armor Weapon) #codes(upto 4pts, downto 4pts),
				SK:Guns (Light Machine Gun) #codes(upto 4pts, downto 4pts),
				SK:Guns (Musket) #codes(upto 4pts, downto 4pts),
				SK:Guns (Pistol) #codes(upto 4pts, downto 4pts),
				SK:Guns (Rifle) #codes(upto 4pts, downto 4pts),
				SK:Guns (Shotgun) #codes(upto 4pts, downto 4pts),
				SK:Guns (Submachine Gun) #codes(upto 4pts, downto 4pts),
				SK:Axe/Mace #codes(upto 4pts, downto 4pts),
				SK:Bow #codes(upto 4pts, downto 4pts),
				SK:Broadsword #codes(upto 4pts, downto 4pts),
				SK:Lance #codes(upto 4pts, downto 4pts),
				SK:Rapier #codes(upto 4pts, downto 4pts),
				SK:Spear #codes(upto 4pts, downto 4pts),
				SK:Karate #codes(upto 4pts, downto 4pts),
				SK:Tactics #codes(upto 4pts, downto 4pts) _
				)_
			),
		select6(_
			text("Select a secondary skill you want for your character from the list below. You need to select 1 skill (which will be taken at 2 points)."),
			pointswanted(2), 
			itemswanted(1),
			list(_
				SK:Brawling #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Force Sword) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Knife) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Long Arm) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Pistol) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Sword) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Two-Handed Sword) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Arrow) #codes(upto 2pts, downto 2pts),
				SK:Fast-Draw (Ammo) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Beams) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Cannon) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Catapult) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Machine Gun) #codes(upto 2pts, downto 2pts),
				SK:Gunner (Rockets) #codes(upto 2pts, downto 2pts),
				SK:Knife #codes(upto 2pts, downto 2pts),
				SK:Shield (Shield) #codes(upto 2pts, downto 2pts),
				SK:Shield (Buckler) #codes(upto 2pts, downto 2pts),
				SK:Shield (Force) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Beams) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Bombs) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Cannon) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Catapult) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Guided Missile) #codes(upto 2pts, downto 2pts),
				SK:Artillery (Torpedoes) #codes(upto 2pts, downto 2pts),
				SK:Forward Observer #codes(upto 2pts, downto 2pts)_
				)_
			),
		select7(_
			text("Select another secondary skill you want for your character from the list below. You need to select 1 skill (which will be taken at 2 points)."),
			pointswanted(2), 
			itemswanted(1),
			list(_
				SK:Airshipman #codes(upto 2pts, downto 2pts),
				SK:Seamanship #codes(upto 2pts, downto 2pts),
				SK:Spacer #codes(upto 2pts, downto 2pts),
				SK:Submariner #codes(upto 2pts, downto 2pts),
				SK:Driving (Automobile) #codes(upto 2pts, downto 2pts),
				SK:Driving (Construction Equipment) #codes(upto 2pts, downto 2pts),
				SK:Driving (Halftrack) #codes(upto 2pts, downto 2pts),
				SK:Driving (Heavy Wheeled) #codes(upto 2pts, downto 2pts),
				SK:Driving (Hovercraft) #codes(upto 2pts, downto 2pts),
				SK:Driving (Locomotive) #codes(upto 2pts, downto 2pts),
				SK:Driving (Mecha) #codes(upto 2pts, downto 2pts),
				SK:Driving (Motorcycle) #codes(upto 2pts, downto 2pts),
				SK:Driving (Tracked) #codes(upto 2pts, downto 2pts),
				SK:Battlesuit #codes(upto 2pts, downto 2pts),
				SK:Diving Suit #codes(upto 2pts, downto 2pts),
				SK:NBC Suit #codes(upto 2pts, downto 2pts),
				SK:Vacc Suit #codes(upto 2pts, downto 2pts),
				SK:Piloting (Aerospace) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Autogyro) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Contragravity) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Flight Pack) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Glider) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Heavy Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Helicopter) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (High-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Light Airplane) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lighter-Than-Air) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Lightsail) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-G Wings) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Low-Performance Spacecraft) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Ultralight) #codes(upto 2pts, downto 2pts),
				SK:Piloting (Vertol) #codes(upto 2pts, downto 2pts),
				SK:Riding #codes(upto 2pts, downto 2pts),
				SK:Hiking #codes(upto 2pts, downto 2pts),
				SK:Acrobatics #codes(upto 2pts, downto 2pts)_
				)_
			),
		select8(_
			text("Select 2 background skills you want for your character from the list below. You need to select 2 skills (each will be taken at 1 points)."),
			pointswanted(2), 
			itemswanted(2),
			list(_
				SK:Camouflage #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Dojo) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (High Society) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Mafia) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Military) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Police) #codes(upto 1pts, downto 1pts),
				SK:Savoir-Faire (Servant) #codes(upto 1pts, downto 1pts),
				SK:Carousing #codes(upto 1pts, downto 1pts),
				SK:Swimming #codes(upto 1pts, downto 1pts),
				SK:Free Fall #codes(upto 1pts, downto 1pts),
				SK:Stealth #codes(upto 1pts, downto 1pts),
				SK:Electronics Operation (Communications) #codes(upto 1pts, downto 1pts),
				SK:Electronics Operation (Sensors) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Demolition) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Explosive Ordnance Disposal) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Fireworks) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Nuclear Ordnance Disposal) #codes(upto 1pts, downto 1pts),
				SK:Explosives (Underwater Demolition) #codes(upto 1pts, downto 1pts),
				SK:Leadership #codes(upto 1pts, downto 1pts),
				SK:Observation #codes(upto 1pts, downto 1pts),
				SK:Survival (Arctic) #codes(upto 1pts, downto 1pts),
				SK:Survival (Desert) #codes(upto 1pts, downto 1pts),
				SK:Survival (Island/Beach) #codes(upto 1pts, downto 1pts),
				SK:Survival (Jungle) #codes(upto 1pts, downto 1pts),
				SK:Survival (Mountain) #codes(upto 1pts, downto 1pts),
				SK:Survival (Plains) #codes(upto 1pts, downto 1pts),
				SK:Survival (Swampland) #codes(upto 1pts, downto 1pts),
				SK:Survival (Woodlands) #codes(upto 1pts, downto 1pts),
				SK:Survival (Bank) #codes(upto 1pts, downto 1pts),
				SK:Survival (Deep Ocean Vent) #codes(upto 1pts, downto 1pts),
				SK:Survival (Fresh-Water Lake) #codes(upto 1pts, downto 1pts),
				SK:Survival (Open Ocean) #codes(upto 1pts, downto 1pts),
				SK:Survival (Reef) #codes(upto 1pts, downto 1pts),
				SK:Survival (River/Stream) #codes(upto 1pts, downto 1pts),
				SK:Survival (Salt-Water Sea) #codes(upto 1pts, downto 1pts),
				SK:Survival (Tropical Lagoon) #codes(upto 1pts, downto 1pts),
				SK:Tracking #codes(upto 1pts, downto 1pts),
				SK:Urban Survival #codes(upto 1pts, downto 1pts)_
				)_
			)

<Racial Templates>
_New Racial Template, displaycost(variable), cost(0),
	race(_New Racial Template),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	x(_
		#InputReplace("Please set the name of the Racial Template:", "_New Racial Template", , "New Racial Template")_
	),
		select1(tagwith(hide(yes)), text("Please select any Meta-Traits the Racial Template possesses:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllMetaTraits)_
				)_
			),
		select2(tagwith(hide(yes)), text("Please select the Racial Attribute Modifiers:"), pointswanted(atleast -1000, upto 10000), itemswanted(upto 10000),
			list(_
				#newitem(AD:_New Racial Template ST Bonus, 10/20, page(B14), mods(Size, No Fine Manipulators), gives(+1 to ST:ST), cat(Attributes)),
				#newitem(AD:_New Racial Template DX Bonus, 20/40, page(B15), mods(No Fine Manipulators), gives(+1 to ST:DX), cat(Attributes)),
				#newitem(AD:_New Racial Template IQ Bonus, 20/40, page(B15), gives(+1 to ST:IQ), cat(Attributes)),
				#newitem(AD:_New Racial Template HT Bonus, 10/20, page(B15), gives(+1 to ST:HT), cat(Attributes)),
				#newitem(AD:_New Racial Template Will Bonus, 5/10, page(B16), gives(+1 to ST:Will), cat(Attributes)),
				#newitem(AD:_New Racial Template Perception Bonus, 5/10, page(B16), gives(+1 to ST:Perception), cat(Attributes)),
				#newitem(AD:_New Racial Template Hit Points Bonus, 2/4, page(B16), mods(Size, No Fine Manipulators), gives(+1 to ST:Hit Points), cat(Attributes)),
				#newitem(AD:_New Racial Template Fatigue Points Bonus, 3/6, page(B16), gives(+1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(AD:_New Racial Template Basic Move Bonus, 5/10, page(B17), gives(+1 to ST:Basic Move), cat(Attributes)),
				#newitem(AD:_New Racial Template Basic Speed Bonus, 5/10, page(B17), upto(80), gives(+0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10,
							+10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 _
							)),
				#newitem(AD:_New Racial Template Water Move Bonus, 5/10, page(B18), gives(+1 to ST:Water Move), cat(Attributes)),
				#newitem(AD:_New Racial Template Air Move Bonus, 2/4, page(B18), gives(+1 to ST:Air Move), cat(Attributes)),
				#newitem(AD:_New Racial Template TL Bonus, 5/10, page(B23), gives(+1 to ST:Tech Level), cat(Mundane, Social, Mundane Social), upto(12 - ST:Tech Level::basevalue)),
				#newitem(AD:_New Racial Template SM Bonus, 0/0, gives(+1 to ST:Size Modifier), page(B19), cat(Attributes)),
				#newitem(DI:_New Racial Template ST Penalty, -10/-20, page(B14), gives(-1 to ST:ST), cat(Attributes)),
				#newitem(DI:_New Racial Template DX Penalty, -20/-40, page(B15), gives(-1 to ST:DX), cat(Attributes)),
				#newitem(DI:_New Racial Template IQ Penalty, -20/-40, page(B15), gives(-1 to ST:IQ), cat(Attributes)),
				#newitem(DI:_New Racial Template HT Penalty, -10/-20, page(B15), gives(-1 to ST:HT), cat(Attributes)),
				#newitem(DI:_New Racial Template Will Penalty, -5/-10, page(B16), gives(-1 to ST:Will), cat(Attributes)),
				#newitem(DI:_New Racial Template Perception Penalty, -5/-10, page(B16), gives(-1 to ST:Perception), cat(Attributes)),
				#newitem(DI:_New Racial Template Hit Points Penalty, -2/-4, page(B16), gives(-1 to ST:Hit Points), cat(Attributes)),
				#newitem(DI:_New Racial Template Fatigue Points Penalty, -3/-6, page(B16), gives(-1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(DI:_New Racial Template Basic Move Penalty, -5/-10, page(B17), gives(-1 to ST:Basic Move), cat(Attributes)),
				#newitem(DI:_New Racial Template Basic Speed Penalty, -5/-10, page(B17), upto(80), gives(-0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							-0.25, -0.5, -0.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -4, -4.25, -4.5, -4.75, -5, -5.25, -5.5, -5.75, -6, -6.25, -6.5, -6.75, -7, -7.25, -7.5, -7.75, -8, -8.25, -8.5, -8.75, -9, -9.25, -9.5, -9.75, -10,
							-10.25, -10.5, -10.75, -11, -11.25, -11.5, -11.75, -12, -12.25, -12.5, -12.75, -13, -13.25, -13.5, -13.75, -14, -14.25, -14.5, -14.75, -15, -15.25, -15.5, -15.75, -16, -16.25, -16.5, -16.75, -17, -17.25, -17.5, -17.75, -18, -18.25, -18.5, -18.75, -19, -19.25, -19.5, -19.75, -20 _
							)),
				#newitem(DI:_New Racial Template Water Move Penalty, -5/-10, page(B18), gives(-1 to ST:Water Move), cat(Attributes)),
				#newitem(DI:_New Racial Template Air Move Penalty, -2/-4, page(B18), gives(-1 to ST:Air move), cat(Attributes)),
				#newitem(DI:_New Racial Template TL Penalty, -5/-10, page(B22), gives(-1 to ST:Tech Level), cat(Mundane, Social, Mundane Social)),
				#newitem(DI:_New Racial Template SM Penalty, 0/0, gives(-1 to ST:Size Modifier), page(B19), cat(Attributes)),
				#newitem(DI:_New Racial Template Ground Move Penalty, 0/0, page(B18), gives(-1 to ST:Ground Move), replacetags(in "ST:Ground Move" with "hide(), display(yes), mainwin(11), noresync(yes)"))_
				)_
			),
		select3(tagwith(hide(yes)), text("Please select any Racial Perks:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllPerks)_
				)_
			),
		select4(tagwith(hide(yes)), text("Please select any Racial Advantages:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllAdvantages)_
				)_
			),
		select5(tagwith(hide(yes)), text("Please select any Racial Quirks:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllQuirks)_
				)_
			),
		select6(tagwith(hide(yes)), text("Please select the Racial Disadvantages:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllDisadvantages)_
				)_
			),
		select7(tagwith(hide(yes)), text("Please select any Racial Skill Bonuses:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
					"AD:Racial Skill Bonus (%skillslist%)",
					"AD:Racial Skill Bonus ([skill])",
					"AD:Racial Skill Point Bonus ([skill])",
					"AD:Racial Spell Bonus ([spell])",
					"AD:Racial Spell Point Bonus ([spell])"_
				)_
			), noresync(yes)

Dragon (Basic Set), displaycost(260), cost(30),
	cat(Racial Templates - Basic Set),
	description(A winged, fire-breathing "lizard," as smart as a man, and around 20' long excluding its tail. _
			It can be good or evil, but it always lusts for treasure. _
			This is a young dragon, but still a fierce foe for a group of adventurers. _
			It might even be suitable as a PC in a high-powered game. _
			Some dragons are reputed to have other abilities, including Alternate Form (Human) (p. 83), _
			Indomitable (p. 60), Terror (p. 93), Unaging (p. 95), and Unfazeable (p. 95).),
	page(B261),
	race(Dragon),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	gives(_
		+2 to ST:Size Modifier,
		+3 to ST:Will,
		+3 to ST:Perception_
		),
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size ST), page(B15))"=15_
			),
	adds(_
		AD:Burning Attack=4 _
			with "Cone, +60%/+70%, group(_Attack Enhancements), page(B103), gives(=" ($solver(me::level)yd)" to owner::damtype$), description(The first level of Cone *includes* the base +50% cost and the +10% for the first yard of width.), level(5)" _
			and  "Limited Use (3/day), -20%, group(_General), page(B112), gives(=nobase to owner::shots$, =3 to owner::shots$)" _
			and  "Reduced Range, -10%/-20%, levelnames(x1/2, x1/5, x1/10), upto(3), group(_General), page(B115), gives(=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangehalfdam, =*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangemax), level(2)" _
			respond 5,
		AD:Claws (Talons),
		AD:Discriminatory Smell,
		AD:Damage Resistance=6 _
			with "Can't Wear Armor, -40%, group(Damage Resistance)",
		AD:Enhanced Move (Air),
		AD:Extra Attack,
		AD:Extra Legs (4 Legs),
		AD:Flight _
			with "Winged, -25%, group(Flight)",
		AD:Longevity,
		AD:Magery 0,
		AD:Night Vision=8,
		AD:Striker (Crushing) respond "Tail",
		AD:Teeth (Fangs),
		DI:Bad Grip=3,
		DI:Gluttony _
			with "You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121)",
		DI:Greed _
			with "You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121)",
		DI:Horizontal,
		DI:Miserliness _
			with "You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121)"_
		)
Dwarf (Basic Set), displaycost(35), cost(15),
	cat(Racial Templates - Basic Set),
	description(Dwarves might be only 2/3 as tall as humans, but they are much longer-lived, _
			with a nose for gold and a flair for all forms of craftsmanship. _
			Dwarves often live in underground halls, and their eyes are adapted to dim light. _
			Many dwarves have Greed or Miserliness, but these are *not* racial traits.),
	page(B261),
	race(Dwarf),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	gives(_
		+1 to ST:HT,
		-1 to ST:Size Modifier,
		+1 to ST:Will_
		),
	adds(_
		AD:Artificer=1,
		AD:Detect (Gold)=1 _
			with "Vague, -50%, group(Detect)",
		AD:Extended Lifespan=1,
		AD:Night Vision=5_
		)
Felinoid (Basic Set), displaycost(35), cost(20),
	cat(Racial Templates - Basic Set),
	description("Cat people" often appear in science fiction, fantasy, and horror settings. _
			This is a typical felinoid: humanoid, but with a number of catlike features, _
			including a tail. This could also be the "were-form" of a human with the _
			Alternate Form advantage (p. 83).),
	page(B261),
	race(Felinoid),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	gives(_
		+1 to ST:DX_
		),
	adds(_
		AD:Acute Hearing=2,
		AD:Acute Taste and Smell,
		AD:Catfall,
		AD:Claws (Sharp Claws),
		AD:Combat Reflexes,
		AD:Damage Resistance,
		AD:Teeth (Sharp Teeth),
		AD:Temperature Tolerance,
		DI:Impulsiveness _
			with "You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121)",
		DI:Sleepy _
		),
	creates(_
			"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()" _
		),
	features(Purring Voice, Tail)
Vampire (Basic Set), displaycost(150), cost(23),
	cat(Racial Templates - Basic Set),
	description(This is a "Bram Stoker"-style vampire. It possesses some, but not all, _
			of the powers and weaknesses that fiction ascribes to bloodsucking undead. _
			Notably, horror-movie vampires often have Supernatural Durability *instead* _
			of Unkillable (increases cost by 100 points).),
	page(B262),
	noresync(yes),
	race(Vampire),
	owns(yes),
	locks(yes),
	hides(yes),
	gives(_
		+4 to ST:Hit Points,
		+3 to ST:Perception_
		),
	adds(_
		"AD:Doesn't Breathe",
		"AD:Dominance",
		"AD:Injury Tolerance" _
			with "Unliving, +20, group(Injury Tolerance)",
		"AD:Insubstantiality" _
			with "Costs Fatigue: 2 FP, -10%, shortname(2 FP), group(_General)",
		"AD:Night Vision"=5,
		"AD:Speak with Animals" _
			with "Wolves and Bats, -60%, group(Speak with Animals)",
		"AD:Unaging",
		"AD:Unkillable"=2 _
			with "Achilles' Heel (Wood), -50%, group(Unkillable)",
		"AD:Vampiric Bite",
		"DI:Dependency (Coffin with soil of homeland)"=3 _
			with "Frequency Needed: Daily, *3, group(Dependency), shortname(Daily)",
		"DI:Draining (Human Blood)" _
			with "Illegal, -5, group(Draining)",
		"DI:Dread (Garlic)",
		"DI:Dread (Religious Symbols)" _
			with "5 yards, -4, group(Dread)",
		"DI:Dread (Running Water)" _
			with "Rarity: Common, *2, group(Dread)",
		"DI:Supernatural Feature" _
			with "No Body Heat: Can gain warmth temporarily, -1, group(Supernatural Feature), shortname(No Body Heat (unless fed))" _
			and  "No Reflection, -10, group(Supernatural Feature)" _
			and  "Pallor: can gain the flush of life temporarily, -5, group(Supernatural Feature), shortname(Pallor (unless fed))",
		"DI:Uncontrollable Appetite (Human Blood)" _
			with "You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121)",
		"DI:Unhealing",
		"DI:Weakness (Sunlight)"=3 _
			with "Rarity: Very Common, *3, shortname(Very Common), group(Weakness)" _
		),
	creates(_
		"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes) | No Fine Manipulators, -40%, group(No Fine Manipulators Stat), formula(-@if(ST:No Fine Manipulators > 0 & ST:ST::level > 0 then 40 else 0)), forceformula(yes))"=6,
		"AD:Alternate Form (Bat & Wolf), 30, mods(Alternate Form), page(B83), cat(Exotic, Physical, Exotic Physical)",
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)",
		"DI:Divine Curse (Cannot enter dwelling for first time unless invited), -10, cat(Supernatural, Mental, Supernatural Mental)" _
		),
	features(Sterile)
Elf (Basic Set), displaycost(70), cost(15),
	cat(Racial Templates - Basic Set),
	description(Elves are the quintessential fantasy race: very similar to humans (and cross-fertile with them, in many settings), but exceptionally beautiful, ageless, and naturally magical.),
	page(B316),
	noresync(yes),
	race(Elf),
	owns(yes),
	locks(yes),
	hides(yes),
	gives(_
		+1 to ST:HT,
		+1 to ST:Perception _
		),
	adds(_
		AD:Racial Skill Point Bonus ([skill]) respond "Connoisseur (Natural Environments)",
		AD:Appearance=1,
		AD:Language Talent,
		AD:Magery 0,
		AD:Perfect Balance,
		AD:Telescopic Vision=1,
		AD:Unaging,
		AD:Voice,
		{SK:Connoisseur (Natural Environments)}==0pts#DoNotOwn_
		),
	creates(_
			"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()" _
		)

<Meta-Traits>
_New Meta-Trait, displaycost(variable), cost(0), gives(),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	x(_
		#InputReplace("Please set the name of the Meta-Trait:", "_New Meta-Trait", , "New Meta-Trait")_
	),
		select1(tagwith(hide(yes)), text("Please select the Meta-Trait Attribute Modifiers:"), pointswanted(atleast -1000, upto 10000), itemswanted(upto 10000),
			list(_
				#newitem(AD:_New Meta-Trait ST Bonus, 10/20, page(B14), mods(Size, No Fine Manipulators), gives(+1 to ST:ST), cat(Attributes)),
				#newitem(AD:_New Meta-Trait DX Bonus, 20/40, page(B15), mods(No Fine Manipulators), gives(+1 to ST:DX), cat(Attributes)),
				#newitem(AD:_New Meta-Trait IQ Bonus, 20/40, page(B15), gives(+1 to ST:IQ), cat(Attributes)),
				#newitem(AD:_New Meta-Trait HT Bonus, 10/20, page(B15), gives(+1 to ST:HT), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Will Bonus, 5/10, page(B16), gives(+1 to ST:Will), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Perception Bonus, 5/10, page(B16), gives(+1 to ST:Perception), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Hit Points Bonus, 2/4, page(B16), mods(Size, No Fine Manipulators), gives(+1 to ST:Hit Points), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Fatigue Points Bonus, 3/6, page(B16), gives(+1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Basic Move Bonus, 5/10, page(B17), gives(+1 to ST:Basic Move), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Basic Speed Bonus, 5/10, page(B17), upto(80), gives(+0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							+0.25, +0.5, +0.75, +1, +1.25, +1.5, +1.75, +2, +2.25, +2.5, +2.75, +3, +3.25, +3.5, +3.75, +4, +4.25, +4.5, +4.75, +5, +5.25, +5.5, +5.75, +6, +6.25, +6.5, +6.75, +7, +7.25, +7.5, +7.75, +8, +8.25, +8.5, +8.75, +9, +9.25, +9.5, +9.75, +10,
							+10.25, +10.5, +10.75, +11, +11.25, +11.5, +11.75, +12, +12.25, +12.5, +12.75, +13, +13.25, +13.5, +13.75, +14, +14.25, +14.5, +14.75, +15, +15.25, +15.5, +15.75, +16, +16.25, +16.5, +16.75, +17, +17.25, +17.5, +17.75, +18, +18.25, +18.5, +18.75, +19, +19.25, +19.5, +19.75, +20 _
							)),
				#newitem(AD:_New Meta-Trait Water Move Bonus, 5/10, page(B18), gives(+1 to ST:Water Move), cat(Attributes)),
				#newitem(AD:_New Meta-Trait Air Move Bonus, 2/4, page(B18), gives(+1 to ST:Air Move), cat(Attributes)),
				#newitem(AD:_New Meta-Trait TL Bonus, 5/10, page(B23), gives(+1 to ST:Tech Level), cat(Mundane, Social, Mundane Social), upto(12 - ST:Tech Level::basevalue)),
				#newitem(AD:_New Meta-Trait SM Bonus, 0/0, gives(+1 to ST:Size Modifier), page(B19), cat(Attributes)),
				#newitem(DI:_New Meta-Trait ST Penalty, -10/-20, page(B14), gives(-1 to ST:ST), cat(Attributes)),
				#newitem(DI:_New Meta-Trait DX Penalty, -20/-40, page(B15), gives(-1 to ST:DX), cat(Attributes)),
				#newitem(DI:_New Meta-Trait IQ Penalty, -20/-40, page(B15), gives(-1 to ST:IQ), cat(Attributes)),
				#newitem(DI:_New Meta-Trait HT Penalty, -10/-20, page(B15), gives(-1 to ST:HT), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Will Penalty, -5/-10, page(B16), gives(-1 to ST:Will), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Perception Penalty, -5/-10, page(B16), gives(-1 to ST:Perception), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Hit Points Penalty, -2/-4, page(B16), gives(-1 to ST:Hit Points), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Fatigue Points Penalty, -3/-6, page(B16), gives(-1 to ST:Fatigue Points), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Basic Move Penalty, -5/-10, page(B17), gives(-1 to ST:Basic Move), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Basic Speed Penalty, -5/-10, page(B17), upto(80), gives(-0.25 to ST:Basic Speed), cat(Attributes),
					levelnames(_
							-0.25, -0.5, -0.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -4, -4.25, -4.5, -4.75, -5, -5.25, -5.5, -5.75, -6, -6.25, -6.5, -6.75, -7, -7.25, -7.5, -7.75, -8, -8.25, -8.5, -8.75, -9, -9.25, -9.5, -9.75, -10,
							-10.25, -10.5, -10.75, -11, -11.25, -11.5, -11.75, -12, -12.25, -12.5, -12.75, -13, -13.25, -13.5, -13.75, -14, -14.25, -14.5, -14.75, -15, -15.25, -15.5, -15.75, -16, -16.25, -16.5, -16.75, -17, -17.25, -17.5, -17.75, -18, -18.25, -18.5, -18.75, -19, -19.25, -19.5, -19.75, -20 _
							)),
				#newitem(DI:_New Meta-Trait Water Move Penalty, -5/-10, page(B18), gives(-1 to ST:Water Move), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Air Move Penalty, -2/-4, page(B18), gives(-1 to ST:Air move), cat(Attributes)),
				#newitem(DI:_New Meta-Trait TL Penalty, -5/-10, page(B22), gives(-1 to ST:Tech Level), cat(Mundane, Social, Mundane Social)),
				#newitem(DI:_New Meta-Trait SM Penalty 0/0, gives(-1 to ST:Size Modifier), page(B19), cat(Attributes)),
				#newitem(DI:_New Meta-Trait Ground Move Penalty, 0/0, page(B18), gives(-1 to ST:Ground Move), replacetags(in "ST:Ground Move" with "hide(), display(yes), mainwin(11), noresync(yes)"))_
				)_
			),
		select2(tagwith(hide(yes)), text("Please select any Meta-Trait Perks:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllPerks)_
				)_
			),
		select3(tagwith(hide(yes)), text("Please select any Meta-Trait Advantages:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllAdvantages)_
				)_
			),
		select4(tagwith(hide(yes)), text("Please select any Meta-Trait Quirks:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllQuirks)_
				)_
			),
		select5(tagwith(hide(yes)), text("Please select the Meta-Trait Disadvantages:"), pointswanted(atleast -10000, upto 0), itemswanted(upto 10000),
			list(_
				#grouplist(GR:AllDisadvantages)_
				)_
			),
		select6(tagwith(hide(yes)), text("Please select any Meta-Trait Skill Bonuses:"), pointswanted(atleast 0, upto 10000), itemswanted(upto 10000),
			list(_
					"AD:Racial Skill Bonus (%skillslist%)",
					"AD:Racial Skill Bonus ([skill])",
					"AD:Racial Skill Point Bonus ([skill])",
					"AD:Racial Spell Bonus ([spell])",
					"AD:Racial Spell Point Bonus ([spell])"_
				)_
			), noresync(yes)

<Meta-Traits - Elemental>
Body of Air, displaycost(36), cost(-80),
	description(Your body is made of gas.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	sets(ST:ST=10),
	gives(_
		-10 to ST:ST,
		+10 to ST:Hit Points _
		),
	adds(_
		AD:Doesn't Breathe,
		AD:Flight _
			with "Lighter Than Air, -10%, group(Flight)",
		AD:Injury Tolerance _
			with "Diffuse, +100, group(Injury Tolerance)",
		DI:No Legs (Aerial),
		DI:No Manipulators,
		DI:Vulnerability (Vacuum and wind-based attacks)=2 _ 
			with "Wounding Multiplier x2, *1, shortname(x2), group(Vulnerability)"_
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)" _
		),
	taboo(ST:ST>0)
Body of Earth, displaycost(175), cost(0),
	description(Your body is made of sand or earth.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Damage Resistance=2,
		AD:Injury Tolerance _
			with "Diffuse, +100, group(Injury Tolerance)",
		AD:Pressure Support=3,
		AD:Sealed,
		AD:Vacuum Support,
		DI:Invertebrate _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)" _
		)
Body of Fire, displaycost(6), cost(-80),
	description(Your body is a living flame! If your flames are very hot, increase burning attack and DR.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	sets(ST:ST=10),
	gives(_
		-10 to ST:ST,
		+10 to ST:Hit Points_
		),
	adds(_
		AD:Burning Attack _
			with "Always On, -40%, group(_General)" _
			and  "Aura, +80%, group(_Attack Enhancements)" _
			and  "Melee Attack: Reach C, -30%, group(_Attack Limitations), page(B112), gives(=nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C" to owner::reach$)" _
			respond 1,
		AD:Doesn't Breathe _
			with "Oxygen Combustion, -50%, group(Doesn't Breathe)",
		AD:Damage Resistance=10 _
			with "Limited: Heat/Fire, -40%, group(Limited Defense)",
		AD:Injury Tolerance _
			with "Diffuse, +100, group(Injury Tolerance)",
		DI:No Manipulators,
		DI:Weakness (Water)=3 _
			with "Rarity: Common, *2, shortname(Common), group(Weakness)" _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)" _
		),
	taboo(ST:ST>0)
Body of Ice, displaycost(99), cost(0),
	description(Your body is made of ice.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Damage Resistance=3,
		AD:Injury Tolerance _
			with "Homogenous, +40, group(Injury Tolerance)" _
			and  "No Blood, +5, group(Injury Tolerance)",
		AD:Pressure Support=3,
		AD:Sealed,
		AD:Slippery=3,
		AD:Terrain Adaptation (Ice),
		AD:Vacuum Support,
		DI:Fragile (Brittle),
		DI:Vulnerability (Heat/fire attacks)=3 _ 
			with "Wounding Multiplier x2, *1, shortname(x2), group(Vulnerability)",
		DI:Weakness (Intense normal heat)=3 _
			with "Rarity: Occasional, *1, shortname(Occasional), group(Weakness)" _
			and  "Variable, -40%, group(Weakness)" _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)
Body of Metal, displaycost(175), cost(0),
	description(Your body is made of metal.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Damage Resistance=9,
		AD:Injury Tolerance _
			with "Homogenous, +40, group(Injury Tolerance)" _
			and  "No Blood, +5, group(Injury Tolerance)",
		AD:Pressure Support=3,
		AD:Sealed,
		AD:Vacuum Support _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)
Body of Stone, displaycost(140), cost(0),
	description(Your body is made of rock.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Damage Resistance=5,
		AD:Injury Tolerance _
			with "Homogenous, +40, group(Injury Tolerance)" _
			and  "No Blood, +5, group(Injury Tolerance)",
		AD:Pressure Support=3,
		AD:Sealed,
		AD:Vacuum Support,
		DI:Fragile (Brittle) _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)
Body of Water, displaycost(175), cost(0),
	description(Your body is made of liquid.),
	page(B262),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Amphibious,
		AD:Chameleon,
		AD:Constriction Attack,
		AD:Doesn't Breathe,
		AD:Injury Tolerance _
			with "Diffuse, +100, group(Injury Tolerance)",
		AD:Pressure Support=3,
		AD:Slippery=5,
		DI:Invertebrate,
		DI:Vulnerability (Dehydration attacks) _ 
			with "Wounding Multiplier x2, *1, shortname(x2), group(Vulnerability)"_
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)

<Meta-Traits - Machine>
Machine, displaycost(25), cost(0),
	replacetags(in "ST:Fatigue Points" with "basevalue(0), step(0), maxscore(0), up(0), down(0), noresync(yes)"),
	description(Your body is mostly or completely mechanical, composed of non-living materials _
			such as metal, plastic, and composites--although you might have a few organic _
			parts, such as an outer layer of skin or a brain. Examples include robots, _
			vehicles, and full cyborgs.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	sets(_
		ST:Fatigue Points = 0 _
		),
	adds(_
		AD:Injury Tolerance _
			with "No Blood, +5, group(Injury Tolerance)" _
			and  "Unliving, +20, group(Injury Tolerance)",
		DI:Unhealing=2_
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		),
	features(_
		Eight-hour energy reserve,
		No Fatigue Points,
		Wears out instead of aging_
		),
	taboo(ST:Fatigue Points > 0)

<Meta-Traits - Mentality>
AI, displaycost(32), cost(0),
	description(A computer mind.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Absolute Timing,
		AD:Digital Mind,
		AD:Doesn't Sleep,
		AD:Intuitive Mathematician,
		AD:Photographic Memory,
		DI:Reprogrammable_
		)
Automaton, displaycost(-85), cost(0),
	description(A mind lacking self-awareness and creativity. This is typical of many hive-creatures, _
		magical constructs, undead, and simple AIs. You can combine this with the AI meta-trait.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:Hidebound,
		DI:Incurious _
			with "You resist quite rarely (roll of 6 or less), *2, shortname(6-), group(Self Control)",
		DI:Low Empathy,
		DI:No Sense of Humor,
		DI:Slave Mentality_
		)
Domestic Animal, displaycost(-30), cost(0),
	description(A farm animal, pet, mount, or a trained wild animal.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:Cannot Speak,
		DI:Hidebound,
		DI:Social Stigma (Valuable Property) _
		),
	taboo(ST:IQ>0pts)
Wild Animal, displaycost(-30), cost(0),
	description(An ordinary animal found in nature.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:Bestial,
		DI:Cannot Speak,
		DI:Hidebound _
		),
	taboo(ST:IQ>0pts)

<Meta-Traits - Morphology>
Ground Vehicle, displaycost(-100), cost(0),
	description(Your body is like a car, tank, etc.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:Horizontal,
		DI:No Legs (Wheeled),
		DI:No Manipulators,
		DI:Numb_
		)
Ichthyoid, displaycost(-50), cost(0),
	description(You have a fish-like body.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		DI:No Legs (Aquatic),
		DI:No Manipulators_
		)
Quadruped, displaycost(-35), cost(0),
	description(You are a four-legged creature with no arms.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Extra Legs (4 Legs),
		DI:Horizontal,
		DI:No Fine Manipulators _
		)
Vermiform, displaycost(-35), cost(0),
	description(Your body is similar to that of a snake or a worm.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Double-Jointed,
		DI:No Legs (Slithers),
		DI:No Manipulators _
		)

<Meta-Traits - Spirit>
Spirit, displaycost(261), cost(0),
	description(You are a noncorporeal entity: ghost, being of pure thought, etc. You are invisible _
			and intangible (except to others with this meta-trait!). You can temporarily become _
			visible, or even solid, but this is draining. However, your senses can perceive the _
			material world at all times, and your magical or psionic abilities, if any, can _
			always affect the physical world.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Doesn't Eat or Drink,
		AD:Doesn't Sleep,
		AD:Insubstantiality _
			with "Affect Substantial, +100%, group(Insubstantiality)" _
			and  "Usually On, -40%, group(Insubstantiality)",
		AD:Invisibility _
			with "Substantial Only, -10%, group(Invisibility)" _
			and  "Usually On, +5%, group(Invisibility)",
		AD:Unaging _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)
Astral Entity, displaycost(171), cost(0),
	description(An astral entity is a spirit that cannot materialize, become visible, or use its _
		supernatural powers in the physical world.),
	page(B263),
		cat(Meta-Traits),
	noresync(yes),
	owns(yes),
	locks(yes),
	hides(yes),
	adds(_
		AD:Doesn't Breathe,
		AD:Doesn't Eat or Drink,
		AD:Doesn't Sleep,
		AD:Insubstantiality _
			with "Always On, -50%, group(Insubstantiality)", _
		AD:Invisibility _
			with "Substantial Only, -10%, group(Invisibility)",
		AD:Unaging _
		),
	creates(_
		"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical)"_
		)

**************************************************************************
[EQUIPMENT]
**************************************************************************

*Equipment, techlvl(), basecost(), baseweight(), lc(), mods()

*Armor, techlvl(), basecost(), baseweight(), lc(), location(), dr(), notes(), mods()

*Standard armor locations include:
*  all, arms, eyes, face, feet, full suit, groin, hands, head, legs, limbs, neck, skull, torso

*Muscle-Powered Ranged Weapon, techlvl(), basecost(), baseweight(), lc(), mods(),
*	newmode(MODE NAME, damage(), damtype(), acc(), calcrange(yes), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused()),
*	newmode(MODE NAME, damage(), damtype(), acc(), calcrange(yes), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused())

*Firearm, techlvl(), basecost(), baseweight(), lc(), mods(),
*	newmode(MODE NAME, damage(), damtype(), acc(), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), rcl(), skillused()),
*	newmode(MODE NAME, damage(), damtype(), acc(), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), rcl(), skillused())

*Melee Weapon, techlvl(), basecost(), baseweight(), lc(), mods(), 
*	newmode(MODE NAME, damage(), damtype(), reach(), parry(), minst(), skillused()),
*	newmode(MODE NAME, damage(), damtype(), reach(), parry(), minst(), skillused())

*Throwable Melee Weapon, techlvl(), basecost(), baseweight(), lc(), mods(), 
*	newmode(MELEE MODE NAME, damage(), damtype(), reach(), parry(), minst(), skillused()),
*	newmode(RANGED MODE NAME, damage(), damtype(), acc(), calcrange(yes), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused())

<_New Equipment>
_New Equipment, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		lc([legalityclass]),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this piece of equipment:", name, , "New Equipment"),
		#InputReplace("Please enter the Tech Level of this piece of equipment:", "[techlevel]", , "New Equipment"),
		#InputReplace("Please enter the Cost of this piece of equipment. DO NOT include a dollar sign or comma:", "[cost]", , "New Equipment"),
		#InputReplace("Please enter the Weight of this piece of equipment:", "[weight]", , "New Equipment"),
		#InputReplace("Please enter the Legality Class of this piece of equipment:", "[legalityclass]", , "New Equipment"),
		#edit)

_New Armor, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		lc([legalityclass]),
		location(%locationlist%),
		dr([damageresistance]),
		notes([notes]),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this piece of armor:", name, , "New Armor"),
		#InputReplace("Please enter the Tech Level of this piece of armor:", "[techlevel]", , "New Armor"),
		#InputReplace("Please enter the Cost of this piece of armor. DO NOT include a dollar sign or comma:", "[cost]", , "New Armor"),
		#InputReplace("Please enter the Weight of this piece of armor:", "[weight]", , "New Armor"),
		#InputReplace("Please enter the Legality Class of this piece of armor:", "[legalityclass]", , "New Armor"),
		#InputReplace("Please enter the Damage Resistance of this piece of armor:", "[damageresistance]", , "New Armor"),
		#ChoiceList(_
				name(location),
				title(_New Armor),
				text(Choose the locations covered by this piece of armor:),
				picksallowed(atleast 1),
				method(bynumber),
				list(_
					"all",
					"arms",
					"eyes",
					"face",
					"feet",
					"full suit",
					"groin",
					"hands",
					"head",
					"legs",
					"limbs",
					"neck",
					"skull",
					"torso",
					"right leg",
					"left leg",
					"right foot",
					"left foot",
					"right arm",
					"left arm",
					"right hand",
					"left hand",
					"right eye",
					"left eye"_
					)_
				),
		#edit)

_New Firearm, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		lc([legalityclass]),
		damage([damage]),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		bulk([bulk]),
		rcl([recoil]),
		skillused([skillused]),
		mods(Equipment, Guns),
	x(_
		#InputToTagReplace("Please enter the name of this firearm:", name, " ", "New Firearm"),
		#InputReplace("Please enter the Tech Level of this firearm:", "[techlevel]", " ", "New Firearm"),
		#InputReplace("Please enter the Cost of this firearm. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Firearm"),
		#InputReplace("Please enter the Weight of this firearm:", "[weight]", " ", "New Firearm"),
		#InputReplace("Please enter the Legality Class of this firearm:", "[legalityclass]", " ", "New Firearm"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armor divisors or damage type in this field:", "[damage]", " ", "New Firearm"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", " ", "New Firearm"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", " ", "New Firearm"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", " ", "New Firearm"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", " ", "New Firearm"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", " ", "New Firearm"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", " ", "New Firearm"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", " ", "New Firearm"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", " ", "New Firearm"),
		#InputReplace("Please enter the bulk of this firearm:", "[bulk]", " ", "New Firearm"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", " ", "New Firearm"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", " ", "New Firearm"),
		#ChoiceList(_
				name(Use),
				title(New Firearm: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Beam Weapon, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		lc([legalityclass]),
		damage([damage]),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		bulk([bulk]),
		rcl([recoil]),
		skillused([skillused]),
		mods(Equipment, Beams),
	x(_
		#InputToTagReplace("Please enter the name of this firearm:", name, " ", "New Beam Weapon"),
		#InputReplace("Please enter the Tech Level of this firearm:", "[techlevel]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the Cost of this firearm. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the Weight of this firearm:", "[weight]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the Legality Class of this firearm:", "[legalityclass]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armor divisors or damage type in this field:", "[damage]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the bulk of this firearm:", "[bulk]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", " ", "New Beam Weapon"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", " ", "New Beam Weapon"),
		#ChoiceList(_
				name(Use),
				title(New Beam Weapon: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Weapon, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		lc([legalityclass]),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused]),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this hand weapon:", name, " ", "New Melee Weapon"),
		#InputReplace("Please enter the Tech Level of this hand weapon:", "[techlevel]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the Cost of this hand weapon. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the Weight of this hand weapon:", "[weight]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the parry for this hand weapon; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, 0, or -1):", "[parry]", "0", "New Melee Weapon"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", " ", "New Melee Weapon"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", " ", "New Melee Weapon"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Weapon: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Muscle-Powered Ranged Weapon, noresync(yes),
		displaycost(varies),
		displayweight(varies),
		techlvl([techlevel]),
		basecost([cost]),
		baseweight([weight]),
		lc([legalityclass]),
		damage([damage]),
		armordivisor([armordivisor]),
		damtype([damagetype]),
		acc([accuracy]),
		calcrange(yes),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		bulk([bulk]),
		skillused([skillused]),
		mods(Equipment, Melee Quality),
	x(_
		#InputToTagReplace("Please enter the name of this muscle-powered ranged weapon:", name, " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Tech Level of this muscle-powered ranged weapon:", "[techlevel]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Cost of this muscle-powered ranged weapon. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Weight of this muscle-powered ranged weapon:", "[weight]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the Legality Class of this muscle-powered ranged weapon:", "[legalityclass]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the damage of this muscle-powered ranged weapon (e.g. 6dx5 or thr+1). DO NOT include armor divisors or damage type in this field :", "[damage]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the damage type of this muscle-powered ranged weapon (e.g. pi+ or cut):", "[damagetype]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the accuracy of this muscle-powered ranged weapon:", "[accuracy]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the half damage range of this muscle-powered ranged weapon (e.g. ST*10 or 25):", "[halfdamagerange]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the maximum range of this muscle-powered ranged weapon (e.g. ST*10 or 25):", "[maxrange]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the rate of fire of this muscle-powered ranged weapon:", "[rateoffire]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the shots for this muscle-powered ranged weapon:", "[shots]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the minimum strength of this muscle-powered ranged weapon:", "[minimumst]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the bulk of this muscle-powered ranged weapon:", "[bulk]", " ", "New Muscle-Powered Ranged Weapon"),
		#InputReplace("Please enter the skill used for this muscle-powered ranged weapon:", "[skillused]", " ", "New Muscle-Powered Ranged Weapon"),
		#ChoiceList(_
				name(Use),
				title(New Muscle-Powered Ranged Weapon: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Parent Item, basecost(0), baseweight(0), isparent(yes),
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),
	x(#InputToTagReplace("Please specify a name for this item:", name, " ", "New Parent Item"))

<Basic Set, Basic Set - Clothing>
Complete Wardrobe, basecost([cost]), baseweight([weight]), mods(Equipment), displaycost(varies), displayweight(20+),
	x(_
		#InputReplace("Please enter the weight of this item here, or just press OK to use the base cost of 20 lbs.:", [weight], "20", "Complete Wardrobe"),
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 100% of the characters cost of living. DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living", "Complete Wardrobe")_
	), page(B266), description(Includes one to four sets of ordinary clothes, plus nightclothes, one set each of formal wear and winter clothes, and usually at least one outfit (lab coat, uniform, gym clothes, etc.) appropriate to your job or hobbies. 100% of cost of living; 20+lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Ordinary Clothes, basecost([cost]), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 20% of the characters cost of living. DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.2", "Ordinary Clothes")_
	), page(B266), description(One complete outfit, ranging in quality from castoff rags to designer fashions, depending on Status. At minimum: undergarments, plus a tunic, blouse, or shirt with hose, skirt, or trousers - or a long tunic, robe or dress - and suitable footwear. 20% of cost of living; 2lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Winter Clothes, basecost([cost]), baseweight(4), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 30% of the characters cost of living. DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.3", "Winter Clothes")_
	), page(B266), description(As Ordinary Clothes, but heavier. Includes a hat or hood, boots, and (at TL6 or less) furs. 30% of cost of living; 4lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Formal Wear, basecost([cost]), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 40% of the characters cost of living. DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.4", "Formal Wear")_
	), page(B266), description(Your "best outfit," which will usually include at least some accessories (hat, gloves, etc.) or jewelry. 40% of cost of living; 2lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Cosmetics, basecost([cost]), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
		#InputReplace("Please enter the cost of this item here, or just press OK to base cost on the character's Cost of Living. Average cost is 10% of the characters cost of living. DO NOT use a dollar sign or comma:", [cost], "ST:Cost of Living * 0.1", "Cosmetics")_
	), page(B266), description(Natural or synthetic beauty aids. For one month's supply: 10% of cost of living; 2lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)

Complete Wardrobe (Status %StatusList%), basecost(@indexedvalue(%StatusList% + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)), baseweight([weight]), mods(Equipment), displaycost(varies), displayweight(20+),
	x(_
	#InputReplace("Please enter the weight of this item here, or just press OK to use the base cost of 20 lbs.:", [weight], "20", "Complete Wardrobe"),
	#ChoiceList(_
			name(Status),
			title(Clothing: Complete Wardrobe),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(B266), description(Includes one to four sets of ordinary clothes, plus nightclothes, one set each of formal wear and winter clothes, and usually at least one outfit (lab coat, uniform, gym clothes, etc.) appropriate to your job or hobbies. 100% of cost of living; 20+lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Ordinary Clothes (Status %StatusList%), basecost(0.2 * @indexedvalue(%StatusList% + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Ordinary Clothes),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(B266), description(One complete outfit, ranging in quality from castoff rags to designer fashions, depending on Status. At minimum: undergarments, plus a tunic, blouse, or shirt with hose, skirt, or trousers - or a long tunic, robe or dress - and suitable footwear. 20% of cost of living; 2lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Winter Clothes (Status %StatusList%), basecost(0.3 * @indexedvalue(%StatusList% + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)), baseweight(4), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Winter Clothes),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(B266), description(As Ordinary Clothes, but heavier. Includes a hat or hood, boots, and (at TL6 or less) furs. 30% of cost of living; 4lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Formal Wear (Status %StatusList%), basecost(0.4 * @indexedvalue(%StatusList% + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Formal Wear),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(B266), description(Your "best outfit," which will usually include at least some accessories (hat, gloves, etc.) or jewelry. 40% of cost of living; 2lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
Cosmetics (Status %StatusList%), basecost(0.1 * @indexedvalue(%StatusList% + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)), baseweight(2), mods(Equipment), displaycost(varies),
	x(_
	#ChoiceList(_
			name(Status),
			title(Clothing: Cosmetics),
			text(Select the Status level these clothes emulate. Cost will be based on the Status selected:),
			picksallowed(1),
			method(bynumber),
			list(_
					-2,
					-1,
					+0,
					+1,
					+2,
					+3,
					+4,
					+5,
					+6,
					+7,
					+8_
				)_
		)_
	), page(B266), description(Natural or synthetic beauty aids. For one month's supply: 10% of cost of living; 2lbs.), techlvl(0), cat(Basic Set, Basic Set - Clothing)
	
<Basic Set, Basic Set - Animals>
Heavy Warhorse, page(B460), st(24), dx(9), iq(3), ht(12), will(11), per(12), speed(5.25), dodge(9), move(7), sm(+1), size(3 hexes), weight(1900 lbs.), traits(Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite, Bad Temper (12) and Enhanced Move 1 (Ground Speed 14).), skills(Brawling-10; Mount-12.), basecost(2500), displaycost(5000), description(ST:24 DX:9 IQ:3 HT:12 Will:11 Per:12 Speed:5.25 Dodge:9 Move:7 SM:+1 (3 hexes); 1900 lbs. Traits: Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite, Bad Temper (12) and Enhanced Move 1 (Ground Speed 14). Skills: Brawling-10; Mount-12. Notes: A heavy warhorse.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals),
	initmods(Animal: War-Trained, *2, page(B459), group(Animal), shortname(War-Trained))
Cavalry Horse, page(B459), st(22), dx(9), iq(3), ht(11), will(11), per(12), speed(5), dodge(9), move(8), sm(+1), size(3 hexes), weight(1400 lbs.), traits(Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(Brawling-10; Mount-12.), basecost(2000), displaycost(4000), description(ST:22 DX:9 IQ:3 HT:11 Will:11 Per:12 Speed:5 Dodge:9 Move:8 SM:+1 (3 hexes); 1,400 lbs. Traits: Combat Reflexes; Domestic Animal; Enhanced Move 1 (Ground Speed 16); Hooves; Peripheral Vision; Quadruped; Weak Bite. Skills: Brawling-10; Mount-12. Notes: A light warhorse.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals),
	initmods(Animal: War-Trained, *2, page(B459), group(Animal), shortname(War-Trained))

Camel, page(B459), st(22), dx(9), iq(3), ht(12), will(11), per(12), speed(5.25), dodge(8), move(7), sm(+1), size(3 hexes), weight(1400 lbs.), traits(Bad Temper (12); Domestic Animal; Enhanced Move 1 (Ground Speed 14); Hooves; Peripheral Vision; Quadruped; Reduced Consumption 3 (Water Only); Stubbornness; Weak Bite.), skills(Survival (Desert)-12.), basecost(1500), description(ST:22 DX:9 IQ:3 HT:12 Will:11 Per:12 Speed:5.25 Dodge:8 Move:7 SM:+1 (3 hexes); 1400 lbs. Traits: Bad Temper (12); Domestic Animal; Enhanced Move 1 (Ground Speed 14); Hooves; Peripheral Vision; Quadruped; Reduced Consumption 3 (Water Only); Stubbornness; Weak Bite. Skills: Survival (Desert)-12. Notes: A dry-plains native, the camel can go for four days without drinking. Its stubborn temper gives -4 to Animal Handling rolls.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Donkey, page(B459), st(15), dx(10), iq(3), ht(11), will(11), per(12), speed(5.25), dodge(8), move(5), sm(+1), size(2 hexes), weight(500 lbs.), traits(Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite.), skills(), basecost(1000), description(ST:15 DX:10 IQ:3 HT:11 Will:11 Per:12 Speed:5.25 Dodge:8 Move:5 SM:+1 (2 hexes); 500 lbs. Traits: Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite. Notes: Sturdy, but too small for an adult to ride.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Draft Horse, page(B459), st(25), dx(9), iq(3), ht(12), will(10), per(11), speed(5.25), dodge(8), move(6), sm(+1), size(3 hexes), weight(2000 lbs), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(2000), description(ST:25 DX:9 IQ:3 HT:12 Will:10 Per:11 Speed:5.25 Dodge:8 Move:6 SM:+1 (3 hexes); 2000 lbs Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: A work horse.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Large Mule, page(B460), st(22), dx(10), iq(3), ht(12), will(12), per(12), speed(5.5), dodge(8), move(6), sm(+1), size(2 hexes), weight(1400 lbs.), traits(Domestic Animal; Enhanced Move 1/2 (Ground Speed 9); Hooves; Quadruped; Weak Bite; sterile.), skills(), basecost(2000), description(ST:22 DX:10 IQ:3 HT:12 Will:12 Per:12 Speed:5.5 Dodge:8 Move:6 SM:+1 (2 hexes); 1400 lbs. Traits: Domestic Animal; Enhanced Move 1/2 (Ground Speed 9); Hooves; Quadruped; Weak Bite; sterile. Notes: Sturdy work animal.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Pony, page(B460), st(18), dx(10), iq(3), ht(11), will(11), per(12), speed(5.25), dodge(8), move(7), sm(+1), size(3 hexes), weight(800 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 14); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(1500), description(ST:18 DX:10 IQ:3 HT:11 Will:11 Per:12 Speed:5.25 Dodge:8 Move:7 SM:+1 (3 hexes); 800 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 14); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: Small horse.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Racehorse, page(B460), st(20), dx(9), iq(3), ht(11), will(11), per(11), speed(5), dodge(8), move(9), sm(+1), size(3 hexes), weight(1100 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 18); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(4000), description(ST:20 DX:9 IQ:3 HT:11 Will:11 Per:11 Speed:5 Dodge:8 Move:9 SM:+1 (3 hexes); 1100 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 18); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: Racing horse.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Saddle Horse, page(B460), st(21), dx(9), iq(3), ht(11), will(10), per(12), speed(5), dodge(8), move(6), sm(+1), size(3 hexes), weight(1200 lbs.), traits(Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite.), skills(), basecost(1200), description(ST:21 DX:9 IQ:3 HT:11 Will:10 Per:12 Speed:5 Dodge:8 Move:6 SM:+1 (3 hexes); 1200 lbs. Traits: Domestic Animal; Enhanced Move 1 (Ground Speed 12); Hooves; Peripheral Vision; Quadruped; Weak Bite. Notes: An ordinary riding horse.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Small Mule, page(B460), st(18), dx(10), iq(3), ht(12), will(12), per(12), speed(5.5), dodge(8), move(5), sm(+1), size(2 hexes), weight(800 lbs.), traits(Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite; sterile.), skills(), basecost(1000), description(ST:18 DX:10 IQ:3 HT:12 Will:12 Per:12 Speed:5.5 Dodge:8 Move:5 SM:+1 (2 hexes); 800 lbs. Traits: Domestic Animal; Enhanced Move 1/2 (Ground Speed 8); Hooves; Quadruped; Weak Bite; sterile. Notes: Sturdy work animal.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Elephant, page(B460), st(45), dx(12), iq(5), ht(12), will(10), per(10), speed(4), dodge(7), move(4), sm(+3), size(10 hexes), weight(12000 lbs.), traits(Crushing Striker (Tusks); Domestic (or Wild) Animal; DR 4; Enhanced Move 1 (Ground Speed 8); Peripheral Vision; Quadruped (but replace No Fine Manipulators with One Arm); Trunk (Extra-Flexible; Long, +1 SM; Weak, 1/4 ST); Weak Bite), skills(), basecost(10000), description(ST:45 DX:12 IQ:5 HT:12 Will:10 Per:10 Speed:4 Dodge:7 Move:4 SM:+3 (10 hexes); 12000 lbs. Traits: Crushing Striker (Tusks); Domestic (or Wild) Animal; DR 4; Enhanced Move 1 (Ground Speed 8); Peripheral Vision; Quadruped (but replace No Fine Manipulators with One Arm); Trunk (Extra-Flexible; Long, +1 SM; Weak, 1/4 ST); Weak Bite Notes: Often domesticated. Intelligent, loyal, and hard working.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Oxen, page(B460), st(27), dx(8), iq(3), ht(12), will(12), per(10), speed(5), dodge(8), move(4), sm(+2), size(3 hexes), weight(2500 lbs.), traits(Domestic Animal; DR 2 (Skull only); Enhanced Move 1 (Ground Speed 8); Impaling Striker (Horns); Neutered; Quadruped; Weak Bite.), skills(), basecost(1500), description(ST:27 DX:8 IQ:3 HT:12 Will:12 Per:10 Speed:5 Dodge:8 Move:4 SM:+2 (3 hexes); 2500 lbs. Traits: Domestic Animal; DR 2 (Skull only); Enhanced Move 1 (Ground Speed 8); Impaling Striker (Horns); Neutered; Quadruped; Weak Bite. Notes: Oxen are steers trained to work in the fields. They are hardier and easier to keep than horses.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Large Guard Dog, page(B457), st(9), dx(10), iq(4), ht(12), will(10), per(12), speed(5.75), dodge(8), move(10), sm(0), size(), weight(90 lbs.), traits(Chummy; Discriminatory Smell; Domestic Animal; Quadruped; Sharp Teeth.), skills(Brawling-13; Tracking-13 (bloodhounds have Tracking-15 or better!).), basecost(200), description(ST:9 DX:10 IQ:4 HT:12 Will:10 Per:12 Speed:5.75 Dodge:8 Move:10 SM:0; 90 lbs. Traits: Chummy; Discriminatory Smell; Domestic Animal; Quadruped; Sharp Teeth. Skills: Brawling-13; Tracking-13 (bloodhounds have Tracking-15 or better!). Notes: There are many breeds of dog; statistics can vary greatly. Cost ranges from neg. to $10,000+. A healthy, trained dog - even a mongrel - is always worth at least $200.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
Large Falcon, page(B457), st(3), dx(14), iq(3), ht(10), will(10), per(12), speed(6), dodge(9), move(2), sm(-4), size(), weight(5 lbs.), traits(Acute Vision 3; Domestic (or Wild) Animal; Enhanced Move 1 (Air Speed 24); Flight (Winged; Air Move 12); No Fine Manipulators; Sharp Beak; Sharp Claws.), skills(Brawling-16.), basecost(0), description(ST:3 DX:14 IQ:3 HT:10 Will:10 Per:12 Speed:6 Dodge:9 Move:2 SM:-4; 5 lbs. Traits: Acute Vision 3; Domestic (or Wild) Animal; Enhanced Move 1 (Air Speed 24); Flight (Winged; Air Move 12); No Fine Manipulators; Sharp Beak; Sharp Claws. Skills: Brawling-16. Notes: These birds of prey are commonly used for sport hunting. A trained falcon – or one disturbed by a stranger – might attack a human. A diving falcon can reach Move 70!), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)
House Cat, page(B456), st(4), dx(14), iq(4), ht(10), will(11), per(12), speed(6), dodge(10), move(10), sm(-3), size(), weight(10 lbs.), traits(Catfall; Combat Reflexes; Domestic Animal; Night Vision 5; Quadruped; Sharp Claws; Sharp Teeth.), skills(Brawling-16; Jumping-14; Stealth-14.), basecost(0), description(ST:4 DX:14 IQ:4 HT:10 Will:11 Per:12 Speed:6 Dodge:10 Move:10 SM:-3; 10 lbs. Traits: Catfall; Combat Reflexes; Domestic Animal; Night Vision 5; Quadruped; Sharp Claws; Sharp Teeth. Skills: Brawling-16; Jumping-14; Stealth-14. Notes: A domestic feline, kept as a pet, familiar, or mouser.), baseweight(0), mods(Equipment, Animal), cat(Basic Set, Basic Set - Animals)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Camping & Survival Gear>
"Backpack, Frame", techlvl(1), basecost(100), baseweight(10), description(TL:1 Notes: Holds 100 lbs. of gear.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Backpack, Small", techlvl(1), basecost(60), baseweight(3), description(TL:1 Notes: Holds 40 lbs. of gear.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Blanket, techlvl(1), basecost(20), baseweight(4), description(TL:1 Notes: A warm sleeping blanket.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Bottle, Ceramic", techlvl(1), basecost(3), baseweight(1), description(TL:1 Notes: Holds 1 quart of liquid.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Water (per quart), techlvl(0), basecost(0), baseweight(2), description(TL:0), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Cable, Steel, 1.5'' (per 10 yards)", techlvl(5), basecost(100), baseweight(17), description(TL:5 Notes: Supports 3,700 lbs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Camp Stove, Small", techlvl(6), basecost(50), baseweight(2), description(TL:6 Notes: Uses 0.25 gallons kerosene per 4hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Tallow Candle, techlvl(1), basecost(5), baseweight(1), description(TL:1 Notes: Smoky! Lasts 12hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Canteen, techlvl(5), basecost(10), baseweight(1), description(TL:5 Notes: Holds 1 quart of liquid.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Cigarette Lighter, techlvl(6), basecost(10), baseweight(0), description(TL:6 Notes: Lights fires.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Climbing Gear, techlvl(2), basecost(20), baseweight(4), description(TL:2 Notes: Hammer, spikes, carabiners.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Compass, techlvl(6), basecost(50), baseweight(0), description(TL:6 Notes: +1 to Navigation skill), page(B288), mods(Equipment), conditional(+1 to "SK:Navigation"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Cord, 3/16'' (per 10 yards)", techlvl(0), basecost(1), baseweight(0.5), description(TL:0 Notes: Supports 90 lbs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Fishhooks & Line, techlvl(0), basecost(50), baseweight(0), description(TL:0 Notes: Basic gear for Fishing skill, needs a pole.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Flashlight, Heavy", techlvl(6), basecost(20), baseweight(1), description(TL:6 Notes: 30' beam. 5hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Flashlight, Mini", techlvl(7), basecost(10), baseweight(0.25), description(TL:7 Notes: 15' beam. 1hr.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Gasoline (per gallon), techlvl(6), basecost(1.5), baseweight(6), description(TL:6), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
GPS Receiver, techlvl(8), basecost(200), baseweight(3), description(TL:8 Notes: Satellite-updated, grants Absolute Direction (Requires Signal). 24hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Grapnel, techlvl(5), basecost(20), baseweight(2), description(TL:5 Notes: Throw to STx2 yards. Supports 300lbs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Group Basics, techlvl(0), basecost(50), baseweight(20), description(TL:0 Notes: Basic equipment for Cooking and Survival skill for a group. Cook pot, rope, hatchet, etc., for 3-8 campers.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Iron Spike, Piton", techlvl(2), basecost(1), baseweight(0.5), description(TL:2 Notes: For climbing, spiking doors, etc.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Kerosene (per gallon), techlvl(6), basecost(1.5), baseweight(6), description(TL:6), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Lantern, techlvl(2), basecost(20), baseweight(2), description(TL:2 Notes: Burns for 24 hours on 1 pint of oil.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Life Jacket, techlvl(6), basecost(100), baseweight(6), description(TL:6 Notes: Floats up to 350 lbs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Matches, techlvl(6), basecost(1.5), baseweight(0), description(TL:6 Notes: Starts fires. Box of 50, waterproof.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Oil (per pint), techlvl(2), basecost(2), baseweight(1), description(TL:2 Notes: For lantern.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Parachute, techlvl(6), basecost(1000), baseweight(30), description(TL:6 Notes: Use with Parachuting skill. The wearer will fall at least 80 yards before it opens, and then descent at 5 yards/second.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Personal Basics, techlvl(0), basecost(5), baseweight(1), description(TL:0 Notes: Minimum gear for camping: -2 to any Survival roll without it. Includes utensils, tinderbox or flint and steel, towel, etc., as TL permits.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Pole, 6'", techlvl(0), basecost(5), baseweight(3), description(TL:0 Notes: For pitching tents, fishing, or prodding items.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Pole, 10'", techlvl(1), basecost(8), baseweight(5), description(TL:1 Notes: For things you wouldn't touch with a 6' pole.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Pouch, techlvl(0), basecost(10), baseweight(0), description(TL:0 Notes: Holds 3 lbs.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Purse, techlvl(0), basecost(10), baseweight(0), description(TL:0 Notes: Holds 3 lbs.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Rope, 3/8'' (per 10 yards)", techlvl(1), basecost(5), baseweight(1.5), description(TL:1 Notes: Supports 300lbs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Rope, 3/4'' (per 10 yards)", techlvl(1), basecost(25), baseweight(5), description(TL:1 Notes: Supports 1,100 lbs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Scuba Gear, techlvl(6), basecost(1500), baseweight(32), description(TL:6 Notes: Basic equipment for Scuba skill: 2-hour underwater air tank, with regulator, facemask, etc.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Sleeping Bag, techlvl(6), basecost(25), baseweight(7), description(TL:6 Notes: For normal conditions.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Sleeping Bag, Insulated", techlvl(7), basecost(100), baseweight(15), description(TL:7 Notes: +3 HT to resist freezing.), page(B288), mods(Equipment), conditional(+3 to "ST:HT" when "resisting freezing"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Sleeping Fur, techlvl(0), basecost(50), baseweight(8), description(TL:0 Notes: Warm unless wet.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Suitcase, Hard", techlvl(5), basecost(250), baseweight(8), description(TL:5 Notes: Holds 100 lbs. DR 4 with key lock.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Tent, 1-Man", techlvl(0), basecost(50), baseweight(5), description(TL:0 Notes: Includes ropes, no poles needed.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Tent, 2-Man", techlvl(0), basecost(80), baseweight(12), description(TL:0 Notes: Includes ropes, requires one 6-foot pole.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Tent, 4-Man", techlvl(0), basecost(150), baseweight(30), description(TL:0 Notes: Includes ropes, requires 2 poles.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
"Tent, 20-Man", techlvl(1), basecost(300), baseweight(100), description(TL:1 Notes: Includes ropes, requires 16 poles.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Thermos Bottle, techlvl(5), basecost(10), baseweight(2), description(TL:5 Notes: Keeps 1 pint hot (24hrs.) or cold (72hrs.).), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Torch, techlvl(0), basecost(3), baseweight(1), description(TL:0 Notes: Burns for 1hr.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Traveler's Rations, techlvl(0), basecost(2), baseweight(0.5), description(TL:0 Notes: One meal of dried meat, cheese, etc.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Water Purification Tablets, techlvl(6), basecost(5), baseweight(0), description(TL:6 Notes: Bottle of 50. Purify 1 quart each.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Wineskin, techlvl(0), basecost(10), baseweight(0.25), description(TL:0 Notes: Holds 1 gallon of liquid.), page(B288), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Water (per gallon), techlvl(0), basecost(0), baseweight(8), description(TL:0), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)
Wristwatch, techlvl(6), basecost(20), baseweight(0), description(TL:6), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Camping & Survival Gear, Basic Set - Miscellaneous Equipment)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Communications & Information Gear>
Batteries, techlvl(6), basecost(1), baseweight(0), description(TL:6), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Cell Phone, techlvl(8), basecost(250), baseweight(0.25), description(TL:8 Notes: Only works in some areas, $20/month fee. 10hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Computer, Laptop", techlvl(8), basecost(1500), baseweight(3), description(TL:8 Notes: Modem plugs into phone. 2hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Computer, Wearable", techlvl(8), basecost(1000), baseweight(2), description(TL:8 Notes: Display glasses and wireless modem. 8hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Drum, techlvl(0), basecost(40), baseweight(2), description(TL:0 Notes: Audible for several miles.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Mini-Recorder, techlvl(7), basecost(200), baseweight(0.5), description(TL:7 Notes: Palm-sized, with 3 hour tape (extra tapes are $5).), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Mini-Recorder, Digital", techlvl(8), basecost(30), baseweight(0.5), description(TL:8 Notes: As above, but without the tape!), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Radio, Backpack", techlvl(7), basecost(6000), baseweight(15), description(TL:7 Notes: VHF radio. 20-mile range. 12hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Radio, Hand", techlvl(7), basecost(100), baseweight(1), description(TL:7 Notes: Classic "walkie-talkie." 2-mile range. 12hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Radio, Headset", techlvl(8), basecost(500), baseweight(0.5), description(TL:8 Notes: With throat mike. 1-mile range. 12hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Radio, Headset, Secure/Encrypted", techlvl(8), basecost(5000), baseweight(0.5), description(TL:8 Notes: With throat mike. 1-mile range. 12hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Satellite Phone, techlvl(8), basecost(3000), baseweight(3), description(TL:8 Notes: Global range, satellite relay. 1hr.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Scribe's Kit, techlvl(3), basecost(50), baseweight(2), description(TL:3 Notes: Quills, inkbottles, penknife, paper.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Transistor Radio, techlvl(7), basecost(15), baseweight(0.5), description(TL:7 Notes: Receive-only, picks up radio stations. 8hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"TV Set, Mini", techlvl(6), basecost(150), baseweight(3), description(TL:6 Notes: 5"x5" flat screen. 4hrs.), page(B288), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
"Typewriter, Manual", techlvl(6), basecost(200), baseweight(10), description(TL:6), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)
Wax Tablet, techlvl(1), basecost(10), baseweight(2), description(TL:1 Notes: For writing, erasable.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Communications & Information Gear, Basic Set - Miscellaneous Equipment)

<Basic Set, Basic Set - Animals - Equestrian Gear>
Bit & Bridle, techlvl(1), basecost(35), baseweight(3), description(TL:1 Notes: +2 to control horse, or +3 if using both hands.), page(B289), mods(Equipment), conditonal(+2 to "SK:Riding" when "controling animal", +3 to "SK:Riding" when "using both hands"), cat(Basic Set, Basic Set - Animals - Equestrian Gear)
Horseshoes, techlvl(3), basecost(50), baseweight(4), description(TL:3 Notes: Shod horses get +2 HT on any rolls for stamina on long rides. Per set.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Animals - Equestrian Gear)
Saddle & Tack, techlvl(2), basecost(150), baseweight(15), description(TL:2 Notes: Basic equipment for Riding skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Animals - Equestrian Gear)
Saddlebags, techlvl(1), basecost(100), baseweight(3), description(TL:1 Notes: Holds 40lbs.), page(B289), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Animals - Equestrian Gear)
Spurs, techlvl(2), basecost(25), baseweight(0), description(TL:2 Notes: +1 to control a mount.), page(B289), mods(Equipment), conditional(+1 to "SK:Riding" when "controlling animal"), cat(Basic Set, Basic Set - Animals - Equestrian Gear)
Stirrups, techlvl(3), basecost(125), baseweight(20), description(TL:3 Notes: Make it easy to mount a horse and give +1 to control mount. Required to use Lance skill. With ordinary saddle.), page(B289), mods(Equipment), conditional(+1 to "SK:Riding" when "controlling animal"), cat(Basic Set, Basic Set - Animals - Equestrian Gear)
War Saddle, techlvl(3), basecost(250), baseweight(35), description(TL:3 Notes: +1 to Riding skill to stay seated, 50% chance user will stay seated even if unconscious. With stirrups.), page(B289), mods(Equipment), conditional(+1 to "SK:Riding" when "rolling to stay seated"), cat(Basic Set, Basic Set - Animals - Equestrian Gear)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear>
"Bug, Audio", techlvl(7), basecost(200), baseweight(0), description(TL:7 Notes: -7 to spot, 1/4-mile range, transmits for 1 week.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Bug Stomper, techlvl(7), basecost(1200), baseweight(2), description(TL:7 Notes: Jams bugs in a 10-yard radius. 8hrs.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Disguise Kit, techlvl(5), basecost(200), baseweight(10), description(TL:5 Notes: +1 to Disguise skill.), page(B289), mods(Equipment), conditional(+1 to "SK:Disguise"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Electronic Lockpicks, techlvl(7), basecost(1500), baseweight(3), description(TL:7 Notes: +2 to pick electronic locks.), page(B289), mods(Equipment), conditional(+1 to "SK:Lockpicking" when "picking electronic locks"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Handcuffs, techlvl(5), basecost(40), baseweight(0.5), description(TL:5 Notes: Gives -5 to Escape.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Homing Beacon, techlvl(7), basecost(40), baseweight(0), description(TL:7 Notes: Scanner tracks at 1-mile range. 12hrs.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Laser Microphone, techlvl(8), basecost(500), baseweight(2), description(TL:8 Notes: Eavesdrop through glass. 300-yd. Range.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Lockpicks, techlvl(3), basecost(50), baseweight(0), description(TL:3 Notes: Basic equipment for Lockpicking skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Nanobug, techlvl(8), basecost(100), baseweight(0), description(TL:8 Notes: Pinheaded-sized audio-visual bug (-10 to spot).), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)
Shotgun Mike, techlvl(6), basecost(250), baseweight(2), description(TL:6 Notes: Gives (TL-4) levels of Parabolic Hearing.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Law-Enforcement Thief & Spy Gear, Basic Set - Miscellaneous Equipment)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Medical Gear>
Antibiotic, techlvl(6), basecost(20), baseweight(0), description(TL:6 Notes: Prevents or cures (in 1d days) infections.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Medical Gear, Basic Set - Miscellaneous Equipment)
Antitoxin Kit, techlvl(6), basecost(25), baseweight(0.5), description(TL:6 Notes: Antidote for specific poison. 10 uses.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Medical Gear, Basic Set - Miscellaneous Equipment)
Bandages, techlvl(Var.), basecost(10), baseweight(2), description(TL:Var. Notes: Bandages for half-dozen wounds. Might be clean cloth, adhesive dressings, or sprat-on "plastiskin," depending on TL. At TL 6+, includes IV drip, needle, and plasma. Basic equipment for First Aid skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Medical Gear, Basic Set - Miscellaneous Equipment)
Crash Kit, techlvl(Var.), basecost(200), baseweight(10), description(TL:Var. Notes: A complete kit for treating serious injuries. Includes sterile bandages, sutures, and drugs appropriate for the TL. At TL6+ includes IV drip, needle, and plasma. +2 to First Aid skill, and counts as improvised gear (-5) for Surgery.), page(B289), mods(Equipment), conditional(+2 to "SK:First Aid"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Medical Gear, Basic Set - Miscellaneous Equipment)
First Aid Kit, techlvl(Var.), basecost(50), baseweight(2), description(TL:Var. Notes: A complete kit for treating wounds, with bandages, ointments, etc. +1 to First Aid skill.), page(B289), mods(Equipment), conditional(+1 to "SK:First Aid"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Medical Gear, Basic Set - Miscellaneous Equipment)
Surgical Instruments, techlvl(Var.), basecost(300), baseweight(15), description(TL:Var. Notes: Includes scalpels, forceps, etc. Basic equipment for Surgery skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Medical Gear, Basic Set - Miscellaneous Equipment)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Optics & Sensors>
Binoculars, techlvl(6), basecost(400), baseweight(2), description(TL:6 Notes: Gives (TL-4) levels of Telescopic Vision.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
Camcorder, techlvl(8), basecost(1000), baseweight(1), description(TL:8 Notes: Has 10x zoom. Gives Night Vision 5.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
"Camera, 35mm", techlvl(6), basecost(50), baseweight(3), description(TL:6 Notes: Basic equipment for Photography skill. Better cameras cost much more!), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
"Film, 35mm", techlvl(6), basecost(10), baseweight(0), description(TL:6 Notes: 32 shots.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
Metal Detector Wand, techlvl(7), basecost(50), baseweight(8), description(TL:7 Notes: +3 to find metal items. 8hrs.), page(B289), mods(Equipment), conditional(+1 to "SK:Search" when "detecting metal items"), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
"Mini-Camera, Digital", techlvl(8), basecost(500), baseweight(0), description(TL:8 Notes: Stores pictures on optical disk.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
Night Vision Goggles, techlvl(8), basecost(600), baseweight(2), description(TL:8 Notes: Gives Night Vision 9. 8hrs.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
Spy Camera, techlvl(6), basecost(500), baseweight(0), description(TL:6 Notes: Holds 36 exposures, uses microfilm.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)
Telescope, techlvl(4), basecost(500), baseweight(6), description(TL:4 Notes: Gives (TL-3) levels of Telescopic Vision.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Optics & Sensors, Basic Set - Miscellaneous Equipment)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Tools>
Balance & Weights, techlvl(1), basecost(35), baseweight(3), description(TL:1 Notes: For weighing goods.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
"Crowbar, 3'", techlvl(2), basecost(20), baseweight(3), description(TL:2 Notes: Treat as small mace in combat, at -1 to skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Cutting Torch, techlvl(6), basecost(500), baseweight(30), description(TL:6 Notes: 1d+3(2) burn per second. Each gas bottle gives 30 seconds of cutting.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Cutting Torch Gas Bottle, techlvl(6), basecost(50), baseweight(15), description(TL:6 Notes: Each gas bottle gives 30 seconds of cutting.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Knitting Needles, techlvl(3), basecost(5), baseweight(0), description(TL:3 Notes: Per pair.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Pickaxe, techlvl(2), basecost(15), baseweight(8), description(TL:2 Notes: Improves digging speed.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
"Plow, Iron", techlvl(2), basecost(220), baseweight(120), description(TL:2 Notes: Works rough soils.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
"Plow, Wooden", techlvl(1), basecost(55), baseweight(60), description(TL:1 Notes: Pulled by oxen.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Carpentry Tool Kit, techlvl(1), basecost(300), baseweight(20), description(TL:1 Notes: Basic equipment for Carpentry skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Armoury Tool Kit, techlvl(1), basecost(600), baseweight(20), description(TL:1 Notes: Basic equipment for Armoury skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Explosives Tool Kit, techlvl(5), basecost(600), baseweight(20), description(TL:5 Notes: Basic equipment for Explosives skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Machinist Tool Kit, techlvl(5), basecost(600), baseweight(20), description(TL:5 Notes: Basic equipment for Machinist skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Mechanic Tool Kit, techlvl(5), basecost(600), baseweight(20), description(TL:5 Notes: Basic equipment for Mechanic skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Electrician Tool Kit, techlvl(6), basecost(600), baseweight(20), description(TL:6 Notes: Basic equipment for Electrician skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Portable Electronics Repair Kit, techlvl(6), basecost(1200), baseweight(10), description(TL:6 Notes: Basic equipment for Electronics Repair skill.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Saw, techlvl(0), basecost(150), baseweight(3), description(TL:0 Notes: A lumberjack's tool, not a carpentry saw.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Shovel, techlvl(1), basecost(12), baseweight(6), description(TL:1 Notes: Speeds up digging.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Spinning Wheel, techlvl(3), basecost(100), baseweight(40), description(TL:3 Notes: Produces yarn six times as fast.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Suitcase Lab, techlvl(Var.), basecost(3000), baseweight(10), description(TL:Var. Notes: Basic equipment for a specific scientific skill (e.g., Chemistry or Forensics).), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Wheelbarrow, techlvl(2), basecost(60), baseweight(18), description(TL:2 Notes: Holds 350lbs Divide effective weight of load by 5.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)
Whetstone, techlvl(1), basecost(5), baseweight(1), description(TL:1 Notes: For sharpening tools and weapons.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Tools, Basic Set - Miscellaneous Equipment)

<Basic Set, Basic Set - Miscellaneous Equipment, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories>
Ear Muffs, techlvl(6), basecost(200), baseweight(1), description(TL:6 Notes: Block loud noises (e.g., gunshots). Gives Protected Hearing.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
Hip Quiver, techlvl(0), basecost(15), baseweight(1), description(TL:0 Notes: Holds 20 arrows or bolts.), page(B289), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
"Holster, Belt", techlvl(5), basecost(25), baseweight(0.5), description(TL:5 Notes: Fits most pistols.), page(B289), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
"Holster, Shoulder", techlvl(5), basecost(50), baseweight(1), description(TL:5 Notes: Allows use of Holdout, but gives -1 to Fast-Draw.), page(B289), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
"Lanyard, Leather", techlvl(0), basecost(1), baseweight(0), description(TL:0 Notes: Lets you retrieve a dropped weapon on a DX roll. Each attempt requires a ready maneuver. Can be cut: -6 to hit, DR2, HP 2.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
"Lanyard, Woven Steel", techlvl(6), basecost(15), baseweight(0), description(TL:6 Notes: Lets you retrieve a dropped weapon on a DX roll. Each attempt requires a ready maneuver. Can be cut: -6 to hit, DR6, HP 4.), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
//^^^ Scopes need to be Modifiers
Laser Sight, techlvl(8), basecost(100), baseweight(0), description(TL:8 Notes: +1 to skill, see Laser Sights (p. B412)), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
Shoulder Quiver, techlvl(0), basecost(10), baseweight(0.5), description(TL:0 Notes: Holds 12 arrows or bolts.), page(B289), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
"Silencer, Pistol or SMG", techlvl(6), basecost(400), baseweight(1), description(TL:6 Notes: Reduces damage by -1 per die, see Silencers (p. B412)), page(B289), mods(Equipment), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)
Web Gear, techlvl(6), basecost(50), baseweight(2), description(TL:6 Notes: Belt and suspenders with pouches and rings for gear.), page(B289), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Miscellaneous Equipment - Weapon & Combat Accessories, Basic Set - Miscellaneous Equipment)

//^^^^ Must add itemnotes() for Horse Armor
<Basic Set, Basic Set - Animals - Horse Armor - Barding>
Horse Leather & Cloth Face Mask, techlvl(1), location(face), dr(2), basecost(40), baseweight(3), lc(4), description(TL:1 LC:4 DR:2 Locations: face Notes: [1] Gives mount No Peripheral Vision while worn.), notes([1]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Gives mount the No Peripheral Vision disadvantage (p. B151) while worn.}),
	mods(Equipment, Armor, Armor - Leather)
Horse Mail Face Mask, techlvl(2), location(face), dr(4/2*), basecost(60), baseweight(7), lc(3), description(TL:2 LC:3 DR:4/2* Locations: face Notes: [1,2] Gives mount No Peripheral Vision while worn. Split DR: use the lower DR against crushing attacks.), notes([1,2]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Gives mount the No Peripheral Vision disadvantage (p. B151) while worn.},{Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Horse Scale Face Mask, techlvl(2), location(face), dr(4), basecost(200), baseweight(12), lc(3), description(TL:2 LC:3 DR:4 Locations: face Notes: [1] Gives mount No Peripheral Vision while worn.), notes([1]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Gives mount the No Peripheral Vision disadvantage (p. B151) while worn.}),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Horse Plate Face Mask, techlvl(3), location(face), dr(5), basecost(200), baseweight(12), lc(3), description(TL:3 LC:3 DR:5 Locations: face Notes: [1] Gives mount No Peripheral Vision while worn.), notes([1]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Gives mount the No Peripheral Vision disadvantage (p. B151) while worn.}),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Horse Leather & Cloth Head/Neck, techlvl(2), location(neck, skull), dr(2), basecost(80), baseweight(4), lc(4), description(TL:2 LC:4 DR:2 Locations: neck, skull), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Leather)
Horse Mail Head/Neck, techlvl(2), location(neck, skull), dr(4/2*), basecost(100), baseweight(15), lc(3), description(TL:2 LC:3 DR:4/2* Locations: neck, skull Notes: [2] Split DR: use the lower DR against crushing attacks.), notes([2]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Horse Scale Head/Neck, techlvl(2), location(neck, skull), dr(4), basecost(320), baseweight(20), lc(3), description(TL:2 LC:3 DR:4 Locations: neck, skull), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Horse Plate Head/Neck, techlvl(3), location(neck, skull), dr(5), basecost(330), baseweight(18), lc(3), description(TL:3 LC:3 DR:5 Locations: neck, skull), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Horse Leather & Cloth Partial Barding, techlvl(1), location(torso), dr(2F), basecost(260), baseweight(12), lc(4), description(TL:1 LC:4 DR:2F Locations: torso), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Leather)
Horse Mail Partial Barding, techlvl(2), location(torso), dr(4/2F*), basecost(440), baseweight(20), lc(3), description(TL:2 LC:3 DR:4/2F* Locations: torso Notes: [2] Split DR: use the lower DR against crushing attacks.), notes([2]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	newlocation(Front Torso),
	basedr(4), crushingdr(2)
Horse Scale Partial Barding, techlvl(2), location(torso), dr(4F), basecost(480), baseweight(60), lc(3), description(TL:2 LC:3 DR:4F Locations: torso), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Horse Leather & Cloth Full Barding, techlvl(2), location(torso, groin), dr(2), basecost(345), baseweight(30), lc(4), description(TL:2 LC:4 DR:2 Locations: torso, groin), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Leather)
Horse Mail Full Barding, techlvl(3), location(torso, groin), dr(4/2*), basecost(670), baseweight(59), lc(3), description(TL:3 LC:3 DR:4/2* Locations: torso, groin Notes: [2] Split DR: use the lower DR against crushing attacks.), notes([2]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Horse Plate Full Barding, techlvl(3), location(torso, groin), dr(5), basecost(1650), baseweight(90), lc(3), description(TL:3 LC:3 DR:5 Locations: torso, groin), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Horse Plate Leggings, techlvl(3), location(legs), dr(5), basecost(400), baseweight(20), lc(3), description(TL:3 LC:3 DR:5 Locations: legs Notes: [3] Weight and cost are per pair of legs protected. Each pair gives -1 Move.), notes([3]), page(B286), cat(Basic Set, Basic Set - Animals - Horse Armor - Barding),
	itemnotes({Weight and cost are per pair of legs protected. Each pair gives -1 to Move.}),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)

<_Armor, _Armor - Low-Tech, Basic Set, Basic Set - Armor, Basic Set - Armor - Low-Tech - Armor Suits>
Cloth Armor Suit, techlvl(1), basecost(150), baseweight(12), lc(), location(full suit, skull), dr(1*), description(TL:1 LC:-- DR:1* Locations: all Notes:This is a full suit of armor from GURPS Lite. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armor. The statistics already reflect this; you do not have to buy clothing or padding seperately, or account for its DR and weight.), page(L18), cat(Basic Set, Basic Set - Armor - Low-Tech - Armor Suits, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Cloth, Armor - Textile)
Leather Armor Suit, techlvl(1), basecost(340), baseweight(19.5), lc(), location(full suit, skull), dr(2*), description(TL:1 LC:-- DR:2* Locations: all Notes:This is a full suit of armor from GURPS Lite. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armor. The statistics already reflect this; you do not have to buy clothing or padding seperately, or account for its DR and weight.), page(L18), cat(Basic Set, Basic Set - Armor - Low-Tech - Armor Suits, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Boots, Armor - Leather)
Light Scale Suit, techlvl(2), basecost(610), baseweight(49), lc(), location(full suit, skull), dr(3*), description(TL:2 LC:-- DR:3* Locations: all Notes:This is a full suit of armor from GURPS Lite. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armor. The statistics already reflect this; you do not have to buy clothing or padding seperately, or account for its DR and weight.), page(L18), cat(Basic Set, Basic Set - Armor - Low-Tech - Armor Suits, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Boots, Armor - Scale, Armor - Metal)
Mail Suit, techlvl(2), basecost(645), baseweight(58), lc(), location(full suit, skull), dr(4/2*), description(TL:2 LC:-- DR:4* Locations: all Notes:This is a full suit of armor from GURPS Lite. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armor. The statistics already reflect this; you do not have to buy clothing or padding seperately, or account for its DR and weight.), page(L18), cat(Basic Set, Basic Set - Armor - Low-Tech - Armor Suits, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Boots, Armor - Mail, Armor - Metal)
Steel Laminate Suit, techlvl(3), basecost(1360), baseweight(64), lc(), location(all), dr(5*), description(TL:3 LC:-- DR:5* Locations: all Notes:This is a full suit of armor from GURPS Lite. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armor. The statistics already reflect this; you do not have to buy clothing or padding seperately, or account for its DR and weight.), page(L18), cat(Basic Set, Basic Set - Armor - Low-Tech - Armor Suits, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Boots, Armor - Plate, Armor - Metal)
Plate Suit, techlvl(3), basecost(4040), baseweight(89.5), lc(), location(all), dr(6*), description(TL:3 LC:-- DR:6* Locations: all Notes:This is a full suit of armor from GURPS Lite. It includes an article of light, common clothing to wear underneath - or padding, if this is usual for the armor. The statistics already reflect this; you do not have to buy clothing or padding seperately, or account for its DR and weight.), page(L18), cat(Basic Set, Basic Set - Armor - Low-Tech - Armor Suits, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Boots, Armor - Plate, Armor - Metal)

<_Armor, _Armor - Low-Tech, Basic Set, Basic Set - Armor, Basic Set - Armor - Low-Tech - Body Armor>
Fur Loincloth, techlvl(0), location(groin), dr(1*), basecost(10), baseweight(0), lc(), description(TL:0 LC:-- DR:1* Locations: groin Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor)
Fur Tunic, techlvl(0), location(torso), dr(1*), basecost(25), baseweight(2), lc(), description(TL:0 LC:-- DR:1* Locations: torso Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor)
Bronze Breastplate, techlvl(1), location(torso), dr(4F), basecost(400), baseweight(20), lc(3), description(TL:1 LC:3 DR:4F Locations: torso Notes: [2] Partial Coverage: Only protect from the front.), notes([2]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Partial coverage: sandals give DR 1 to the underside of the foot, while breastplates protect only from the front.}),
	 mods(Equipment, Armor, Armor - Plate, Armor - Metal),
	 basedr(4), newlocation(Front Torso)
Bronze Corselet, techlvl(1), location(torso, groin), dr(5), basecost(1300), baseweight(40), lc(3), description(TL:1 LC:3 DR:5 Locations: torso, groin), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Cloth Armor, techlvl(1), location(torso, groin), dr(1*), basecost(30), baseweight(6), lc(), description(TL:1 LC:-- DR:1* Locations: torso, groin Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Cloth, Armor - Textile)
Leather Armor, techlvl(1), location(torso, groin), dr(2), basecost(100), baseweight(10), lc(4), description(TL:1 LC:4 DR:2 Locations: torso, groin), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather)
Leather Jacket, techlvl(1), location(arms, torso), dr(1*), basecost(50), baseweight(4), lc(), description(TL:1 LC:-- DR:1* Locations: arms, torso Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Leather)
Light Scale Armor, techlvl(2), location(torso), dr(3), basecost(150), baseweight(15), lc(4), description(TL:2 LC:4 DR:3 Locations: torso), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Lorica Segmentata, techlvl(2), location(torso), dr(5), basecost(680), baseweight(26), lc(3), description(TL:2 LC:3 DR:5 Locations: torso), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Mail Hauberk, techlvl(2), location(torso, groin), dr(4/2*), basecost(230), baseweight(25), lc(3), description(TL:2 LC:3 DR:4/2* Locations: torso, groin Notes: [3] Split DR: use the lower DR against crushing attacks.), notes([3]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Mail Shirt, techlvl(2), location(torso), dr(4/2*), basecost(150), baseweight(16), lc(4), description(TL:2 LC:4 DR:4/2* Locations: torso Notes: [1,3] Concealable as or under clothing. Split DR: use the lower DR against crushing attacks.), notes([1,3]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.},{Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Scale Armor, techlvl(2), location(torso, groin), dr(4), basecost(420), baseweight(35), lc(3), description(TL:2 LC:3 DR:4 Locations: torso, groin), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Double Mail Hauberk, techlvl(3), location(torso, groin), dr(5/3*), basecost(520), baseweight(44), lc(3), description(TL:3 LC:3 DR:5/3* Locations: torso, groin Notes: [3] Split DR: use the lower DR against crushing attacks.), notes([3]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(5), crushingdr(3)
Heavy Steel Corselet, techlvl(3), location(torso, groin), dr(7), basecost(2300), baseweight(45), lc(3), description(TL:3 LC:3 DR:7 Locations: torso, groin), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor)
Steel Breastplate, techlvl(3), location(torso), dr(5F), basecost(500), baseweight(18), lc(3), description(TL:3 LC:3 DR:5F Locations: torso Notes: [2] Partial Coverage: Only protect from the front.), notes([2]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Partial coverage: sandals give DR 1 to the underside of the foot, while breastplates protect only from the front.}),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal),
	 basedr(5), newlocation(Front Torso)
Steel Corselet, techlvl(3), location(torso, groin), dr(6), basecost(1300), baseweight(35), lc(3), description(TL:3 LC:3 DR:6 Locations: torso, groin), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Steel Laminate Plate, techlvl(3), location(torso, groin), dr(5), basecost(900), baseweight(30), lc(3), description(TL:3 LC:3 DR:5 Locations: torso, groin), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Buff Leather Coat, techlvl(4), location(body, limbs), dr(2*), basecost(210), baseweight(16), lc(4), description(TL:4 LC:4 DR:2* Locations: body, limbs), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Body Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather)

<_Armor, _Armor - Low-Tech, Basic Set, Basic Set - Armor, Basic Set - Armor - Low-Tech - Limb Armor>
Bronze Armbands, techlvl(1), location(arms), dr(3), basecost(180), baseweight(9), lc(4), description(TL:1 LC:4 DR:3 Locations: arms), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Metal)
Bronze Greaves, techlvl(1), location(legs), dr(3), basecost(270), baseweight(17), lc(4), description(TL:1 LC:4 DR:3 Locations: legs), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Cloth Sleeves, techlvl(1), location(arms), dr(1*), basecost(20), baseweight(2), lc(), description(TL:1 LC:-- DR:1* Locations: arms Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Cloth, Armor - Textile)
Heavy Leather Leggings, techlvl(1), location(legs), dr(2), basecost(60), baseweight(4), lc(4), description(TL:1 LC:4 DR:2 Locations: legs), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather)
Heavy Leather Sleeves, techlvl(1), location(arms), dr(2), basecost(50), baseweight(2), lc(4), description(TL:1 LC:4 DR:2 Locations: arms), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather)
Leather Leggings, techlvl(1), location(legs), dr(1*), basecost(40), baseweight(2), lc(), description(TL:1 LC:-- DR:1* Locations: legs Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Leather)
Leather Pants, techlvl(1), location(groin, legs), dr(1*), basecost(40), baseweight(3), lc(), description(TL:1 LC:-- DR:1* Locations: legs, groin Notes: [1] Concealable as or under clothing.), notes([1]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Leather)
Studded Leather Skirt, techlvl(1), location(groin, legs), dr(3/2*), basecost(60), baseweight(4), lc(), description(TL:1 LC:-- DR:3/2* Locations: groin, legs Notes: [3] Split DR: use the lower DR against crushing attacks.), notes([3]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Leather),
	basedr(3), crushingdr(2)
Mail Leggings, techlvl(2), location(legs), dr(4/2*), basecost(110), baseweight(15), lc(3), description(TL:2 LC:3 DR:4/2* Locations: legs Notes: [3] Split DR: use the lower DR against crushing attacks.), notes([3]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Mail Sleeves, techlvl(2), location(arms), dr(4/2*), basecost(70), baseweight(9), lc(3), description(TL:2 LC:3 DR:4/2* Locations: arms Notes: [3] Split DR: use the lower DR against crushing attacks.), notes([3]), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal),
	basedr(4), crushingdr(2)
Scale Leggings, techlvl(2), location(legs), dr(4), basecost(250), baseweight(21), lc(3), description(TL:2 LC:3 DR:4 Locations: legs), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Scale Sleeves, techlvl(2), location(arms), dr(4), basecost(210), baseweight(14), lc(3), description(TL:2 LC:3 DR:4 Locations: arms), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Scale, Armor - Metal)
Heavy Plate Arms, techlvl(3), location(arms), dr(7), basecost(1500), baseweight(20), lc(3), description(TL:3 LC:3 DR:7 Locations: arms), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Heavy Plate Legs, techlvl(3), location(legs), dr(7), basecost(1600), baseweight(25), lc(3), description(TL:3 LC:3 DR:7 Locations: legs), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Plate Arms, techlvl(3), location(arms), dr(6), basecost(1000), baseweight(15), lc(3), description(TL:3 LC:3 DR:6 Locations: arms), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)
Plate Legs, techlvl(3), location(legs), dr(6), basecost(1100), baseweight(20), lc(3), description(TL:3 LC:3 DR:6 Locations: legs), page(B283), cat(Basic Set, Basic Set - Armor - Low-Tech - Limb Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal)

<_Armor, _Armor - Low-Tech, Basic Set, Basic Set - Armor, Basic Set - Armor - Low-Tech - Headgear>
Bronze Helmet, techlvl(1), location(skull, face), dr(3), basecost(160), baseweight(7.5), lc(4), description(TL:1 LC:4 DR:3 Locations: skull, face), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal, Helmet)
Bronze Pot-Helmet, techlvl(1), location(skull), dr(3), basecost(60), baseweight(5), lc(4), description(TL:1 LC:4 DR:3 Locations: skull), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal, Helmet)
Cloth Cap, techlvl(1), location(skull), dr(1*), basecost(5), baseweight(0), lc(), description(TL:1 LC:-- DR:1* Locations: skull Notes: [1] Concealable as or under clothing.), notes([1]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Cloth, Armor - Textile, Helmet)
Leather Cap, techlvl(1), location(skull), dr(1*), basecost(32), baseweight(0), lc(4), description(TL:1 LC:4 DR:1* Locations: skull), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather, Helmet)
Leather Helm, techlvl(1), location(skull, face), dr(2), basecost(20), baseweight(0.5), lc(4), description(TL:1 LC:4 DR:2 Locations: skull, face), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather, Helmet)
Legionary Helmet, techlvl(2), location(skull, face), dr(4), basecost(150), baseweight(6), lc(3), description(TL:2 LC:3 DR:4 Locations: skull, face), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal, Helmet)
Mail Coif, techlvl(2), location(skull, neck), dr(4/2*), basecost(55), baseweight(4), lc(3), description(TL:2 LC:3 DR:4/2* Locations: skull, neck Notes: [3] Split DR: use the lower DR against crushing attacks.), notes([3]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Split DR: use the lower DR against crushing attacks.}),
	mods(Equipment, Armor, Armor - Mail, Armor - Metal, Helmet),
	basedr(4), crushingdr(2)
Barrel Helm, techlvl(3), location(skull, face), dr(6), basecost(240), baseweight(10), lc(3), description(TL:3 LC:3 DR:6 Locations: skull, face Notes: [4] Helmet gives the wearer the No Peripheral Vision (p. B151) disadvantage while worn.), notes([4]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Helmet gives wearer the No Peripheral Vision disadvantage (p. B151) while worn.}),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal, Helmet)
Face Mask, techlvl(3), location(face), dr(4), basecost(100), baseweight(2), lc(3), description(TL:3 LC:3 DR:4 Locations: face), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Metal, Helmet)
Greathelm, techlvl(3), location(skull, face, neck), dr(7), basecost(340), baseweight(10), lc(3), description(TL:3 LC:3 DR:7 Locations: skull, face, neck Notes: [4] Helmet gives the wearer the No Peripheral Vision (p. B151) disadvantage while worn.), notes([4]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Helmet gives wearer the No Peripheral Vision disadvantage (p. B151) while worn.}),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal, Helmet)
Pot-Helm, techlvl(3), location(skull), dr(4), basecost(100), baseweight(5), lc(4), description(TL:3 LC:4 DR:4 Locations: skull), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Headgear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Plate, Armor - Metal, Helmet)

<_Armor, _Armor - Low-Tech, Basic Set, Basic Set - Armor, Basic Set - Armor - Low-Tech - Gloves and Footwear>
Cloth Gloves, techlvl(1), location(hands), dr(1*), basecost(15), baseweight(0), lc(), description(TL:1 LC:-- DR:1* Locations: hands Notes: [1] Concealable as or under clothing.), notes([1]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Armor - Cloth, Armor - Textile)
Leather Gloves, techlvl(1), location(hands), dr(2*), basecost(30), baseweight(0), lc(), description(TL:1 LC:-- DR:2* Locations: hands), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Armor - Leather)
Gauntlets, techlvl(2), location(hands), dr(4), basecost(100), baseweight(2), lc(4), description(TL:2 LC:4 DR:4 Locations: hands), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Armor - Plate, Armor - Metal)
Heavy Gauntlets, techlvl(3), location(hands), dr(5), basecost(250), baseweight(2.5), lc(3), description(TL:3 LC:3 DR:5 Locations: hands), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Gauntlets, Armor - Plate, Armor - Metal), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor)
Sandals, techlvl(0), location(feet), dr(0), basecost(25), baseweight(0.5), lc(), description(TL:0 LC:-- DR:0 Locations: feet Notes: [1,2] Concealable as or under clothing. Partial Coverage: DR1 to the underside of the foot.), notes([1,2]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.},{Partial coverage: sandals give DR 1 to the underside of the foot, while breastplates protect only from the front.}),
	mods(Equipment, Armor)
Shoes, techlvl(1), location(feet), dr(1*), basecost(40), baseweight(2), lc(), description(TL:1 LC:-- DR:1* Locations: feet Notes: [1] Concealable as or under clothing.), notes([1]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor)
Boots, techlvl(2), location(feet), dr(2*), basecost(80), baseweight(3), lc(), description(TL:2 LC:-- DR:2* Locations: feet Notes: [1] Concealable as or under clothing.), notes([1]), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	itemnotes({Concealable as or under clothing.}),
	mods(Equipment, Armor, Boots)
Sollerets, techlvl(3), location(feet), dr(4), basecost(150), baseweight(7), lc(3), description(TL:3 LC:3 DR:4 Locations: feet), page(B284), cat(Basic Set, Basic Set - Armor - Low-Tech - Gloves and Footwear, Basic Set - Armor - Low-Tech, Basic Set - Armor),
	mods(Equipment, Armor, Boots, Armor - Plate, Armor - Metal)


<Basic Set, Basic Set - Vehicles, Basic Set - Vehicles - Ground>
Dogsled, basecost(400), techlvl(0), description(TL:0 Skill:Teamster ST/HP:27! Hnd/SR:0/2 HT:12c Move:6/6 Lwt:0.29 Load:0.14 SM:+1 Occ:1 DR:2 Range:F Locations: 14DER Notes: Needs dogs.), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Ground, Basic Set - Vehicles)
Chariot, basecost(330), techlvl(1), description(TL:1 Skill:Teamster ST/HP:22! Hnd/SR:0/2 HT:11c Move:4/9* Lwt:0.29 Load:0.2 SM:+1 Occ:1+1 DR:1 Range:F Locations: 2DE2W Notes: Needs Horses.), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Ground, Basic Set - Vehicles)
Wagon, basecost(680), techlvl(3), description(TL:3 Skill:Teamster ST/HP:35! Hnd/SR:-3/4 HT:12c Move:4/8* Lwt:0.84 Load:0.5 SM:+2 Occ:1 DR:2 Range:F Locations: 2DE4W Notes: Needs Horses.), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Ground, Basic Set - Vehicles)
Coach, basecost(11000), techlvl(4), description(TL:4 Skill:Teamster ST/HP:53! Hnd/SR:-2/3 HT:12c Move:4/9* Lwt:2.4 Load:1.2 SM:+3 Occ:1+9 DR:2 Range:F Locations: 4DO4W Notes: Needs Horses.), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Ground, Basic Set - Vehicles)
Locomotive, basecost(45000), techlvl(5), description(TL:5 Skill:Driving/TL (Locomotive) ST/HP:152 Hnd/SR:-2/5 HT:11 Move:1/35‡ Lwt:28 Load:0.2 SM:+5 Occ:1+1 DR:8 Range:700 Locations: 8W), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Ground, Basic Set - Vehicles)

<Basic Set, Basic Set - Vehicles, Basic Set - Vehicles - Watercraft>
Canoe, basecost(200), techlvl(0), description(TL:0 Skill:Boating/TL (Unpowered) ST/HP:23† Hnd/SR:+1/1 HT:12c Move:2/2 Lwt:0.3 Load:0.2 SM:+1 Occ:2 DR:2 Range:F Locations: O Draft:3), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Watercraft, Basic Set - Vehicles)
Penteconter, basecost(14000), techlvl(2), description(TL:2 Skill:Shiphandling/TL (Ship) ST/HP:85† Hnd/SR:-4/3 HT:11c Move:1/5 Lwt:12.5 Load:7.5 SM:+8 Occ:55 DR:3 Range:F Locations: MO Draft:6 Notes: A "penteconter" is a Greek war galley with a sail and a single bank of oars, favored by raiders and pirates. Using oars, with 50 rowers. Under sail, range is "--" and Move is 1/4 in a fair wind. Has a bronze ram, which adds +1 per die of collision damage.), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Watercraft, Basic Set - Vehicles)
Cog, basecost(23000), techlvl(3), description(TL:3 Skill:Shiphandling/TL (Ship) ST/HP:147† Hnd/SR:-3/4 HT:12c Move:0.1/4 Lwt:85 Load:60 SM:+7 Occ:18 DR:5 Range:-- Locations: M Draft:13 Notes: A "cog" (or "roundship") is a single-masted medieval sailing ship. Wind-powered. Weight includes ballast.), page(B464), mods(Equipment), isparent(yes), cat(Basic Set, Basic Set - Vehicles - Watercraft, Basic Set - Vehicles)


//^^^^ Must add itemnotes() for Shields
<_Armor, _Armor - Low-Tech, Basic Set, Basic Set - Armor, Basic Set - Armor - Low-Tech, Basic Set - Armor - Low-Tech - Shields>
Light Shield, basecost(25), baseweight(2), dr(5/20), db(1), lc(4), techlvl(0),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+1), damtype(cr), reach(1), parry(No), minst()),
	page(B273, B287), mods(Equipment, Shield),
	description(TL:0 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:5 HP:20 Skill:Shield (Shield) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Small Shield, basecost(40), baseweight(8), dr(6/30), db(1), lc(4), techlvl(0), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+1), damtype(cr), reach(1), parry(No), minst()),
	description(TL:0 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:6 HP:30 Skill:Shield (Shield) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Medium Shield, basecost(60), baseweight(15), dr(7/40), db(2), lc(4), techlvl(1), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst()),
	description(TL:1 LC:4 DB:2 Dam:thr cr Reach:1 Parry:No ST:-- DR:7 HP:40 Skill:Shield (Shield) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Large Shield, basecost(90), baseweight(25), dr(9/60), db(3), lc(4), techlvl(1), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+3), damtype(cr), reach(1), parry(No), minst()),
	description(TL:1 LC:4 DB:3 Dam:thr cr Reach:1 Parry:No ST:-- DR:9 HP:60 Skill:Shield (Shield) Notes: [2,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,4])
Light Buckler, basecost(25), baseweight(2), dr(5/20), db(1), lc(4), techlvl(0), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	itemnotes({Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon – but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular Shield skill. No effect on statistics.}),
	description(TL:0 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:5 HP:20 Skill:Shield (Buckler) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Small Buckler, basecost(40), baseweight(8), dr(6/30), db(1), lc(4), techlvl(0), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	itemnotes({Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon – but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular Shield skill. No effect on statistics.}),
	description(TL:0 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:6 HP:30 Skill:Shield (Buckler) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Medium Buckler, basecost(60), baseweight(15), dr(7/40), db(2), lc(4), techlvl(1), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	itemnotes({Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon – but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular Shield skill. No effect on statistics.}),
	description(TL:1 LC:4 DB:2 Dam:thr cr Reach:1 Parry:No ST:-- DR:7 HP:40 Skill:Shield (Buckler) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Light Iron Shield, basecost(125), baseweight(4), dr(8/40), db(1), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+1), damtype(cr), reach(1), parry(No), minst()),
	description(TL:3 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:8 HP:40 Skill:Shield (Shield) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Small Iron Shield, basecost(200), baseweight(16), dr(9/60), db(1), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+1), damtype(cr), reach(1), parry(No), minst()),
	description(TL:3 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:9 HP:60 Skill:Shield (Shield) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Medium Iron Shield, basecost(300), baseweight(30), dr(10/80), db(2), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+2), damtype(cr), reach(1), parry(No), minst()),
	description(TL:3 LC:4 DB:2 Dam:thr cr Reach:1 Parry:No ST:-- DR:10 HP:80 Skill:Shield (Shield) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Large Iron Shield, basecost(450), baseweight(50), dr(12/120), db(3), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(thr), damtype(cr), reach(1), parry(No), minst()),
	newmode(Rush, skillused(ST:DX-4, SK:Shield (Buckler)-2, SK:Shield (Force)-2, SK:Shield (Shield)), damage(slam+3), damtype(cr), reach(1), parry(No), minst()),
	description(TL:3 LC:4 DB:3 Dam:thr cr Reach:1 Parry:No ST:-- DR:12 HP:120 Skill:Shield (Shield) Notes: [2,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,4])
Light Iron Buckler, basecost(125), baseweight(4), dr(8/40), db(1), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()), 
	itemnotes({Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon – but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular Shield skill. No effect on statistics.}),
	description(TL:3 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:8 HP:40 Skill:Shield (Buckler) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Small Iron Buckler, basecost(200), baseweight(16), dr(9/60), db(1), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()), 
	itemnotes({Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon – but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular Shield skill. No effect on statistics.}),
	description(TL:3 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- DR:9 HP:60 Skill:Shield (Buckler) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
Medium Iron Buckler, basecost(300), baseweight(30), dr(10/80), db(2), lc(4), techlvl(3), page(B273, B287), mods(Equipment, Shield),
	newmode(Bash, skillused(ST:DX-4, SK:Shield (Shield)-2, SK:Shield (Force)-2, SK:Shield (Buckler)), damage(thr), damtype(cr), reach(1), parry(No), minst()), 
	itemnotes({Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon – but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular Shield skill. No effect on statistics.}),
	description(TL:3 LC:4 DB:2 Dam:thr cr Reach:1 Parry:No ST:-- DR:10 HP:80 Skill:Shield (Buckler) Notes: [2,3,4] Can be used offensively with a shield bash (see the Melee Weapon Table p. B273) or shield rush (see Slam, p. B371). At TL2+, you can give your small, medium, or large shield a spike to increase damage: add $20 and 5 lbs. Also available as a buckler. You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. At TL3+, iron shields are available but uncommon: x5 cost, x2 weight, +3 DR, and x2 HP. At TL7+ plastic riot shields (made of Lexan, etc.) have x1/2 weight but otherwise identical statistics. Shield composition never affects DB.), notes([2,3,4])
	
Light Cloak, basecost(20), baseweight(2), dr(1/3), db(1), lc(), techlvl(1), skillused(SK:Cloak, ST:DX-5, SK:Net-4, SK:Shield-4), damage(spcl.), acc(1), rangehalfdam(2), rangemax(2), rof(1), shots(T(1)), bulk(-4), minst(5), mods(Equipment),
	itemnotes({May entangle or ensnare the target; see Special Ranged Weapons (p. B411).}),
	description(TL:1 LC:-- DB:1 Dam:Spcl. Acc:1 Range:2 RoF:1 Shots:T(1) Bulk:-4 ST:5 DR:1 HP:3 Skill:Cloak Notes: [1]/[4] May entangle or ensnare the target; see Special Ranged Weapons (p. B411).), notes([1]/[4]), page(B275, B287)
Heavy Cloak, basecost(50), baseweight(5), dr(1/5), db(2), lc(), techlvl(1), skillused(SK:Cloak, ST:DX-5, SK:Net-4, SK:Shield-4), damage(spcl.), acc(1), rangehalfdam(2), rangemax(2), rof(1), shots(T(1)), bulk(-6), minst(8), mods(Equipment),
	itemnotes({May entangle or ensnare the target; see Special Ranged Weapons (p. B411).}),
	description(TL:1 LC:-- DB:2 Dam:Spcl. Acc:1 Range:2 RoF:1 Shots:T(1) Bulk:-4 ST:5 DR:1 HP:5 Skill:Cloak Notes: [1]/[4] May entangle or ensnare the target; see Special Ranged Weapons (p. B411).), notes([1]/[4]), page(B275, B287)

<Basic Set, Basic Set - Melee Weapons, _Melee Weapons, _Melee Weapons - Basic Set>
Axe, techlvl(0), break(0), lc(4), basecost(50), baseweight(4), page(B271), mods(Equipment, Melee Quality, Cutting Class Quality), damage(sw+2), damtype(cut), reach(1), parry(0U), minst(11), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:0 LC:4, Dam:sw+2 cut Reach:1 Parry:0U ST:11 Skill:Axe/Mace)
Pick, techlvl(3), break(0), lc(4), basecost(70), baseweight(3), page(B271), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+1), damtype(imp), reach(1), parry(0U), minst(10), notes([2]), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({May get stuck; see Picks (p. B405).}),
	description(TL:3 LC:4, Dam:sw+1 imp Reach:1 Parry:0U ST:10 Skill:Axe/Mace Notes: [2] May get stuck; see Picks (p. B405).)
Brass Knuckles, techlvl(1), break(0), lc(4), basecost(10), baseweight(0.25), page(B271), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	damage(thr + _
					@max(_
						@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
						@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
						@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
						)_
				), damtype(cr), reach(C), parry(0), minst(), notes([3]), skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX),
	itemnotes({Brawling (p. B182) increases all unarmed damage; Claws (p. B42) and Karate (p. B203) improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boing (p. B182) improves punching damage.}),
	description(TL:1 LC:4, Dam:thr cr Reach:C Parry:0 ST:-- Skill:Boxing, Brawling, Karate, DX Notes: [3] Brawling increases all unarmed damage; claws and Karate improve damage with punches and kicks (claws don't affect damage with brass knuckles or boots); Boxing improves punching damage. Calculated damage takes into account these skill bonuses.)
Blackjack, techlvl(1), break(0), lc(4), basecost(20), baseweight(1), page(B271), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(thr), damtype(cr), reach(C), parry(0), minst(7), skillused(SK:Brawling, ST:DX), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Brawling (p. B182) increases all unarmed damage; Claws (p. B42) and Karate (p. B203) improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boing (p. B182) improves punching damage.}),
	description(TL:1 LC:4, Dam:thr cr Reach:C Parry:0 ST:7 Skill:Brawling, DX)
Sap, techlvl(1), break(0), lc(4), basecost(20), baseweight(1), page(B271), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(thr), damtype(cr), reach(C), parry(No), minst(7), skillused(SK:Brawling, ST:DX), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Brawling (p. B182) increases all unarmed damage; Claws (p. B42) and Karate (p. B203) improve damage with punches and kicks (Claws don't affect damage with brass knuckles or boots); and Boing (p. B182) improves punching damage.}),
	description(TL:1 LC:4, Dam:thr cr Reach:C Parry:No ST:7 Skill:Brawling, DX)
Stun Gun, techlvl(8), break(0), lc(4), basecost(100), baseweight(1), page(B271), mods(Equipment), damage(HT-3), armordivisor(0.5), damtype(aff), reach(C,1), parry(0), minst(2), notes([5]), skillused(SK:Brawling, ST:DX), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({On a failed HT roll, victim is stunned for as long as weapon is in contact plus (20 - HT) seconds longer, and then can roll vs. HT-3 to recover.}),
	description(TL:8 LC:4, Dam:HT-3(0.5) aff Reach:C,1 Parry:0 ST:2 Skill:Brawling, DX Notes: [5] On a failed HT roll, victim is stunned for as long as weapon is in contact plus (20-HT) seconds longer, and then can roll vs. HT-3 to recover.)
Light Club, techlvl(0), break(0), lc(4), basecost(5), baseweight(3), page(B271), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cr), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(Thrust, damage(thr+1), damtype(cr), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	description(TL:0 LC:4, [Mode:swing Dam:sw+1 cr Reach:1 Parry:0 ST:10 Skill:Broadsword], [Mode:thrust Dam:thr+1 cr Reach:1 Parry:0 ST:10 Skill:Broadsword])
Broadsword, techlvl(2), break(0), lc(4), basecost(500), baseweight(3), page(B271), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cut), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(Thrust, damage(thr+1), damtype(cr), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	description(TL:2 LC:4, [Mode:swing Dam:sw+1 cut Reach:1 Parry:0 ST:10 Skill:Broadsword], [Mode:thrust Dam:thr+1 cr Reach:1 Parry:0 ST:10 Skill:Broadsword])
Thrusting Broadsword, techlvl(2), break(0), lc(4), basecost(600), baseweight(3), page(B271), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cut), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(Thrust, damage(thr+2), damtype(imp), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	description(TL:2 LC:4, [Mode:swing Dam:sw+1 cut Reach:1 Parry:0 ST:10 Skill:Broadsword], [Mode:thrust Dam:thr+2 imp Reach:1 Parry:0 ST:10 Skill:Broadsword])
Cavalry Saber, techlvl(4), break(0), lc(4), basecost(500), baseweight(3), page(B271), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+1), damtype(cut), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(Thrust, damage(thr+1), damtype(imp), reach(1), parry(0), minst(10), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	description(TL:4 LC:4, [Mode:swing Dam:sw+1 cut Reach:1 Parry:0 ST:10 Skill:Broadsword], [Mode:thrust Dam:thr+1 imp Reach:1 Parry:0 ST:10 Skill:Broadsword])
Morningstar, techlvl(3), break(0), lc(4), basecost(80), baseweight(6), page(B272), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+3), damtype(cr), reach(1), parry(0U), minst(12), notes([6]), skillused(SK:Flail, ST:DX-6, SK:Axe/Mace-4, SK:Two-Handed Flail-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Attempts to parry flails are at -4, and fencing weapons (''F'' parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.}),
	description(TL:3 LC:4, Dam:sw+3 cr Reach:1 Parry:0U ST:12 Skill:Flail Notes: [6] Attempts to parry flails are at -4, and fencing weapons (F parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.)
Nunchaku, techlvl(3), break(0), lc(4), basecost(20), baseweight(2), page(B272), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+1), damtype(cr), reach(1), parry(0U), minst(7), notes([6]), skillused(SK:Flail, ST:DX-6, SK:Axe/Mace-4, SK:Two-Handed Flail-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Attempts to parry flails are at -4, and fencing weapons (''F'' parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.}),
	description(TL:3 LC:4, Dam:sw+1 cr Reach:1 Parry:0U ST:7 Skill:Flail Notes: [6] Attempts to parry flails are at -4, and fencing weapons (F parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.)
Force Sword, techlvl(^), break(no), lc(2), basecost(10000), baseweight(2), page(B272), mods(Equipment), dmg(8), damage(8d), armordivisor(5), damtype(burn), reach(1,2), parry(0), minst(3), notes([7]), skillused(SK:Sword!, SK:Force Sword, ST:DX-5, SK:Broadsword-3, SK:Jitte/Sai-3, SK:Knife-3, SK:Shortsword-3, SK:Two-Handed Sword-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({This is an energy blade. Take a Ready maneuver to activate/deactivate. The blade cannot break, and damages any weapon or body part it parries or which parries or blocks it. Etra energy cells cost $100, weigh 0.5 lb., and last 300 seconds.}),
	description(TL:^ LC:2, Dam:8d(5) burn Reach:1,2 Parry:0 ST:3 Skill:Force Sword Notes: [7] This is an energy blade. Take a Ready maneuver to activate/deactivate. The blade cannot break, and damages any weapon or body part it parries or which parries or blocks it.)
Garrote, techlvl(0), break(0), lc(4), basecost(2), baseweight(0.05), page(B272), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(), damtype(spcl.), reach(C), parry(No), minst(), notes([8]), skillused(SK:Garrote, ST:DX-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({A piece of rope used to strangle; see Garrotes (p. B405).}),
	description(TL:0 LC:4, Dam: spcl. Reach:C Parry:No ST:-- Skill:Garrote Notes: [8] A piece of rope used to strangle; see Garrotes (p. B405))
Kusari, techlvl(3), break(0), lc(4), basecost(70), baseweight(5), page(B272), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+2), damtype(cr), reach(1-4*), parry(-2U), minst(11), notes([6]), skillused(SK:Kusari, ST:DX-6, SK:Monowire Whip-3, SK:Two-Handed Flail-4, SK:Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Attempts to parry flails are at -4, and fencing weapons (''F'' parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.}),
	description(TL:3 LC:4, Dam:sw+2 cr Reach:1-4* Parry:-2U ST:11 Skill:Kusari Notes: [6] Attempts to parry flails are at -4, and fencing weapons (F parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.)
Lance, techlvl(2), break(0), lc(4), basecost(60), baseweight(6), page(B272), mods(Equipment, Melee Quality, Crushing/Imp Class Quality, Lance), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Damage increases in a mounted charge; see Cavalry Weapons (p. B397).}),
	description(TL:2 LC:4, Dam:thr+3 imp Reach:4 Parry:No ST:12 Skill:Lance Notes: [9] Damage increases in a mounted charge; see Cavalry Weapons (p. B397)),
	addmode(Characters ST ,damage(thr+3), damtype(imp), reach(4), lc(4), break(0), parry(No), minst(12), notes([9]), skillused(SK:Lance, ST:DX-5, SK:Spear-3)),
	newmode(ST%MountSTList%/ Move%MountMoveList% ,damage(@int((%MountSTList% * %MountMoveList%)/100)d+3), damtype(imp), reach(4), parry(No), minst(12), notes([9]), skillused(SK:Lance, ST:DX-5, SK:Spear-3)),
	x(_
		#ChoiceList(_
					name(MountST),
					title(Mount ST),
					text(Lance damage is based on Slam Damage, which in turn depends on Mount ST and Move; please select Mount ST (or HP):),
					picksallowed(1),
					method(bynumber),
					list(_
							"  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100"_
						)_
				),
		#ChoiceList(_
					name(MountMove),
					title(Mount Move),
					text(Lance damage is based on Slam Damage, which in turn depends on Mount ST and Move. Please select a Mount Move value below. You may add a modifier to the Lance to add new ST/Move combinations to the Lance:),
					picksallowed(1),
					method(bynumber),
					list(_
							"  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100"_
						)_
				)_
		)
	
	
Glaive, techlvl(1), break(0), lc(4), basecost(100), baseweight(8), page(B272), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+3), damtype(cut), reach(2,3*), parry(0U), minst(11‡), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	newmode(Thrust, damage(thr+3), damtype(imp), reach(1-3*), parry(0U), minst(11†), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	description(TL:1 LC:4, [Mode:swing Dam:sw+3 cut Reach:2,3* Parry:0U ST:11‡ Skill:Polearm Notes: Requires two hands; becomes unready after attack.], [Mode:thrust Dam:thr+3 imp Reach:1-3* Parry:0U ST:11† Skill:Polearm Notes: Requires two hands.])
Halberd, techlvl(3), break(0), lc(4), basecost(150), baseweight(12), page(B272), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing/cut, damage(sw+5), damtype(cut), reach(2,3*), parry(0U), minst(13‡), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	newmode(Swing/imp, damage(sw+4), damtype(imp), reach(2,3*), parry(0U), minst(13‡), notes([2]), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	newmode(Thrust, damage(thr+3), damtype(imp), reach(1-3*), parry(0U), minst(12†), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	itemnotes({}|{May get stuck; see Picks (p. B405).}|{}),
	description(TL:3 LC:4, [Mode:swing/cut Dam:sw+5 cut Reach:2,3* Parry:0U ST:13‡ Skill:Polearm Notes: Requires two hands; becomes unready after attack.], [Mode:swing/imp Dam:sw+4 imp Reach:2,3* Parry:0U ST:13‡ Skill:Polearm Notes: [2] Requires two hands; becomes unready after attack. May get stuck; see Picks (p. B405).], [Mode:thrust Dam:thr+3 imp Reach:1-3* Parry:0U ST:12† Skill:Polearm Notes: Requires two hands.])
Poleaxe, techlvl(3), break(0), lc(4), basecost(120), baseweight(10), page(B272), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing/cut, damage(sw+4), damtype(cut), reach(2,3*), parry(0U), minst(12‡), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	newmode(Swing/cr, damage(sw+4), damtype(cr), reach(2,3*), parry(0F), minst(12‡), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	description(TL:3 LC:4, [Mode:swing/cut Dam:sw+4 cut Reach:2,3* Parry:0U ST:12‡ Skill:Polearm Notes: Requires two hands; becomes unready after attack.], [Mode:swing/cr Dam:sw+4 cr Reach:2,3* Parry:0F ST:12‡ Skill:Polearm Notes: Requires two hands; becomes unready after attack.])
Rapier, techlvl(4), break(0), lc(4), basecost(500), baseweight(2.75), page(B273), mods(Equipment, Melee Quality, Sword Class Quality), damage(thr+1), damtype(imp), reach(1,2), parry(0F), minst(9), skillused(SK:Sword!, SK:Rapier, ST:DX-5, SK:Broadsword-4, SK:Main-Gauche-3, SK:Saber-3, SK:Smallsword-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:4 LC:4, Dam:thr+1 imp Reach:1,2 Parry:0F ST:9 Skill:Rapier)
Saber, techlvl(4), break(0), lc(4), basecost(700), baseweight(2), page(B273), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw-1), damtype(cut), reach(1), parry(0F), minst(8), skillused(SK:Sword!, SK:Saber, ST:DX-5, SK:Broadsword-4, SK:Main-Gauche-3, SK:Rapier-3, SK:Shortsword-4, SK:Smallsword-3)),
	newmode(Thrust, damage(thr+1), damtype(imp), reach(1), parry(No), minst(8), skillused(SK:Sword!, SK:Saber, ST:DX-5, SK:Broadsword-4, SK:Main-Gauche-3, SK:Rapier-3, SK:Shortsword-4, SK:Smallsword-3)),
	description(TL:4 LC:4, [Mode:swing Dam:sw-1 cut Reach:1 Parry:0F ST:8 Skill:Saber], [Mode:thrust Dam:thr+1 imp Reach:1 Parry:No ST:8 Skill:Saber])
Baton, techlvl(0), break(0), lc(4), basecost(20), baseweight(1), page(B273), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw), damtype(cr), reach(1), parry(0), minst(6), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	newmode(Thrust, damage(thr), damtype(cr), reach(1), parry(0), minst(6), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	description(TL:0 LC:4, [Mode:swing Dam:sw cr Reach:1 Parry:0 ST:6 Skill:Shortsword], [Mode:thrust Dam:thr cr Reach:1 Parry:0 ST:6 Skill:Shortsword])
Shortsword, techlvl(2), break(0), lc(4), basecost(400), baseweight(2), page(B273), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw), damtype(cut), reach(1), parry(0), minst(8), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	newmode(Thrust, damage(thr), damtype(imp), reach(1), parry(0), minst(8), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	description(TL:2 LC:4, [Mode:swing Dam:sw cut Reach:1 Parry:0 ST:8 Skill:Shortsword], [Mode:thrust Dam:thr imp Reach:1 Parry:0 ST:8 Skill:Shortsword])
Cutlass, techlvl(4), break(0), lc(4), basecost(300), baseweight(2), page(B273), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw), damtype(cut), reach(1), parry(0), minst(8), notes([10]), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	newmode(Thrust, damage(thr), damtype(imp), reach(1), parry(0), minst(8), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	itemnotes({Hilt counts as brass knuckles in close combat.}|{}),
	description(TL:4 LC:4, [Mode:swing Dam:sw cut Reach:1 Parry:0 ST:8 Skill:Shortsword Notes: [10] Hilt counts as brass knuckles in close combat.], [Mode:thrust Dam:thr imp Reach:1 Parry:0 ST:8 Skill:Shortsword])
Cattle Prod, techlvl(7), break(0), lc(4), basecost(50), baseweight(2), page(B273), mods(Equipment), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Primary, damage(1d-3), damtype(burn), reach(1), parry(0), minst(3), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	newmode(Linked, damage(HT-3), armordivisor(0.5), damtype(aff), reach(1), parry(0), minst(3), notes([5]), skillused(SK:Sword!, SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Force Sword-4, SK:Jitte/Sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)),
	itemnotes({On a failed HT roll, victim is stunned for as long as weapon is in contact plus (20 - HT) seconds longer, and then can roll vs. HT-3 to recover.}),
	description(TL:7 LC:4, [Mode:primary Dam:1d-3 burn Reach:1 Parry:0 ST:3 Skill:Shortsword], [Mode:linked Dam:HT-3(0.5) aff Reach:1 Parry:0 ST:3 Skill:Shortsword Notes: [5] On a failed HT roll, victim is stunned for as long as weapon is in contact plus (20-HT) seconds longer, and then can roll vs. HT-3 to recover.])
Short Staff, techlvl(0), break(0), lc(4), basecost(20), baseweight(1), page(B273), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw), damtype(cr), reach(1), parry(0F), minst(6), skillused(SK:Sword!, SK:Smallsword, ST:DX-5, SK:Main-Gauche-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4)),
	newmode(Thrust, damage(thr), damtype(cr), reach(1), parry(0F), minst(6), skillused(SK:Sword!, SK:Smallsword, ST:DX-5, SK:Main-Gauche-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4)),
	description(TL:0 LC:4, [Mode:swing Dam:sw cr Reach:1 Parry:0F ST:6 Skill:Smallsword], [Mode:thrust Dam:thr cr Reach:1 Parry:0F ST:6 Skill:Smallsword])
Smallsword, techlvl(4), break(0), lc(4), basecost(400), baseweight(1.5), page(B273), mods(Equipment, Melee Quality, Sword Class Quality), damage(thr+1), damtype(imp), reach(1), parry(0F), minst(5), skillused(SK:Sword!, SK:Smallsword, ST:DX-5, SK:Main-Gauche-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:4 LC:4, Dam:thr+1 imp Reach:1 Parry:0F ST:5 Skill:Smallsword)
Long Spear, techlvl(2), break(0), lc(4), basecost(60), baseweight(5), page(B273), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(1H, damage(thr+2), damtype(imp), reach(2,3*), parry(0U), minst(10), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),
	newmode(2H, damage(thr+3), damtype(imp), reach(2,3*), parry(0), minst(10†), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),
	description(TL:2 LC:4, [Mode:one-handed Dam:thr+2 imp Reach:2,3* Parry:0U ST:10 Skill:Spear], [Mode:two-handed Dam:thr+3 imp Reach:2,3* Parry:0 ST:10† Skill:Spear Notes: Requires two hands.])
Maul, techlvl(0), break(0), lc(4), basecost(80), baseweight(12), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+4), damtype(cr), reach(1,2*), parry(0U), minst(13‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:0 LC:4, Dam:sw+4 cr Reach:1,2* Parry:0U ST:13‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Great Axe, techlvl(1), break(0), lc(4), basecost(100), baseweight(8), page(B274), mods(Equipment, Melee Quality, Cutting Class Quality), damage(sw+3), damtype(cut), reach(1,2*), parry(0U), minst(12‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw+3 cut Reach:1,2* Parry:0U ST:12‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.)
Scythe, techlvl(1), break(0), lc(4), basecost(15), baseweight(5), page(B274), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing cut, damage(sw+2), damtype(cut), reach(1), parry(0U), minst(11‡), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4)),
	newmode(Swing impale, damage(sw), damtype(imp), reach(1), parry(0U), minst(11‡), notes([2]), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4)),
	itemnotes({}|{May get stuck; see Picks (p. B405).}),
	description(TL:1 LC:4, [Mode:swing1 Dam:sw+2 cut Reach:1 Parry:0U ST:11‡ Skill:Two-Handed Axe/Mace Notes: Requires two hands; becomes unready after attack.], [Mode:swing2 Dam:sw imp Reach:1 Parry:0U ST:11‡ Skill:Two-Handed Axe/Mace Notes: [2] May get stuck; see Picks (p. B405). Requires two hands; becomes unready after attack.])
Warhammer, techlvl(3), break(0), lc(4), basecost(100), baseweight(7), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+3), damtype(imp), reach(1,2*), parry(0U), minst(12‡), notes([2]), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({May get stuck; see Picks (p. B405).}),
	description(TL:3 LC:4, Dam:sw+3 imp Reach:1,2* Parry:0U ST:12‡ Skill:Two-Handed Axe/Mace Notes: [2] May get stuck; see Picks (p. B405). Requires two hands; becomes unready after attack.)
Chainsaw, techlvl(6), break(0), lc(4), basecost(150), baseweight(13), page(B274), mods(Equipment), damage(sw+1d), damtype(cut), reach(1), parry(No), minst(10‡), notes([11]), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Noisy! Runs for two hours on half a gallon of gasoline.}),
	description(TL:6 LC:4, Dam:sw+1d cut Reach:1 Parry:No ST:10‡ Skill:Two-Handed Axe/Mace Notes: [11] Noisy! Runs for two hours on a half a gallon of gasoline. Requires two hands; becomes unready after attack.)
Flail, techlvl(2), break(0), lc(4), basecost(100), baseweight(8), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw+4), damtype(cr), reach(1,2*), parry(0U), minst(13), notes([6]), skillused(SK:Two-Handed Flail, ST:DX-6, SK:Flail-3, SK:Kusari-4, SK:Two-Handed Axe/Mace-4), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	itemnotes({Attempts to parry flails are at -4, and fencing weapons (''F'' parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.}),
	description(TL:2 LC:4, Dam:sw+4 cr Reach:1,2* Parry:0U ST:13 Skill:Two-Handed Flail Notes: [6] Attempts to parry flails are at -4, and fencing weapons (F parry) cannot parry at all! Attempts to block flails are at -2. A nunchaku is small, and gives half these penalties.)
Quarterstaff, techlvl(0), break(0), lc(4), basecost(10), baseweight(4), page(B273, B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Staff swing, damage(sw+2), damtype(cr), reach(1,2), parry(+2), minst(7†), skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)),
	newmode(Staff thrust, damage(thr+2), damtype(cr), reach(1,2), parry(+2), minst(7†), skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)),
	newmode(Sword swing, damage(sw+2), damtype(cr), reach(1,2), parry(0), minst(9†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(Sword thrust, damage(thr+1), damtype(cr), reach(2), parry(0), minst(9†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	description(TL:0 LC:4, [Mode:staff swing Dam:sw+2 cr Reach:1,2 Parry:+2 ST:7† Skill:Staff Notes: Requires two hands.], [Mode:staff thrust Dam:thr+2 cr Reach:1,2 Parry:+2 ST:7† Skill:Staff Notes: Requires two hands.], [Mode:sword swing Dam:sw+2 cr Reach:1,2 Parry:0 ST:9† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:sword thrust Dam:thr+1 cr Reach:2 Parry:0 ST:9† Skill:Two-Handed Sword Notes: Requires two hands.])
Naginata, techlvl(2), break(0), lc(4), basecost(100), baseweight(6), page(B272, B273, B274), mods(Equipment, Melee Quality, Cutting Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(2H sword swing, damage(sw+3), damtype(cut), reach(2), parry(0U), minst(9†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(2H sword thrust, damage(thr+3), damtype(imp), reach(2), parry(0), minst(9†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(Staff swing, damage(sw+2), damtype(cr), reach(1,2), parry(0U), minst(9†), skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)),
	newmode(Staff thrust, damage(thr+2), damtype(cr), reach(1,2), parry(0), minst(9†), skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)),
	newmode(Polearm swing, damage(sw+2), damtype(cut), reach(1,2*), parry(0U), minst(9†), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	newmode(Polearm thrust, damage(thr+3), damtype(imp), reach(2), parry(0), minst(9†), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),
	itemnotes({}|{}|{Blunt End.}|{}|{}|{}),
	description(TL:2 LC:4, [Mode:two-handed sword swing Dam:sw+3 cut Reach:2 Parry:0U ST:9† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:two-handed sword thrust Dam:thr+3 imp Reach:2 Parry:0 ST:9† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:staff swing Dam:sw+2 cr Reach:1,2 Parry:0U ST:9† Skill:Staff Notes: Blunt end. Requires two hands.], [Mode:staff thrust Dam:thr+2 cr Reach:1,2 Parry:0 ST:9† Skill:Staff Notes: Requires two hands.], [Mode:polearm swing Dam:sw+2 cut Reach:1,2* Parry:0U ST:9† Skill:Polearm Notes: Requires two hands.], [Mode:polearm thrust Dam:thr+3 imp Reach:5 Parry:0 ST:9† Skill:Polearm Notes: Requires two hands.])
Bastard Sword, techlvl(3), break(0), lc(4), basecost(650), baseweight(5), page(B271, B274), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(1H Swing, damage(sw+1), damtype(cut), reach(1,2), parry(0U), minst(11), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(1H Thrust, damage(thr+1), damtype(cr), reach(2), parry(0U), minst(11), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(2H Swing, damage(sw+2), damtype(cut), reach(1,2), parry(0), minst(10†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(2H Thrust, damage(thr+2), damtype(cr), reach(2), parry(0), minst(10†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	description(TL:3 LC:4, [Mode:two-handed swing Dam:sw+2 cut Reach:1,2 Parry:0 ST:10† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:two-handed thrust Dam:thr+2 cr Reach:2 Parry:0 ST:10† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:one-handed swing Dam:sw+1 cut Reach:1,2 Parry:0U ST:11 Skill:Broadsword], [Mode:one-handed thrust Dam:thr+1 cut Reach:2 Parry:0U ST:11 Skill:Broadsword])
Greatsword, techlvl(3), break(0), lc(4), basecost(800), baseweight(7), page(B274), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+3), damtype(cut), reach(1,2), parry(0), minst(12†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(Thrust, damage(thr+2), damtype(cr), reach(2), parry(0), minst(12†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	description(TL:3 LC:4, [Mode:swing Dam:sw+3 cut Reach:1,2 Parry:0 ST:12† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:thrust Dam:thr+2 cr Reach:2 Parry:0 ST:12† Skill:Two-Handed Sword Notes: Requires two hands.])
Katana, techlvl(3), break(0), lc(4), basecost(650), baseweight(5), page(B271, B274), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(1H Swing, damage(sw+1), damtype(cut), reach(1,2), parry(0), minst(11), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(1H Thrust, damage(thr+1), damtype(imp), reach(1), parry(0), minst(11), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(2H Swing, damage(sw+2), damtype(cut), reach(1,2), parry(0), minst(10†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(2H Thrust, damage(thr+1), damtype(imp), reach(1), parry(0), minst(10†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	description(TL:3 LC:4, [Mode:two-handed swing Dam:sw+2 cut Reach:1,2 Parry:0 ST:10† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:two-handed thrust Dam:thr+1 imp Reach:1 Parry:0 ST:10† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:one-handed swing Dam:sw+1 cut Reach:1,2 Parry:0 ST:11 Skill:Broadsword], [Mode:one-handed thrust Dam:thr+1 imp Reach:1 Parry:0 ST:11 Skill:Broadsword])
Thrusting Bastard Sword, techlvl(3), break(0), lc(4), basecost(750), baseweight(5), page(B271, B274), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(1H Swing, damage(sw+1), damtype(cut), reach(1,2), parry(0U), minst(11), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(1H Thrust, damage(thr+2), damtype(imp), reach(2), parry(0U), minst(11), skillused(SK:Sword!, SK:Broadsword, ST:DX-5, SK:Force Sword-4, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)),
	newmode(2H Swing, damage(sw+2), damtype(cut), reach(1,2), parry(0), minst(10†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(2H Thrust, damage(thr+3), damtype(imp), reach(2), parry(0), minst(10†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	description(TL:3 LC:4, [Mode:two-handed swing Dam:sw+2 cut Reach:1,2 Parry:0 ST:10† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:two-handed thrust Dam:thr+3 imp Reach:2 Parry:0 ST:10† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:one-handed swing Dam:sw+1 cut Reach:1,2 Parry:0U ST:11 Skill:Broadsword], [Mode:one-handed thrust Dam:thr+2 imp Reach:2 Parry:0U ST:11 Skill:Broadsword])
Thrusting Greatsword, techlvl(3), break(0), lc(4), basecost(900), baseweight(7), page(B274), mods(Equipment, Melee Quality, Sword Class Quality), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	newmode(Swing, damage(sw+3), damtype(cut), reach(1,2), parry(0), minst(12†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	newmode(Thrust, damage(thr+3), damtype(imp), reach(2), parry(0), minst(12†), skillused(SK:Sword!, SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4, SK:Force Sword-4)),
	description(TL:3 LC:4, [Mode:swing Dam:sw+3 cut Reach:1,2 Parry:0 ST:12† Skill:Two-Handed Sword Notes: Requires two hands.], [Mode:thrust Dam:thr+3 imp Reach:2 Parry:0 ST:12† Skill:Two-Handed Sword Notes: Requires two hands.])
Whip (1-yard), techlvl(1), break(0), lc(4), basecost(20), baseweight(2), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1), parry(-2U), minst(6), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1 Parry:-2U ST:6 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Whip (2-yard), techlvl(1), break(0), lc(4), basecost(40), baseweight(4), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1-2*), parry(-2U), minst(7), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1-2* Parry:-2U ST:7 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Whip (3-yard), techlvl(1), break(0), lc(4), basecost(60), baseweight(6), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1-3*), parry(-2U), minst(8), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1-3* Parry:-2U ST:8 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Whip (4-yard), techlvl(1), break(0), lc(4), basecost(80), baseweight(8), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1-4*), parry(-2U), minst(9), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1-4* Parry:-2U ST:9 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Whip (5-yard), techlvl(1), break(0), lc(4), basecost(100), baseweight(10), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1-5*), parry(-2U), minst(10), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1-5* Parry:-2U ST:10 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Whip (6-yard), techlvl(1), break(0), lc(4), basecost(120), baseweight(12), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1-6*), parry(-2U), minst(11), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1-6* Parry:-2U ST:11 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Whip (7-yard), techlvl(1), break(0), lc(4), basecost(140), baseweight(14), page(B274), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), damage(sw-2), armordivisor(0.5), damtype(cr), reach(1-7*), parry(-2U), minst(12), notes([12]), skillused(SK:Whip, ST:DX-5, SK:Kusari-3, SK:Monowore Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:1 LC:4, Dam:sw-2(0.5) cr Reach:1-7* Parry:-2U ST:12 Skill:Whip Notes: [12] Specify maximum reach (up to 7 yards) when bought. Cost and weight are per yard. ST is 5, +1 per yard. Many special rules apply; be sure to see Whips (p. B406).)
Monowire Whip, techlvl(^), break(0), lc(4), basecost(900), baseweight(0.5), page(B272), mods(Equipment), damage(sw-2+1d), armordivisor(10), damtype(cut), reach(1-7*), parry(-2U), minst(5), notes([12]), skillused(SK:Monowire Whip, ST:DX-6, SK:Kusari-3, SK:Whip-3), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons),
	description(TL:^ LC:4, Dam:sw+1d-2(10) cut Reach:1-7* Parry:-2U ST:5 Skill:Monowire Whip Notes: [12] Many special rules apply; be sure to see Whips (p. B406).)

Hatchet, techlvl(0), break(0), lc(4), basecost(40), baseweight(2), page(B271, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Cutting Class Quality), calcrange(yes),
	newmode(Swing, damage(sw), damtype(cut), reach(1), parry(0), minst(8), notes([1]), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),
	newmode(Thrown, damage(sw), damtype(cut), acc(1), rangehalfdam(ST*1.5), rangemax(ST*2.5), rof(1), shots(T(1)), minst(8), bulk(-2), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:0 LC:4, [Mode: thrown Dam:sw cut Acc:1 Range:ST*1.5/ST*2.5 RoF:1 Shots:T(1) ST:8 Bulk:-2], [Mode:swing Dam:sw cut Reach:1 Parry:0 ST:8 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Throwing Axe, techlvl(0), break(0), lc(4), basecost(60), baseweight(4), page(B271, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Cutting Class Quality), calcrange(yes),
	newmode(Swing, damage(sw+2), damtype(cut), reach(1), parry(0U), minst(11), notes([1]), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),
	newmode(Thrown, damage(sw+2), damtype(cut), acc(2), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(11), bulk(-3), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:0 LC:4, [Mode: thrown Dam:sw+2 cut Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:11 Bulk:-3], [Mode:swing Dam:sw+2 cut Reach:1 Parry:0U ST:11 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Mace, techlvl(2), break(0), lc(4), basecost(50), baseweight(5), page(B271, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Swing, damage(sw+3), damtype(cr), reach(1), parry(0U), minst(12), notes([1]), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),
	newmode(Thrown, damage(sw+3), damtype(cr), acc(1), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(12), bulk(-4), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:2 LC:4, [Mode: thrown Dam:sw+3 cr Acc:1 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:12 Bulk:-4], [Mode:swing Dam:sw+3 cr Reach:1 Parry:0U ST:12 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Small Mace, techlvl(2), break(0), lc(4), basecost(35), baseweight(3), page(B271, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0U), minst(10), notes([1]), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),
	newmode(Thrown, damage(sw+2), damtype(cr), acc(1), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(10), bulk(-3), skillused(SK:Thrown Weapon (Axe/Mace), ST:DX-4)),
	description(TL:2 LC:4, [Mode: thrown Dam:sw+2 cr Acc:1 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:10 Bulk:-3], [Mode:swing Dam:sw+2 cr Reach:1 Parry:0U ST:10 Skill:Axe/Mace Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Spear, techlvl(0), break(0), lc(4), basecost(40), baseweight(4), page(B273, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(1H Thrust, damage(thr+2), damtype(imp), reach(1*), parry(0), minst(9), notes([1]), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),
	newmode(2H Thrust, damage(thr+3), damtype(imp), reach(1,2*), parry(0), minst(9†), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),
	newmode(Thrown, damage(thr+3), damtype(imp), acc(2), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), minst(9), bulk(-3), shots(T(1)), skillused(SK:Thrown Weapon (Spear), ST:DX-4, SK:Spear Thrower-4, SK:Thrown Weapon (Harpoon)-2)),
	description(TL:0 LC:4, [Mode: thrown Dam:thr+3 imp Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:9 Bulk:-3], [Mode:one-handed thrust Dam:thr+2 imp Reach:1* Parry:0 ST:9 Skill:Spear Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)], [Mode:two-handed thrust Dam:thr+3 imp Reach:1,2* Parry:0 ST:9† Skill:Spear Notes: Requires two hands.])
Javelin, techlvl(1), break(0), lc(4), basecost(30), baseweight(2), page(B273, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Thrust, damage(thr+1), damtype(imp), reach(1), parry(0), minst(6), notes([1]), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),
	newmode(Thrown, damage(thr+1), damtype(imp), acc(3), rangehalfdam(ST*1.5), rangemax(ST*2.5), rof(1), shots(T(1)), minst(6), bulk(-4), skillused(SK:Thrown Weapon (Spear), ST:DX-4, SK:Spear Thrower-4, SK:Thrown Weapon (Harpoon)-2)),
	newmode(Atlatl, damage(sw+1), damtype(imp), acc(3), rangehalfdam(ST*2), rangemax(ST*3), rof(1), shots(T(1)), minst(6), bulk(-4), skillused(SK:Spear Thrower, ST:DX-5, SK:Thrown Weapon (Spear)-4)),
	description(TL:1 LC:4, [Mode: atlatl Dam:sw+1 imp Acc:3 Range:ST*2/ST*3 RoF:1 Shots:T(1) ST:6 Bulk:-4], [Mode: thrown Dam:thr+1 imp Acc:3 Range:ST*1.5/ST*2.5 RoF:1 Shots:T(1) ST:6 Bulk:-4], [Mode:thrust Dam:thr+1 imp Reach:1 Parry:0 ST:6 Skill:Spear Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Large Knife, techlvl(0), break(0), lc(4), basecost(40), baseweight(1), page(B272, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Sword Class Quality), calcrange(yes),
	newmode(Swing, damage(sw-2), damtype(cut), reach(C,1), parry(-1), minst(6), skillused(SK:Sword!, SK:Knife, ST:DX-4, SK:Force Sword-3, SK:Main-Gauche-3, SK:Shortsword-3)),
	newmode(Thrust, damage(thr), damtype(imp), reach(C), parry(-1), minst(6), notes([1]), skillused(SK:Sword!, SK:Knife, ST:DX-4, SK:Force Sword-3, SK:Main-Gauche-3, SK:Shortsword-3)),
	newmode(Thrown, damage(thr), damtype(imp), acc(0), rangehalfdam(ST*0.8), rangemax(ST*1.5), rof(1), shots(T(1)), minst(6), bulk(-2), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:0 LC:4, [Mode: thrown Dam:thr imp Acc:0 Range:ST*0.8/ST*1.5 RoF:1 Shots:T(1) ST:6 Bulk:-2], [Mode:swing Dam:sw-2 cut Reach:C,1 Parry:-1 ST:6 Skill:Knife], [Mode:thrust Dam:thr imp Reach:C Parry:-1 ST:6 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Small Knife, techlvl(0), break(0), lc(4), basecost(30), baseweight(0.5), page(B272, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Sword Class Quality), calcrange(yes),
	newmode(Swing, damage(sw-3), damtype(cut), reach(C,1), parry(-1), minst(5), skillused(SK:Sword!, SK:Knife, ST:DX-4, SK:Force Sword-3, SK:Main-Gauche-3, SK:Shortsword-3)),
	newmode(Thrust, damage(thr-1), damtype(imp), reach(C), parry(-1), minst(5), notes([1]), skillused(SK:Sword!, SK:Knife, ST:DX-4, SK:Force Sword-3, SK:Main-Gauche-3, SK:Shortsword-3)),
	newmode(Thrown, damage(thr-1), damtype(imp), acc(0), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(-1), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:0 LC:4, [Mode: thrown Dam:thr-1 imp Acc:0 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:-1], [Mode:swing Dam:sw-3 cut Reach:C,1 Parry:-1 ST:5 Skill:Knife], [Mode:thrust Dam:thr-1 imp Reach:C Parry:-1 ST:5 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Wooden Stake, techlvl(0), break(0), lc(4), basecost(4), baseweight(0.5), page(B272, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),
	newmode(Thrust, damage(thr), armordivisor(0.5), damtype(imp), reach(C), parry(-1), minst(5), notes([1]), skillused(SK:Sword!, SK:Knife, ST:DX-4, SK:Force Sword-3, SK:Main-Gauche-3, SK:Shortsword-3)),
	newmode(Thrown, damage(thr), armordivisor(0.5), damtype(imp), acc(0), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(-2), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:0 LC:4, [Mode: thrown Dam:thr(0.5) imp Acc:0 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:-2], [Mode:thrust Dam:thr(0.5) imp Reach:C Parry:-1 ST:5 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])
Dagger, techlvl(1), break(0), lc(4), basecost(20), baseweight(0.25), page(B272, B276), cat(Basic Set, Basic Set - Melee Weapons, _Melee Weapons, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set), mods(Equipment, Melee Quality, Sword Class Quality), calcrange(yes),
	newmode(Thrust, damage(thr-1), damtype(imp), reach(C), parry(-1), minst(5), notes([1]), skillused(SK:Sword!, SK:Knife, ST:DX-4, SK:Force Sword-3, SK:Main-Gauche-3, SK:Shortsword-3)),
	newmode(Thrown, damage(thr-1), damtype(imp), acc(0), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(-1), skillused(SK:Thrown Weapon (Knife), ST:DX-4)),
	description(TL:1 LC:4, [Mode: thrown Dam:thr-1 imp Acc:0 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:-1], [Mode:thrust Dam:thr-1 imp Reach:C Parry:-1 ST:5 Skill:Knife Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)])

<Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set>
Blowpipe, basecost(30), baseweight(1), damage(1d-3), damtype(pi-), lc(4), techlvl(0), acc(1), calcrange(yes), rangehalfdam(), rangemax(ST*4), rof(1), shots(1(2)), minst(2), bulk(-6), skillused(SK:Blowpipe, ST:DX-6), page(B275), notes([1,2,3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({Follow-up drug or poison attack if damage penetrates DR. Effects depend on the poison used; see Poison (p. B437).},{Requires two hands to ready, but only one hand to attack.},{An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:0 LC:4, Dam:1d-3 pi- Acc:1 Range:ST*4 RoF:1 Shots:1(2) ST:2 Bulk:-6 Skill:Blowpipe Notes: [1,2,3] Follow-up drug or poison attack if damage penetrates DR. Effects depend on the poison used; see Poison (p. B437). Requires two hands to ready, but only one hand to attack.), mods(Equipment, Bow Quality)
Bolas, basecost(20), baseweight(2), mode(thrown), damage(thr-1), damtype(cr), lc(4), techlvl(0), acc(0), calcrange(yes), rangehalfdam(), rangemax(ST*3), rof(1), shots(T(1)), minst(7), bulk(-2), skillused(SK:Bolas), page(B275), notes([4]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({May entangle or ensnare the target; see Special Ranged Weapons (p. B411).}),
	description(TL:0 LC:4, Dam:thr-1 cr Acc:0 Range:ST*3 RoF:1 Shots:T(1) ST:7 Bulk:-2 Skill:Bolas Notes: [4] May entangle or ensnare the target; see Special Ranged Weapons (p. B411).), mods(Equipment)
Longbow (ST%choiceList%), weaponst(%choice%), basecost(200), baseweight(3), mode(Barbed-head), damage(@thr(me::weaponst)+2), damtype(imp), lc(4), techlvl(0), acc(3), calcrange(yes), rangehalfdam(me::weaponst*15), rangemax(me::weaponst*20), rof(1), shots(1(2)), minst(11†), bulk(-8), skillused(SK:Bow, ST:DX-5), page(B275), notes([3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:0 LC:4, Dam:thr+2 imp Acc:3 Range:ST*15/ST*20 RoF:1 Shots:1(2) ST:11† Bulk:-8 Skill:Bow Notes: [3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))
Regular Bow (ST%choiceList%), weaponst(%choice%), basecost(100), baseweight(2), mode(Barbed-head), damage(@thr(me::weaponst)+1), damtype(imp), lc(4), techlvl(0), acc(2), calcrange(yes), rangehalfdam(me::weaponst*15), rangemax(me::weaponst*20), rof(1), shots(1(2)), minst(10†), bulk(-7), skillused(SK:Bow, ST:DX-5), page(B275), notes([3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:0 LC:4, Dam:thr+1 imp Acc:2 Range:ST*15/ST*20 RoF:1 Shots:1(2) ST:10† Bulk:-7 Skill:Bow Notes: [3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))
Short Bow (ST%choiceList%), weaponst(%choice%), basecost(50), baseweight(2), mode(Barbed-head), damage(@thr(me::weaponst)), damtype(imp), lc(4), techlvl(0), acc(1), calcrange(yes), rangehalfdam(me::weaponst*10), rangemax(me::weaponst*15), rof(1), shots(1(2)), minst(7†), bulk(-6), skillused(SK:Bow, ST:DX-5), page(B275), notes([3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:0 LC:4, Dam:thr imp Acc:1 Range:ST*10/ST*15 RoF:1 Shots:1(2) ST:7† Bulk:-6 Skill:Bow Notes: [3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))
Composite Bow (ST%choiceList%), weaponst(%choice%), basecost(900), baseweight(4), mode(Barbed-head), damage(@thr(me::weaponst)+3), damtype(imp), lc(4), techlvl(1), acc(3), calcrange(yes), rangehalfdam(me::weaponst*20), rangemax(me::weaponst*25), rof(1), shots(1(2)), minst(10†), bulk(-7), skillused(SK:Bow, ST:DX-5), page(B275), notes([3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:1 LC:4, Dam:thr+ imp Acc:3 Range:ST*20/ST*25 RoF:1 Shots:1(2) ST:10† Bulk:-7 Skill:Bow Notes: [3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))

	
	
Crossbow (ST%choiceList%), weaponst(%choice%), basecost(150), baseweight(6), mode(Barbed-head), damage(@thr(me::weaponst)+4), damtype(imp), lc(4), techlvl(2), acc(4), calcrange(yes), rangehalfdam(me::weaponst*20), rangemax(me::weaponst*25), rof(1), shots(1(4)), minst(7†), bulk(-6), skillused(SK:Crossbow, ST:DX-4), page(B276), notes([3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:2 LC:4, Dam:thr+4 imp Acc:4 Range:ST*20/ST*25 RoF:1 Shots:1(4) ST:7† Bulk:-6 Skill:Crossbow Notes: [3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))

Pistol Crossbow (ST%choiceList%), weaponst(%choice%), basecost(150), baseweight(4), mode(Barbed-head), damage(@thr(me::weaponst)+2), damtype(imp), lc(4), techlvl(3), acc(1), calcrange(yes), rangehalfdam(me::weaponst*15), rangemax(me::weaponst*20), rof(1), shots(1(4)), minst(7), bulk(-4), skillused(SK:Crossbow, ST:DX-4), page(B276), notes([2,3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({Requires two hands to ready, but only one hand to attack.},{An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:3 LC:4, Dam:thr+2 imp Acc:1 Range:ST*15/ST*20 RoF:1 Shots:1(4) ST:7 Bulk:-4 Skill:Crossbow Notes: [2,3] Requires two hands to ready, but only one hand to attack.), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))

Prodd (ST%choiceList%), weaponst(%choice%), basecost(150), baseweight(6), mode(Barbed-head), damage(@thr(me::weaponst)+4), damtype(pi), lc(4), techlvl(3), acc(2), calcrange(yes), rangehalfdam(me::weaponst*20), rangemax(me::weaponst*25), rof(1), shots(1(4)), minst(7†), bulk(-6), skillused(SK:Crossbow, ST:DX-4), page(B276), notes([3]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.}),
	description(TL:3 LC:4, Dam:thr+4 pi Acc:2 Range:ST*20/ST*25 RoF:1 Shots:1(4) ST:7† Bulk:-6 Skill:Crossbow Notes: [3]), mods(Equipment, Bow Quality),
	x(#ChoiceList(name(choice), title(Bow ST), text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), picksallowed(1), method(bynumber), list("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")))

Goat's Foot, basecost(50), baseweight(2), damage(), damtype(), lc(4), techlvl(3), acc(), rangehalfdam(), rangemax(), rof(), shots((20)), minst(7†), bulk(), skillused(SK:Crossbow, ST:DX-4), page(B276), notes([5]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({Cocking lever to reload a high-ST crossbow or prodd. You can reload a weapon up to 4 ST over your own with 20 one-second Ready maneuvers.}),
	description(TL:3 LC:4, Dam: Acc: Range: RoF: Shots:(20) ST:7† Bulk: Skill:Crossbow Notes: [5] Cocking lever to reload a high-ST crossbow or prodd. You can reload a weapon up to 4 ST over your own with 20 one-second Ready maneuvers.), mods(Equipment)
Lariat, basecost(40), baseweight(3), damage(), damtype(spec.), lc(4), techlvl(1), acc(0), rangehalfdam(), rangemax(spec.), rof(1), shots(T(spec.)), minst(7†), bulk(-2), skillused(SK:Lasso), page(B276), notes([4]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({May entangle or ensnare the target; see Special Ranged Weapons (p. B411).}),
	description(TL:1 LC:4, Dam: spec. Acc:0 Range:spec. RoF:1 Shots:T(spec.) ST:7† Bulk:-2 Skill:Lasso Notes: [4] May entangle or ensnare the target; see Special Ranged Weapons (p. B411).), mods(Equipment)
Large Net, basecost(40), baseweight(20), damage(), damtype(spec.), lc(4), techlvl(0), acc(1), rangehalfdam(), rangemax(@int((ST:ST/2) + (me::charskillscore/5))), rof(1), shots(T(1)), minst(11), bulk(-6), skillused(SK:Net, SK:Cloak-5), page(B276), notes([4,6]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({May entangle or ensnare the target; see Special Ranged Weapons (p. B411).},{A net has no 1/2D range. Ma range is (ST/2 + Skill/5) for a large net and (ST + Skill/5) for a melee net.}),
	description(TL:0 LC:4, Dam: spec. Acc:1 Range:spec. RoF:1 Shots:T(1) ST:11 Bulk:-6 Skill:Net Notes: [4,6] May entangle or ensnare the target; see Special Ranged Weapons (p. B411). A net has no 1/2D range. Max range is (ST/2 + Skill/5).), mods(Equipment)
Melee Net, basecost(20), baseweight(5), damage(), damtype(spec.), lc(4), techlvl(2), acc(1), rangehalfdam(), rangemax(ST:ST + @int(me::charskillscore/5)), rof(1), shots(T(1)), minst(8), bulk(-4), skillused(SK:Net, SK:Cloak-5), page(B276), notes([4,6]), db(0), dr(0), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({May entangle or ensnare the target; see Special Ranged Weapons (p. B411).},{A net has no 1/2D range. Ma range is (ST/2 + Skill/5) for a large net and (ST + Skill/5) for a melee net.}),
	description(TL:2 LC:4, Dam: spec. Acc:1 Range:spec. RoF:1 Shots:T(1) ST:8 Bulk:-4 Skill:Net Notes: [4,6] May entangle or ensnare the target; see Special Ranged Weapons (p. B411). A net has no 1/2D range. Max range is (ST + Skill/5).), mods(Equipment)
Sling, basecost(20), baseweight(0.5), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	newmode(Stone, damage(sw), damtype(pi), lc(4), techlvl(0), acc(0), calcrange(yes), rangehalfdam(ST*6), rangemax(ST*10), rof(1), shots(1(2)), minst(6), bulk(-4), skillused(SK:Sling, ST:DX-6), notes([2,3,7])),
	newmode(Lead bullet, damage(sw+1), damtype(pi), lc(4), techlvl(0), acc(0), calcrange(yes), rangehalfdam(ST*12), rangemax(ST*20), rof(1), shots(1(2)), minst(6), bulk(-4), skillused(SK:Sling, ST:DX-6), notes([2,3,7])),
	itemnotes({Requires two hands to ready, but only one hand to attack.},{An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.},{Can fire stones (TL0) or lead bullets (TL2). Lead bullets give +1 damage and double range.}),
	page(B276), description(TL:0 LC:4, Dam:sw pi Acc:0 Range:ST*6/ST*10 RoF:1 Shots:1(2) ST:6 Bulk:-4 Skill:Sling Notes: [2,3,7] Requires two hands to ready, but only one hand to attack. Can fire stones (TL0) or lead pellets (TL2). Lead bullets give +1 damage and double range.), mods(Equipment)
Staff Sling, basecost(20), baseweight(2), page(B276), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	newmode(Stone, damage(sw+1), damtype(pi), lc(4), techlvl(1), acc(1), calcrange(yes), rangehalfdam(ST*10), rangemax(ST*15), rof(1), shots(1(2)), minst(7†), bulk(-6), skillused(SK:Sling, ST:DX-6), notes([3,7])),
	newmode(Lead bullet, damage(sw+2), damtype(pi), lc(4), techlvl(1), acc(1), calcrange(yes), rangehalfdam(ST*20), rangemax(ST*30), rof(1), shots(1(2)), minst(7†), bulk(-6), skillused(SK:Sling, ST:DX-6), notes([3,7])),
	itemnotes({An arrow or bolt for a bow or crossbow is $2. A dart for a blowpipe, or a lead pellet for a prodd or sling, is $0.1. Sling stones are free.},{Can fire stones (TL0) or lead bullets (TL2). Lead bullets give +1 damage and double range.}),
	description(TL:1 LC:4, Dam:sw+1 pi Acc:1 Range:ST*10/ST*15 RoF:1 Shots:1(2) ST:7† Bulk:-6 Skill:Sling Notes: [3,7] Can fire stones (TL0) or lead bullets (TL2). Lead pellets give +1 damage and double range.), mods(Equipment)
Atlatl, basecost(20), baseweight(1), damage(), damtype(), lc(4), techlvl(0), acc(), rangehalfdam(), rangemax(), rof(1), shots(T(1)), minst(), bulk(), skillused(SK:Spear Thrower, ST:DX-5, SK:Thrown Weapon (Spear)-4), page(B276), notes([2]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({Requires two hands to ready, but only one hand to attack.}),
	description(TL:0 LC:4, Dam: Acc: Range: RoF:1 Shots:T(1) ST:-- Bulk:-- Skill:Spear Thrower Notes: [2] Requires two hands to ready, but only one hand to attack. Can fire a Javelin or Dart.), mods(Equipment)
Atlatl Dart, basecost(20), baseweight(1), mode(atlatl), damage(sw-1), damtype(imp), lc(4), techlvl(0), acc(1), calcrange(yes), rangehalfdam(ST*3), rangemax(ST*4), rof(1), shots(T(1)), minst(5), bulk(-3), skillused(SK:Spear Thrower, ST:DX-5, SK:Thrown Weapon (Spear)-4), page(B276), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({Requires two hands to ready, but only one hand to attack.}),
	description(TL:0 LC:4, Dam:sw-1 imp Acc:1 Range:ST*3/ST*4 RoF:1 Shots:T(1) ST:5 Bulk:-3 Skill:Spear Thrower), mods(Equipment, Crushing/Imp Class Quality)
Harpoon, basecost(60), baseweight(6), mode(thrown), damage(thr+5), damtype(imp), lc(4), techlvl(2), acc(2), calcrange(yes), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(11), bulk(-6), skillused(SK:Thrown Weapon (Harpoon), ST:DX-4, SK:Thrown Weapon (Spear)-2), page(B276), notes([8]), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	itemnotes({Tethered. Requires a Ready maneuver and a successful ST roll to pull out (if you fail, you may try again net turn). Does half the damage coming out that it did going in.}),
	description(TL:2 LC:4, Dam:thr+5 imp Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:11 Bulk:-6 Skill:Thrown Weapon (Harpoon) Notes: [8] Tethered. Requires a Ready maneuver and a successful ST roll to pull out (if you fail, you may try again next turn). Does half the damage coming out that it did going in.), mods(Equipment, Crushing/Imp Class Quality)
Shuriken, basecost(3), baseweight(0.1), mode(thrown), damage(thr-1), damtype(cut), lc(4), techlvl(3), acc(1), calcrange(yes), rangehalfdam(ST*0.5), rangemax(ST*1), rof(1), shots(T(1)), minst(5), bulk(0), skillused(SK:Thrown Weapon (Shuriken), ST:DX-4, SK:Throwing-2), page(B276), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set),
	description(TL:3 LC:4, Dam:thr-1 cut Acc:1 Range:ST*0.5/ST*1 RoF:1 Shots:T(1) ST:5 Bulk:0 Skill:Thrown Weapon (Shuriken)), mods(Equipment, Melee Quality, Cutting Class Quality)

Arrow, lc(4), techlvl(0), baseweight(0.1), basecost(2), page(B275), mods(Equipment, Crushing/Imp Class Quality, Arrow), uses(count*1), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set)
Crossbow Bolt, lc(4), techlvl(2), baseweight(0.06), basecost(2), page(B276), mods(Equipment, Crushing/Imp Class Quality, Arrow), uses(count*1), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set)
Blowpipe Dart, lc(4), techlvl(0), baseweight(0.05), basecost(0.1), page(B275), mods(Equipment, Crushing/Imp Class Quality), uses(count*1), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set)
Prodd Lead Pellet, lc(4), techlvl(2), baseweight(0.06), basecost(0.1), page(B276), mods(Equipment), uses(count*1), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set)
Sling Lead Pellet, lc(4), techlvl(2), baseweight(0.05), basecost(0.1), page(B276), mods(Equipment), uses(count*1), cat(Basic Set, Basic Set - Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Basic Set)
	

<Basic Set, Basic Set - Natural Attacks>
//^^^^ Skillused()

_New Ranged Innate Attack, noresync(yes),
		basecost(0),
		baseweight(0),
		lc(*),
		damage([damage]),
		damtype([damagetype]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst(*),
		bulk(*),
		rcl([recoil]),
		skillused(Innate Attack),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this attack:", name, " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the damage of this attack (e.g. 6dx5). DO NOT include armor divisors in this field (use the damage type field instead):", "[damage]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the damage type of this attack (e.g. pi+ or (10)cut):", "[damagetype]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the accuracy of this attack:", "[accuracy]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the half damage range of this attack:", "[halfdamagerange]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the maximum range of this attack:", "[maxrange]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the rate of fire of this attack:", "[rateoffire]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the shots for this attack:", "[shots]", " ", "New Ranged Innate Attack"),
		#InputReplace("Please enter the recoil of this attack:", "[recoil]", " ", "New Ranged Innate Attack"),
		#edit)

_New Melee Innate Attack, noresync(yes),
		basecost(0),
		baseweight(0),
		lc(*),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		reach([reach]),
		parry([parry]),
		minst(*),
		skillused(Innate Attack),
		mods(Equipment),
	x(_
		#InputToTagReplace("Please enter the name of this hand attack:", name, " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the damage of this hand attack (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors in this field (use the damage type field instead):", "[damage]", " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the damage type of this hand attack (e.g. pi+ or (10)cut):", "[damagetype]", " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the reach for this hand attack:", "[reach]", " ", "New Ranged Melee Attack"),
		#InputReplace("Please enter the parry for this hand attack; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, 0, or -1):", "[parry]", "0", "New Melee Weapon"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#edit)

Punch (Weak Arms), basecost(0), baseweight(0), mode(Punch), damage(_
		@thr(@int(ST:One Arm Striking ST::score * @indexedvalue(1+@itemhasmod(AD:Extra Arms, Weak),1,0.75,0.5))) -1 + _
			@if("AD:Claws (Blunt Claws)::level" = 1 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 then @basethdice(ST:Punch) else 0)) + _
			@max(_
				@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0),
				@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)),
				@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0)) _
			) _
		), damtype($if("AD:Claws (Sharp Claws)::level" = 1 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 THEN "cut/imp" ELSE "cr")))), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate), mods(Punch/Kick)

************************************************************************************************************************
* EQUIPMENT MODIFIERS
[MODIFIERS]
************************************************************************************************************************
<Animal>
Animal: Training, *1/*1, page(B459), group(Animal), displaycost(varies), level(2), levelnames(IQ 2, IQ 3, IQ 4, IQ5), upto(owner::iq - 1), shortname(Training),
	formula(_
			@indexedvalue(me::level,
							@if(owner::iq < 3 THEN 1 ELSE 1/3),
							1, 1.5, 2_
							)_
			), forceformula(yes)
Animal: Increased ST, *1/*1, displaycost(varies), page(B459), group(Animal), shortname(Increased ST),
	formula(_
			@int(100 * (owner::st + me::level) / owner::st)/100 _
			), forceformula(yes)
Animal: Increased Move, *2/*4, displaycost(varies), page(B459), shortname(Increased Move),
	formula(_
			2 ^ me::level _
			), forceformula(yes)
Animal: War-Trained, *2, page(B459), group(Animal), shortname(War-Trained)
			
<Equipment>
_Free, *0
_New Modifier, [cost], gives([weight] to owner::baseweight),
	x(_
		#InputToTagReplace("Please enter the name of this modifier:", name, " ", "New Modifier"),
		#InputReplace("Enter the change in cost of the equipment; this can be numerical (e.g. +3 or -50), a multiplier (*0.5), or a percentage (e.g. +50% or -25%):", "[cost]", +0, "New Modifier"),
		#InputReplace("Enter the change in weight of the equipment; this can be numerical (e.g. +3 or -0.5), or a multiplier (*0.5), but *NOT* a percentage:", "[weight]", +0, "New Modifier") _
	)

Cost: Reduced Cost, *0.99/*0.98, upto(99), tier(1), group(Equipment), shortname(Reduced Cost),
	levelnames([-0%],-1%,-2%,-3%,-4%,-5%,-6%,-7%,-8%,-9%,-10%,-11%,-12%,-13%,-14%,-15%,-16%,-17%,-18%,-19%,-20%,-21%,-22%,-23%,-24%,-25%,-26%,-27%,-28%,-29%,-30%,-31%,-32%,-33%,-34%,-35%,-36%,-37%,-38%,-39%,-40%,-41%,-42%,-43%,-44%,-45%,-46%,-47%,-48%,-49%,-50%,-51%,-52%,-53%,-54%,-55%,-56%,-57%,-58%,-59%,-60%,-61%,-62%,-63%,-64%,-65%,-66%,-67%,-68%,-69%,-70%,-71%,-72%,-73%,-74%,-75%,-76%,-77%,-78%,-79%,-80%,-81%,-82%,-83%,-84%,-85%,-86%,-87%,-88%,-89%,-90%,-91%,-92%,-93%,-94%,-95%,-96%,-97%,-98%,-99%)

Cost: Multiplied Cost, *1.01/*1.02, tier(1), group(Equipment), shortname(Multiplied Cost)

Cost: Increased Cost, +1/+2, tier(1), group(Equipment), level([level]), shortname(Increased Cost),
	x(_
		#InputReplace("Please enter the level (cost) of this modifier:", "[level]", "1", "Increased Cost") _
	)

Cost: Decreased Cost, -1/-2, tier(1), group(Equipment), level([level]), shortname(Decreased Cost),
	x(_
		#InputReplace("Please enter the level (cost) of this modifier:", "[level]", "1", "Decreased Cost") _
	)

_Advantage: Signature Gear, +0, page(B85), group(Equipment), shortname(Signature Gear), gives(+owner::cost to ST:Money, +owner::cost to ST:Remaining Funds, -owner::cost to ST:Signature Gear)
Equipment: Higher TL Equipment, *2/*4/*8, upto(12 - ST:Tech Level::basevalue), page(B27), forceformula(yes), formula(2 ^ me::level), shortname(Higher TL Equipment)

<Star Freighter>
Turret Laser Cannon, +500000/+1000000, upto(2), tier(1), page(B465), group(Star Freighter),
	addmode(Turret Laser Cannon,
			damage(6dx5),
			damtype(burn),
			acc(10),
			rangehalfdam(100000),
			rangemax(300000),
			rof(4),
			skillused(SK:Gunner (Beams)),
			rcl(1)_
			)

<Beams>
"Scope, 4x (TL  6)", 150, gives(+1.5 to owner::baseweight, +2 to owner::acc), group(Beams), tier(1),
	description(TL:6 Notes: +2 to Acc for aimed shots only.), page(B289)
"Scope, 4x, Thermal Imaging (TL  8)", 1000, gives(+4 to owner::baseweight, +2 to owner::acc), group(Beams), tier(1),
	description(TL:8 Notes: +2 to Acc for aimed shots only, plus gives the user Infravision.), page(B289)

_Remove Attack Mode ([Mode]), +0, group(Beams), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

Variant: Increased Damage, +0/+0, tier(1), group(Beams), gives(+1 to owner::damage, +0 to owner::baseweight), shortname(Increased Damage)
Variant: Decreased Damage, -0/-0, tier(1), group(Beams), gives(-1 to owner::damage, +0 to owner::baseweight), shortname(Decreased Damage)
Variant: Increased Damage Dice, +0/+0, tier(1), group(Beams), gives(=+$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Increased Damage Dice)
Variant: Decreased Damage Dice, -0/-0, tier(1), group(Beams), gives(=-$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Decreased Damage Dice)
Variant: Receives Acc Bonus, +0/+0, group(Beams), gives(+1 to owner::acc), shortname(Receives Skill Bonus)
Variant: Receives Acc Penalty, +0/+0, group(Beams), gives(-1 to owner::acc), shortname(Receives Skill Bonus)
Variant: Damage Bonus (per die), +0/+0, group(Beams),
	gives(_
		=+@textindexedvalue( $modetag(dmg), ("thr", $solver(me::level)*owner::basethdice), ("sw", $solver(me::level)*owner::baseswdice), ELSE $solver(me::level*owner::dmg) ) to owner::damage$ listAs "+/die from Damage Bonus" _
		),
	levelnames(+1/die, +2/die, +3/die, +4/die, +5/die, +6/die, +7/die, +8/die, +9/die, +10/die)

Weapon Quality: Good, *1, page(B280), group(Beams), shortname(Good Quality)
Weapon Quality: Fine, *2, gives(+1 to owner::Acc listas "+1 Acc from Fine Quality", +1 to owner::malf), page(B280), group(Beams), shortname(Fine Quality)
Weapon Quality: Very Fine, *5, gives(+2 to owner::Acc listas "+2 Acc from Very Fine Quality", +1 to owner::malf), page(B280), group(Beams), shortname(Very Fine Quality)
_New Ranged Attack Mode, 0, group(Beams), noresync(yes),
	addmode(_New Ranged Attack Mode, 
		lc([legalityclass]),
		damage([damage]),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		rcl([recoil]),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of this firearm:", "_New Ranged Attack Mode", " ", "New Ranged Attack Mode"),
		#InputReplace("Please enter the Legality Class of this firearm:", "[legalityclass]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armor divisors or damage type in this field:", "[damage]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", "%copyfirst", "New Ranged Attack Mode"),
		#ChoiceList(_
				name(Use),
				title(New Ranged Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Attack Mode, 0, group(Beams), noresync(yes),
	addmode(_New Melee Attack Mode, 
		lc([legalityclass]),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, 0, or -1):", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

<Guns>
// ^^^^ ERROR Scopes giving improper bonus to acc
"Scope, 4x (TL  6)", 150, gives(+1.5 to owner::baseweight, +2 to owner::acc), tier(1), group(Guns),
	description(TL:6 Notes: +2 to Acc for aimed shots only.), page(B289)
"Scope, 4x, Thermal Imaging (TL  8)", 1000, gives(+4 to owner::baseweight, +2 to owner::acc), tier(1), group(Guns),
	description(TL:8 Notes: +2 to Acc for aimed shots only, plus gives the user Infravision.), page(B289)

Variant: Increased Damage, +0/+0, tier(1), group(Guns), gives(+1 to owner::damage, +0 to owner::baseweight), shortname(Increased Damage)
Variant: Decreased Damage, -0/-0, tier(1), group(Guns), gives(-1 to owner::damage, +0 to owner::baseweight), shortname(Decreased Damage)
Variant: Increased Damage Dice, +0/+0, tier(1), group(Guns), gives(=+$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Increased Damage Dice)
Variant: Decreased Damage Dice, -0/-0, tier(1), group(Guns), gives(=-$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Decreased Damage Dice)
Variant: Damage Bonus (per die), +0/+0, group(Guns),
	gives(_
		=+@textindexedvalue( $modetag(dmg), ("thr", $solver(me::level)*owner::basethdice), ("sw", $solver(me::level)*owner::baseswdice), ELSE $solver(me::level*owner::dmg) ) to owner::damage$ listAs "+/die from Damage Bonus" _
		),
	levelnames(+1/die, +2/die, +3/die, +4/die, +5/die, +6/die, +7/die, +8/die, +9/die, +10/die)
Variant: Receives Acc Bonus, +0/+0, group(Guns), gives(+1 to owner::acc), shortname(Receives Skill Bonus)
Variant: Receives Acc Penalty, +0/+0, group(Guns), gives(-1 to owner::acc), shortname(Receives Skill Bonus)

Remove w/ Bipod Mode, 0, addmode(w/ Bipod, damage(), damtype(), minst(), rangehalfdam(), rangemax())
Remove w/o Bipod Mode, 0, addmode(w/o Bipod, damage(), damtype(), minst(), rangehalfdam(), rangemax())

Weapon Quality: Good, *1, page(B280), group(Guns), shortname(Good Quality)
Weapon Quality: Fine, *2, gives(+1 to owner::Acc listas "+1 Acc from Fine Quality", +1 to owner::malf), page(B280), group(Guns), shortname(Fine Quality)
Weapon Quality: Very Fine, *5, gives(+2 to owner::Acc listas "+2 Acc from Very Fine Quality", +1 to owner::malf), page(B280), group(Guns), shortname(Very Fine Quality)

Ammo: Hollow-Point (TL6+), +0, page(B279), group(Guns), shortname(Hollow-Point),
	addmode(Hollow-Point,
			damage(%copyfirst),
			damtype($textindexedvalue("%copyfirst", ("pi-", "pi"), ("pi", "pi+"), ("pi+", "pi++"), ("pi++", "pi++") ) ),
			armordivisor(0.5),
			lc(%copyfirst),
			acc(%copyfirst),
			calcrange(%copyfirst),
			rangehalfdam(%copyfirst),
			rangemax(%copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)

"Ammo: Armor-Piercing Hard Core (TL7+, below 20mm)", 0, page(B279), group(Guns), shortname(Armor-Piercing Hard Core),
	addmode(APHC,
			damage(%copyfirst),
			damtype($textindexedvalue("%copyfirst", ("pi-", "pi-"), ("pi", "pi-"), ("pi+", "pi"), ("pi++", "pi+") ) ),
			armordivisor(2),
			lc(2),
			acc(%copyfirst),
			calcrange(%copyfirst),
			rangehalfdam(%copyfirst),
			rangemax(%copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)

"Ammo: Armor-Piercing Hard Core (TL7+, 20mm+)", 0, page(B279), group(Guns), shortname(Armor-Piercing Hard Core),
	addmode(APHC,
			damage(%copyfirst),
			damtype(%copyfirst),
			armordivisor(2),
			lc(2),
			acc(%copyfirst),
			calcrange(%copyfirst),
			rangehalfdam(%copyfirst),
			rangemax(%copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)

"Ammo: Armor-Piercing Discarding-Sabot (TL8+, below 20mm)", 0, page(B280), group(Guns), shortname(Armor-Piercing Discarding-Sabot),
	addmode(APDS,
			damage(%copyfirst + $modetag(dmg)),
			damtype($textindexedvalue("%copyfirst", ("pi-", "pi-"), ("pi", "pi-"), ("pi+", "pi"), ("pi++", "pi+") ) ),
			armordivisor(2),
			lc(1),
			acc(%copyfirst),
			calcrange(yes),
			rangehalfdam(1.5 * %copyfirst),
			rangemax(1.5 * %copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)

"Ammo: Armor-Piercing Discarding-Sabot (TL8+, 20mm+)", 0, page(B280), group(Guns), shortname(Armor-Piercing Discarding-Sabot),
	addmode(APDS,
			damage(%copyfirst + $modetag(dmg)),
			damtype(%copyfirst),
			armordivisor(2),
			lc(1),
			acc(%copyfirst),
			calcrange(yes),
			rangehalfdam(1.5 * %copyfirst),
			rangemax(1.5 * %copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)
_New Ranged Attack Mode, 0, group(Guns), noresync(yes),
	addmode(_New Ranged Attack Mode, 
		lc([legalityclass]),
		damage([damage]),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		rcl([recoil]),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of this firearm:", "_New Ranged Attack Mode", " ", "New Ranged Attack Mode"),
		#InputReplace("Please enter the Legality Class of this firearm:", "[legalityclass]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armor divisors or damage type in this field:", "[damage]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", "%copyfirst", "New Ranged Attack Mode"),
		#ChoiceList(_
				name(Use),
				title(New Ranged Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Attack Mode, 0, group(Guns), noresync(yes),
	addmode(_New Melee Attack Mode, 
		lc([legalityclass]),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon:", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)
_Remove Attack Mode ([Mode]), +0, group(Guns), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

<Ammunition>
Ammunition: Hollow-Point, *1, page(B279), group(Ammunition), shortname(HP)
Ammunition: Armor-Piercing Hard Core (LC2), *2, page(B279), group(Ammunition), shortname(APHC)
Ammunition: Armor-Piercing Discarding-Sabot (LC1), *5, page(B280), group(Ammunition), shortname(APDS)
Composition: Silver (TL4+), *50, page(B275), group(Ammunition), shortname(Silver)

<Shield>
_Remove Attack Mode ([Mode]), +0, group(Shield), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Shield),
	gives(_
		=+@if(_
			$modetag(charskillscore) = ST:DX+1 _
			THEN @textindexedvalue($modetag(dmg), ("thr", owner::basethdice), ("sw", owner::baseswdice), ELSE $solver(owner::dmg)) _
			ELSE @if(_
				$modetag(charskillscore) > ST:DX+1 _
				THEN @textindexedvalue($modetag(dmg), ("thr", 2 * owner::basethdice), ("sw", 2 * owner::baseswdice), ELSE 2*$solver(owner::dmg)) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
		)

Shield: Gives Defense Bonus to Dodge/Block/Parry, +0, gives(=+owner::chardb to ST:Dodge, =+owner::chardb to ST:Block, =+owner::chardb to ST:Parry), group(Shield), shortname(Gives DB)
Shield: Conditional Defense Bonus to Dodge/Block/Parry, +0, conditional(=+owner::chardb to ST:Dodge, =+owner::chardb to ST:Block, =+owner::chardb to ST:Parry), group(Shield), shortname(Conditional DB)
Shield: Spike, +20, gives(_
						+5 to owner::baseweight,
						+1 to owner::damage,
						=+@textindexedvalue( $modetag(mode), ("Rush", -1), else 0) to owner::damage$_
					), page(B287), group(Shield), shortname(Spike)

<Arrow>
Bodkin Point (TL3+), *1, group(Arrows), page(B277), shortname(Bodkin Point)

<Bow Quality>
Variant: Increased Damage, +0/+0, tier(1), group(Bow Quality), gives(+1 to owner::damage, +0 to owner::baseweight), shortname(Increased Damage)
Variant: Decreased Damage, -0/-0, tier(1), group(Bow Quality), gives(-1 to owner::damage, -0 to owner::baseweight), shortname(Decreased Damage)
Variant: Increased Damage Dice, +0/+0, tier(1), group(Bow Quality), gives(=+$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Increased Damage Dice)
Variant: Decreased Damage Dice, -0/-0, tier(1), group(Bow Quality), gives(=-$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Decreased Damage Dice)
Variant: Damage Bonus (per die), +0/+0, group(Bow Quality),
	gives(_
		=+@textindexedvalue( $modetag(dmg), ("thr", $solver(me::level)*owner::basethdice), ("sw", $solver(me::level)*owner::baseswdice), ELSE $solver(me::level*owner::dmg) ) to owner::damage$ listAs "+/die from Damage Bonus" _
		),
	levelnames(+1/die, +2/die, +3/die, +4/die, +5/die, +6/die, +7/die, +8/die, +9/die, +10/die)
Variant: Receives Acc Bonus, +0/+0, group(Bow Quality), gives(+1 to owner::acc), shortname(Receives Skill Bonus)
Variant: Receives Acc Penalty, +0/+0, group(Bow Quality), gives(-1 to owner::acc), shortname(Receives Skill Bonus)

_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Bow Quality),
	gives(_
		=+@if(_
			$modetag(charskillscore) = ST:DX+1 _
			THEN @textindexedvalue($modetag(dmg), ("thr", owner::basethdice), ("sw", owner::baseswdice), ELSE $solver(owner::dmg)) _
			ELSE @if(_
				$modetag(charskillscore) > ST:DX+1 _
				THEN @textindexedvalue($modetag(dmg), ("thr", 2 * owner::basethdice), ("sw", 2 * owner::baseswdice), ELSE 2*$solver(owner::dmg)) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
		)

//	_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Bow Quality),
//		gives(_
//			=+@if(_
//				$modetag(charskillscore) = ST:DX+1 _
//				THEN @basethdice(owner::effectivest) _
//				ELSE @if(_
//					$modetag(charskillscore) > ST:DX+1 _
//					THEN 2 * @basethdice(owner::effectivest) _
//					ELSE 0 _
//					)_
//				) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
//			)

Weapon Quality: Good, *1, page(B277), group(Bow Quality), shortname(Good Quality)
Weapon Quality: Fine, *4, gives(*1.2 to owner::rangehalfdam listas "Increased Range from Fine Quality", *1.2 to owner::rangemax listas ""), page(B277), group(Bow Quality), shortname(Fine Quality)

Arrowhead: Bodkin Point (TL3), +0, page(B277), group(Bow Quality), shortname(Bodkin Point),
	addmode(Bodkin Point,
			damage(%copyfirst),
			damtype(pi),
			armordivisor(2),
			lc(%copyfirst),
			acc(%copyfirst),
			calcrange(%copyfirst),
			rangehalfdam(%copyfirst),
			rangemax(%copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)

_New Ranged Attack Mode, 0, group(Bow Quality), noresync(yes),
	addmode(_New Ranged Attack Mode, 
		lc([legalityclass]),
		damage([damage]),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		rcl([recoil]),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of this firearm:", "_New Ranged Attack Mode", " ", "New Ranged Attack Mode"),
		#InputReplace("Please enter the Legality Class of this firearm:", "[legalityclass]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armor divisors or damage type in this field:", "[damage]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", "%copyfirst", "New Ranged Attack Mode"),
		#ChoiceList(_
				name(Use),
				title(New Ranged Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Attack Mode, 0, group(Bow Quality), noresync(yes),
	addmode(_New Melee Attack Mode, 
		lc([legalityclass]),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon:", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_Remove Attack Mode ([Mode]), +0, group(Bow Quality), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)
	
<Lance>
"_Lance: New ST/ Move Combination (%MountSTList%/%MountMoveList%)", +0, shortname(ST/Move),
	addmode(ST%MountSTList%/ Move%MountMoveList% ,damage(@int((%MountSTList% * %MountMoveList%)/100)d+3), damtype(imp), reach(4), parry(No), minst(12), notes([9]), skillused(SK:Lance, ST:DX-5, SK:Spear-3)),
	x(_
		#ChoiceList(_
					name(MountST),
					title(Mount ST),
					text(Lance damage is based on Slam Damage, which in turn depends on Mount ST and Move; please select Mount ST (or HP):),
					picksallowed(1),
					method(bynumber),
					list(_
							"  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100"_
						)_
				),
		#ChoiceList(_
					name(MountMove),
					title(Mount Move),
					text(Lance damage is based on Slam Damage, which in turn depends on Mount ST and Move. Please select a Mount Move value below. You may add a modifier to the Lance to add new ST/Move combinations to the Lance:),
					picksallowed(1),
					method(bynumber),
					list(_
							"  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100"_
						)_
				)_
		)

<Melee Quality>
	

//^^^^ Need minst() to be more functional
//_Used One-Handed, 0, shortname(One-Handed),
//	addmode(One-Handed, damage(%copyfirst), damtype(%copyfirst), reach(%copyfirst), parry(0U), minst(1.5 * %copyfirst), notes(%copyfirst), skillused(%copyfirst))
//	gives(=*@textindexedvalue( $modetag(mode), ("One-Handed", 1.5), ELSE 1) to owner::minst$) 
		
		

Variant: Increased Damage, +0/+0, tier(1), group(Melee Quality), gives(+1 to owner::damage, +0 to owner::baseweight), shortname(Increased Damage)
Variant: Decreased Damage, -0/-0, tier(1), group(Melee Quality), gives(-1 to owner::damage, -0 to owner::baseweight), shortname(Decreased Damage)
Variant: Increased Damage Dice, +0/+0, tier(1), group(Melee Quality), gives(=+$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Increased Damage Dice)
Variant: Decreased Damage Dice, -0/-0, tier(1), group(Melee Quality), gives(=-$solver(me::level)d to owner::damage$, +0 to owner::baseweight), shortname(Decreased Damage Dice)
Variant: Damage Bonus (per die), +0/+0, group(Melee Quality),
	gives(_
		=+@textindexedvalue( $modetag(dmg), ("thr", $solver(me::level)*owner::basethdice), ("sw", $solver(me::level)*owner::baseswdice), ELSE $solver(me::level*owner::dmg) ) to owner::damage$ listAs "+/die from Damage Bonus" _
		),
	levelnames(+1/die, +2/die, +3/die, +4/die, +5/die, +6/die, +7/die, +8/die, +9/die, +10/die)

_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus), group(Melee Quality),
	gives(_
		=+@if(_
			$modetag(charskillscore) = ST:DX+1 _
			THEN @textindexedvalue($modetag(dmg), ("thr", owner::basethdice), ("sw", owner::baseswdice), ELSE $solver(owner::dmg)) _
			ELSE @if(_
				$modetag(charskillscore) > ST:DX+1 _
				THEN @textindexedvalue($modetag(dmg), ("thr", 2 * owner::basethdice), ("sw", 2 * owner::baseswdice), ELSE 2*$solver(owner::dmg)) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
		)

Composition: Stone (TL0+), *1, gives(+0.5 to owner::armor divisor), page(B275), group(Melee Quality), shortname(Stone)
Composition: Obsidian (TL1+), *1, page(B275), group(Melee Quality), shortname(Obsidian), gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Composition: Obsidian", +2 to owner::break)
Composition: Bronze (TL1+), *1, page(B275), group(Melee Quality), shortname(Bronze)
Composition: Iron (TL2+), *1, page(B275), group(Melee Quality), shortname(Iron)
Composition: Steel (TL3+), *1, page(B275), group(Melee Quality), shortname(Steel)
Composition: Silver-coated (TL1+), *3, page(B275), group(Melee Quality), shortname(Silver-coated)
Composition: Silver-edged (TL1+), *3, page(B275), group(Melee Quality), shortname(Silver-edged)
Composition: Plastic (TL7+), *2, page(B275), gives(*0.5 to owner::baseweight), shortname(Plastic)

*Weapon Quality: Cheap (TL6-), *0.4, gives(-1 to owner::Acc, +2 to owner::break), page(B274), group(Melee Quality), shortname(Cheap Quality)
*Weapon Quality: Cheap (TL7), *0.2, gives(-1 to owner::Acc, +2 to owner::break), page(B274), group(Melee Quality), shortname(Cheap Quality)
Weapon Quality: Cheap, *0.2/*0.4, upto(1), levelnames(,), gives(-1 to owner::Acc listas "-1 Acc from Cheap Quality", +2 to owner::break), page(B274), group(Melee Quality), shortname(Cheap Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 0.4 ELSE 0.2 _
				)_
			), forceformula(yes)

*Weapon Quality: Good (TL6-), *1, page(B274), group(Melee Quality), shortname(Good Quality)
*Weapon Quality: Good (TL7+), *0.4, page(B274), group(Melee Quality), shortname(Good Quality)
Weapon Quality: Good, *0.4/*1, upto(1), levelnames(,), page(B274), group(Melee Quality), shortname(Good Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 1 ELSE 0.4 _
				)_
			), forceformula(yes)

* Removed because they must be duplicated in later weapon entries
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)

_New Ranged Attack Mode, 0, group(Melee Quality), noresync(yes),
	addmode(_New Ranged Attack Mode, 
		lc([legalityclass]),
		damage([damage]),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		acc([accuracy]),
		rangehalfdam([halfdamagerange]),
		rangemax([maxrange]),
		rof([rateoffire]),
		shots([shots]),
		minst([minimumst]%usealiaslist%),
		rcl([recoil]),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of this firearm:", "_New Ranged Attack Mode", " ", "New Ranged Attack Mode"),
		#InputReplace("Please enter the Legality Class of this firearm:", "[legalityclass]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage of this firearm (e.g. 6dx5). DO NOT include armor divisors or damage type in this field:", "[damage]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the damage type of this firearm (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the accuracy of this firearm:", "[accuracy]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the half damage range of this firearm:", "[halfdamagerange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the maximum range of this firearm:", "[maxrange]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the rate of fire of this firearm:", "[rateoffire]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the shots for this firearm:", "[shots]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the minimum strength of this firearm:", "[minimumst]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the recoil of this firearm:", "[recoil]", "%copyfirst", "New Ranged Attack Mode"),
		#InputReplace("Please enter the skill used for this firearm:", "[skillused]", "%copyfirst", "New Ranged Attack Mode"),
		#ChoiceList(_
				name(Use),
				title(New Ranged Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_New Melee Attack Mode, 0, group(Melee Quality), noresync(yes),
	addmode(_New Melee Attack Mode, 
		lc([legalityclass]),
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),
		damtype([damagetype]),
		armordivisor([armordivisor]),
		reach([reach]),
		parry([parry]),
		minst([minimumst]%usealiaslist%),
		skillused([skillused])),
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the parry for this hand weapon:", "[parry]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),
		#ChoiceList(_
					name(UnarmedDamageBonus),
					title(New Melee Weapon: Unarmed Damage Bonus),
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),
					picksallowed(atleast 1, upto 3),
					method(bynumber),
					default(1),
					list(_
						"_N/A",
						"Brawling",
						"Boxing",
						"Karate" _
						),
					aliaslist(_
							"0",
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),
		#ChoiceList(_
				name(Use),
				title(New Melee Attack Mode: Weapon Use),
				text(How is this weapon used?),
				picksallowed(1),
				method(bynumber),
				list(_
					"%copyfirst",
					"One-Handed",
					"Two-Handed",
					"Two-Handed, becomes unready after attack" _
					),
				aliaslist(_
						"",
						"",
						"†",
						"‡"_
					)_
				),
		#edit)

_Remove Attack Mode ([Mode]), +0, group(Melee Quality), 
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

_Skill: Throwing Art Damage Bonus, +0, shortname(Throwing Art Damage Bonus), group(Melee Quality),
	gives(_
		=+@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN @textindexedvalue($modetag(mode)$modetag(dmg),
						("thrownsw", owner::baseswdice), ("thrownthr", owner::basethdice),
						("woomerasw", owner::baseswdice), ("woomerathr", owner::basethdice),
						("atlatlsw", owner::baseswdice), ("atlatlthr", owner::basethdice), ELSE 0) _
			ELSE @if(_
				"SK:Throwing Art::level" > ST:DX _
				THEN @textindexedvalue($modetag(mode)$modetag(dmg),
						("thrownsw", 2 * owner::baseswdice), ("thrownthr", 2 * owner::basethdice),
						("woomerasw", 2 * owner::baseswdice), ("woomerathr", 2 * owner::basethdice),
						("atlatlsw", 2 * owner::baseswdice), ("atlatlthr", 2 * owner::basethdice), ELSE 0) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "+1/die or +2/die from Throwing Art Damage Bonus",
		=*@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN 1 + (1/ST:ST::Score) _
			ELSE @IF(_
					"SK:Throwing Art::level" > ST:DX _
					THEN 1 + (2/ST:ST::Score) _
					ELSE 1 _
					)_
				) to owner::rangehalfdam,
		=*@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN 1 + (1/ST:ST::Score) _
			ELSE @IF(_
					"SK:Throwing Art::level" > ST:DX _
					THEN 1 + (2/ST:ST::Score) _
					ELSE 1 _
					)_
				) to owner::rangemax_
		)

<Sword Class Quality>
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine (TL6-), *4, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Sword Class Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL6-), *4, gives(-1 to owner::break), page(B274), group(Sword Class Quality), shortname(Fine Quality)

Weapon Quality: Fine, *1/*4, upto(1), levelnames(,), page(B274), group(Sword Class Quality), shortname(Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine Quality",
			-1 to owner::break_
		),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 4 ELSE 1 _
				)_
			), forceformula(yes)

Weapon Quality: Fine Stone/Bronze/Iron, *1/*4, upto(1), levelnames(,), gives(-1 to owner::break), page(B274), group(Sword Class Quality), shortname(Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 4 ELSE 1 _
				)_
			), forceformula(yes)

	

*Weapon Quality: Very Fine (TL6-), *20, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Quality: Very Fine", -2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
*Weapon Quality: Very Fine (TL7+), *4, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Quality: Very Fine", -2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
Weapon Quality: Very Fine, *4/*20, upto(1), levelnames(,), page(B274), group(Sword Class Quality), shortname(Very Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Very Fine Quality",
			-2 to owner::break_
			),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 20 ELSE 4 _
				)_
			), forceformula(yes)

*Weapon Quality: Very Fine Stone/Bronze/Iron (TL6-), *20, gives(-2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
*Weapon Quality: Very Fine Stone/Bronze/Iron (TL7+), *4, gives(-2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality)
Weapon Quality: Very Fine Stone/Bronze/Iron, *4/*20, upto(1), levelnames(,), gives(-2 to owner::break), page(B274), group(Sword Class Quality), shortname(Very Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 20 ELSE 4 _
				)_
			), forceformula(yes)

<Cutting Class Quality>
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine (TL6-), *10, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Cutting Class Quality), shortname(Fine Quality)
Weapon Quality: Fine, *1/*10, upto(1), levelnames(,), page(B274), group(Cutting Class Quality), shortname(Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine Quality",
			-1 to owner::break_
	), 
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 10 ELSE 1 _
				)_
			), forceformula(yes)

*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL6-), *10, gives(-1 to owner::break), page(B274), group(Cutting Class Quality), shortname(Fine Quality)
Weapon Quality: Fine Stone/Bronze/Iron, *1/*10, upto(1), levelnames(,), gives(-1 to owner::break), page(B274), group(Cutting Class Quality), shortname(Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 10 ELSE 1 _
				)_
			), forceformula(yes)

<Crushing/Imp Class Quality>
*Weapon Quality: Fine (TL7+), *1, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine (TL6-), *3, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality)
Weapon Quality: Fine, *1/*3, upto(1), levelnames(,), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality),
	gives(_
			=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine Quality",
			-1 to owner::break_
			), 
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 3 ELSE 1 _
				)_
			), forceformula(yes)

*Weapon Quality: Fine Stone/Bronze/Iron (TL7+), *1, gives(-1 to owner::break), page(B274), group(Melee Quality), shortname(Fine Quality)
*Weapon Quality: Fine Stone/Bronze/Iron (TL6-), *3, gives(-1 to owner::break), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality)
Weapon Quality: Fine Stone/Bronze/Iron, *1/*3, upto(1), levelnames(,), gives(-1 to owner::break), page(B274), group(Crushing/Imp Class Quality), shortname(Fine Quality),
	formula(_
			@if(_
				ST:Tech Level::basevalue < 7 THEN 3 ELSE 1 _
				)_
			), forceformula(yes)

<Equipment>
Equipment: Quality ([Skill]*), *5/*20/*100, upto(3), levelnames(Good: +1 to skill, Fine: +2 to skill, Best: +TL/2 to skill), shortname(Quality), page(B345), bonus(@indexedvalue(me::level,1,2,@int(owner::techlvl/2))), conditional(+me::bonus to SK:[Skill]), gives(=me::bonus to owner::skillscore),
	x(_
		#InputReplace("Some equipment gives a Quality Bonus to certain skills (see p. B345 for details). Note that this normally does NOT include weapons! Please enter the name of the skill that receives a bonus from this item:", "[Skill]", , "Equipment: Quality")_
		)
		

Equipment: Quality (%skillslist%), *5/*20/*100, upto(3), levelnames(Good: +1 to skill, Fine: +2 to skill, Best: +TL/2 to skill), shortname(Quality), page(B345), bonus(@indexedvalue(me::level,1,2,@int(owner::techlvl/2))), conditional(%skillsaliaslist%), gives(=me::bonus to owner::skillscore),
	x(#ChoiceList(_
			name(skills),
			title(Equipment),
			text(Some equipment gives a Quality Bonus to certain skills (see p. B345 for details). Note that this normally does NOT include weapons! Choose which skills will receive a bonus from this item.),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix), append(*))_
				),
			aliaslist(_
				#grouplist(GR:AllSkills, prepend(=+me::bonus to "), append("))_
					)_
			)_
	)

Equipment: Gives Skill Bonus ([Skill]*), +0/+0, shortname(Skill Bonus), page(B345), conditional(+1 to SK:[Skill]), shortname(Gives Skill Bonus),
	x(#InputReplace("Some equipment gives a bonus to certain skills. Please enter the name of the skill that receives a bonus:", "[Skill]", , "Equipment: Skill Bonus"))

Equipment: Gives Skill Bonus (%skillslist%), +0/+0, shortname(Skill Bonus), page(B345), conditional(%skillsaliaslist%), shortname(Gives Skill Bonus),
	x(#ChoiceList(_
			name(skills),
			title(Equipment),
			text(Some equipment gives a bonus to certain skills. Choose which skills will receive a bonus from this item:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:AllSkills, flags(NoPrefix), append(*))_
				),
			aliaslist(_
				#grouplist(GR:AllSkills, prepend(+1 to "), append("))_
				)_
			)_
	)

Variant: Receives Skill Bonus, +0/+0, group(Equipment), gives(+1 to owner::skillscore), shortname(Receives Skill Bonus),
	x(#Message("This item receives a skill bonus when used. Adding this modifier will give a bonus to the Skill Level listing (e.g. the Level Column on the Weapons Tables), but will not affect the level under Skills. For that take the 'Equipment: Gives Skill Bonus' modifier."))
Variant: Receives Skill Penalty, +0/+0, group(Equipment), gives(-1 to owner::skillscore), shortname(Receives Skill Bonus),
	x(#Message("This item receives a skill penalty when used. Adding this modifier will give a bonus to the Skill Level listing (e.g. the Level Column on the Weapons Tables), but will not affect the level under Skills. For that take the 'Equipment: Gives Skill Bonus' modifier."))
